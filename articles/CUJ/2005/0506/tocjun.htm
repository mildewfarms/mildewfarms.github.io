<HTML>
<HEAD>
<TITLE>June 2005</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">June 2005<BR>
                Volume 23 Number 6</FONT></H3>
               

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="0506brown/0506brown.html">Embracing 64-Bit Windows</A></H4>
<p><b>Alan Brown</b><br>
<i>Alan shares some of the lessons learned in porting a Win32 UNIX API layer to 64-bit Windows. 
</i></p>

<H4><A HREF="0506mach/0506mach.html">Moving to 64-Bits</A></H4>
<p><b>Rodney Mach</b><br>
<i>64-bit platforms are the future for solving larger and more difficult scientific and business problems.
</i></p>

<H4><A HREF="0506coppen/0506coppen.html">Optimizing C/C++ with Inline Assembly Programming</A></H4>
<p><b>Scott W. Coppen</b><br>
<i>When it comes to performance, there's always room for improvement, and C++ is a perfect language to implement inline assembly optimizations.
</i></p>

<H4><A HREF="0506henderson/0506henderson.html">String Concatenation & Expression Templates</A></H4>
<p><b>Craig Henderson</b><br>
<i>Concatenating text strings is a common task that's made more efficient by the use of expression templates.
</i></p>

<H4><A HREF="0506adams/0506adams.html">A Variation on the Curiously Recurring Template</A></H4>
<p><b>Arne Adams</b><br>
<i>The curiously recurring template pattern splits generic and concrete functionality by delegating to its derived class.
</i></p>

<H4><A HREF="0506jaeschke/0506jaeschke.html">C++/CLI Inheritance and Enumerators</A></H4>
<p><b>Rex Jaeschke</b><br>
<i>This month, Rex examines C++/CLI issues relating to inheritance.
</i></p>

<H3><FONT COLOR="#FF0000">COLUMNS</FONT></H3>

<H4><A HREF="0506alexandrescu/0506alexandrescu.html">Generic&lt;Programming&gt;</A></H4>
<p><b>Andrei Alexandrescu</b><br>
<i>Andrei continues his examination of some of the hidden challenges in defining good Observer designs.
</i></p>

<H4><A HREF="0506koenig/0506koenig.html">C++ Made Easy</A></H4>
<p><b>Andrew Koenig and Barbara E. Moo</b><br>
<i>The distinction in C++ between duck typing and inheritance comes from C++'s static type system, and is part of the price we pay for having C++ programs run as quickly as they do. 
</i></p>

<H4><A HREF="0506becker/0506becker.html">The New C++</A></H4>
<p><b>Pete Becker</b><br>
<i>In the first installment of this new column, Pete Becker examines the 		ISO standardization process and how it applies to the C++ Standard 		and TR1, as well as the templates and classes that make up TR1.
</i></p>

<H4><A HREF="0506book/0506book.html">Book Review</A></H4>
<p><b>Gregory Lapouchnian</b><br>
<i>The books Greg takes a look at this month are Head First Design 		Patterns; High Performance Linux Clusters with OSCAR, Rocks, 		openMosix & MPI; and Unit Test Frameworks.
</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="0506edit/0506edit.html">Editor's Forum</A></H4>
<H4><A HREF="0506newprod/0506newprod.html">New Products</A></H4>

</blockquote>
</body>
</html>
