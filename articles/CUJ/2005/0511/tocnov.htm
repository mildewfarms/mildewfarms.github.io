<HTML>
<HEAD>
<TITLE>November 2005</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">November 2005<BR>
                Volume 23 Number 11</FONT></H3>
               

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="0511maurer/0511maurer.html">Interprocess Communication & the L4 Microkernel</A></H4>
<p><b>Slade Maurer</b><br>
<i>Modern microkernels such as L4 address many of the problems of older microkernels&#151;specifically the speed of the interprocess communication (IPC) implementation.
</i></p>

<H4><A HREF="0511nagel/0511nagel.html">Soft Real-Time Programming with Linux</A></H4>
<p><b>William Nagel</b><br>
<i>The 2.6 kernel brought a host of real-time enhancements to Linux, making it "good enough" for many soft real-time applications.
</i></p>

<H4><A HREF="0511opferman/0511opferman.html">Sharing Memory with the Virtual Machine</A></H4>
<p><b>Toby Opferman</b><br>
<i>VMWare allows you to run multiple operating systems on one host, but there are some tricks to sharing data among these OS instances and the host.
</i></p>

<H4><A HREF="0511srivatsa/0511srivatsa.html">Remoting in .NET Framework 2.0</A></H4>
<p><b>Vikram Srivatsa</b><br>
<i>.NET Framework 2.0 brings some changes to Remoting, .NET's communication mechanism, and more changes are on the way. Make sure your code is up to date.
</i></p>

<H4><A HREF="0511walker/0511walker.html">C++ Smart Pointers & Tags</A></H4>
<p><b>Edward Walker</b><br>
<i>Efficient recovery of reference-counted pointers is crucial to recovery after a shutdown. The key is avoiding object duplication.
</i></p>

<H4><A HREF="0511jaeschke/0511jaeschke.html">C++/CLI Threading: Part II</A></H4>
<p><b>Rex Jaeschke</b><br>
<i>Rex continues his discussion of the C++/CLI threading implementation, focusing on shared variables during concurrent operations, thread-local storage, and interlocked operations.
</i></p>


<H3><FONT COLOR="#FF0000">COLUMNS</FONT></H3>

<H4><A HREF="0511becker/0511becker.html">The New C++</A></H4>
<p><b>Pete Becker</b><br>
<i>Sometimes, an application needs a pointer that doesn't affect the lifetime of the resource it points to. TR1 provides a weak_ptr for this purpose.
</i></p>

<H4><A HREF="0511wilson/0511wilson.html">Positive Integration</A></H4>
<p><b>Matthew Wilson</b><br>
<i>Matthew goes a step beyond simple overloading with Argument-dependent Return-type Variance.
</i></p>

<H4><A HREF="0511torjo/0511torjo.html">Win32 GUI Generics</A></H4>
<p><b>John Torjo</b><br>
<i>Manipulating surfaces is a good way to gain control of the look-and-feel of your GUI components.
</i></p>

<H4><A HREF="0511diggins/0511diggins.html">Agile C++</A></H4>
<p><b>Christopher Diggins</b><br>
<i>Variant types are useful, but there's a performance penalty when using boost::any. Christopher presents a faster alternative.
</i></p>

<H4><A HREF="0511sutter/0511sutter.html">Sutter's Mill</A></H4>
<p><b>Herb Sutter</b><br>
<i>When it comes to pointers and iterators, it can't be said enough: Stay away from undefined behavior. It will come back to bite you.
</i></p>


<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="0511edit/0511edit.html">Editor's Forum</A></H4>
<H4><A HREF="0511newprod/0511newprod.html">New Products</A></H4>

</blockquote>
</body>
</html>
