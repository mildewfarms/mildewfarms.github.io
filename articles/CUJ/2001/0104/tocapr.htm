<HTML>
<HEAD>
<TITLE>April 2001</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">April 2001<BR>
                Volume 19 Number 4</FONT></H3>
               
<H3><FONT COLOR="#FF0000">TESTING AND DEBUGGING</FONT></H3>

<H4><A HREF="sutter/sutter.htm">C++ Conformance Roundup</A></H4>
<p><b>Compiled and edited by Herb Sutter</b><br>
<i>There is no C++ compiler or library today that implements the Standard perfectly, but some are getting close. Here, finally, is a first attempt to quantify just how close.</i></p>

<H4><A HREF="fox/fox.htm">A Handy Debugging Class</A></H4>
<p><b>Maurice Fox</b><br>
<i>Tracing, debugging, and timing &#151; all in one package and dynamically controllable with simple, intuitive control strings.</i></p>

<H4><A HREF="stanley/stanley.htm">Adding Exception Testing to Unit Tests</A></h4>
<p><b>Ben Stanley</b><br>
<i>Exceptions can add a bewildering number of potential execution paths to otherwise simple code. Here is a way to test those extra paths without writing a bazillion test cases.</i></p>

<H3><FONT COLOR="#FF0000">C/C++ CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="meyers/meyers.htm">The New C: Declarations and Initializations</A></H4>
<p><b>Randy Meyers</b><br>
<i>C99 provides many new options for when and how a variable begins its life. The benefit is code that is less buggy and more readable.</i></p>

<H4><A HREF="schmidt/schmidt.htm">Uncaught Exceptions: eWriter</A></H4>
<p><b>Bobby Schmidt</b><br>
<i>Just when we&#146;re fixin&#146; to swear at VC++ again, it turns around and does something right.</i></p>

<H4><A HREF="koenig/koenig.htm">C++ Made Easier: How Vectors Grow</A></H4>
<p><b>Andrew Koenig &amp; Barbara E. Moo</b><br>
<i>The Standard C++ library delivers reasonable performance by default. If you&#146;ve ever wondered how, or what is implied in the word &#147;reasonable,&#148; read on.</i></p>

<H4><A HREF="becker/becker.htm">STL &amp; Generic Programming: STL Container Iterators</A></H4>
<p><b>Thomas Becker</b><br>
<i>We&#146;ve all heard we can use iterators &#147;just like pointers,&#148; but that isn&#146;t the whole story. Some iterators are important for what they</i> won&#146;t <i>let you do &#151; especially when protecting the integrity of a container.</i></p>

<H4><A HREF="dewhurst/dewhurst.htm">Common Knowledge: A Question of Respect</A></H4>
<p><b>Steve Dewhurst</b><br>
<i>There are a few small items in C++ that should be marked &#147;not for casual use.&#148; Casting is one of them; Steve makes it clear as to why.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="editor/editor.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="newprod/newprod.htm">New Products</A></H4>
<H4><A HREF="letters/letters.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>
<p>In this new, web-only component of <I>CUJ</I>, we continue publication of the columns that were popular in the former <I>C++ Report</I> magazine. The following articles are featured on the <I>CUJ</I> website this month:</p>

<H4><A HREF="../cexp1904/alexandr/alexandr.htm">&quot;Generic&lt;Programming&gt;: Min and Max Redivivus&quot;</A></H4>
<p><b>by Andrei Alexandrescu</b><br>
<I>It is surprisingly difficult to create template-based <B>min</B> and <B>max</B> functions that are as versatile as their macro-based counterparts. Andrei manages to do it with some effort, and this leads him to speculate on what&#146;s wrong with programming languages today.</I></p>

<H4><A HREF="../cexp1904/austern/austern.htm">&quot;The Standard Librarian: Stringstreams and Their Friends&#148;</A></H4>
<p><b>by Matt Austern</b><br>
<I>Like other streams, stringstreams are thin wrappers around buffers, and it is in the buffers where we find the most opportunities for extending the Standard C++ library.</I></P>

<H4><A HREF="../cexp1904/hyslop/hyslop.htm">&quot;Conversations: Manipulations&quot;</A></H4>
<p><b>by Jim Hyslop and Herb Sutter</b><br>
<I>If you need to do some simple text processing on stream I/O, consider getting a little intrusive. Write your own manipulators to produce an intuitive and efficient interface.</I></P>

<H4><A HREF="../cexp1904/langer/langer.htm">&quot;Effective C++ Standard Library: Unary Predicates in the STL&quot;</A></H4>
<p><b>by Klaus Kreft and Angelika Langer</b><br>
<I>When you start using STL algorithms in earnest, you&#146;ll need to write unary predicates. Usually these just amount to simple little functions, but with some important restrictions attached.</I></p>

<H4><A HREF="../cexp1904/vinoski/vinoski.htm">&quot;Object Interconnections: Using Standard C++ in the OMG C++ Mapping&quot;</A></H4>
<p><b>by Douglas C. Schmidt and Steve Vinoski</b><br>
<I>We can&#146;t expect CORBA to use all the goodies C++ has to offer, but it never hurts to dream. The authors finish their tour of hypothetical C++ mappings with a look at life on the server side.</I></p>
</blockquote></body></html>
