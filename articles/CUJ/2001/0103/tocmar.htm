<HTML>
<HEAD>
<TITLE>March 2001</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">March 2001<BR>
                Volume 19 Number 3</FONT></H3>
               
<H3><FONT COLOR="#FF0000">LINUX</FONT></H3>

<H4><A HREF="sorfa/sorfa.htm">Open Source IDEs for Linux/Unix</A></H4>
<p><b>Petr Sorfa</b><br>
<i>You don&#146;t have to give up a graphical environment to develop software under Linux. There are as many IDEs freely available on the Internet as there are definitions of the word &#147;free.&#148;</i></p>

<H4><A HREF="bonang/bonang.htm">Navigating Linux Source Code</A></H4>
<p><b>James Bonang</b><br>
<i>With legacy code or large projects, navigation is a serious concern. Here are some tools that can help you find your way.</i></p>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="pehrson/pehrson.htm">Documenting the Graphic Import Filter Interface</A></H4>
<p><b>Bret S. Pehrson</b><br>
<i>There is a fairly &#145;&#145;standard&#146;&#146; interface for importing diverse graphics formats into Windows applications. Only problem is, nobody bothered to document it &#151; until now.</i></p>

<H4><A HREF="yoder/yoder.htm">Using Template Functions to Customize Library Behavior</A></H4>
<p><b>Michael B. Yoder</b><br>
<i>If you&#146;re writing code to be used by other programmers, you&#146;ll want to make it customizable, and you&#146;ll want to do it well. This article presents an approach that is both efficient and easy to manage.</i></p>

<H4><A HREF="griffith/griffith.htm">Here Be Dragons</A></H4>
<p><b>Alan Griffiths</b><br>
<i>If learning exception safety may be likened to a journey, then Alan Griffiths is an excellent tour guide. He shows us several alternate routes, and he always keeps the trip interesting.</i></p>

<H3><FONT COLOR="#FF0000">BOOK REVIEWS</FONT></H3>

<H4><A HREF="forshaw/forshaw.htm">The C++ Standard Library: A Tutorial and Reference</A></H3>
<p><b>reviewed by Ben Forshaw</b><br>
<i>Using the standard library is an essential part of C++ programming. Here&#146;s a good book to get you started, and it makes a nice reference too.</i></p>

<H4><A HREF="kamper/kamper.htm">Core C++ &#151; A Software Engineering Approach</A></H4>
<p><b>reviewed by Stephan K&auml;mper</b><br>
<i>A book that teaches C++ in the context of Software Engineering.</i></p>

<H3><FONT COLOR="#FF0000">C/C++ CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="sutter/sutter.htm">Sutter&#146;s Mill: To New, Perchance To Throw (Part 1 of 2)</A></H4>
<p><b>Herb Sutter</b><br>
<i>If you&#146;re going to overload <B>operator new</B>, make sure you get the right one, and that the compiler picks the right ones as well.</i></p>

<H4><A HREF="austern/austern.htm">The Standard Librarian: Streambufs and Streambuf Iterators</A></H4>
<p><b>Matt Austern</b><br>
<i>If you&#146;ve ever used <B>getc</B> and <B>putc</B>, you need the C++ equivalents that reside in streambufs.</i></p>

<H4><A HREF="schmidt/schmidt.htm">Uncaught Exceptions: An Alan Smithee Film</A></H4>
<p><b>Bobby Schmidt</b><br>
<i>Of mutability, volatility, portability, and other things that go bump in the night...</i></p>

<H4><A HREF="bootle/bootle.htm">Post-Mortem Debunker: Reply ALL</A></H4>
<p><b>Stan Kelly-Bootle</b><br>
<i>Somebody let Stan off the plane in New Orleans, ostensibly to cover a Unix conference. Here is his report, complete with a bit of (ahem) cultural commentary.</i></p>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<p>In this new, web-only component of <I>CUJ</I>, we continue publication of the columns that were popular in the former <I>C++ Report</I> magazine. The following articles are featured on the <I>CUJ</I> website this month:</p>

<H4><A HREF="../cexp1903/hyslop/hyslop.htm">&quot;Conversations: Redirections&quot;</A></H4>
<p><b>by Jim Hyslop and Herb Sutter</b><br>
<i>Redirecting C++ stream output requires more than a simple assignment &#151; but not much more. Here&#146;s another tale that shows the power of the C++ I/O library.</i></p>

<H4><A HREF="../cexp1903/reeves/reeves.htm">&quot;The (B)Leading Edge: Using IOStreams, Part 2&quot;</A></H4>
<p><b>by Jack Reeves</b><br>
<i>Jack shows how to use the little-known iword/pword facility of IOStreams to enable custom formatted output of user-defined classes.</i></p>

<H4><A HREF="../cexp1903/henney/henney.htm">&quot;From Mechanism to Method: Total Ellipse&quot;</A></H4>
<p><b>by Kevlin Henney</b><br>
<i>Good class design is about separation of concerns, and making classes mutable complicates the task considerably. Kevlin uses the traditional taxonomy of shapes to demonstrate that changeability changes everything.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>
<H4><A HREF="editor/editor.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="newprod/newprod.htm">New Products</A></H4>
<H4><A HREF="letters/letters.htm">We Have Mail</A></H4>
</BLOCKQUOTE></BODY></HTML>
