<html><HEAD>
<TITLE>March 2001/Documenting the Graphic Import Filter Interface/Sidebar</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<H3 align=center><FONT COLOR="#000080">The Import Filter API</FONT></H3>

<HR>

<BLOCKQUOTE>
<p>The following describes the primary entry points and structures used for graphic importing. Note that the API only accepts ANSI character strings, UNICODE strings not being natively supported.</p>

<H3><FONT COLOR="#000080">GetFilterInfo</FONT></H3>
<p>This function is used to initialize the import filter and to allocate (optional) filter-specific preference memory that is used in subsequent filter calls. It is exported as <B>GetFilterInfo</B>, <B>GetFilterInfo@16</B>, or <B>GETFILTERINFO</B>.</p>

<pre>
UINT CALLBACK
GetFilterInfo(DWORD idVersion, LPSTR lpszIni,
   HGLOBAL * lphPrefMem, HANDLE * lphFileTypes);
</pre>

<p><B>IdVersion</B> &#151; expected filter version: 2 for Type 2 filters</p>
<p><B>lpszIni</B> &#151; unused, set to <B>NULL</B> or <B>""</B></p>
<p><B>lphPrefMem</B> &#151; address of an <B>HGLOBAL</B> variable to receive filter preference settings used in subsequent filter calls. The calling application is responsible for freeing this handle when completed via <B>GlobalFree</B>. Some filters do not support or implement preferences, resulting in <B>*lphPrefMem</B> being set to <B>NULL</B>. </p>
<p><B>lphFileTypes</B> &#151; unused, set to <B>NULL</B></p>
<p>Return value:</p>
<p>0 &#151; failed, unable to continue </p>
<p>1 &#151; filter is a text filter </p>
<p>2 &#151; filter is a graphics filter</p>

<H3><FONT COLOR="#000080">GetFilterPref</FONT></H3>
<p>This function allows for the user configuration of various filter-specific preferences. It is an optional entry point: when available it is exported as <B>GetFilterPref</B>, <B>GetFilterPref@16</B>, or <B>GETFILTERPREF</B>. Even though most filters export this function, it is often a stub routine that simply returns without performing any action.</p>

<pre>
VOID CALLBACK
GetFilterPref(HINSTANCE hInstance, HWND hwndParent,
   HGLOBAL hPrefMem, DWORD dwFlags);
</pre>

<p><B>hInstance</B> &#151; unused, set to <B>NULL</B> </p>
<p><B>hwndParent</B> &#151; parent window handle or <B>NULL</B> </p>
<p><B>hPrefMem</B> &#151; handle to preference memory allocated during call to <B>GetFilterInfo</B> </p>
<p><B>dwFlags</B> &#151; unused, set to 0</p>
<p>Returns a <B>void</B>.</p>

<H3><FONT COLOR="#000080">ImportGR</FONT></H3>
<p>This function is used to perform the actual graphic import and conversion. It is exported as <B>ImportGR</B>, <B>ImportGr</B>, <B>ImportGR@16</B>, <B>ImportGr@16</B>, or <B>IMPORTGR</B>. Note that some filters will display a progress dialog during the import and conversion process.</p>

<pre>
UINT CALLBACK
ImportGR(HDC hdcPrint, FILESPEC * lpfs, PICTINFO * lppi,
   HGLOBAL hPrefMem);
</pre>

<p><B>hdcPrint</B> &#151; template device context used during importing and conversion, or <B>NULL</B> to use default conversion characteristics </p>
<p><B>lpfs</B> &#151; address of a <B>FILESPEC</B> structure that defines the file to be imported </p>
<p><B>lppi</B> &#151; address of a <B>PICTINFO</B> structure. On success, this is populated with the import results. </p>
<p><B>HPrefMem</B> &#151; handle to preference memory allocated during call to <B>GetFilterInfo</B></p>
<p>Listing 1 documents the error codes returned by function <B>ImportGR</B>.</p>

<H3><FONT COLOR="#000080">FILESPEC</FONT></H3>

<p>This structure is used to define the input file. The <B>fullName</B> field is used to define the path and file name of the source graphic file. Not all filters properly handle long file names; therefore it is recommended that the short form of a file name be used where possible [7]. The meaning and use of the other fields is unknown in 32-bit filters and should be set to zero.</p>

<pre>
typedef DWORD FILETYPE;
typedef struct
{
  WORD     slippery : 1;
  WORD     write    : 1;
  WORD     unnamed  : 1;
  WORD     linked   : 1;
  WORD     mark     : 1;
  FILETYPE fType;
  WORD     handle;
  char     fullName[MAX_PATH];
  DWORD    filePos;
} FILESPEC;
</pre>

<H3><FONT COLOR="#000080">PICTINFO</FONT></H3>

<p>The <B>PICTINFO</B> structure is used to store the results of the import process. The <B>hmf</B> field defines the imported graphic as a standard Windows metafile, the <B>bbox</B> field describes the bounding rectangle in metafile units, and the <B>inch</B> field contains the metafile units per inch. Note that the <B>hmf</B> handle may be either a Windows metafile handle (<B>HMETAFILE</B>) or a global handle (<B>HGLOBAL</B>) to an in-memory image of a metafile. Such global handle based metafiles must either be converted to a standard or enhanced metafile, or displayed manually. (Using <B>PlayMetaFile</B> on a global handle will fail with a last error of <B>ERROR_INVALID_HANDLE</B>.)</p>

<pre>
typedef struct
{
  HANDLE hmf;
  RECT   bbox;
  DWORD  inch;
} PICTINFO;
</pre>

</blockquote></body></html>
