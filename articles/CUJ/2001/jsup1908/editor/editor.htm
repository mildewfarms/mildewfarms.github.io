<HTML>   
     <HEAD>
<TITLE>Java Solutions August 2001/Editor's Forum</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<H2><A HREF="../tocjaug.htm"></A><FONT COLOR="#FF0000">TOC Head</FONT></H2>

<HR>

<H2 ALIGN="center"><FONT COLOR="#800000">Editor's Forum</FONT></H2>

<HR>
<BLOCKQUOTE>
<p>In the December 2000 issue of this publication, former Editor-in-Chief Marc Briand discussed the issue of whether using Java makes one more productive than when using C++, and then posed the following query to C++ programmers who have embraced Java:</p>
<BLOCKQUOTE>
<p>I would like to hear what you have to say about it... Do you feel that, on the whole, you are more productive when you write code in Java? What are your reasons for using Java (besides &#147;my employer made me&#148;?</p>
</BLOCKQUOTE>
<p>I haven&#146;t heard any responses to his query. My reason for using Java began in 1996 when I felt uncomfortable being &#147;left behind&#148; by the Java wave, so I dove in. I devoured as many books as I could and ported as much code as I could from C++ to Java. (Everything I did was on my own time, since my employer at that time had barely heard the word, let alone entertained the idea of letting it in the door). My initial reaction was one of delight because Java was so easy to use. The language is clean and its model of computation takes away many headaches that C/C++ programmers take for granted, most notably memory management. Interfaces and the final and abstract modifiers all combined to make for readable, well-designed software.</p>
<p>I also found the library useful, albeit a little unstable and unrefined. That has changed with further releases, but the pace at which the Java platform attempts to embrace every major technology leaves me gasping. You can do just about anything with Java, maybe too much.</p>
<p>Except write compilers or lean-and-mean large-scale applications. I know this subject is still controversial, but it is still a fact that when efficiency is crucial, Java is not at the top of the list in production.</p>
<p>I recently received this letter from a reader:</p>
<BLOCKQUOTE>
<p>Please tell me the advantage of using C++ over Java. Please tell me the importance of C++ and its merits. Why C++ is better than Java? Thanks in advance.</p>
</BLOCKQUOTE>
<p>I still can&#146;t give a clear answer, for each language has its merits. For me, performance considerations and generic programming features tip the scale toward C++. Ease of development and extensive library support favor Java. So I&#146;ll echo Marc&#146;s query one last time: What do you think, Gentle Reader?</p>

<H3><FONT COLOR="#000080">Ch-ch-ch-changes</FONT></H3>
<p>It was in just the previous issue of <I>Java Solutions</I> that I bid farewell to Marc. At the time I thought I would continue as editor of this supplement, and as author of the &#147;import java.*&#148; column as well. Alas, I am needed elsewhere and have accepted the position of Senior Editor for <I>CUJ</I>, and so this issue contains my final installment of &#147;import java.*&#148;.</p>
<p>But I couldn&#146;t be happier with my replacement. I am pleased to announce that beginning with the next issue (October 2001), well-known author and consultant Allen Holub will take the reigns as editor of <I>Java Solutions</I>. For those that have been around for a while, yes, that&#146;s the same Allen Holub of <I>DDJ</I> fame (remember the C-Chest?). He was an early adopter of Java and is the author of the new book, <I>Taming Java Threads</I>. We are fortunate to have his expertise in our camp and look forward to his contributions. (Maybe he can answer the query above!)</p>
<p>Chuck Allison<br>
Senior Editor</p></blockquote></body></html>
