<HTML>   
     <HEAD>
<TITLE>August 2001/Editor's Forum</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<H2><A HREF="../tocaug.htm"></A><FONT COLOR="#FF0000">   Departments</FONT></H2>

<HR>

<H2 ALIGN="center"><FONT COLOR="#800000">Editor's Forum</FONT></H2>


<HR>
<BLOCKQUOTE>

<H3><FONT COLOR="#000080">The Name Game</FONT></H3>

<p>We are in the midst of trying to sell one house (&#147;by owner&#148;) so we can buy another, due to my accepting a teaching position at a college seventy miles away from where we currently live. Things aren&#146;t going well. We have yet to have a single person come to see our home. This sorry situation has prompted some to ask if we are going to enlist the services of a &#147;realator.&#148; I know they meant to say &#147;realtor,&#148; so I silently cringe and let it pass. Perhaps you&#146;ve had a similar experience talking to people who have friends majoring in &#147;nuculer physics.&#148; Mispronunciations are annoying but harmless as long as the intended communication occurs.</p>
<p>You may think the same is true with the terminology we use, but I&#146;m not so sure. Technical topics require precise treatment, and sometimes our sloppy conversation promotes confusion, especially when we borrow terms from other disciplines. I&#146;m not so much concerned about the term &#147;vector,&#148; which means something a little different to a programmer than it does to a physicist or mathematician &#151; the meanings are actually quite close (although to a microbiologist it means a mechanism by which a disease is spread!). The terms on my chopping block today are &#147;functor&#148; and &#147;functional.&#148; What do they mean to you? These terms, like so many others in computer science, are borrowed from the wonderful world of mathematics. I wonder how many of us appreciate the fact that language theory, models of computation, and even type systems existed in the minds of mathematicians long before engineers first put current through silicon. For the life of me, I can&#146;t see why we misuse these terms that were well defined long before AT&amp;T and IBM even existed. Here&#146;s the low-down, to which any mathematician would attest:</p>

<UL><LI>   A function is a transformation that maps an element to an element.</LI>
<LI>   A functional is a transformation that maps a function to an element.</LI>
<LI>   A functor is a transformation that maps a function to a function. (The truth functions in propositional logic are also sometimes called functors.)</LI></UL>

<p>Simple, isn&#146;t it? We seem to use the first one correctly, but not the other two. What people commonly call a functor (thanks to Dr. Coplien, shame!) is what the C++ Standard calls a function object. It seems some people like to use &#147;functional&#148; to mean the same thing. Shame again! A function object is simply that, an instance of a class that behaves like a function by virtue of its <B>operator()</B>. Some function objects, like <B>bind2nd</B>, do behave like functors, in that they take a function object as input and return a function object as output. Only these deserve the functor moniker, although you may prefer &#147;function object adaptor&#148; (or is it spelled &#147;adapter&#148; :-), as denoted in the C++ Standard.</p>
<p>As I stated earlier, communication is the goal, so if everyone understands these terms equivalently, then no harm done. But do they? I don&#146;t think so.</p>
<p>Stop making me cringe!</p>
<p>Chuck Allison<br>
Senior Editor</p></blockquote></body></html>
