<HTML><HEAD>
<TITLE>August 2001/A Cookie Manager Class for Web Applications/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: The CookieManager class</A></h4>
<pre>
//  CookieManager.h: Interface of CookieManager Class

#if !defined(AFX_COOKIEMANAGER_H__)
#define AFX_COOKIEMANAGER_H__

#if _MSC_VER &gt; 1000
#pragma once
#endif // _MSC_VER &gt; 1000

#pragma warning (disable:4786)

#include &lt;string&gt;
#include &lt;list&gt;
#include &lt;cassert&gt;
#include "Cookie.h"

using std::string;
using std::list;

typedef list&lt;Cookie&gt; COOKIE_LIST;

class CookieManager  
{
public:
    CookieManager() {}
    CookieManager(const string&amp; strDomain) 
    { 
        m_strDomain = strDomain; 
        assert(m_strDomain.length());
    }
    virtual ~CookieManager() 
    { clearAll(); }

    void addCookie(const string&amp; strCookie)
    { updateCookieList(strCookie); }
    void deleteCookie(const string&amp; strCookie);
    void purgeCookies();
    void clearAll()
    { m_listCookies.clear(); }
    void clearSession();

    void setDomain(const string&amp; strDomain)
    { m_strDomain = strDomain; }
    string getCookieString(const string&amp; strPath, bool bSecure);
    string getDomain()
    { return m_strDomain; }
    long getCookieCount()
    { return m_listCookies.size(); }


protected:
    COOKIE_LIST m_listCookies;
    string m_strDomain;

private:
    // Helper Methods
    void updateCookieList(const Cookie&amp; objCookie);
    void addCookie(const Cookie&amp; objCookie);

};

#endif // !defined(AFX_COOKIEMANAGER_H__)

&#151; End of Listing &#151;</pre></body></html>
