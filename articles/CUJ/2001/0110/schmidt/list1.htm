<HTML><HEAD>
<TITLE>October 2001/Uncaught Exceptions/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1: Points and circles</A></h4>
<pre>
#include &lt;stdio.h&gt;

struct point
    {
    double x, y;
    };

class circle
    {
    friend bool operator==
            (point const &amp;this_, circle const &amp;that)
        {
        return that == this_;
        }
    friend bool operator!=
            (point const &amp;this_, circle const &amp;that)
        {
        return that != this_;
        }
public:
    circle(double const x, double const y,
            double const radius = 1)
        {
        center_.x = x;
        center_.y = y;
        radius_ = radius;
        }
    circle(point const &amp;center,
            double const radius = 1)
        {
        this-&gt;circle::circle(center.x, center.y, radius);
        }
    bool operator==(circle const &amp;that) const
        {
        return center_.x == that.center_.x &amp;&amp;
                center_.y == that.center_.y &amp;&amp;
                radius_ == that.radius_;
        }
    bool operator!=(circle const &amp;that) const
        {
        return !(*this == that);
        }
    operator point const &amp;() const
        {
        return center_;
        }
private:
    point center_;
    double radius_;
    };

#define TEST(condition) \
    printf("%s   %s\n", #condition, \
            ((condition) ? "true" : "false"));

int main()
    {
    point p = {3, 2};
    circle c(3, 2);
    TEST(p == c)
    TEST(p != c)
    TEST(c == p)
    TEST(c != p)
    return 0;
    }
&#151; End of Listing &#151;</pre></body></html>
