<HTML><HEAD>
<TITLE>February 2001/Encapsulating CORBA Components with the Adapter and Bridge Patterns/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6: Logger adapter</A></h4>
<pre>
class Logger
{
private:
   LoggerService_Logger_ptr impl_;
   ...
public:
   enum MessageLevel { LOW = LoggerService_LOW,
                       MEDIUM = LoggerService_MEDIUM,
                       HIGH = LoggerService_HIGH };
   ...
   virtual void 
   logMessage(MessageLevel level,const string&amp; message);
   virtual void logMessage(MessageLevel level,
                           const string&amp; fileName,
                           long lineNumber,
                           const string&amp; message);
   virtual void logMessage(MessageLevel level,
                           const string&amp; className,
                           const string&amp; methodName,
                           const string&amp; message);
   virtual vector&lt;string,allocator&gt; messages(MessageLevel level);
};  // end Logger

Logger::Logger()
{
   // acquire a reference to the Logger
   const string loggerName("Logger");
   CORBA_Environment env;
   impl_ 
      = LoggerService_Logger::_import
           (CORBAContext::instance().orb(), loggerName.c_str(),
            env);

   if (env.exception())
      throw string("Logger::Logger(): CORBA exception raised:  ")
         + CORBAContext::exceptionDescription(env.exception());
   else if (CORBA_is_nil(impl_))
      throw 
       string("Logger::Logger(): Cannot obtain a reference for ")
          + loggerName
          + string(" from the Naming Service.");
}  // end Logger::Logger()

&#151; End of Listing &#151;</pre></body></html>
