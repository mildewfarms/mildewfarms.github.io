<HTML><HEAD>
<TITLE>February 2001/Encapsulating CORBA Components with the Adapter and Bridge Patterns/Listing 10</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 10: CORBA Logger implementation</A></h4>
<pre>
void 
LoggerCORBAImpl::logMessage(LoggerService_MessageLevel level,
                            const char* message,
                            CORBA_Environment&amp; env)
{
   logger_.logMessage((Logger::MessageLevel)level,message);
}  // end LoggerCORBAImpl::logMessage(...


void 
LoggerCORBAImpl::logMessageAndFile
   (LoggerService_MessageLevel level,
    const char* fileName,
    CORBA_Long lineNumber,
    const char* message,
    CORBA_Environment&amp; env)
{
   logger_.logMessage(
      (Logger::MessageLevel)level,fileName,lineNumber,message);
}  // end LoggerCORBAImpl::logMessageAndFile(...


void 
LoggerCORBAImpl::logMessageAndMethod
   (LoggerService_MessageLevel level,
    const char* className,
    const char* methodName,
    const char* message,
    CORBA_Environment&amp; env)
{
  
   logger_.logMessage
      ((Logger::MessageLevel)level,className,methodName,message);
}  // end LoggerCORBAImpl::logMessageAndMethod(...


LoggerService_StringSequence*
LoggerCORBAImpl::messagesByLevel
   (LoggerService_MessageLevel level, CORBA_Environment&amp; env)
{
   vector&lt;string,allocator&gt; messages
      = logger_.messages((Logger::MessageLevel)level);

   LoggerService_StringSequence* sequence = 0;

   if (messages.size())
     {
     char** messageArray
        = LoggerService_StringSequence::allocbuf
             (messages.size());
     sequence 
        = new LoggerService_StringSequence(messages.size(),
                                           messages.size(),
                                           messageArray,
                                           CORBA_TRUE);

     int i = 0;
     for (vector&lt;string,allocator&gt;::iterator it 
        = messages.begin();
          it != messages.end();
          it++)
        (*sequence)[i++] = strdup((*it).c_str());
     }

   return sequence;
}  // end LoggerCORBAImpl::messagesByLevel(...

&#151; End of Listing &#151;</pre></body></html>
