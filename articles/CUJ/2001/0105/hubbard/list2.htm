<HTML><HEAD>
<TITLE>May 2001/Building a Professional Software Toolkit/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: Files generated by fcc for a Packet class</A></h4>
<pre>
// Command used: fcc -settings_file ../data_class.ini -class Packet 
// -ns network
//
// where data_class.ini has these contents:
// -no_unit_test -no_makefile -no_copy_ctor -no_op= -no_dtor
// -verbose
// -author "Sam Smith"
// -copyright "(C) 2000, Outland Software, Inc."

/* ****************************************************************
 *  Packet.h
 *  Created by Sam Smith, on Sat Nov 18 2000, 
 *  22:24:54 Pacific Standard Time
 *
 *  (C) 2000, Outland Software, Inc.
 *
 *  File Contents: Interface and documentation of the Packet 
 *  component.
 *
 *************************************************************** */

#ifndef ATC_NETWORK_PACKET_H
#define ATC_NETWORK_PACKET_H

namespace network
{
/** (doc++ comment truncated to save space) */
class Packet
{
public:
    /// Constructor.
    Packet();

    /// CheckValid() is designed to check the class invariants.
    inline void CheckValid() const;

    /// DumpDiagnostics() dumps the object's state to standard 
    /// output.
    void DumpDiagnostics() const;
};

#include "Packet.icc"
} // end of the network namespace
#endif // #ifndef ATC_NETWORK_PACKET_H

/* ****************************************************************
 *  Packet.icc
 *  (remainder of header not shown)
 *************************************************************** */
inline void
Packet::CheckValid() const
{
    // TODO: Fill in with class invariant assertions for Packet.
}

/* ****************************************************************
 *  Packet.cpp
 *  (remainder of header not shown)
 *************************************************************** */
#include &lt;string&gt;
#include &lt;iostream&gt;
#include "Packet.h"

namespace network
{
Packet::Packet()
{
}

void
Packet::DumpDiagnostics() const
{
    std::cout &lt;&lt; std::endl &lt;&lt; std::endl &lt;&lt;
    "Packet Diagnostics dump "&lt;&lt; std::endl &lt;&lt; std::endl;
}
} // end of the network namespace

&#151; End of Listing &#151;</pre></body></html>
