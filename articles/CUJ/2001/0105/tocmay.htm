<HTML>
<HEAD>
<TITLE>May 2001</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">May 2001<BR>
                Volume 19 Number 5</FONT></H3>
               
<H3><FONT COLOR="#FF0000">MULTITHREADING</FONT></H3>

<H4><A HREF="huber/huber.htm">Elegant Function Call Wrappers</A></H4>
<p><B>Andreas Huber</B><br>
<I>Scheduling functions for later execution is an obvious requirement in multithreaded programs. How to do that and preserve both type safety and modularity is not so obvious. The author combines an old pattern and some new template techniques to pull it off rather nicely.</I></P>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="moreno/moreno.htm">wxWindows, an Intuitive Cross-Platform GUI Framework</A></h4>
<p><B>Carlos Moreno</B><br>
<I>If it absolutely has to have a GUI, and it has to run on different platforms, you have to have a look at this freely available framework.</I></p>

<H4><A HREF="smereka/smereka.htm">Two Classes for Simple Socket Programming</A></H4>
<p><B>Richard Smereka</B><br>
<I>Using these classes, getting your program hooked to the &#146;Net really can be as simple as plugging in a socket.</I></p>

<H4><A HREF="hubbard/hubbard.htm">Building a Professional Software Toolkit</A></H4>
<p><B>John Hubbard</B><br>
<I>Professionals have a right to be picky about the tools they use. The author suggests a few criteria for what makes a good tool and contributes a couple of his own tools designed to fit the bill.</I></p>

<H3><FONT COLOR="#FF0000">C/C++ TIPS</FONT></H3>

<H4><A HREF="tip6/tip6.htm">Tip #6: Making Classes Non-Derivable</A></H4>
<p><B>Shanker Chandrabose</B><br>
<I>Some classes just have no business being parents.</I></p>

<H3><FONT COLOR="#FF0000">C/C++ CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="meyers/meyers.htm">The New C: X Macros</A></H4>
<p><B>Randy Meyers</B><br>
<I>Assembly language programmers of the 60&#146;s had to develop some great tools just to preserve their sanity. Some of those tools, such as X macros, are still potentially useful today.</I></p>

<H4><A HREF="austern/austern.htm">The Standard Librarian: Bitsets and Bit Vectors</A></h4>
<p><B>Matt Austern</B><br>
<I>In C++ you can twiddle bits to your heart&#146;s content, and not even go near a macro.</I></p>

<H4><A HREF="sutter/sutter.htm">Sutter&#146;s Mill: To New, Perchance To Throw (Part 2 of 2)</A></H4>
<p><B>Herb Sutter</B><br>
<I>Conventional wisdom says always check for and respond to allocation failure </I>&#151;<I> but oftentimes you just can&#146;t do either.</I></p>

<H4><A HREF="schmidt/schmidt.htm">Uncaught Exceptions: The Great Panjandrum</A></H4>
<p><B>Bobby Schmidt</B><br>
<I>Templates are hard enough to understand without all the inconsistent terminology being used in C++ literature. Bobby clears up an especially troublesome case.</I></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>
<H4><A HREF="editor/editor.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="newprod/newprod.htm">New Products</A></H4>
<H4><A HREF="letters/letters.htm">We Have Mail</A></h4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<p>In this new, web-only component of <I>CUJ</I>, we continue publication of the columns that were popular in the former <I>C++ Report</I> magazine. The following articles are featured on the <I>CUJ</I> website this month:</p>

<H4><A HREF="../cexp1905/henney/henney.htm">&quot;From Mechanism to Method: Distinctly Qualified&quot;</A></H4>
<p><B>by Kevlin Henney</B><br>
<I>Why nobody really loves <B>std::string</B>, and an interesting idea for a pair of classes to replace it.</I></P>

<H4><A HREF="../cexp1905/hyslop/hyslop.htm">&quot;Conversations: Roots&quot;</A></H4>
<p><B>by Jim Hyslop and Herb Sutter</B><br>
<I>It pays to understand your ancestors &#151; in the object world as well as the real world.</I></P>

<H4><A HREF="../cexp1905/martin/martin.htm">&quot;Engineering Notebook: Visitor&quot;</A></H4>
<p><b>by Robert Martin</b><br>
<I>Robert Martin revisits the famed Visitor pattern and shows a number of compelling uses, including the generation of reports from fixed data structures.</I></P>

<H4><A HREF="../cexp1905/reeves/reeves.htm">&quot;The (B)Leading Edge: Using IOStreams &#151; Locales and Facets&quot;</A></H4>
<p><B>by Jack Reeves</B><br>
<I>Locales and facets aren&#146;t just for internationalization. They come in handy in I/O formatting applications as well.</I></p>

<H4><A HREF="../cexp1905/vinoski/vinoski.htm">&quot;Object Interconnections: CORBA and XML Part 1: Versioning&quot;</A></H4>
<p><B>by Douglas C. Schmidt and Steve Vinoski</B><br>
<I>XML does not threaten to replace CORBA; in fact the two nicely complement each other. The authors show how XML can ease versioning problems in CORBA.</I></p>

<p><B>Visit the &quot;C++ Experts Forum&quot; at www.cuj.com/experts/.</B>
</BLOCKQUOTE>
</BODY>
</HTML>
