<HTML><HEAD>
<TITLE>Java Solutions April 2001/Distributed Data Visualization Using C++, Java, and CORBA/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5: Browser data request</A></h4>
<pre>
import Data.*;               // The package containing the stubs.
import org.omg.CosNaming.*;  // Client will use the naming service.
import org.omg.CORBA.*;      // All CORBA applications need these 
                             // classes.

...

// Create and initialize the ORB
ORB orb = ORB.init(mIPAddress, null);

// Get the root naming context
org.omg.CORBA.Object objRef = 
   orb.resolve_initial_references(&#147;NameService&#148;);
NamingContext ncRef = NamingContextHelper.narrow(objRef);

// Resolve the object reference in naming service and obtain 
// DataInfo reference
NameComponent[] path = 
   { new NameComponent(&#147;DataReader&#148;, &#147;Context&#148;),
                       new NameComponent(&#147;Data&#148;, &#147;Object&#148;) };
DataInfo dataRef = DataInfoHelper.narrow(ncRef.resolve(path));

// Create Holder (container) for returning data byte stream
Data.UnboundedDataHolder sa = new Data.UnboundedDataHolder();

// Call the server object and obtain the data
int val = dataRef.getData(fileName, resolution, mLoadFileAs, sa);

...
&#151; End of Listing &#151;</pre></body></html>
