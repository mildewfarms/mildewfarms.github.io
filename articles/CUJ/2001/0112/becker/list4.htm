<HTML><HEAD>
<TITLE>December 2001/STL &amp; Generic Programming/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4: Letting prototype classes provide their own traits by default</A></h4>
<pre>
template&lt;typename Proto&gt;
class prototype_traits
{
public:
  typedef Proto::stored_type 
    stored_type;
  typedef Proto::cloning_result_type 
    cloning_result_type;
  
  enum
  { destroy_prototypes = Proto::destroy_prototypes, };

  static cloning_result_type Clone(const stored_type&amp; p)
  { return Proto::Clone(p); }

  static void Destroy(const stored_type&amp; p)
  { Proto::Destroy(p); }
};

class Gadget
{
public:
  typedef Gadget* stored_type;
  typedef Gadget cloning_result_type;
  
  enum { destroy_prototypes = true, };

  static cloning_result_type Clone(stored_type p)
  { return p-&gt;Clone(); }

  static void Destroy(stored_type p)
  { delete p; }

  // ...
};
&#151; End of Listing &#151;</pre></body></html>
