<HTML><HEAD>
<TITLE>December 2001/An Iostream-Compatible Socket Wrapper/Listing 7</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 7: Simple test server program</A></h4>
<pre>
#include "Sockets.h"
#include &lt;iostream&gt;
#include &lt;string&gt;
#include &lt;complex&gt;

using namespace std;

const int IPportnumber = 12345;

int main()
{
    string message("Hello Socket!");
    complex&lt;double&gt; cplx(1.0, 2.0);
    int integer(1234);

    if (socketsInit() == false)
    {
        cout &lt;&lt; "cannot initialize sockets" &lt;&lt; endl;
        return 0;
    }

    try
    {
        TCPSocketWrapper sockserver;

        // listen on some port
        sockserver.listen(IPportnumber);

        cout &lt;&lt; "server is ready" &lt;&lt; endl;

        // accept connection from client
        TCPSocketWrapper sock(sockserver.accept());

        cout &lt;&lt; "accepted connection from: "
            &lt;&lt; sock.address() &lt;&lt; endl;

        // make the stream around the socket wrapper
        TCPStream stream(sock);

        bool oncemore = true;
        int command;
        while (oncemore)
        {
            // read the command
            stream &gt;&gt; command;
            switch (command)
            {
            case 1:
                cout &lt;&lt; "command 1" &lt;&lt; endl;
                stream &lt;&lt; message &lt;&lt; endl;
                break;
            case 2:
                cout &lt;&lt; "command 2" &lt;&lt; endl;
                stream &lt;&lt; integer &lt;&lt; endl;
                break;
            case 3:
                cout &lt;&lt; "command 3" &lt;&lt; endl;
                stream &lt;&lt; cplx &lt;&lt; endl;
                break;
            default:
                cout &lt;&lt; "END command" &lt;&lt; endl;
                oncemore = false;
                break;
            }
        }
    }
    catch (const SocketRunTimeException &amp;e)
    {
        cout &lt;&lt; "socket exception: "
            &lt;&lt; e.what() &lt;&lt; endl;
    }

    socketsEnd();

    return 0;
}
&#151; End of Listing &#151;</pre></body></html>
