<HTML><HEAD>
<TITLE>December 2001/An Iostream-Compatible Socket Wrapper/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4: Skeleton of the custom socket-based stream buffer</A></h4>
<pre>
template
&lt;
    class charT,
    class traits = std::char_traits&lt;charT&gt;
&gt;
class TCPStreamBuffer :
    public std::basic_streambuf&lt;charT, traits&gt;
{
    typedef std::basic_streambuf&lt;charT, traits&gt; sbuftype;
    typedef typename sbuftype::int_type         int_type;
    typedef charT                               char_type;
    // ...

public:
    // the buffer will take ownership of the socket
    // (ie. it will close it in the destructor)
    // if takeowner == true
    explicit TCPStreamBuffer (TCPSocketWrapper &amp;sock,
                bool takeowner = false,
                int_type bufsize = 512);

    // ...

protected:
    int_type overflow(int_type c = traits::eof());
    int_type underflow();

    // ...

private:
    // copy not supported
    TCPStreamBuffer(const TCPStreamBuffer&amp;);
    TCPStreamBuffer&amp; operator=(const TCPStreamBuffer&amp;);

    TCPSocketWrapper &amp;rsocket_;
    bool ownsocket_;

    // ...
};
&#151; End of Listing &#151;</pre></body></html>
