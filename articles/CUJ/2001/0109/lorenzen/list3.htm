<HTML><HEAD>
<TITLE>September 2001/An Algorithm for Efficient Image Warping/Listing 3</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 3: Excerpt from delta.h</A></h4>
<pre>
class DeltaControlLine : public DeltaControl, public CPoint
{
public:
    DeltaControlLine(CPoint *From, CPoint *To);
    DeltaControlLine(CPoint *From, CPoint *To, CPoint *Offset);
    virtual ~DeltaControlLine() {};
protected:
    virtual void Init(CPoint *From, CPoint *To);
    virtual void OnMajorChange(int Current) {*m_PMajor=Current;};
    virtual void OnMinorChange(int Current) {*m_PMinor=Current;};
    long *m_PMajor;
    long *m_PMinor;
};

exceprt from delta.cpp

DeltaControlLine::DeltaControlLine(CPoint *From, CPoint *To) {
    Init(From, To);
}

DeltaControlLine::DeltaControlLine(CPoint *From, CPoint *To,
        CPoint *Offset) {
    Init(From, To);
    CPoint::Offset(*Offset);
    m_Major.current = *m_PMajor;
    m_Minor.current = *m_PMinor;
}

void DeltaControlLine::Init(CPoint *From, CPoint *To) {
    CPoint p = *From;
    p -= *To;
    if (abs(p.x) &gt; abs(p.y)) {
        SetFrom(From-&gt;x, From-&gt;y);
        SetTo(To-&gt;x, To-&gt;y);
        m_PMajor = &amp;x;
        m_PMinor = &amp;y;
    }
    else {
        SetFrom(From-&gt;y, From-&gt;x);
        SetTo(To-&gt;y, To-&gt;x);
        m_PMajor = &amp;y;
        m_PMinor = &amp;x;
    }
    x = From-&gt;x;
    y = From-&gt;y;
}
&#151; End of Listing &#151;</pre></body></html>
