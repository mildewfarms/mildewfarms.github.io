<HTML><HEAD>
<TITLE>September 2001/An Algorithm for Efficient Image Warping/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4: Class DeltaControlPair</A></h4>
<pre>
excerpt from delta.h

class DeltaControlPair : public DeltaControl
{
public:
    DeltaControlPair(DeltaControl *A, DeltaControl *B);
    virtual ~DeltaControlPair() {};
    virtual int GetLength() {return m_Major.len;};
    virtual BOOL Next();
protected:
    virtual void OnMajorChange(int Current) {m_PMajor-&gt;Next();};
    virtual void OnMinorChange(int Current) {m_PMinor-&gt;Next();};
    DeltaControl *m_PMajor;
    DeltaControl *m_PMinor;
};

excerpt from delta.cpp

DeltaControlPair::DeltaControlPair(DeltaControl *A,
        DeltaControl *B) {
    SetFrom(0, 0);
    if (A-&gt;GetLength() &gt; B-&gt;GetLength()) {
        SetTo(A-&gt;GetLength(), B-&gt;GetLength());
        m_PMajor = A;
        m_PMinor = B;
    }
    else {
        SetTo(B-&gt;GetLength(), A-&gt;GetLength());
        m_PMajor = B;
        m_PMinor = A;
    }
}

BOOL DeltaControlPair::Next() {
    m_ErrorTerm += m_Minor.len;
    if (m_ErrorTerm &gt; m_Major.len &amp;&amp; m_Minor.togo) {
        m_Minor.current += m_Minor.delta;
        OnMinorChange(m_Minor.current);
        m_ErrorTerm -= m_Major.len;
        m_Minor.togo--;
    }
    if (!m_Major.togo) return FALSE;
    m_Major.current += m_Major.delta;
    m_Major.togo--;
    OnMajorChange(m_Major.current);
    return TRUE;
}
&#151; End of Listing &#151;</pre></body></html>
