<HTML><HEAD>
<TITLE>September 2001/The Standard Librarian/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: Function objects that use character traits</A></h4>
<pre>
template &lt;class traits&gt;
struct traits_eq 
 : public std::binary_function&lt;
     typename traits::char_type,
     typename traits::char_type,
     bool&gt;
{
  typedef typename traits::char_type char_type;
  bool operator()(const char_type&amp; x,
                  const char_type&amp; y) const
    { return traits::eq(x, y); }
};

template &lt;class traits&gt;
struct traits_int_eq 
  : public std::binary_function&lt;
      typename traits::char_type,
      typename traits::char_type,
      bool&gt;
{
  typedef typename traits::int_type int_type;

  bool operator()(const int_type&amp; x,
                  int_type&amp; y) const
    { return traits::eq_int_type(x, y); }
};

template &lt;class traits&gt;
struct is_eof 
  : public std::unary_function&lt;
      typename traits::int_type,
      bool&gt;
{
public:
  is_eof() : eof(traits::eof()) { }

  typedef typename traits::int_type int_type;
  bool operator()(const int_type&amp; c) const
    { return traits::eq_int_type(c, eof); }

private:
  int_type eof;
};
&#151; End of Listing &#151;</pre></body></html>
