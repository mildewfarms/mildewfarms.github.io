<HTML><HEAD>
<TITLE>August 2001 C++ Experts Forum/Engineering Notebook/Listing 18</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 18: SoapInvoker.java</A></h4>
<pre>
public abstract class SoapInvoker
{
  private Response  d_resp = null;
  private String    d_objectUri = null;
  private String    d_methodName = null;
  private String    d_encodingStyleURI = Constants.NS_URI_SOAP_ENC;
  private static URL s_url = null;
  protected Vector  d_params = new Vector();
  
  protected abstract void setParams();
  
  public SoapInvoker(String objectUri, String methodName)
  {
    d_objectUri = objectUri;
    d_methodName = methodName;
  }
  public Object getResult()
  {
    return translate(d_resp);
  }
  private Object translate(Response resp)
  {
    Object rtnValue = null;
    if (!resp.generatedFault())
    {
      Parameter ret = resp.getReturnValue();
      rtnValue = 
        SoapUtils.fromByteArray((byte[]) ret.getValue());
    }
    else
    {
      outputFault(d_methodName, resp);
    }
    return rtnValue;
  }
  public void invoke()
  {
    setParams();
    
    Call call = new Call();
    call.setTargetObjectURI(d_objectUri);
    call.setMethodName(d_methodName);
    call.setEncodingStyleURI(d_encodingStyleURI);
    call.setParams(d_params);
    try
    {
      d_resp = call.invoke(s_url, &quot;&quot;);
    }
    catch (SOAPException e)
    {
      System.err.println(&quot;Caught SOAPException (&quot; +
        e.getFaultCode() + &quot;): &quot; + e.getMessage());
    }
    if (d_resp.generatedFault())
    {
      outputFault(d_methodName, d_resp);
    }
  }
  private void outputFault(String methodName, Response resp)
  {
    Fault fault = resp.getFault();
    System.err.println(&quot;Generated fault (&quot; + methodName + &quot;()):&quot;);
    System.err.println(&quot;Fault Code = &quot; + fault.getFaultCode());
    System.err.println(&quot;Fault String = &quot; + fault.getFaultString());
  }
}
</pre>
</body>
</html>
