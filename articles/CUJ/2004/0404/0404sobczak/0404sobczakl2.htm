<html><head><title>April 04: </title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; C/C++ Users Journal--><h4>Listing 2:	<i>Excerpt from the view's interface.</i></h4><pre>template&lt;    typename StoredIterator,    class Container = std::vector&lt;StoredIterator&gt;&gt;class view{public:    // iterators for transparent access    typedef view_iterator&lt;typename Container::iterator&gt;        iterator;    typedef view_iterator&lt;typename Container::const_iterator&gt;        const_iterator;    // iterators for raw container traversal    typedef typename Container::iterator        v_iterator;    typedef typename Container::const_iterator        v_const_iterator;    // ...    // iterators:    iterator begin()    {        return iterator(container_.begin());    }    iterator end()    {        return iterator(container_.end());    }    // ...    // raw container iterators:    v_iterator v_begin()    {        return container_.begin();    }    v_iterator v_end()    {        return container_.end();    }    // capacity:    size_type size() const    {        return container_.size();    }    // ...    // element access:    reference operator[](size_type n)    {        return *(container_[n]);    }    // ...    // modifiers:    void push_back(const StoredIterator &amp;i)    {        container_.push_back(i);    }    // ...private:   Container container_;};</body></html>