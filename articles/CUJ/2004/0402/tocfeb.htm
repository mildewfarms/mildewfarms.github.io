<HTML>
<HEAD>
<TITLE>February 2004</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">February 2004<BR>
                Volume 22 Number 2</FONT></H3>
               

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="0402bar/0402bar.htm">C/C++ Compilers for Linux</A></H4>
<p><b>Moshe Bar</b><br>
<i>Moshe takes a look at three of the more popular C/C++ compilers available for Linux&#151;GCC 3.3, Intel 7.0, and Portland 5.1&#151;and sees how they measure up.</i></p>

<H4><A HREF="0402dougan/0402dougan.htm">Measuring Periodic Task Scheduling</A></H4>
<p><b>Cort Dougan</b><br>
<i>High-performance real-time applications absolutely demand predictable response times. Cort presents a C program that measures periodic task-scheduling jitter in Linux.</i></p>

<H4><A HREF="0402robbins/0402robbins.htm">Distcc & Distributed Computing</A></H4>
<p><b>Daniel Robbins</b><br>
<i>Daniel shows how distcc and its distributed compilation capabilities can significantly reduce compilation times, while Trevor Marshall tells why Gentoo Linux is a programmer's Linux.</i></p>

<H4><A HREF="0402perry/0402perry.htm">Active Graphs & Facets</A></H4>
<p><b>Michael L. Perry</b><br>
<i>Active graphs can be powerful tools for solving difficult problems because, for one thing, they change their behavior as the state of the system changes.</i></p>

<H4><A HREF="0402bauer/0402bauer.htm">Tackling C++ Tail Calls</A></H4>
<p><b>Andreas Bauer and Markus Pizka</b><br>
<i>With the support for indirect calls, tail call optimization in GCC 3.4 has made a step forward. However, there are still obstacles to overcome before GCC fully offers optimization for general tail calls.</i></p>

<H4><A HREF="0402hoof/0402hoof.htm">GNU & Native Compilers</A></H4>
<p><b>Karsten Hoof</b><br>
<i>Here's a universal and (almost) platform-independent solution for linking binary files compiled with different C++ compilers into executables.</i></p>

<H4><A HREF="0402wilson/0402wilson.htm">Callback Enumeration APIs & the Input Iterator Concept</A></H4>
<p><b>Matthew Wilson</b><br>
<i>Matthew uses collaborative context switching when adapting callback enumeration APIs to an STL Iterator Concept.</i></p>

<H3><FONT COLOR="#FF0000">COLUMNS</FONT></H3>

<H4><A HREF="0402koenig/0402koenig.htm">C++ Made Easier</A></H4>
<p><b>Andrew Koenig and Barbara E. Moo</b><br>
<i>Sometimes even the smallest programs can be the biggest problem. That's why it is best to write your programs in such a way that it is difficult for them to fail.</i></p>

<H4><A HREF="0402alexandrescu/0402alexandrescu.htm">Generic&lt;Programming&gt;</A></H4>
<p><b>Andrei Alexandrescu and David B. Held</b><br> 
<i>Andrei and David continue their examination of smart pointers.</i></p>

<H4><A HREF="0402sutter/0402sutter.htm">Conversations</A></H4>
<p><b>Herb Sutter and Jim Hyslop</b><br> 
<i>Bahb's your uncle, as the Guru takes C++ implicit overriding to task.</i></p>

<H4><A HREF="0402book/0402book.htm">Programmer's Book Reviews</A></H4>
<p><b>Jack J. Woehr and Gregory V. Wilson</b><br> 
<i>Jack examines </i>Linux on the Mainframe, Practical Unix & Internet Security<i>, Third Edition, and the new edition of Stevens' classic</i> Unix Network Programming<i>, Volume 1: The Socket Networking API.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="0402edit/0402edit.htm">Editor's Forum</A></H4>
<H4><A HREF="0402newprod/0402newprod.htm">New Products</A></H4>

</blockquote>
</body>
</html>
