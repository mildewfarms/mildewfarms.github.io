<html><head><title>March 04: </title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; C/C++ Users Journal--><h4>Listing 1:	<i>Implementation of </i>ISAXContentHandler <i>named as</i> CustomerOrderHandler.</h4><pre>// ...class CustomerOrderHandler : public ISAXContentHandler  {private:    int         m_OrderID;    wchar_t     m_CustomerName[20];    wchar_t     m_ItemName[20];    wchar_t     m_Unit[20];        double      m_Quantity;    XmlString   m_CurrentTag;public:    CustomerOrderHandler(){}    virtual ~CustomerOrderHandler(){}    // other member functions not shown    virtual HRESULT STDMETHODCALLTYPE startElement(         /* [in] */ wchar_t __RPC_FAR *pwchNamespaceUri,        /* [in] */ int cchNamespaceUri,        /* [in] */ wchar_t __RPC_FAR *pwchLocalName,        /* [in] */ int cchLocalName,        /* [in] */ wchar_t __RPC_FAR *pwchRawName,        /* [in] */ int cchRawName,        /* [in] */ ISAXAttributes __RPC_FAR *pAttributes)    {        // record where the document is being parsed        m_CurrentTag = XmlString(pwchLocalName, cchLocalName);        return S_OK;    }    virtual HRESULT STDMETHODCALLTYPE endElement(         /* [in] */ wchar_t __RPC_FAR *pwchNamespaceUri,        /* [in] */ int cchNamespaceUri,        /* [in] */ wchar_t __RPC_FAR *pwchLocalName,        /* [in] */ int cchLocalName,        /* [in] */ wchar_t __RPC_FAR *pwchRawName,        /* [in] */ int cchRawName)    {        m_CurrentTag = XmlString(pwchLocalName, cchLocalName);        if (m_CurrentTag == L"CustomerOrder")  // whole order has been parsed,        {                                      // process this order now.            std::wcout &lt;&lt; L"Order " &lt;&lt; m_OrderID             &lt;&lt; L" from " &lt;&lt; m_CustomerName             &lt;&lt; L": " &lt;&lt; m_ItemName             &lt;&lt; L" " &lt;&lt; m_Quantity             &lt;&lt; L" " &lt;&lt; m_Unit             &lt;&lt; L"s has been processed." &lt;&lt; std::endl;        }        m_CurrentTag = L"";  // clear the status for next element        return S_OK;    }    virtual HRESULT STDMETHODCALLTYPE characters(         /* [in] */ wchar_t __RPC_FAR *pwchChars,        /* [in] */ int cchChars)    {        if (m_CurrentTag == L"OrderID")            m_OrderID = xmlstring_cast&lt;int&gt;(XmlString(pwchChars, cchChars));        else if (m_CurrentTag == L"Customer")        {             wcsncpy(m_CustomerName, pwchChars, cchChars);             m_CustomerName[cchChars] = L'\0';        }        else if (m_CurrentTag == L"Item")        {            wcsncpy(m_ItemName, pwchChars, cchChars);            m_ItemName[cchChars] = L'\0';        }        else if (m_CurrentTag == L"Unit")        {            wcsncpy(m_Unit, pwchChars, cchChars);            m_Unit[cchChars] = L'\0';        }        else if (m_CurrentTag == L"Quantity")          m_Quantity = xmlstring_cast&lt;double&gt;(XmlString(pwchChars, cchChars));         return S_OK;    }};#endif</body></html>