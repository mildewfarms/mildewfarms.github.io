<html><head><title>March 04: </title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; C/C++ Users Journal--><h4>Listing 3:	<i>Major functions of the</i> CompositeContentHandler&lt;Data, Functor&gt; <i>class.</i></h4><pre>// only partial listingtemplate &lt;class Data, class Functor&gt;class CompositeContentHandler : public BaseContentHandler  {    BaseContentHandler*         m_pDocumentHandler;    Functor*                    m_pFunctor;        Data                        m_Data;    vector&lt;ContentHandlerPtr&gt;   m_ChildHandlers;    public:     CompositeContentHandler(const XmlString&amp; name,          BaseContentHandler* pDocumentHandler, Functor*    pFunctor)         : BaseContentHandler(name), m_pDocumentHandler(pDocumentHandler),                                    m_pFunctor(pFunctor)    {        BaseContentHandler* pTempHandler;        const XmlBindingEntry* pEntry =  m_Data.GetXmlBindingEntries();        while(pEntry-&gt;eDataType != eXML_EMPTY)         {          pTempHandler = CreateHandler(pDocumentHandler, pEntry);          m_ChildHandlers.push_back(pTempHandler);          m_pDocumentHandler-&gt;AddContentHandler(pTempHandler);          ++pEntry;        }        m_pDocumentHandler-&gt;AddContentHandler(this);    }    virtual HRESULT STDMETHODCALLTYPE endElement(             /* [in] */ wchar_t __RPC_FAR *pwchNamespaceUri,            /* [in] */ int cchNamespaceUri,            /* [in] */ wchar_t __RPC_FAR *pwchLocalName,            /* [in] */ int cchLocalName,            /* [in] */ wchar_t __RPC_FAR *pwchRawName,            /* [in] */ int cchRawName)    {         CopyTo(&amp;m_Data);        (*m_pFunctor)(m_Data);         return m_pDocumentHandler-&gt;endElement(            pwchNamespaceUri, cchNamespaceUri, pwchLocalName, cchLocalName,            pwchRawName, cchRawName);        }    virtual void CopyTo(void* dest)    {        ClassContentHandlers::iterator iter, iterEnd;        iter=m_ChildHandlers.begin();        iterEnd = m_ChildHandlers.end();        for(;iter!= iterEnd; ++iter)            (*iter)-&gt;CopyTo(dest);    }};</body></html>