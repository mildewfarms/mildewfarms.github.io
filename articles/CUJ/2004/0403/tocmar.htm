<HTML>
<HEAD>
<TITLE>March 2004</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">March 2004<BR>
                Volume 22 Number 3</FONT></H3>
               

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="0403owen/0403owen.htm">The SQLite Database Engine</A></H4>
<p><b>Michael Owens</b><br>
<i>SQLite, an open-source embedded relational database system packed into a small C library, is ideal for managing and processing data.</i></p>

<H4><A HREF="0403lutz/0403lutz.htm">Database Portable Software</A></H4>
<p><b>Michael H. Lutz, Colin J. Neill, and Phillip A. LaPlante</b><br>
<i>Software is "database portable" when it can optimally run against different database management systems.</i></p>

<H4><A HREF="0403vertleyb/0403vertleyb.htm">RTL: The Relational Template Library</A></H4>
<p><b>Arkadiy Vertleyb and Dmitriy Arapov</b><br>
<i>The RTL library implements relational algebra while retaining the spirit of C++'s type safety and compile-time checks.</i></p>

<H4><A HREF="0403schoenborn/0403schoenborn.htm">Strict Ownership in STL Containers</A></H4>
<p><b>Oliver Schoenborn</b><br>
<i>There are lots of situations in C++ where dynamically allocated objects are hard to avoid.</i></p>

<H4><A HREF="0403marrie/0403marrie.htm">Exception Safety & Containers</A></H4>
<p><b>Laurence Marrie</b><br>
<i>Laurence examines how to provide more balance between exception safety and efficiency than the commonly recommended "copy, modify, and swap" idiom.</i></p>

<H4><A HREF="0403zhang/0403zhang.htm">A C++ Template Wrapper for the XML SAX API</A></H4>
<p><b>Yingjun Zhang</b><br>
<i>Hiding the details of the Simple API for XML (SAX) lets you decouple processing, eliminate duplication, and simplify development.</i></p>

<H4><A HREF="0403goodman/0403goodman.htm">Interoperability & C++ Compilers</A></H4>
<p><b>Joe Goodman</b><br>
<i>Interoperability among C++ compilers is a good thing. All it takes is a common Application Binary Interface.</i></p>

<H3><FONT COLOR="#FF0000">COLUMNS</FONT></H3>

<H4><A HREF="0403wilson/0403wilson.htm">Positive Integration</A></H4>
<p><b>Matthew Wilson</b><br>
<i>This month, Matthew focuses on mapping recls, his platform-independent library that provides recursive filesystem searching, to D and Java.</i></p>

<H4><A HREF="0403sutter/0403sutter.htm">Conversations</A></H4>
<p><b>Herb Sutter and Jim Hyslop</b><br> 
<i>std::pair can make your life easier. But as with many things, moderation is the key: Excessive use can lead to unmanageable code.</i></p>

<H4><A HREF="0403book/0403book.htm">Programmer's Book Reviews</A></H4>
<p><b>Jack J. Woehr and Gregory V. Wilson</b><br> 
<i>Jack examines </i>C++ GUI Programming with Qt 3, OpenGL Programming Guide, Fourth Edition, Parallel and Distributed Programming Using C++,<i> and the </i>J2EE Open Source Toolkit<i>.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="0403edit/0403edit.htm">Editor's Forum</A></H4>
<H4><A HREF="0403newprod/0403newprod.htm">New Products</A></H4>

</blockquote>
</body>
</html>
