<html><head><title>May 04: Automatic Dialog Generation  For User Interaction</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; C/C++ Users Journal--><h2>Automatic Dialog Generation For User Interaction</h2><p>Though the library can be used in a GUI-less environment, many applications also require user interaction through a GUI. Who hasn't had the problem of changing or adding some program setting and/or internal parameter, then having to redesign and relayout the various user dialog boxes that control this setting? This is a tedious and error-prone task. Consequently, we also present an MFC class that automagically generates a tree-control-based dialog box for changing settings at runtime. It is automatically constructed from the same I/O routines described here. No additional machinery is needed. The dialog updates automatically (at runtime) whenever new parameter types, paths, and values are added, changed, or removed (see <A HREF="0405shavitf1.htm" target="_BLANK">Figure 1</A>). As an added bonus, if the value-name contains the word "FILENAME" (case insensitive) the edit box will automatically contain a [...] file-browse button for easy file navigation (based on [3]). To use it:</p><ol><li>Build the XMLDialog.lib static library and link your project with it. </p><li>Drag the IDD_XML_DIALOG resource from the XMLDialog project dialog resources into your own project's resource dialogs.</p><li>Include the XML_Dialog.h header into the source file where you'd like to use it.</p><li>Create the <b>CXML_Dialog</b> object with either a <b>ParamIO</b> argument or an <b>XMLBase</b>-derived object.</p><li>Call <b>DoModal()</b> as usual. If OK is pressed, the data will be updated into your own class.</p></ol><p>The same idea can be implemented in other GUI toolkits as well. </p><p>  &#151; A.B. and A.S.</p><a href="0405shavit.htm#rs1">Back to Article</a></body></html>