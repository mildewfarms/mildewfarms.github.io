<html><head><title>May 04: Programmer's Book Review</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; C/C++ Users Journal--><p><i>C/C++ Users Journal </i> May 2004</p><h1>Programmer's Book Review</h1><h3>By Douglas J. Reilly</h3><h4><br><b><i>The Definitive Guide to the .NET  Compact Framework</b></i><br>Larry Roof and Dan Fergus<br>APress, 2003<br>1011 pp., $59.99<br>ISBN 1590590953<b><br><br><i>Microsoft .NET Compact  Framework: Core Reference</b></i><br>Andy Wigley and  Stephen Wheelwright<br>Microsoft Press, 2003<br>600 pp., $59.99<br>ISBN 0735617252<br></h4><p>In most programming areas, there are one or two books that are considered definitive. For most desktop Windows areas, books by Charles Petzold fill this niche. In the world of COM, Don Box's <i>Essential COM</i> is the one. For Windows CE development, there's Douglas Boling's <i>Programming Microsoft Windows CE</i>. </p><p>For Pocket PC developers moving to the .NET Compact Framework, <i>The Definitive Guide to the .NET Compact Framework</i>, by Larry Roof and Dan Furgus, and <i>Microsoft .NET Compact Framework: Core Reference</i>, by Andy Wigley and Stephen Wheelwright, may fill the bill.</p><p>Both books begin with introductions to Windows mobile devices and the .NET Compact Framework. In both cases, you're reminded that shoehorning 30 MB of the full .NET Framework into a 1.5-MB Compact .NET Framework means something had to be left out, including a few things you might consider important &#151; okay, <i>many </i>things you might consider important. That said, both books make the case that while imperfect, the selection process that narrowed down the .NET Framework into something viable on a Pocket PC or SmartPhone is at least rational.</p><p>Both books also discuss user interfaces for small mobile devices. This is a difficult process for developers used to the ever-increasing desktop screen real estate. <i>The Definitive Guide<i> </i></i>includes a somewhat more detailed, control-by-control explanation of what's in the .NET Compact Framework. On the other hand, <i>Core Reference<i> </i></i>does a better job of covering important events unique to the Pocket PC; for instance, when forms become inactive. Both books do a good job of explaining how to create a custom control.</p><p>In significantly different order, both books cover testing, debugging, and application deploying. I preferred the <i>Core Reference<i>'</i></i>s approach to these topics because, in addition to covering just the creation and customization of the installation, Wigley and Wheelwright better explain details of deploying via the Web or memory cards. In turn, Roof and Fergus cover Help system creation, something not covered in the other book. </p><p>Both books cover file and network I/O, including consuming web services and the <b>System.IO</b> namespace, which is excellent in both books. .NET developers with even passing familiarity with the .NET Framework <b>System.IO</b> classes could get up to speed by skimming either examination of I/O and the differences when using the Compact Framework. For instance, unlike desktop operating systems, even if there is more than a single logical device (such as an SD card), disk drive letters are not used.  </p><p>Networking is an important &#151; and potentially confusing &#151; topic when using Pocket PCs connected to development machines via ActiveSync. <i>Core Reference</i> does a better job of explaining and offering solutions to the problems associated with this sort of networking, while <i>The Definitive Guide</i> does a better job of covering infrared communications. Both books do a good job of covering the basics of consuming web services, with<i><i> </i>Core Reference</i> getting the nod for completeness and organization.</p><p>Database access is critical to almost any mobile application, and both books cover the basics of connecting to both SQL CE and SQL Server. I was disappointed by <i>The Definitive Guide</i><i>'</i>s coverage of Remote Data Access (RDA), something that can be confusing to set up. While neither book goes into the set up in great detail, the<i><i> </i>Core Reference</i> does go a little deeper.</p><p>An unfortunate fact of life is that programmers using the .NET Compact Framework need to use unmanaged code. Both books cover this topic, but<i><i> </i>The Definitive Guide<i> </i></i>deserves special mention for its examination of the Pocket Outlook Object Model (POOM). A 50-page chapter is devoted to POOM, so if you need to interact with Pocket Outlook, keep <i><i>The Definitive Guide</i></i> nearby. A cleaner method to get to Pocket Outlook is something I hope Microsoft corrects in future versions of the .NET Compact Framework. The <i>Core Reference</i> contains a couple of chapters covering classes such as<i><i> </i>String</i>,<i> DateTime<i>, </i></i>and the collection classes &#151; chapters not present in <i>The Definitive Guide<i>.</i></i></p><p>Overall, the formatting of the<i><i> </i>Core Reference<i> </i></i>is more appealing to me. Notes stand out a little better than those in<i><i> </i>The Definitive Guide<i>,</i></i> although the code listings in <i>The Definitive Guide<i> </i></i>seem less intrusive and interrupted my reading less than those in the<i><i> </i>Core Reference<i>.</i></i></p><p>Of course, the content of the listings is what is important &#151; and this may be the biggest deciding factor for you. Virtually all listings in <i>The Definitive Guide</i> are in VB.NET, and the <i>Core Reference</i>'s listings are almost all in C#. The source for the <i>Core Reference<i> </i></i>is available on the book's web page in both C# and VB.NET. In most cases, competent VB.NET developers can understand most C# code and vice versa, especially in this area where most of the code involves dealing with the framework library. Areas where this may not be entirely true include using <b>P/Invoke</b>, importing DLL functions, and C# <b>cast</b>s.</p><p>In short, VB.NET developers might be happier with <i>The Definitive Guide<i>,</i></i> while C# developers might prefer the <i>Core Reference<i>. </i></i>Still, both books do a reasonable job of covering the .NET Compact Framework. </p><hr><I><b>Douglas J. Reilly</b> is president of Access Microsystems and can be contacted at <a href="mailto:doug@accessmicrosystems.com">doug@accessmicrosystems.com</a>.</I><hr></body></html>