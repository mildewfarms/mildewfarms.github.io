<HTML><HEAD><TITLE>More Exceptional C++</TITLE></HEAD><body bgcolor="#FFFFFF" text="#000000"><H2>More Exceptional C++</H2><H3>Reviewed by Bjorn Karlsson</H3><h3>Introduction</h3>Yes, it's the return of Herb Sutter, with "40 New Engineering Puzzles, Programming Problems, and Solutions." If you thought that you had your back covered after reading the excellent predecessor, <I>Exceptional C++</I> [1], think again.<P>One should expect quite a lot from a book like this; it's part of Bjarne Stroustrup's [2] <I>In-Depth Series</I> [3], which is a promise of quality in and of itself. Furthermore, if you know who Herb Sutter is, and maybe have read the previous book in the series, you demand cutting-edge material, generously sprinkled with insights extraordinaire. The question, then, is whether this book delivers according to your expectations. We shall see.<P><h3>What's So Special about This Book?</h3>You read <I>CUJ</I> because it offers something unique that is valuable to you, and the same applies to the books you buy -- if there's no unique value that applies to you, there's no reason to spend time and money. I'll cut right to the chase and list the major themes (and thus values) in this book:<P><ul><li>   How to use the C++ Standard library effectively.<li>   Exception safety: what it is, what it isn't, and how to get there.<li>   Modern use of C++: generic programming, use of namespaces, etc.</ul>These themes are recurring in the book, and they are presented in ways that make sense in real design and real code. If two or more of the aforementioned domains are important to you, make sure to get a copy of <I>More Exceptional C++</I>, because much of the material isn't covered elsewhere.<P><h3>Structure</h3>The book is divided into items, where each item starts with a question, which is then answered in great detail. Each item is self-contained, although some are also part of miniseries. There's a difficulty rating attached to the items, to give a hint of how hard it is to solve the problems. Furthermore, the book is divided into seven different subsections:<P><ul><li>   Generic Programming and the C++ Standard Library<li>   Optimization and Performance<li>  Exception Safety Issues and Techniques<li>  Inheritance and Polymorphism<li>  Memory and Resource Management<li>  Free Functions and Macros<li>  Miscellaneous Topics</ul>Wherever applicable, the C++ Standard library tools are utilized to provide the answer or are part of the questions.<P><h3>Should You Read This Book?</h3>Yes, you definitely should, because it will make you a better programmer, and it's an enlightening and amusing book. The real question is probably when. To get the most out of these 40 items, a deep understanding of C++ and the standard library is a must [4]. For a programmer new to C++, reading this book would be intimidating. I'd recommend that at least some, and preferably all, of [5,6,7,8] are read before taking on <I>More Exceptional C++</I>.<P>Note that the value of the book goes beyond the items and the joy of being challenged, because these seemingly innocent questions bring forth an understanding of one's strengths and weaknesses in C++ (in general) and the standard library (in particular).<P><h3>How Should You Read the Book?</h3>Most importantly, do not read it in haste. Before you turn the page and start looking at the answer(s), try hard to solve the problem. It's fine to be wrong, to find a different solution, or to be caught in one of numerous traps; that's the path to real understanding. Personally, I find that it's much harder to pretend that I knew the right answer if I've given it my best shot, and failed.... The book doesn't impose a certain reading order, and my advice is to go wherever inspiration leads you -- the items are typically self-contained.<P><h3>Summary</h3>After a book such as <I>Exceptional C++</I>, which not only was true to its name, but also came across with inexorable C++ power and dazzling insights, it must be very, very hard to write the sequel. It's inevitable that comparisons are made between the two, so I'll tell it to you straight: <I>More Exceptional C++</I> is at least as rewarding as its predecessor, and in particular, it seems more focused and better categorized. It's one of the best books on advanced C++ out there, and I would not leave home without it. Neither should you.<P><h3>References</h3>[1]  Herb Sutter. <I>Exceptional C++</I> (Addison-Wesley, 2000.)<P>[2]  The Creator (of C++).<P>[3]  The C++ <I>In-Depth Series</I> is published by Addison-Wesley, with books that are endorsed by Bjarne Stroustrup.<P>[4]  To get a feel for your current level, as well as an idea of where these Items came from, visit &lt;www.gotw.ca/gotw&gt;.<P>[5]  Stanley B. Lippman. <I>Essential C++</I> (Addison-Wesley, 1999).<P>[6]  Scott Meyers. <I>Effective C++: 50 Specific Ways to Improve Your Programs and Design</I>, 2nd Edition (Addison-Wesley, 1997).<P>[7]  Nicolai M. Josuttis. <I>The C++ Standard Library: A Tutorial and Reference</I> (Addison-Wesley, 1999.)<P>[8]  Bjarne Stroustrup. <I>The C++ Programming Language</I>, 3rd Edition (Addison-Wesley, 1997).<p><h3>About the Author</h3>Bjorn Karlsson works as a project manager at ReadSoft. He is the kind of out-going guy who likes to read ISO/IEC 14882:98. Bjorn can be reached at <B>bjorn.karlsson@readsoft.com</B>.<p></BODY></HTML>