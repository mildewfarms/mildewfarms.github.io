<HTML>
<HEAD>
<TITLE>May 2003</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">May 2003<BR>
                Volume 21 Number 5</FONT></H3>
               
<H3><FONT COLOR="#FF0000">Multithreading</FONT></H3>

<H4><A HREF="cuj0305laplante/index.htm">Efficient Thread Coordination</A></H4>
<p><b>John LaPlante</b><br>
<i>Improve your thread control logic and make your program faster at the same time.</i></p>

<H4><A HREF="cuj0305crahen/index.htm">The Guard Idiom: Enhancing the Scoped Locking Idiom</A></H4>
<p><b>Eric D. Crahen</b><br>
<i>More flexible locks for your multithreaded programs.</i></p>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="cuj0305elliott/index.htm">A Secure Storage Allocator Template</A></H4>
<p><b>Edward Elliott</b><br>
<i>A policy-based approach to protecting sensitive data.</i></p>

<H4><A HREF="cuj0305khamsi/index.htm">C/C++ Tip #15: A Class for Handling Shared Memory Under Win32</A></H4>
<p><b>Sarir Khamsi</b><br>
<i>This tip addresses the problem of using shared memory under Win32 and using the address returned from the system calls to instantiate an object in that memory. As you might guess, this technique uses placement new to construct the object in the address returned by the OS, but it also uses templates to allow any object to be constructed in that space.</i></p>

<H4><A HREF="cuj0305lawrence/index.htm">An Idea for Dynamic C Strings</A></H4>
<p><b>Daniel Lawrence</b><br>
<i>Give its walking papers with this slick dynamic string library for C.</i></p>

<H4><A HREF="cuj0305martin/index.htm">C/C++ Tip #16: Implicit Type Conversion Operator with a Good Piece of Pi</A></H4>
<p><b>Curt L. Martin</b><br>
<i>The software group I work for uses a typed-out approximation constant as the preferred method for expressing pi. Unfortunately, when you rely on a typed-out version of pi, the value of pi becomes susceptible to human error.</i></p>

<H3><FONT COLOR="#FF0000">CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="cuj0305myers/index.htm">The New C &#151; Floating-Point Math: In the Intersection of C and C++</A></H4>
<p><b>Randy Myers and Dr. Thomas Plum</b><br>
<i>Type-generic math for everyone.</i></p>

<H4><A HREF="cuj0305hyslop/index.htm">Conversations &#151; Delegating Constructors?</A></H4>
<p><b>Jim Hyslop &amp; Herb Sutter</b><br> 
<i>A lesson on writing moral code.</i></p>

<H4><A HREF="cuj0305schmidt/index.htm">Uncaught Exceptions &#151; No Brain, No Gain</A></H4>
<p><b>Bobby Schmidt</b><br>
<i>Learn how not to declare template friends and implement assignment operators, lest you actually make these mistakes.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="cuj0305editor/index.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="cuj0305newprod/index.htm">New Products</A></H4>
<H4><A HREF="cuj0305letters/index.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<H4><A HREF="cujcexp2105reeves/index.htm">The (B)Leading Edge &#151; Revisiting Exception Handling</A></H4>
<p><b>by Jack W. Reeves</b><br>
<i>In this column, Jack continues his review of the guidelines he developed years ago for throwing exceptions and how to use exception specifications.</i></p>

<H4><A HREF="cujweb0305meynard/index.htm">When enum Just Isn't Enough: Enumeration Classes for C++</A></H4>
<p><b>by Yves Meynard</b><br>
<i>Here's a more intelligent mechanism for enumerating resources in C++.</i></p>

<H4><A HREF="cujweb0305harmon/index.htm">Linux and the iPAQ, Arm in Arm</A></H4>
<p><b>by Trevor Harmon</b><br>
<i>The Compaq iPAQ: Is it a consumer product or a powerful platform for embedded applications? Trevor Harmon shows how to create an embedded-style application for the iPAQ.</i></p>

<H4><A HREF="cujweb0305briand/index.htm">Book Review: "C++ Gotchas"</A></H4>
<p><b>by Marc Briand</b><br>
<i>Marc Briand examines Steve Dewhurst's treatise on programming pitfalls: C++ Gotchas: Avoiding Common Problems in Coding and Design.</i></p>

<H4><A HREF="cujweb0305dewhurst/index.htm">Gotchas #1 and #17</A></H4>
<p><b>by Steve Dewhurst</b><br>
<i>Excerpted from C++ Gotchas: Avoiding Common Problems in Coding and Design. Steve Dewhurst looks at excessive commenting and maximal munch.</i></p>

</blockquote>
</body>
</html>
