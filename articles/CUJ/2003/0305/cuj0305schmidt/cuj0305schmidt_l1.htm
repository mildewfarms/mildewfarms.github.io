<HTML><HEAD><TITLE>Listing 1:	Failed reuse attempts</TITLE></HEAD><body bgcolor="#FFFFFF" text="000000"><B> Listing 1:</B>	Failed reuse attempts<p><pre>class X    {public:    void f();    X &amp;operator=(X const &amp;x)        {        if (&amp;x != this)            {            ~X(); // #1            // Error C2675: unary '~' : 'X' does not            // define this operator or a conversion            // to a type acceptable to the predefined            // operator.            X(x); // #2            // Appears to put an anonymous X instance            // copied from x on the stack.            (this-&gt;*f)(); // #3            // This compiles OK.            (this-&gt;*~X)(); // #4            // This doesn't compile, but should it?            // Error C2275: 'X' : illegal use of this            // type as an expression.            (this-&gt;*X)(x); // #5            // Same error here.            (this-&gt;*operator=)(x); // #6            // But this _does_ compile. (I know it's            // nonsensical in this context.)            (this-&gt;f)(); // #7            // This also compiles OK, but should it?            (this-&gt;~X)(); // #8            // This compiles and works correctly, but            // again, should it?            (this-&gt;operator=)(x); // #9            // This nonsensical code also compiles,            // but again, should it?            (this-&gt;X)(x); // #10            // However, this does not compile.            // Error C2273: 'function-style cast' :            // illegal as right side of '-&gt;' operator            // End result: code from copy constructor            // has to be duplicated here.            return *this;            }        }    };</pre></BODY></HTML>