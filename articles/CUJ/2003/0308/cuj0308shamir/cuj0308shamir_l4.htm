<HTML><HEAD><TITLE>HexWeb HTML</TITLE></HEAD><body bgcolor="#FFFFFF" text="#000000"><B> Listing 4:</B>	<B>Asymmetric key license generation<P>int genl_asymm_generate(char *license,<P>                        size_t license_size,<P>                        char *partial_sig,<P>                        size_t part_sig_size,<P>                        u64 target_id,<P>                        u8 lic_features,<P>                        RSA *rsa_key)<P>{<P>    unsigned char licdata[9];<P>    unsigned char signature[128];<P>    size_t sig_len;<P>    unsigned char userlic[10];<P><P>    /* copy data into place */<P>    memcpy(licdata,<P>           (char *)&amp;target_id, sizeof(target_id));<P>    memcpy(licdata + sizeof(target_id),<P>           (char *)&amp;lic_features, sizeof(lic_features));<P><P>    /* sign the license */<P>    rsa_openssl_sign(signature, &amp;sig_len,<P>                     licdata, sizeof(licdata),<P>                     rsa_key);<P><P>    /* create the license string */<P>    memcpy(userlic,<P>           (char *)&amp;lic_features, sizeof(lic_features));<P>    memcpy(userlic + sizeof(lic_features),<P>           signature, sizeof(userlic) - sizeof(lic_features));<P>    utils_bin2str(license, license_size, <P>                  userlic, sizeof(userlic));<P><P>    /* create the part that should be shipped with the sw */<P>    utils_bin2str(partial_sig, part_sig_size,<P>           signature + sizeof(userlic) - sizeof(lic_features),<P>           sig_len - sizeof(userlic) + sizeof(lic_features));<P><P>    /* free the key */<P>    keys_free_rsa_key(rsa_key);<P><P>    return 0;<P>}</pre>
</BODY></HTML>