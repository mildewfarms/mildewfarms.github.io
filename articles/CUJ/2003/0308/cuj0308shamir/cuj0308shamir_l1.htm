<HTML><HEAD><TITLE>HexWeb HTML</TITLE></HEAD><body bgcolor="#FFFFFF" text="#000000"><B> Listing 1:</B>	<B>HMAC using SHA-1<P>int hmac_sha1(unsigned char *hmac,<P>              size_t hmac_size,<P>              const unsigned char *msg,<P>              size_t msg_len,<P>              const void *key,<P>              size_t key_len)<P>{<P>    unsigned char padded_key[SHA1_BLOCK_SIZE];<P>    unsigned char k1[SHA1_BLOCK_SIZE];<P>    unsigned char k2[SHA1_BLOCK_SIZE];<P>    unsigned char IPAD[SHA1_BLOCK_SIZE];<P>    unsigned char OPAD[SHA1_BLOCK_SIZE];<P>    unsigned char padded_msg[SHA1_BLOCK_SIZE+msg_len];<P>    unsigned char sha1_result[SHA1_OUTPUT_LEN];<P>    unsigned char padded_res[SHA1_BLOCK_SIZE+SHA1_OUTPUT_LEN];<P><P>    assert(hmac_size &lt;= SHA1_OUTPUT_LEN);<P>    /* pas key with zeros */<P>    utils_pad(padded_key, sizeof(padded_key),<P>              key, key_len, 0x00, SHA1_BLOCK_SIZE);<P>    /* create IPAD */<P>    utils_pad(IPAD, sizeof(IPAD),<P>              NULL, 0, 0x36, SHA1_BLOCK_SIZE);<P>    /* k1 = padded_key xor IPAD */<P>    utils_xor(k1, sizeof(k1),<P>              padded_key, IPAD);<P>    /* create OPAD */<P>    utils_pad(OPAD, sizeof(OPAD),<P>              NULL, 0, 0x5C, SHA1_BLOCK_SIZE);<P>    /* k2 = padded_key xor OPAD */<P>    utils_xor(k2, sizeof(k2),<P>              padded_key, OPAD);<P>    /* append msg to k1 */<P>    utils_append(padded_msg, sizeof(padded_msg),<P>                 k1, sizeof(k1), msg, msg_len);<P><P>    SHA1(padded_msg, sizeof(k1)+msg_len, sha1_result);<P><P>    /* append previous result to k2 */<P>    utils_append(padded_res, sizeof(padded_res),<P>                 k2, sizeof(k2),<P>                 sha1_result, sizeof(sha1_result));<P><P>    SHA1(padded_res, sizeof(k2)+sizeof(sha1_result),<P>         sha1_result);<P><P>    /* copy the result */<P>    memcpy(hmac, sha1_result, hmac_size);<P>    return 0;<P>}<P></pre>
</BODY></HTML>