<HTML><HEAD><TITLE>HexWeb HTML</TITLE></HEAD><body bgcolor="#FFFFFF" text="#000000"><B> Listing 1:</B>	<B>CSslProvider class<P>... // other code not shown<P><P>// definition<P><P>class CSslProvider<P>{<P>public:<P>  CSslProvider(void);<P>  ~CSslProvider(void);<P><P>private:<P>  CSslCredentials m_sslCredentials;<P>  CNbtCriticalSection m_critSec;<P><P>public:<P>  // Intialization functions that must be <P>  // called prior to calling ObtainTransport()<P>  HRESULT Init(BOOL bAsServer, LPCTSTR strPrincipal, <P>    LPCTSTR strStore, BOOL bMutualAuth);<P>  HRESULT Init(BOOL bAsServer, LPCTSTR strPrincipal, <P>    HCERTSTORE hStore, BOOL bMutualAuth);<P>  HRESULT Init();<P>  void Destroy();<P>  HRESULT Attach(CredHandle hCredentials, BOOL bAsServer, <P>    BOOL bMutualAuth);<P>  HRESULT Detach();<P><P>  HRESULT ObtainTransport(CSslTransport*&amp; pSslTransport);<P><P>  ... // other code not shown<P>};<P><P>... // other code not shown<P><P>// implementation<P><P>HRESULT CSslProvider::ObtainTransport(<P>          CSslTransport*&amp; pSslTransport)<P>{<P>  m_critSec.Lock();<P><P>  HRESULT hr = S_OK;<P>  pSslTransport = NULL;<P><P>  // Make sure we obtained the credentials prior to this call<P>  if (m_sslCredentials.HasCredHandle())<P>  {<P>    pSslTransport = new CSslTransport(m_sslCredentials);<P>    if (pSslTransport == NULL)<P>      hr = E_OUTOFMEMORY;<P>  }<P>  else<P>    hr = SEC_E_NO_CREDENTIALS;<P>  <P>  m_critSec.Unlock();<P>  if (FAILED(hr)) <P>    TRACE1("Failed to obtain transport. Error: 0x%08X.\n", hr);<P><P>  return hr;<P>}<P></pre>
</BODY></HTML>