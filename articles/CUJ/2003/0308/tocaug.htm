<HTML>
<HEAD>
<TITLE>August 2003</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">August 2003<BR>
                Volume 21 Number 8</FONT></H3>
               
<H3><FONT COLOR="#FF0000">Security</FONT></H3>

<H4><A HREF="cuj0308shamir/index.htm">Licensing Using Symmetric and Asymmetric Cryptography</A></H4>
<p><b>Ilan Shamir</b><br>
<i>Algorithms and enlightenment for license key encryption.</i></p>

<H4><A HREF="cuj0308talibov/index.htm">Implementing an SSL/TLS-Enabled Client/Server on Windows Using GSS API</A></H4>
<p><b>Alen Talibov</b><br>
<i>Easy, secure communications for Windows.</i></p>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="cuj0308wilson/index.htm">Generalized String Manipulation: Access Shims and Type Tunneling</A></H4>
<p><b>Matthew Wilson</b><br>
<i>Sophisticated machinery for truly generic string processing.</i></p>

<H3><FONT COLOR="#FF0000">CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="cuj0308samek/index.htm">The Embedded Angle &#151; An Exception or a Bug?</A></H4>
<p><b>Miro Samek</b><br>
<i>From design by contract to pre-emptive programming: principles for writing better code.</i></p>

<H4><A HREF="cuj0308becker/index.htm">STL & Generic Programming &#151; That's All Folks</A></H4>
<p><b>Thomas Becker</b><br> 
<i>Recommendations and good advice from the codin' cowboy as he rides off into the sunset.</i></p>

<H4><A HREF="cuj0308hyslopsutt/index.htm">Conversations &#151; Factory Redux, Part 2</A></H4>
<p><b>Jim Hyslop and Herb Sutter</b><br> 
<i>Revisiting the Template Method factory, with a generic to it. This month: incorporating the PersistentStorage&lt:&gt; framework into your class hierarchy, and a summary of the pros and cons of this technique.</i></p>

<H4><A HREF="cuj0308koenig/index.htm">C++ Made Easier &#151; Four First Steps to Modern C++ Programming</A></H4>
<p><b>Andrew Koenig and Barbara E. Moo</b><br> 
<i>The title says it all. Get on board, if you haven't done so already.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="cuj0308editor/index.htm">Editor's Forum</A></H4>
<H4><A HREF="cuj0308newprod/index.htm">New Products</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<H4><A HREF="cuj0308dewhurst/index.htm">Common Knowledge &#151; What Are You, Anyway?</A></H4>
<p><b>by Steve Dewhurst</b><br>
<i>In this month's Common Knowledge, you will examine one of the more obscure syntactic problems of template programming: how to guide the compiler's parse when there is not enough information available for the compiler to do the job on its own. Along the way you and I will discuss and disambiguate the "rebind" mechanism employed by the standard allocators and take a look at a weird protopattern.</i></p>

<H4><A HREF="cujcexp0308alexandr/index.htm">Generic &lt;Programming&gt; &#151; Enhancing Assertions</A></H4>
<p><b>by Andrei Alexandrescu and John Torjo</b><br>
<i>This article, co-authored with John Torjo, describes John's definition of a full-featured, industrial-strength assertion facility. The package features multiple debug levels, logging and a means for collecting detailed state information.</i></p>

<H4><A HREF="cujcexp0308sutter/index.htm">The New C++ &#151; Generalized Function Pointers</A></H4>
<p><b>by Herb Sutter</b><br>
<i>The function facility, recently adopted by the C++ standards committee, provides a generalized way of working with arbitrary functions when all you know (or need to know) is their signature. In fact, as it turns out, you don't even need to know the target function's exact signature -- any target function with a compatible signature, meaning one where the parameter and return types are appropriately covertible, will work just fine.</i></p>

<H4><A HREF="cuj0308hashimi/index.htm">Custom Components in ASP.NET (using C#)</A></H4>
<p><b>by Sayed Hashimi</b><br>
<i>A look at how to build a custom ASP.NET component using C#, including sample code and commentary on various design alternatives.</i></p>

<H4><A HREF="cuj0308boostcorner/index.htm">Introducing the Boost Corner</A></H4>
<p><b>by Joe Casad</b><br>
<i>April 2003 marked the beginning of a new feature at CUJ Online -- the Boost Corner. CUJ's Boost Corner, which is sponsored by Dinkumware, provides ongoing coverage of one of the most exciting recent developments in C++: the Boost Libraries.</i></p>

</blockquote>
</body>
</html>
