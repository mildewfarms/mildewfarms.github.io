<html>
<head>
<title>Generic Object-Oriented Differential Equation Integrators</title>

</head>

<body><h4>Listing 2:	<i>Euler class definition and the implementation of the Euler integrator.</i></h4>

<pre>
template &lt;class C, class T, class B /* base type of C */&gt;
class Euler : public Integrator&lt;C,T&gt;
{
    private:
        C dxdt;

    public:
        Euler (const C &amp;x0, const T t0, const T h_init,
               void (*dxdt_calc)(const C&amp;, const T, C&amp;))
            : Integrator &lt;C,T&gt; (x0, t0, h_init, dxdt_calc),
          dxdt(x0) { }

        void step(void);
};

template &lt;class C, class T, class B&gt;
void Euler&lt;C,T,B&gt;::step(void)
{
    return_derivs(statevector,t,dxdt);
    statevector += B(h)*dxdt;
    t += h;
}
</pre>
</body>
</html>
