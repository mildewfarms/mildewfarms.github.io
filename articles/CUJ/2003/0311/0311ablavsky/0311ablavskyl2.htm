<html>
<head>
<title>Data-Structure-Independent Algorithms for Image Processing</title>
</head>

<body>


<h4>Listing 2: 	<i>STL-compliant median filter.</i> </h4>

<pre>
// functor
template&lt;size_t SubWindowWidth&gt; struct MedianFiltering {  
  template&lt;typename SubWindow&gt;
  inline unsigned char operator()(SubWindow &amp;in) {
    std::copy(in.begin(), in.end(), tmp.begin());
    std::nth_element(tmp.begin(), 
                     tmp.begin() + (SubWindowWidth * SubWindowWidth) / 2, 
                     tmp.end());
    return data[(SubWindowWidth * SubWindowWidth) / 2];
  }
  unsigned char tmp[SubWindowWidth * SubWindowWidth];
};
// process all pixels
int main(...) {
  std::transform(windowsBegin(in), windowsEnd(in),
                 sequentialBegin(out), MedianFiltering());
}
</pre>
</body>
</html>
