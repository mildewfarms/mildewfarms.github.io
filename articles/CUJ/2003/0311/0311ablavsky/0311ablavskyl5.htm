<html>
<head>
<title>Data-Structure-Independent Algorithms for Image Processing</title>
</head>

<body>


<h4>Listing 5:	<i>Generalized convolution and morphological erosion operations.</i></h4>

<pre>
template&lt;size_t _SubWidth, size_t _SubHeight, typename _KernelIterator>
    struct Convolution  {
    Convolution(_KernelIterator kernel) : kernel_(kernel)    {
    }
    template&lt;typename SubWindow> inline 
      std::iterator_traits&lt;SubWindow>::value_type
      operator()(SubWindow &in) {
        typename std::iterator_traits&lt;_KernelIterator>::value_type tmp = 0;
        return std::inner_product(in.begin(),in.end(),kernel_,tmp);
    }
   _KernelIterator kernel_;
};
template&lt;size_t _SubWidth, size_t _SubHeight> struct Erode  {
    template&lt;typename SubWindow> inline bool
      operator()(SubWindow &in)    {
        const typename SubWindow::iterator m = std::min_element(in.begin(),
                                                                in.end());
        return (*m == 0);
    }
};
</pre>
</body>
</html>
