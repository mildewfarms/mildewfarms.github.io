<html>
<head>
<title>FOR_EACH and LOCK</title>
</head>

<body>


<h4>Listing 4: 	auto_unbox&lt;&gt;.</h4>

<pre>
struct object_convertible 
{ 
    object_convertible ( System::Object * ); 
};
template&lt;typename T&gt;
class is_managed
{
    static char             select( object_convertible );
    static double __cdecl   select( ... );
    static T get();
public:
    enum { value = sizeof(select(get())) == sizeof(char) };
};
template&lt;bool&gt; struct auto_unbox_helper;
template&lt;&gt;
struct auto_unbox_helper&lt;true&gt; // managed
{
    template&lt;typename T&gt;
    struct inner
    {
        typedef T result_type;
        static T unbox( System::Object *o )
        {
            return __try_cast&lt;T&gt;( o );
        }
    };
};
template&lt;&gt;
struct auto_unbox_helper&lt;false&gt; // not managed
{
    template&lt;typename T&gt;
    struct inner
    {
        typedef T __gc&amp; result_type;
        static T __gc&amp; unbox( System::Object *o )
        {
            return *__try_cast&lt;T __box*&gt;( o );
        }
    };
};
template&lt;typename T&gt;
struct auto_unbox
{
    typedef typename auto_unbox_helper&lt;is_managed&lt;T&gt;::value&gt;::
        template inner&lt;T&gt; helper;
    static typename helper::result_type unbox( System::Object *o )
    {
        return helper::unbox( o );
    }
};
</pre>
</body>
</html>
