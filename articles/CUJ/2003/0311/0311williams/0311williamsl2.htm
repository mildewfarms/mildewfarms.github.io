<html>
<head>
<title>Strong Exception-Safe Storage</title>
</head>

<body><h4>Listing 2:	<i>The implementation of swap.</i></h4>

<pre>
void swap(StrongStorage&amp; other)
{
    using std::swap;

    if(other.cacheInitialized)
    {
        getOtherCache().template construct_as&lt;value_type&gt;(other.value());
    }
    try
    {
        if(cacheInitialized)
        {
            other.getOtherCache().template 
construct_as&lt;value_type&gt;(value());
        }
    }
    catch(...)
    {
        if(other.cacheInitialized)
        {
            getOtherCache().template destroy_as&lt;value_type&gt;();
        }
        throw;
    }
            
    if(cacheInitialized)
    {
        getCache().template destroy_as&lt;value_type&gt;();
    }
    if(other.cacheInitialized)
    {
        other.getCache().template destroy_as&lt;value_type&gt;();
    }
    useCache1=!useCache1;
    other.useCache1=!other.useCache1;
    swap(cacheInitialized,other.cacheInitialized);
}
</pre>
</body>
</html>
