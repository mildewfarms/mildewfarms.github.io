<HTML><HEAD><TITLE>Listing 4:	Class order_by implementation</TITLE></HEAD><body bgcolor="#FFFFFF" text="#000000"><B> Listing 4:</B>	Class order_by implementation<p><pre>//order_by.h#ifndef __ORDER_BY_H__#define __ORDER_BY_H__#include &lt;algorithm&gt;#include &lt;iterator&gt;#include &lt;Typelist.h&gt;template &lt;typename CONT, typename TLIST, int i = 0&gt;class order_by{private:  typedef typename CONT::iterator iter;  enum{n = Loki::TL::Length&lt;TLIST&gt;::value};  typedef typename Loki::TL::TypeAt&lt;TLIST, i&gt;::Result    comp_type;public:  order_by(iter begin, iter end)  {    std::sort(begin, end, comp_type());    pair&lt;iter, iter&gt; range;    while(true)    {      range = std::equal_range(begin, end, *begin, comp_type());      if(range.first == end)        return;      order_by&lt;CONT, TLIST, ((i+1==n)?(0xFFFF):(i+1))&gt;        o(range.first, range.second);      begin = range.second;    }  }};//specialized object to end template recursiontemplate &lt;typename CONT, typename TLIST&gt;class order_by&lt;CONT, TLIST, 0xFFFF&gt;{private:  typedef typename CONT::iterator iter;public:  order_by(iter begin, iter end){}};#endif</pre></BODY></HTML>