<HTML>
<HEAD>
<TITLE>March 2003/C++ Expression Templates</TITLE>
</HEAD><BODY>
<h4>Traits </h4>
<P> Traits are another common programming technique in conjunction with template 
  programming. A traits class is a shadow class that accompanies another type 
  and contains information associated with the other type.
<P>
The Standard C++ library has several examples of traits, such as character traits. The standard string class is a class template that is parameterized on the character type in order to allow for representation of tiny character and wide character strings. In principle, the string class template, named <B>basic_string</B>, can be instantiated on any character type, not just the two character types that are predefined by C++. If, for instance, someone needs to represent Japanese characters as a structure named <B>Jchar</B>, then the <B>basic_string</B> template can be used to create a string class for Japanese characters, namely <B>basic_string&lt;Jchar&gt;</B>.<P>
Imagine implementing a string class template. You will need information that is not contained in the character type. For instance, you might want to calculate string length. You can do this by counting all characters in the string until you find the end-of-string character. How do you know which is the end-of-string character? It is <B>'\0'</B> for tiny characters of type <B>char</B>. There is also a corresponding end-of-string character defined for characters of type <B>wchar_t</B>, but how do you identify the end-of-string character for Japanese characters of type <B>Jchar</B>? Quite obviously, the information about the end-of-string character is associated with each character type, but it is not contained in the character type. This is exactly the purpose of traits: they provide information that is associated with a type, but is not contained in the type.
<P> A traits type is a shadow type, typically a class template that can be instantiated 
  or specialized for a group of types and provides information associated with 
  each type. The character traits (i.e., see the <B>char_traits</B> class template 
  in the Standard C++ library) contain a static character constant that designates 
  the end-of-string character for the character type it is instantiated for.
</BODY> 
</HTML>
