<HTML>
<HEAD>
<TITLE>April 2003</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">April 2003<BR>
                Volume 21 Number 4</FONT></H3>
               
<H3><FONT COLOR="#FF0000">Linux</FONT></H3>

<H4><A HREF="cuj0304hubbard/index.htm">Generating Linux Device Drivers with CodeSketch</A></H4>
<p><b>John F. Hubbard</b><br>
<i>Automate device driver creation with this handy Linux tool.</i></p>

<H4><A HREF="cuj0304bloch/index.htm">Dropping Windows with WineLib</A></H4>
<p><b>Matthew Bloch</b><br>
<i>Expert help for porting your Windows apps to Linux.</i></p>

<H3><FONT COLOR="#FF0000">FEATURE</FONT></H3>

<H4><A HREF="cuj0304ketema/index.htm">Creating STL Containers in Shared Memory</A></H4>
<p><b>Grum Ketema</b><br>
<i>This special-purpose allocator makes STL available in a shared memory scenario.</i></p>


<H3><FONT COLOR="#FF0000">CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="cuj0304samek/index.htm">The Embedded Angle &#151; Who Moved My State?</A></H4>
<p><b>Miro Samek</b><br>
<i>A better approach to event-driven programming using flexible state machines.</i></p>

<H4><A HREF="cuj0304becker/index.htm">STL & Generic Programming &#151; Creating Efficient Code with Templates</A></H4>
<p><b>Thomas Becker</b><br> 
<i>Efficient computations with metaprogramming magic.</i></p>

<H4><A HREF="cuj0304hyslop/index.htm">Conversations &#151; Sharing Causes Contention</A></H4>
<p><b>Jim Hyslop and Herb Sutter</b><br>
<i>Serial killers lurking in your code: why they're there and how to eradicate them.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="cuj0304editor/index.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="cuj0304newprod/index.htm">New Products</A></H4>
<H4><A HREF="cuj0304letters/index.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<H4><A HREF="cujcexp2104alexandr/index.htm">Generic&lt;Programming&gt; &#151; Assertions</A></H4>
<p><b>by Andrei Alexandrescu</b><br>
<i>Don't read unless you want to see how to use preprocessor, template, overloading, and virtual function tricks at the same time in only a few dozen lines of code. The result is an assertion facility that works when your code doesn't.</i></p>

<H4><A HREF="cujcexp2104dewhurst/index.htm">Common Knowledge &#151; Scouting Out Optimizations</A></H4>
<p><b>by Steve Dewhurst</b><br>
<i>How do you reduce template metaprogramming compile times by orders of magnitude? Easy. Send out a scout to find the best translation path.</i></p>

<H4><A HREF="cujweb0304batov/index.htm">Implementing RMI for C++ Objects</A></H4>
<p><b>by Vladimir Batov</b><br>
<i>RMI (Remote Method Invocation) provides the ability to call a method on a remote object using the same syntax used for a local object. This article describes how to access remote C++ objects using RMI.</i></p>

<H4><A HREF="cujweb0304wilson/index.htm">Book Review: "Network Programming, Volume 2"</A></H4>
<p><b>by Matthew Wilson</b><br>
<i>Schmidt's and Huston's C++ Network Programming, Volume 2: Systematic Reuse with ACE and Frameworks shows how to program for network environments using the ACE (Adaptive Communications Environment) toolkit.</i></p>

<H4><A HREF="cujweb0304schmidt/index.htm">Object-Oriented Frameworks for Network Programming</A></H4>
<p><b>by Stephen D. Huston and Douglas C. Schmidt</b><br>
<i>This excerpt from C++ Network Programming, Volume 2 introduces the powerful ACE framework and provides a quick tour of ACE features.</i></p>

</blockquote>
</body>
</html>
