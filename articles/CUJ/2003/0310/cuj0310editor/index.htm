<HTML>
<HEAD>
<TITLE>The Incremental Developer</TITLE>
</HEAD><BODY>
<h2>Editor's Forum</h2>
<h3>The Structure of Software Development Process Evolution </h3>
<P><B>
</b>The history of our profession is marked by metaphors [1], evolving methodologies, and pithy platitudes [2]. The waterfall approach that dominated decades of development made its mark and hit its limit while giving rise to a caste system now considered mostly counter-productive (were you an analyst, designer, or &#147;just a programmer&#148;?). The rallying around reuse has faded as we learned, counter-intuitively, that the best way to keep software flexible is to do only what is needed and no more, refactoring on demand as new requirements surface. The pendulum has indeed swung back to lighter methodologies as the heavy processes of the past have failed to scale. In this issue, invited author Mary Poppendieck explains how lessons learned in leaning-out manufacturing processes are helping software development projects cut waste and deliver better products sooner. Good Stuff.<P>
But the pendulum will surely swing back someday, and object orientation and agile development will eventually hand off the Baton of Coolness to other codifications of development wisdom. What remains constant in all this pendulation, one hopes, is that programmers and processes together continue to improve in providing value to customers and to our industry [3]. Whether they do or not, market pressures and their ensuing project deadlines have a way of issuing wake-up calls that we can&#146;t ignore. Here&#146;s wishing you profit and progress, as I&#146;m off to enjoy a week on the Oregon coast. I leave you with the latest installment of Mr. Typecraft&#146;s pertinent poesy.
<h3> </h3>
<h3> Let&#146;s Ship</h3>
<P>
(with apologies to David Bowie&#146;s &#147;Let&#146;s Dance,&#148; and to the many good release managers out there)<P>
<P>
Let&#146;s ship, let all our customers sing the blues<BR>
Let&#146;s dance to the song they&#146;re playin&#146; in Marketing<BR>
Let&#146;s ship, while dollars light up your face<BR>
Let&#146;s ship, jump competition to an empty space<P>
<P>
If you say it&#146;s gold, I&#146;ll agree with you<BR>
If you say promise, we&#146;ll promise<BR>
Because service pack two will make it all come true<BR>
If users should fall<BR>
Into our arms<BR>
And tremble in our power<P>
<P>
Let&#146;s ship, for fear the ax should fall<BR>
Let&#146;s ship, for fear this release is all<P>
<P>
Let&#146;s ship, who needs code reviews, you guys,<BR>
Let&#146;s ship, under the deadline, this serious deadline<P>
<P>
If you say it&#146;s done, I&#146;ll agree with you<BR>
If you say promise, we&#146;ll promise<BR>
Because service pack two will make it all come true<BR>
If users should fall<BR>
Into our arms<BR>
And tremble in our power<P>
<P>
Let&#146;s ship, let all of our customers sing the blues<BR>
Let&#146;s dance to the song they&#146;re playin&#146; in Marketing<P>
<P>
Let&#146;s ship, who needs beta four or five,<BR>
Let&#146;s ship, under the deadline, this serious deadline.<P>
<P>
&#151; H.P. Typecraft
<h3> Notes</h3>
<P><B>
</b>[1]  See Miro Samek&#146;s article in this issue.<P>
[2]  &#147;Write Once Run Anywhere&#148; comes to mind.
<P> [3] Do yourself a favor and read what Pragmatic Programmer Dave Thomas has 
  to say in &#147;How to Keep Your Job&#148; at <a href="http://roots.dnd.no/2003/speakers/material.html">http://roots.dnd.no/2003/speakers/material.html</a>.
<P>
<P>
<P> Chuck Allison<br>
  Senior Editor<br>
  <B><a href="mailto:cda@freshsources.com">cda@freshsources.com</a></B> 
</BODY>
</HTML>
