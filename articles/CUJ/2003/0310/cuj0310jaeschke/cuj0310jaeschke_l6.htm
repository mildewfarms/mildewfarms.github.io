<HTML>
<HEAD>
<TITLE>Threading from Managed C++</TITLE>
</HEAD><BODY>
<h4>Listing 6: Three threads concurrently incrementing a shared variable 10,000,000 
  times </h4>
<Pre>
#using &lt;mscorlib.dll&gt;
using namespace System;
using namespace System::Threading;

bool interlocked = false;
const int maxCount = 10000000;
/*1*/   __int64 value = 0;

__gc class Th08
{

public:
   void TMain()
   {
      if (interlocked)
      {
         for (int i = 1; i &lt;= maxCount; ++i)
         {
/*2*/            Interlocked::Increment(&amp;value);
         }
      }
      else
      {
         for (int i = 1; i &lt;= maxCount; ++i)
         {
/*3*/            ++value;
         }
      }
   }

};

int main(int argc, char *argv[])
{
   if (argc == 2)
   {
      if (argv[1][0] == 'Y' || argv[1][0] == 'y')
      {
         interlocked = true;
      }
   }

   Thread *t1 = new Thread(new ThreadStart(new Th08(),
      &amp;Th08::TMain));
   Thread *t2 = new Thread(new ThreadStart(new Th08(),
      &amp;Th08::TMain));
   Thread *t3 = new Thread(new ThreadStart(new Th08(),
      &amp;Th08::TMain));

   t1-&gt;Start();
   t2-&gt;Start();
   t3-&gt;Start();
   t1-&gt;Join();
   t2-&gt;Join();
   t3-&gt;Join();

   Console::WriteLine(S"After {0} operations, value = {1}",
      (3 * maxCount).ToString(), value.ToString());
}<B>
</b>&#151; End of Listing &#151;</pre>
</BODY>
</HTML>
