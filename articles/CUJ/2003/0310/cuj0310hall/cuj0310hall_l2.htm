<HTML>
<HEAD>
<TITLE>BuildConfig: Making Build Configuration Information Available at Runtime</TITLE>
</HEAD><BODY>
<h4>Listing 2: Build configuration class interface </h4>
<Pre>
// The BuildConfiguration class

class BuildConfiguration
{
  private:
    typedef std::set&lt;const VersionStamp*, 
                     VersionStampPtrLess&gt; VersionInfo;
  
  public:
    typedef VersionInfo::const_iterator const_iterator;  

  public:
    static BuildConfiguration&amp; Instance();

    void Output(std::ostream&amp; out) const;
    void AddFile(const VersionStamp* fileStamp);

    const_iterator begin() const;
    const_iterator end() const;

  private:
    // Private for Singleton
    BuildConfiguration();

    // Unimplemented
    BuildConfiguration(const BuildConfiguration&amp;);
    BuildConfiguration&amp; operator=(const BuildConfiguration&amp;);

  private:
   VersionInfo mConfig;
};<B>
</b>&#151; End of Listing &#151;</pre>
</BODY>
</HTML>
