<HTML>
<HEAD>
<TITLE>BuildConfig: Making Build Configuration Information Available at Runtime</TITLE>
</HEAD><BODY>
<h4>Listing 3: VersionStamp and BuildConfiguration implementation highlights </h4>
<Pre>
// A partial listing of BuildConfig.cpp

VersionStamp::VersionStamp(const char* file,
                           const char* date,
                           const char* time,
                           const char* ver)
  : mFileName(file), mBuildDate(date)
  , mBuildTime(time), mVersion(ver)
{
  BuildConfiguration::Instance().AddFile(this);
}

bool VersionStamp::operator&lt;(const VersionStamp&amp; rhs) const
{
  return strcmp(mFileName, rhs.mFileName) &lt; 0;
}

bool VersionStampPtrLess::operator ()(const VersionStamp* lhs,
                                      const VersionStamp* rhs)
{
  return (*lhs) &lt; (*rhs);
}

BuildConfiguration&amp; BuildConfiguration::Instance()
{
  static std::auto_ptr&lt;BuildConfiguration&gt;
    instance(new BuildConfiguration);

  return *instance;
}

void BuildConfiguration::AddFile(const VersionStamp* fileStamp)
{
  assert(fileStamp);
  mConfig.insert(fileStamp);
}
<B>
</b>&#151; End of Listing &#151;</pre>
</BODY>
</HTML>
