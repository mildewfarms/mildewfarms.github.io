<html>
<head>
<title>YAMI: A Simple ORB Library</title>
</head>

<body><h4>Listing 3:	<i>YAMI client.</i></h4>

<pre>
// a simple YAMI client
#include "yami++.h"
using namespace YAMI;
#include &lt;iostream&gt;
#include &lt;string&gt;

using namespace std;
const string serverhost = "127.0.0.1";
const int    serverport = 12340;
const int    clientport = 12341;
// arbitrary name, used locally to distinguish between different domains
const string domainname  = "someDomain";
// name of the logical remote object
const string objectname  = "calculator";
int main()
{
    try
    {
        netInitialize();
        {
        Agent agent(clientport);
        // register the remote domain
        agent.domainRegister(domainname, serverhost, serverport, 2);
        string messagename = "multiply";
        ParamSet paramset(2);
        paramset.setInt(0, 5);
        paramset.setInt(1, 6);
        // send the message
        auto_ptr&lt;Message&gt; message(
            agent.send(domainname, objectname, messagename, paramset));
        message-&gt;wait();
        Message::eStatus status = message-&gt;getStatus();
        if (status == Message::eReplied)
        {
            // read the response
            auto_ptr&lt;ParamSet&gt; response(
                message-&gt;getResponse());
            int result = response-&gt;getInt(0);
            cout &lt;&lt; "the result is: " &lt;&lt; result &lt;&lt; endl;
        }
        else
        {
            cout &lt;&lt; "the message was not replied correctly"
                &lt;&lt; endl;
        }
        }
        netCleanup();
    }
    catch (const exception &amp;e)
    {
        cout &lt;&lt; e.what() &lt;&lt; endl;
    }
}
</pre>
</body>
</html>
