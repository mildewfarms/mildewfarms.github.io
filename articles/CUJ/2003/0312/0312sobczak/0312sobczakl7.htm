<html>
<head>
<title>YAMI: A Simple ORB Library</title>
</head>

<body><h4>Listing 7:	<i>A YAMI server in YDL.</i></h4>

<pre>
// a YAMI server built with YDL

#include "yami++.h"
#include "calc_server.h"
using namespace YAMI;
#include &lt;iostream&gt;
#include &lt;string&gt;
using namespace std;
// the port of the server's agent
const int serverport = 12340;
// the name of the servant, as seen by clients
const string objectname = "calculator";
class Calculator : public calculator_Skel
{
private:
    void add(int a, int b, int &amp;c) { c = a + b; }
    void subtract(int a, int b, int &amp;c) { c = a - b; }
    void multiply(int a, int b, int &amp;c) { c = a * b; }
    void divide(int a, int b, int &amp;c)
    {
        if (b == 0)
        {
            // dividing by 0 not allowed
            throw 0;
        }
        c = a / b;
    }
};
int main()
{
    cout &lt;&lt; "starting the server" &lt;&lt; endl;

    try
    {
        netInitialize();
        {
        Agent agent(serverport);
        Calculator calc_server;
        agent.objectRegister(objectname,
            Agent::ePassiveMultiThreaded, &amp;calc_server);
        cout &lt;&lt; "waiting for invocations..."
            &lt;&lt; endl;
        sleep(0);
        }
        netCleanup();
    }
    catch (const exception &amp;e)
    {
        cout &lt;&lt; e.what() &lt;&lt; endl;
    }
}
</pre>
</body>
</html>
