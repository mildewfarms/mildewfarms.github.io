<HTML>
<HEAD>
<TITLE>December 2003</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">December 2003<BR>
                Volume 21 Number 12</FONT></H3>
               

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="0312casado/cuj0312casado.htm">Static Packet Construction with C++ Templates</A></H4>
<p><b>Martin Casado</b><br>
<i>Martin uses C++ templates for static packet construction, and shows how you can use this technique to write generic routines in support of low-level networking primitives.</i></p>

<H4><A HREF="0312sobczak/cuj0312sobczak.htm">YAMI: A Simple ORB Library</A></H4>
<p><b>Maciej Sobczak</b><br>
<i>YAMI (Yet Another Messaging Infrastructure) fills the gap between brute-force interobject communication and expansive middleware technologies. At YAMI's core is a communication model that consists of objects exchanging messages.</i></p>

<H4><A HREF="0312karlsson/cuj0312karlsson.htm">Lambda Expressions & C++</A></H4>
<p><b>Bjorn Karlsson</b><br>
<i>Lambda expressions, which are useful for reducing code size, are a common feature in functional programming languages—but not C++. That's why Bjorn turns to the Boost Lambda Library.</i></p>

<H4><A HREF="0312queisser/cuj0312queisser.htm">Computing the Hough Transform</A></H4>
<p><b>Andrew Queisser</b><br>
<i>The Hough Transform is an algorithm for finding shapes in images or sets of data points. Andrew implements the Transform for line and circle detection.</i></p>

<H4><A HREF="0312wilson/cuj0312wilson.htm">Efficient Variable Automatic Buffers</A></H4>
<p><b>Matthew Wilson</b><br>
<i>In this article, Matthew presents auto_buffer —a simple, platform-independent STLSoft template class that fulfills dynamically sized allocations from encapsulated arrays.</i></p>

<H3><FONT COLOR="#FF0000">COLUMNS</FONT></H3>

<H4><A HREF="0312koenig/cuj0312koenig.htm">C++ Made Easier</A></H4>
<p><b>Andrew Koenig and Barbara Moo</b><br>
<i>Like software systems, houses involve design, components, tools—and, of course, bugs. Which makes you wonder about what software developers can learn from home builders.</i></p>

<H4><A HREF="0312alexandrescu/cuj0312alexandrescu.htm">Generic&lt;Programming&gt;</A></H4>
<p><b>Andrei Alexandrescu and David B. Held</b><br> 
<i>Andrei and Dave take a break from the Smart Pointers Reloaded miniseries and discuss how to analyze the exception safety of functions.</i></p>

<H4><A HREF="0312samek/cuj0312samek.htm">The Embedded Angle</A></H4>
<p><b>Miro Samek</b><br> 
<i>Miro goes back to state-machine fundamentals and provides programming guidelines for coding state machines in C and C++.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="0312edit/0312edit.htm">Editor's Forum</A></H4>
<H4><A HREF="0312newprod/0312newprod.htm">New Products</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<H4><A HREF="cujexp0311dewhurst/index.htm">Common Knowledge &#151; Unfinished Business</A></H4>
<p><b>by Steve Dewhurst</b><br>
<i>In this last installment of Common Knowledge Steve looks at combining some template metaprogramming odds and ends to see if he can come up with a reasonable framework for ad hoc type manipulation. Along the way he considers the creative use of rocks in automotive maintenance, type translation to facilitate compile-time manipulation, un-instantiation of class templates, the STL allocator “rebind” mechanism, typelist meta-generic algorithms, meta-predicate adaptation, and the importance of having fun.</i></p>

<H4><A HREF="cujexp0312vinoski/index.htm">Object Interconnections &#151; XML Reflection for CORBA</A></H4>
<p><b>by Douglas C. Schmidt and Steve Vinoski</b><br>
<i>Douglas and Steve present an alternative approach to supporting reflection in CORBA in which each object is capable of returning its own reflection metadata, guaranteed to be accurate and up to date, to clients. They use XML as the metadata format to maximize its usefulness for non-CORBA applications, such as J2EE, .NET, and Web Services.</i></p>

<H4><A HREF="cujweb0312heller/index.htm">CxC: C for Parallel Computing</A></H4>
<p><b>by Martin Heller</b><br>
<i>Effective parallel computing has long been a holy grails of the computer science community. To that end, CxC is a C-based parallel programming language.</i></p>
</blockquote>
</body>
</html>
