<html>
<head>
<title>Computing the Hough Transform</title>
</head>

<body>



<h4>Listing 2:	<i>An accumulation function for line search</i>.</h4>

<pre>
bool LineHoughAccum::DoAddPoint(int x, int y)
{
  int a;
  int distCenter = m_rowLength/2;
  // calculate rho for angle 0
  int lastDist = distCenter + ((m_cosTable[0]*x + m_sinTable[0]*y) &gt;&gt; 10);
  // loop through angles 1 through 180
  for (a=1; a&lt;m_cosTable.size(); a++)
  {
    int dist = distCenter + ((m_cosTable[a]*x + m_sinTable[a]*y) &gt;&gt; 10);
    if (dist &gt;= 0 &amp;&amp; dist&lt;m_rowLength)
    {
      // accumulate cells filling in multiple values for one angle
      int stepDir = dist&gt;lastDist ? 1 : -1;
      for (int cell=lastDist; cell!=dist; cell+=stepDir)
        m_accum[a*m_rowLength + cell] += 1;
    }
    lastDist = dist;
  }
  m_numAccumulated += 1;
  return true;
}
</pre>
</body>
</html>
