<HTML><HEAD><TITLE>Listing 6: The class declaration of abstract_parser and concrete_parser</TITLE></HEAD><body bgcolor="#FFFFFF" text="#000000"><B> Listing 6:</b> The class declaration of abstract_parser and concrete_parser<pre>//  Copyright (c) 2001, Joel de Guzman and Dan Nuffer//  Permission is granted to use this code without restriction as//  long as this copyright notice appears in all source files.template &lt;typename IteratorT&gt;class abstract_parser{public:                    abstract_parser() {}    virtual         ~abstract_parser() {}    virtual match   parse(                        IteratorT&amp; first,                        IteratorT const&amp; last) const = 0;};template &lt;typename ParserT, typename IteratorT&gt;class concrete_parser    : public ParserT    , public abstract_parser&lt;IteratorT&gt;{public:                    concrete_parser(ParserT const&amp; parser)                    : ParserT(parser) {}  virtual           ~concrete_parser() {}  virtual match  parse(IteratorT&amp; first, IteratorT const&amp; last) const  { return ParserT::parse(first, last); }};</pre></BODY></HTML>