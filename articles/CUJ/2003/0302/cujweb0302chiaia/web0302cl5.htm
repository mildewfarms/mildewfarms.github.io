<HTML><HEAD>
<TITLE>February 2003/XML-based Factories and Reusable Components/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5: An example</A></h4>
<pre>
**1** Section 1: extract from the XML input **1**

....
  &lt;optioninfo&gt;
    &lt;spot&gt;100&lt;/spot&gt;
    &lt;strike&gt;105&lt;/strike&gt;
    &lt;yield&gt;0&lt;/yield&gt;
    &lt;volatility&gt;0&lt;/volatility&gt;
    &lt;intRate&gt;0.05&lt;/intRate&gt;
    &lt;optStyle&gt;AMERICAN&lt;/optStyle&gt;
    &lt;callPut&gt;PUT&lt;/callPut&gt;
    &lt;busConv&gt;ACT_365&lt;/busConv&gt;
    &lt;valDate&gt;19991015&lt;/valDate&gt;
    &lt;matDate&gt;20001015&lt;/matDate&gt;
    &lt;currency&gt;GBP&lt;/currency&gt;
  &lt;/optioninfo&gt;
....

**2* Section 2: somewhere in the application a factory is 
created and the option is priced **2**
....
    try
    {
        WU_FactoryEquityOption1F factory
            (buff,&amp;container,XML_MEMORY);
        factory.build();
        WI_EquityOption1F *option = factory.getObject();
        double price = option-&gt;price();
    }
    catch (WU_Exception ex)
    {
        outstr&lt;&lt;"User Exception : "
              &lt;&lt;ex.getErrorMessage().c_str()
              &lt;&lt;endl;
        outstr&lt;&lt;"In context : "
              &lt;&lt;ex.getContext().c_str()
              &lt;&lt;ends;
    }
.....

**3** Section 3: an extract from WU_FactoryEquityOption1F::build() 
member function **3**
void WU_FactoryEquityOption1F::build()
{
    .....
    //instrument data
    WD_InstrumentData idata;
    string tmp;

    tmp = getNodeValue("valDate");  //valuation date
    //convert string into long
    lv = strtol(tmp.c_str(),&amp;failure,10); 
    if (strcmp(failure,"")!=0) throw ex;
    idata.valDate = lv; //store in data structure
    idata.spotDate = lv;
    ....
    tmp = getNodeValue("strike"); //strike
    //convert string into double
    dv = strtod(tmp.c_str(),&amp;failure); 
    if (strcmp(failure,"")!=0) throw ex;
    idata.strike = dv;
    ....
    // a subcomponent is assembled with other subcomponents
    WM_AssetTree1D* pat;
    pat =
        new WM_AssetTree1D(dynamic_cast&lt;WE_WillowTree1D*&gt;(pwt1d),
                           intRate,
                           dynamic_cast&lt;WU_DiscreteDivs*&gt;(pdd)); 
    ....
    //this component is cloned and the clone is stored
    WU_Persistent* pat1d = pat-&gt;clone();  //cloning
    m_container-&gt;registerComponent(pat1d,"AssetTree1D");
    delete pat;

    ....
        //finally the equity option is created and stored
        // in m_object
    m_object =
        new WI_EquityOption1F
        (idata,dynamic_cast&lt;WM_AssetTree1D*&gt;(pat1d));
       ....
        
}
</pre>
</BODY>
</HTML>
