<HTML>
<HEAD>
<TITLE>February 2003</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">February 2003<BR>
                Volume 21 Number 2</FONT></H3>
               
<H3><FONT COLOR="#FF0000">Testing &amp; Debugging</FONT></H3>

<H4><A HREF="cuj0302marcok/index.htm">Automated Memory Checking in C</A></H4>
<p><b>Zlatko Marcok</b><br>
<i>If you know the physical layout of your system's memory, you can verify its integrity automatically. Here's how.</i></p>

<H4><A HREF="cuj0302torjo/index.htm">Testing with Paired Messages</A></H4>
<p><b>John Torjo</b><br>
<i>A trace file can help debug a program, but only if you can decipher the trace file. This technique will help.</i></p>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="cuj0302bik/index.htm">Programming Guidelines for Vectorizing C/C++ Compilers</A></H4>
<p><b>Aart Bik, Milind Girkar, Paul Grey and Xinmin Tian</b><br>
<i>Since there really is no such thing as “fast enough,” here’s a great way to squeeze more out of that machine of yours.</i></p>

<H4><A HREF="cuj0302dewhurst/index.htm">Two C++ Gotchas</A></H4>
<p><b>Steve Dewhurst</b><br>
<i>Get this before they get you.</i></p>

<H4><A HREF="cuj0302chang/index.htm">More on the C/C++ Comment Macro for Debug Statements</A></H4>
<p><b>Randall C. Chang</b><br>
<i>A portable technique for managing multi-line debug statements.</i></p>

<H3><FONT COLOR="#FF0000">CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="cuj0302samek/index.htm">The Embedded Angle &#151; The Embedded Mindset</A></H4>
<p><b>Miro Samek</b><br>
<i>Innovation in skinning the Heap Cat.</i></p>

<H4><A HREF="cuj0302hyslop/index.htm">Conversations &#151; Points of Order</A></H4>
<p><b>Jim Hyslop &amp; Herb Sutter</b><br> 
<i>A poignant reminder that locks tend to be global, despite appearances to the contrary, and should be verified globally.</i></p>

<H4><A HREF="cuj0302becker/index.htm">STL & Generic Programming &#151; C++ Metaprogramming Applied</A></H4>
<p><b>Thomas Becker</b><br>
<i>Template metaprogramming transcends academic musing. This article serves as a bridge to its practical uses.</i></p>

<H4><A HREF="cuj0302koenig/index.htm">C++ Made Easier &#151; Handles and Exception Safety, Part 4: Tracking References without Counters</A></H4>
<p><b>Andrew Koenig and Barbara E. Moo</b><br>
<i>Intelligent design gives you a Better Handle -- efficient, non-intrusive, and exception-safe.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="cuj0302editor/index.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="cuj0302newprod/index.htm">New Products</A></H4>
<H4><A HREF="cuj0302letters/index.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<H4><A HREF="cujcexp2102alexandr/index.htm">Generic&lt;Programming&gt; &#151; Move Constructors</A></H4>
<p><b>by Andrei Alexandrescu</b><br>
<i>This article introduces Mojo, a compact framework for eliminating unnecessary copying of temporary objects. Mojo features 100% elimination of unnecessary copies if you operate minimal changes to source code and observe some simple rules. If you ever wished to return objects from functions, improve the string manipulation speed of your application, or simply get more efficient code without compromising its elegance, it looks like you could use some Mojo. This article gives a long but comprehensive account of Mojo.</i></p>

<H4><A HREF="cujcexp2102dewhurst/index.htm">Common Knowledge &#151; <i>typeints</i></A></H4>
<p><b>by Steve Dewhurst</b><br>
<i>A scheme for mapping integers to types.</i></p>

<H4><A HREF="cujcexp2102sutter/index.htm">The New C++ &#151; Trip Report, October 2002</A></H4>
<p><b>by Herb Sutter</b><br>
<i>This month, an update on the most recent C++ Standards meeting, and why things are (finally) heating up.</i></p>

<H4><A HREF="cujweb0302briand/index.htm">Book Review: "C++ Templates, The Complete Guide"</A></H4>
<p><b>by Marc Briand</b><br>
<i>Former CUJ Editor-in-Chief Marc Briand reviews David Vandevoorde's and Nicolai M. Josuttis's new guidebook for understanding templates in C++.</i></p>

<H4><A HREF="cujweb0302vandevoorde/index.htm">Using Templates in Practice</A></H4>
<p><b>by Nicolai M. Josuttis and David Vandevoorde</b><br>
<i>This excerpt from Vandevoorde's and Josuttis's "C++ Templates, The Complete Guide" offers a practical look at how to apply templates to everyday programming.</i></p>

<H4><A HREF="cujweb0302chiaia/index.htm">XML-Based Factories and Reusable Components</A></H4>
<p><b>by Gualtiero Chiaia</b><br>
<i>A look at how to use factory objects to extract information from an XML source.</i></p>

</blockquote>
</body>
</html>
