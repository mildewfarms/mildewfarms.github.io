<HTML><HEAD>
<TITLE>June 2002/STL &amp; Generic Programming/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: A typical implementation of bind2nd and binder2nd</A></h4>
<pre>
template&lt;class BinFunc&gt;
class binder2nd : public unary_function&lt;
  BinFunc::first_argument_type,
  BinFunc::result_type
  &gt; 
{
public:
  binder2nd(
    const BinFunc&amp; func,
    const BinFunc::second_argument_type&amp; secondArg
    ) : m_func(func), m_secondArg(secondArg) {}
  
  result_type operator()(const argument_type&amp; first) const
  { return m_func(first, m_secondArg); }

protected:
  BinFunc m_func;
  BinFunc::second_argument_type m_secondArg;
};

template&lt;class BinFunc, class SecondArg&gt; inline
binder2nd&lt;BinFunc&gt; bind2nd(
  const BinFunc&amp; func, 
  const SecondArg&amp; secondArg
  )
{
  return binder2nd&lt;BinFunc&gt;(
    func,
    BinFunc::second_argument_type(secondArg)
    ); 
}
&#151; End of Listing &#151;</pre></body></html>
