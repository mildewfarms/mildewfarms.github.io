<HTML><HEAD>
<TITLE>February 2002/STL &amp; Generic Programming/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6: Prototype factory default policies</A></h4>
<pre>
template&lt;typename T&gt;
class PFPlainOwnedPointers
{
public:
  typedef T* stored_type;
  typedef T* pointer_type;
  typedef T* cloning_result_type;

  static cloning_result_type Clone(pointer_type p)
  { return p-&gt;Clone(); }

  template&lt;typename It&gt;
  static void DestroyProtoTypes(It beg, It end)
  { std::for_each(beg, end, DestroyProtoType()); }

private:
  class DestroyProtoType
  {
  public:
    template&lt;typename Val&gt;
    operator()(Val elem) { delete elem.second; }
  };

};

class PFSingleThreaded
{
public:
  class Lock {
  public:
    Lock(PFSingleThreaded*){}
  };
protected:
  virtual ~PFSingleThreaded() {}    
};
&#151; End of Listing &#151;</pre></body></html>
