<HTML><HEAD>
<TITLE>March 2002 C++ Experts Forum/Object Interconnections/Table 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Table 1: Real-Time CORBA features</A></h4>

<table border=1 width=500>
 <tr>
  <td><b>Design Challenge</b></td>
  <td><b>Example from Application</b></td>
  <td><b>Real-time CORBA Feature</b></td>
 </tr>
 <tr>
  <td>Supporting thread pools effectively</td>
  <td>The base station server must have sufficient threads for all its priority levels</td>
  <td>Use RT CORBA thread pools to preallocate server resources</td>
 </tr>
 <tr>
  <td>Buffering client requests</td>
  <td>The  base station server may need to buffer requests to handle &quot;bursty&quot; client traffic</td>
  <td>Thread pool memory buffering mechanisms</td>
 </tr>
 <tr>
  <td>Prevent exhaustion of threads by low priority requests</td>
  <td>If drones send many low-priority requests to a base station server, it may run out of threads in its thread pool, so that no threads are available to process high-priority requests</td>
  <td>Partition thread pool into subsets, which are called <i>lanes</i>; each lane has a different priority</td>
 </tr>
 <tr>
  <td>Synchronizing operations consistently</td>
  <td>The ORB and application must use the same type of synchronizer to avoid priority inversions </td>
  <td>Use <b>RTCORBA::Mutex</b> and the ORB's mutex factory interface</td>
 </tr>
</table>


</body>

</html>
