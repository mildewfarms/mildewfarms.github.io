<HTML>
<HEAD>
<TITLE>April 2002</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">April 2002<BR>
                Volume 20 Number 4</FONT></H3>
               
<H3><FONT COLOR="#FF0000">TESTING AND DEBUGGING</FONT></H3>

<H4><A HREF="vlascean/vlascean.htm">Debugging Memory Errors with Custom Allocators</A></H4>
<p><b>Cristian Vlasceanu</b><br>
<i>Allocators may be weird, but it's a Good Weird. With a little help from your operating system, they can even find memory access errors.</i></p>

<H4><A HREF="nies/nies.htm">Tracing Exceptions with an Exception Stack</A></H4>
<p><b>Richard Nies</b><br>
<i>Ever wonder what happened to that lost exception? Traceable exceptions to the rescue!</i></p>

<H4><A HREF="leman/leman.htm">An Efficient and Flexible Tracing Technique</A></H4>
<p><b>Dmitri Leman</b><br>
<i>This extensible tracing framework tames the dreaded multithreaded debugging demon.</i></p>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>
<H4><A HREF="karlsson/karlsson.htm">Smart Pointers in Boost</A></H4>
<p><b>Bjorn Karlsson</b><br>
<i>Welcome to Boost, the peerless community of C++ innovators. If you can't find what you need in the Standard C++ library, chances are Boost has it production-ready.</i></p>

<H3><FONT COLOR="#FF0000">BOOK REVIEW</FONT></H3>
<H4><A HREF="sutter/sutter.htm">Modern C++ Design</A></H4>
<p><b>reviewed by Herb Sutter</b><br>
<i>An informative review of a revolutionary book.</i></p>

<H3><FONT COLOR="#FF0000">C/C++ CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="becker/becker.htm">STL &amp; Generic Programming: STL Algorithms</A></H4>
<p><B>Thomas Becker</B><br>
<i>Wait! Don&#146;t write that algorithm! Someone already did. But if you insist, follow this advice.</i></p>

<H4><A HREF="koenig/koenig.htm">C++ Made Easier: Plain Old Data</A></H4>
<p><b>Andrew Koenig &amp; Barbara E. Moo</b><br>
<i>Refresh your memory on why traditional techniques for processing plain old data don't apply to objects.</i></p>

<H4><A HREF="dewhurst/dewhurst.htm">Common Knowledge: Metaprogrammed Adapters</A></H4>
<p><b>Steve Dewhurst</b><br>
<i>A little template metaprogramming goes a very long way. This time it lets you treat multiple sequences as a single, logical sequence. Cool.</i></p>

<H4><A HREF="bootle/bootle.htm">Post-Mortem Debunker: Spurious Precision</A></H4>
<p><b>Stan Kelly-Bootle</b><br>
<i>Caveat Reador: You may question your understanding of numbers after you read this.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>
<H4><A HREF="editor/editor.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="newprod/newprod.htm">New Products</A></H4>
<H4><A HREF="letters/letters.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>
<p>In this web-only component of <I>CUJ</I>, we publish columns by experts involved in the development, standardization, and deployment of C++. The following articles are featured on the <I>CUJ</I> website this month:</p>

<H4><A HREF="../cexp2004/alexandr/alexandr.htm">&#147;Generic&lt;Programming&gt;: Discriminated Unions (I)&#148;</A></H4>
<p><b>by Andrei Alexandrescu</b></p>
<i>Discriminated unions are an important data abstraction, very helpful in database interfaces, efficient parsers, and various other type-safe abstractions. Usually, support for discriminated unions must be present in the language. This column presents a full-blown source-level implementation of discriminated unions in existing C++, an implementation that satisfies most of the requirements that one would normally ask from an innate language feature, syntactic nicety included.</i></p>

<H4><A HREF="../cexp2004/sutter/sutter.htm">&#147;The New C++: The Group of Seven &#151; Extensions under Consideration for the C++ Standard Library&#148;</A></H4>
<p><b>by Herb Sutter</b></p>
<i>In this month&#146;s column, we visit the &#147;Group of Seven.&#148; No, not the Canadian artists, but rather the first group of seven suggested C++ Standard library extensions considered at the most recent standards meeting in October 2001.</i></p>

<H4><A HREF="../cexp2004/austern/austern.htm">&#147;The Standard Librarian: Hash Tables for the Standard Library&#148;</A></H4>
<p><b>by Matt Austern</b></p>
<I>The C++ Standard library is being extended, and the standardization committee is looking for proposals. This column gives you an idea of what a proposal should look like, by presenting a sample proposal on hash tables.</i></p>

<H4><A HREF="../cexp2004/hyslop/hyslop.htm">&#147;Conversations: To Sleep, Perchance&#148;</A></H4>
<p><b>by Jim Hyslop and Herb Sutter</b></p>
<i>Just how many threading and streaming mistakes can arise in one poor little dozen-line function? Quite a few, and that&#146;s not even counting the magic... The effects of sleep deprivation can have an astonishing effect on the clarity of one&#146;s code.</i></p>

</BODY>
</HTML>
