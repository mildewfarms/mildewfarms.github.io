<HTML><HEAD>
<TITLE>April 2002/Tracing Exceptions with an Exception Stack/Listing 2</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 2: A simple usage example</A></h4>
<pre>
void WidgetA::doWork() {
   static const char* METHOD_NAME = "doWork";
   try {
      ...
      if (&lt;invalid data condition&gt;) {
         throw InvalidDataExcep (__FILE__, 
                                 METHOD_NAME, 
                                 __LINE__, 
                                 &lt;err desc text&gt;);
      }
      ...
   }
   catch (&lt;third party exception&gt;) {
      throw &lt;equivalent CommonExcep derived exception&gt;;
   }
   catch (InvalidDataExcep&amp; anExcep) {
      throw;
   }
   catch(...) {
      &lt;either throw exception, or throw UnknownExcep as follows:&gt;
      throw UnknownExcep(__FILE__, METHOD_NAME, __LINE__);
   }
}

void WidgetB::startWork() {
   static const char* METHOD_NAME = "startWork";
   try {
      ...
      WidgetA a_widget;
      a_widget.doWork();
      ...
   }
   catch (&lt;third party exception&gt;) {
      throw &lt;equivalent CommonExcep derived exception&gt;;
   }
   catch (CommonExcep&amp; anExcep) {
      anExcep.push(__FILE__,  METHOD_NAME, __LINE__);
      throw;
   }
   catch(...) {
      &lt;either throw exception, or throw UnknownExcep as follows:&gt;
      throw (UnknownExcep(__FILE__, METHOD_NAME, __LINE__));
   }
}

main {
   try {
      ...
      WidgetB b_widget;
      b_widget.startWork();
      ...
   }
   catch (CommonExcep&amp; anExcep) {
      ...
      &lt;log exception trace information&gt;
      ...
   }
}
&#151; End of Listing &#151;</pre></body></html>
