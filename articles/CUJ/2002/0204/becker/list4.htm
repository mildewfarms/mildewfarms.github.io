<HTML><HEAD>
<TITLE>April 2002/STL &amp; Generic Programming/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4: A generic median algorithm for sorted ranges</A></h4>
<pre>
template&lt;typename _It&gt;
double median(_It beg, _It end)
{
  typedef std::iterator_traits&lt;_It&gt;::difference_type difftype;

  if( beg == end )
    return 0.0;

  difftype diffLen = std::distance(beg, end);
  int nLen = static_cast&lt;int&gt;(diffLen);
  int nHalfLen = nLen / 2;
  difftype diffHalfLen = static_cast&lt;difftype&gt;(nHalfLen);
  difftype diffOne = static_cast&lt;difftype&gt;(1);
  
  _It mid = beg;
  if( 1 == nLen % 2 )
  {
    std::advance(mid, diffHalfLen);
    return *mid;
  }
  else
  {
    std::advance(mid, diffHalfLen - diffOne);
    _It next = mid;
    ++next;
    return 
      (static_cast&lt;double&gt;(*mid) + static_cast&lt;double&gt;(*next)) / 2.0;
  }
}
&#151; End of Listing &#151;</pre></body></html>
