<HTML><HEAD>
<TITLE>March 2002/Binary Code Reuse in a Linux Environment/Listing 5</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 5: ExtendedCommands.cpp</A></h4>
<pre>
#include &lt;iostream&gt;  
#include &lt;string&gt;      
#include "ExtendedCommands.h"

namespace out_of_band_example
{

ExtendedCommands::ExtendedCommands(int argc, char* argv[])
  : tools::CommandLine( argc, argv )
{ }

ExtendedCommands::~ExtendedCommands()
{ }

bool
ExtendedCommands::GetOption( const std::string&amp; optionName,
       const std::string&amp; alternateName,
       std::string&amp; optionValue,
       const std::string&amp;  defaultValue ) const
{
  bool found = false;

  if( Exists(optionName) )
  {  
    optionValue = GetByName( optionName );
    found = true;
  }
  else if( alternateName.length() &gt; 0  &amp;&amp; Exists(alternateName) )
  {  
    optionValue = GetByName( alternateName );
    found = true;
  }
  else if( defaultValue.length() &gt; 0)
  {  
    optionValue = defaultValue;
    found = true;  // "Found" the default value.
  }
  return found;
}

std::string
ExtendedCommands::SynthesizeOptionString
                    (  const std::string&amp; optionName,
                       const std::string&amp; alternateName,
                       const std::string&amp; defaultValue ) const
{
  std::string optionValue;
  std::string result;

  if( GetOption( optionName, alternateName, optionValue,
                 defaultValue) )
  {  
    result =  std::string(" -") + optionName + " ";
    if( optionValue.length() &gt; 0 )
    {
      result += "\"" + optionValue + "\"";
    }
  }
  return result;
}

} // end of the out_of_band_example namespace

&#151; End of Listing &#151;</pre></body></html>
