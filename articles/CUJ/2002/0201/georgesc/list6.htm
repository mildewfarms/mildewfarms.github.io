<HTML><HEAD>
<TITLE>January 2002/Code Generation Templates Using XML and XSL/Listing 6</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 6: CppClass.xsl &#151; XSL code generating template for a C++ class</A></h4>
<pre>
&lt;xsl:stylesheet version="1.0" 
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform" &gt;
&lt;xsl:output method="text"/&gt;

&lt;xsl:include href="CppMethod.xsl"/&gt;
&lt;xsl:include href="CppProperty.xsl"/&gt;

&lt;!-- ========================================= --&gt;
&lt;!-- Template: C++ class                    == --&gt;
&lt;!-- ========================================= --&gt;
&lt;xsl:template match="class"&gt;
&lt;!-- file header --&gt;
&lt;xsl:text&gt;// file: &lt;/xsl:text&gt;
&lt;xsl:value-of select="@name"/&gt;&lt;xsl:text&gt;.h&lt;/xsl:text&gt;
&lt;xsl:text&gt;
&lt;!-- multiple includes protection --&gt;
#ifndef _&lt;/xsl:text&gt;&lt;xsl:value-of select="@name"/&gt;&lt;xsl:text&gt;_H_
#define _&lt;/xsl:text&gt;&lt;xsl:value-of select="@name"/&gt;&lt;xsl:text&gt;_H_
&lt;/xsl:text&gt;
&lt;!-- dependencies --&gt;
&lt;xsl:text&gt;
// Dependencies
&lt;/xsl:text&gt;
&lt;xsl:for-each select="dependencies/dependency"&gt;
    &lt;xsl:apply-templates select="."/&gt;&lt;/xsl:for-each&gt;
&lt;xsl:text&gt;
// Uses
&lt;/xsl:text&gt;
&lt;xsl:for-each select="uses/use"&gt;
    &lt;xsl:apply-templates select="."/&gt;&lt;/xsl:for-each&gt;
&lt;!-- class documentation --&gt;
&lt;xsl:text&gt;
&lt;/xsl:text&gt;
&lt;xsl:if test="boolean(normalize-space(./info))"&gt;
    &lt;xsl:text&gt;/** &lt;/xsl:text&gt;&lt;xsl:value-of select="./info"/&gt;
    &lt;xsl:text&gt;.
&lt;/xsl:text&gt;
    &lt;xsl:text&gt; */
&lt;/xsl:text&gt;&lt;/xsl:if&gt;
&lt;!-- class declaration --&gt;
&lt;xsl:text&gt;class &lt;/xsl:text&gt;&lt;xsl:value-of select="@name"/&gt;
&lt;!-- inheritance --&gt;
&lt;xsl:if test="not(count(parents/*)=0)"&gt;  
    &lt;xsl:text&gt; : &lt;/xsl:text&gt;&lt;/xsl:if&gt;
&lt;xsl:for-each select="parents/parent"&gt;
    &lt;xsl:apply-templates select="."/&gt;
    &lt;xsl:if test="not(position()=last())"&gt;
        &lt;xsl:text&gt;, &lt;/xsl:text&gt;&lt;/xsl:if&gt;&lt;/xsl:for-each&gt;
&lt;!-- class body --&gt;
&lt;xsl:text&gt;
{&lt;/xsl:text&gt;
&lt;!-- methods --&gt;
&lt;xsl:if test="not(count(methods/*)=0)"&gt;&lt;xsl:text&gt;
// Methods
&lt;/xsl:text&gt;&lt;/xsl:if&gt;
&lt;xsl:for-each select="methods/method"&gt;
    &lt;xsl:apply-templates select="."/&gt;&lt;/xsl:for-each&gt;
&lt;!-- properties --&gt;
&lt;xsl:if test="not(count(properties/*)=0)"&gt;&lt;xsl:text&gt;
// Properties
&lt;/xsl:text&gt;&lt;/xsl:if&gt;
&lt;xsl:for-each select="properties/property"&gt;
    &lt;xsl:apply-templates select="."/&gt;&lt;/xsl:for-each&gt;
&lt;xsl:text&gt;
};// class: &lt;/xsl:text&gt;&lt;xsl:value-of select="@name"/&gt;
&lt;xsl:text&gt;
&lt;!-- multiple includes protection --&gt;
#endif // _&lt;/xsl:text&gt;&lt;xsl:value-of select="@name"/&gt;
&lt;xsl:text&gt;_H_&lt;/xsl:text&gt;
&lt;/xsl:template&gt; 

&lt;!-- ========================================= --&gt;
&lt;!-- Template: C++ dependency               == --&gt;
&lt;!-- ========================================= --&gt;
&lt;xsl:template match="dependency"&gt;
&lt;xsl:text&gt;#include &amp;quot;&lt;/xsl:text&gt;
&lt;xsl:value-of select="."/&gt;&lt;xsl:text&gt;.h&amp;quot;&lt;/xsl:text&gt;
&lt;/xsl:template&gt; 

&lt;!-- ========================================= --&gt;
&lt;!-- Template: C++ use                      == --&gt;
&lt;!-- ========================================= --&gt;
&lt;xsl:template match="use"&gt;
&lt;xsl:text&gt;#include &amp;lt;&lt;/xsl:text&gt;
&lt;xsl:value-of select="."/&gt;&lt;xsl:text&gt;&amp;gt;
&lt;/xsl:text&gt;
&lt;xsl:if test="(normalize-space(.)='string')"&gt;
    &lt;xsl:text&gt;using namespace std;
    &lt;/xsl:text&gt;&lt;/xsl:if&gt;
&lt;/xsl:template&gt; 

&lt;!-- ========================================= --&gt;
&lt;!-- Template: C++ parent                   == --&gt;
&lt;!-- ========================================= --&gt;
&lt;xsl:template match="parent"&gt;
&lt;xsl:value-of select="@visibility"/&gt;
&lt;xsl:text&gt; &lt;/xsl:text&gt;&lt;xsl:value-of select="@name"/&gt;
&lt;/xsl:template&gt; 

&lt;/xsl:stylesheet&gt; 
&#151; End of Listing &#151;</pre></body></html>
