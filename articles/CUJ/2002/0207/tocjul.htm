<HTML>
<HEAD>
<TITLE>July 2002</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">July 2002<BR>
                Volume 20 Number 7</FONT></H3>
               
<H3><FONT COLOR="#FF0000">SOFTWARE TOOLS</FONT></H3>

<H4><A HREF="bergin/bergin.htm">Identifying and Managing Cyclic Physical Dependencies</A></H4>
<p><b>Thomas Bergin</b><br>
<i>If you're not careful, a complex project can set you spinning in circles. This tool can help set your project straight.</i></p>

<H4><A HREF="trudell/trudell.htm">The Application Watchman Class</A></H4>
<p><b>Bill Trudell</b><br>
<i>A convenient First Line of Defense against memory misuse.</i></p>

<H4><A HREF="brand/brand.htm">XParam &#151; A General Purpose Serialization Framework for C++</A></H4>
<p><b>Michael Brand, Ronnie Maor, and Sasha Gontmakher</b><br>
<i>From command-line processing to object serialization &#151; this class does it all.</i></p>

<H3><FONT COLOR="#FF0000">FEATURE</FONT></H3>

<H4><A HREF="stroustr/stroustr.htm">C and C++: Siblings</A></h4>
<p><b>Bjarne Stroustrup</b><br>
<i>We're at a crossroads for compatibility between C and C++. Can siblings go their separate ways and still remain on speaking terms? In this first of three parts, Bjarne provides context for the discussion.</i></p>

<H3><FONT COLOR="#FF0000">CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="meyers/meyers.htm">The New C &#151; Inline Functions</A></H4>
<p><b>Randy Meyers</b><br>
<i>As if C weren&#146;t fast enough already, C99 supports inline functions. Faster code, anyone?</i></p>

<H4><A HREF="schmidt/schmidt.htm">Uncaught Exceptions &#151; The Spiral Dance</A></H4>
<p><b>Bobby Schmidt</b><br>
<i>A New Hope: C++Ox is coming, and the Empire seems to be listening.</i></p>

<H4><A HREF="sutter/sutter.htm">Sutter&#146;s Mill &#151; A Pragmatic Look at Exception Specifications</A></H4>
<p><b>Herb Sutter</b><br>
<i>The C++ feature that wasn&#146;t.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>
<H4><A HREF="editor/editor.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="newprod/newprod.htm">New Products</A></H4>
<H4><A HREF="letters/letters.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<H4><A HREF="../cexp2007/hyslop/hyslop.htm">Conversations: Getting to the Point</A></H4>
<p><b>Jim Hyslop and Herb Sutter</b><br>
<i>While the standard <b>auto_ptr</b> provides a safer alternative to raw pointers, it has its limitations and some surprising behavior. The Guru helps out by giving the narrator a boost &#151; the library, that is. The Boost library has five smart pointers that provide a rich array of useful behavior.</i></p>

<H4><A HREF="../cexp2007/reeves/reeves.htm">The (B)Leading Edge: Building an Indexed File Using XDRStream, Part 3</A></H4>
<p><b>Jack W. Reeves</b><br>
<i>Jack dives into the <b>BtreeIndex</b> class implementation. He walks through part of the code and discusses design details and trade-offs. He also shows how to use some of the more obscure functions within the IOStreams library, as well as some cool, but often overlooked, STL functions.</i></p>

<H4><A HREF="../cexp2007/vinoski/vinoski.htm">Object Interconnections: Dynamic CORBA, Part 1: The Dynamic Invocation Interface</A></H4>
<p><b>Douglas C. Schmidt and Steve Vinoski</b><br>
<i>An important and growing class of applications requires the flexibility provided by Dynamic CORBA features. This column covers the basics of the CORBA DII, which is the client-side interface used for dynamic CORBA applications.</i></p>

</body>
</html>


