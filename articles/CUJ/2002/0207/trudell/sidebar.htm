<html><HEAD>
<TITLE>July 2002/The Application Watchman Class/Sidebar</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<H3 align=center><FONT COLOR="#000080">Heap State Reporting Functions</FONT></H3>

<HR>

<BLOCKQUOTE>
<p>Several new functions report the contents of the debug heap at a given moment. To capture a summary snapshot of the state of the heap at a given time, use the <B>_CrtMemState</B> structure defined in <B>CRTDBG.H</B>:</p>

<pre>
typedef struct _CrtMemState
{
// Pointer to the most recently allocated block:
   struct _CrtMemBlockHeader * pBlockHeader;  
// A counter for each of the 5 types of block:
   long lCounts[_MAX_BLOCKS];  
// Total bytes allocated in each block type:
   long lSizes[_MAX_BLOCKS];   
// The most bytes allocated at a time up to now:
   long lHighWaterCount;       
// The total bytes allocated at present:
   long lTotalCount;           
} _CrtMemState;
</pre>

<p>This structure saves a pointer to the first (most recently allocated) block in the debug heap&#146;s linked list. Then, in two arrays, it records how many of each type of memory block (<B>_NORMAL_BLOCK</B>, <B>_CLIENT_BLOCK</B>, <B>_FREE_BLOCK</B>, and so forth) there are in the list, and the number of bytes allocated in each type of block. Finally, it records the highest number of bytes allocated in the heap as a whole up to that point, and the number of bytes currently allocated.</p>
<p><a href="tab1.htm">Table 1</a> shows the heap state reporting functions, which report the state and contents of the heap and use the information to help detect memory leaks and other problems.</p>

</blockquote></body></html>
