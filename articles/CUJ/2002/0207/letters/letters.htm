<HTML>   
     <HEAD>
<TITLE>July 2002/We Have Mail</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
<H2><A HREF="../tocjul.htm"></A><FONT COLOR="#FF0000">   Departments</FONT></H2>

<HR>

<H2 ALIGN="center"><FONT COLOR="#800000">We Have Mail</FONT></H2>

<HR>
<BLOCKQUOTE>
<p>Letters to the editor may be sent via email to <B>cujed@cmp.com</B>, or via the postal service to Letters to the Editor, C/C++ Users Journal, 1601 W. 23rd St., Ste 200, Lawrence, KS 66046-2700.</p>

<hr><p>Correction: In the June 2002 issue of <I>CUJ</I>, Michael Collison's email address was not included in his article "Retargeting the GNU C Compiler." The author may be reached at <B>collison@isisinc.net</B>. &#151; ap</p>
<hr><p>
<B>[Editor&#146;s Note: my April &#147;Editor&#146;s Forum&#148; on QuirkSort drew many letters, much more interesting than what I wrote. Here are a few; in some cases followed by the authors&#146; response when they found out it was an April Fool&#146;s joke. </B>&#151;<B>cda]</B></p>
<p>Mr. Allison,</p>
<p>Just yesterday, I received and performed my standard ritual with <I>CUJ</I>. I get it in the mail, flip to the table of contents to see if any articles grab my interest, make a mental note of them, and then flip the page and read the editorial. I have done this for the 5+ years that I have been reading <I>CUJ,</I> and I always love the candor I find in the editorials. By my recollection, you have been the author of this editorial freeform for almost a year now. (Congratulations, by the way.) Anyway, I have never before been motivated to write based on any editorial, but yours from this month really caught my interest!</p>
<p>I did quite a bit of work modifying the Graham&#146;s Algorithm of the QuickSort back in college in an attempt to solve the Euclidean TSP (Traveling Salesperson Problem). I had some mild success solving special case sets of points in polynomial time, more specifically, those occurring on a convex hull. Without rambling on too much longer, the reason I had any success at all was due to the way in which the algorithm itself operated over the set of values. The result of the QuirkSort you posted astonished me and, more over, put my curiosity into overdrive to understand the actual function behind the algorithm. I wonder if it is applicable to any similar degree. If you could provide me with any links or references to that algorithm I would greatly appreciate it. If you are at all interested in my results, I&#146;d be happy to share them with you, but I understand computational geometry seems to be a subject that is dry even to most software engineers. I guess I&#146;ll always be a lowly computer scientist at heart. And long live the algorithm!! :)</p>
<p>Thanks for the work you have done on <I>CUJ</I> over the years. It is a wonderful journal and a fine example of the way that arcane knowledge can be injected into a digestible medium for useful consumption.</p>
<p>Best Regards,</p>
<p>Ross Barker</p>

<p><I>Please don&#146;t be offended when I tell you that QuirkSort was an April Fool&#146;s joke! But I would be happy to look at any of your work, if you can wait until summer to expect a response. (I&#146;m quite swamped during the school year.) Very nice to hear from you.</I></p>
<p>Ahh...Touch&eacute;!!!</p>
<p>With it still being March, I never gave any consideration to the fact that I was reading the April issue. Well placed! Too bad those values aren&#146;t real though. What a great example of how expectation can impede upon scientific rigor!</p>
<p>I truly do enjoy your editorials. Keep up the good work, and I&#146;ll have to remember to read each one a bit more cautiously in the future.</p>
<p>Best Regards, </p>
Ross Barker</p>

<hr><p>Chuck,</p>
<p>Shame on you for tantalizing your readers about the QuirkSort but leaving us without any place for further info. A mental image of large slobbering dogs with studded collars looking a piece of steak comes to mind.</p>
<p>Could you tell me where you ran across it?</p>
<p>Clinton James</p>

<hr><p>Chuck,</p>
<p>Any chance you could give out a hint on where to find this new sorting algorithm mentioned in the April 2002 <I>CUJ</I>? There was not enough room on the page to explain it, but I&#146;d have to say that the number of comparisons is so significant that you should at least point us to the information! Or is this one of those April things? If it is, check out <I>Model Railroader</I> for a far superior April fools joke: modeling old railroad roadbed that&#146;s been turned into bike paths.</p>
<p>Dave Rector</p>

<hr><p>Chuck,</p>
<p>I read your editorial in <I>CUJ</I> where you mentioned the QuirkSort routine you had come across. My interest was piqued by the short description and the results that you described. I was wondering if you could share your source where you found the description of that algorithm. I would very much appreciate it.</p>
<p>Thanks,</p>
<p>John Pelly</p>

<p><I>I&#146;m afraid that was an April Fool&#146;s joke. Sorry to disappoint you! </I>&#151;<I>cda</I></p>

<p>That&#146;s cold. Real cold. =)</p>

<hr><p>Hi Chuck Allison,</p>
<p>Can you please give me a reference to QuirkSort? I could not find many references to it. Any code examples?</p>
<p>Thanks.</p>
<p>Regards, </p>
<p>Sourabh Satish</p>

<p><I>Hello. I&#146;m afraid that QuirkSort was something I made up as an April Fool&#146;s joke. Sorry!</I></p>

<p>But to your surprise there is something called quirksort:</p>
<p>&lt;www.cs.nyu.edu/~yap/classes/basic/01s/hw/midterm/mids-01.ps&gt;.</p>
<p>Sourabh Satish</p>

<hr><p>Chuck,</p>
<p>I suppose a quirky sort of function that would give a result of 123,456,789 would be the <B>first_of_april_sort</B>? :)</p>
<p>Jay Kint</p>

<hr><p>Chuck,</p>
<p>Andrew Wiles cannot do it a second time! So please post the code to QuirkSort ASAP.</p>
<p>Stephen &#147;Fermat&#148; Muires </p>

<p><I>Andrew Wiles solved Fermat&#146;s Last Theorem in 1993. &#151; cda</I></p>

<hr><p>Dear Sir,</p>
<p>I received today my copy of the April 2002 issue of the <I>CUJ</I>. I find the journal very interesting and also very useful in my programming work. I read your editor&#146;s forum with great interest. In particular, I was quite amazed by the performance of the sorting algorithm that you named QuirkSort. Is it possible for you to indicate where I can find more information about that algorithm?</p>
<p>Thank you for you collaboration.</p>
<p>Best regards </p>
<p>Rene Girard</p>
<p><I>I&#146;m sorry, but that was an &#147;April Fool&#146;s Joke.&#148;</I></p>

<p>You really got me there!! That was an excellent &#147;April Fool&#146;s Joke.&#148; You made me laugh out loud.</p>
<p>I would like to mention that I am a subscriber to <I>CUJ</I>. I find the journal to be the best of its kind on the market. I am really learning a lot from it. Many thanks for all the excellent work done by you and your colleagues at <I>CUJ</I>.</p>
<p>Best regards </p>
<p>Rene Girard</p>

<hr><p>Chuck,</p>
<p>I just read about the QuirkSort in April&#146;s <I>CUJ</I>. I am very intrigued by this new sorting algorithm. Can you please provide pointers to where I can find more information about it?</p>
<p>Thanks</p>
<p>Bernhard Tschirren</p>

<p><i>Don&#146;t I feel like an idiot now :)</i></p>
<hr><p><B>[Editor&#146;s Note: and the following letter from Astute Reader Mark Wilson was the first to come in. </B>&#151;<B>cda]</B></p>
<p>Sir,</p>
<p>I regret to inform you that my mentor, the great Dr. April I. Fermat, discovered your algorithm years ago, using an abacus and an hourglass. </p>
<p>Mark Wilson</p>

<hr><p>Dear Mr. Allison,</p>
<p>Regarding your reply to Ashley Williams in the April issue of <I>CUJ</I>, the compiler I use on a daily basis, gcc, does indeed issue warnings for initializer lists which are reordered to match the order of class members. It seems to do a pretty good job on warnings, overall.</p>
<p>Christopher Creutzig</p>

<p><I>That&#146;s very good to know. Thanks for writing. </I>&#151;<I>cda</I></p>
<hr><p><I>CUJ</I>,</p>
<p>The C++ Experts Forum (&lt;www.cuj.com/experts&gt;, kept by <I>CUJ</I>, is a precious and valuable work &#151; an indispensable initiative from the experts in C++ that will be certainly useful to those who teach at schools, for independent developers and consultants, and for all the great C++ community around the world. Let&#146;s keep C++ active and let people take notice from an initiative like this one!</p>
<p>Fabio Gaviao</p>

<p><I>We couldn&#146;t agree more! Thanks, Fabio!&#151; cda </I></p></blockquote></body></html>
