<HTML>
<HEAD>
<TITLE>May 2002</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">May 2002<BR>
                Volume 20 Number 5</FONT></H3>
               
<H3><FONT COLOR="#FF0000">MULTITHREADING</FONT></H3>

<H4><A HREF="kempf/kempf.htm">The Boost.Threads Library</A></H4>
<p><b>Bill Kempf</b><br>
<i>Standard C++ threads are imminent. </I>CUJ<I> predicts they will derive from the Boost.Threads library, explored here by the eminent author.</i></p>

<H4><A HREF="chaudhry/chaudhry.htm">A Per-Thread Singleton Class</A></H4>
<p><b>Puneesh Chaudhry</b><br>
<i>A refreshing look at an old pattern.</i></p>

<H4><A HREF="tennberg/tennberg.htm">Refactoring Global Objects in Multithreaded Applications</A></H4>
<p><b>Patrick Tennberg</b><br>
<i>Although you may get fired for introducing any new global variables, it's too much work to rewrite old code to remove them. So make them thread-safe and stop worrying.</i></p>

<H3><FONT COLOR="#FF0000">C/C++ TIPS</FONT></H3>
<H4><A HREF="abramson/abramson.htm">C/C++ Tip #8: Performing Multiple Read/Write Locks</A></H4>
<p><b>Tomer Abramson</b><br>
<i>How to make multiple locks an atomic operation in Win32.</i></p>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="pinto/pinto.htm">Programming in GNOME with C++</A></H4>
<p><b>Paulo Pinto</b><br>
<i>A C++ binding for GNOME makes Linux GUIs easy work.</i></p>

<H3><FONT COLOR="#FF0000">C/C++ CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="meyers/meyers.htm">The New C: bool, Advice to C and C++ Programmers</A></H4>
<p><b>Randy Meyers</b><br>
<i>True or False: The type <B>bool</B> behaves identically in C99 and C++. True or False: Your C89 <B>bool</B> hackery will survive unscathed under C99. Read and find out.</i></p>

<H4><A HREF="sutter/sutter.htm">Sutter&#146;s Mill: Toward a Standard C++0x Library, Part 2: Namespaces and Library Versioning</A></H4>
<p><b>Herb Sutter</b><br>
<i>The migrating habits of the Standard C++ library: a work in progress.</i></p>

<H4><A HREF="schmidt/schmidt.htm">Uncaught Exceptions: Don&#146;t Read This Title!</A></H4>
<p><b>Bobby Schmidt</b><br>
<i>Don&#146;t read this blurb! Read this column instead. It&#146;s about lifetime, exceptions, and other anomalies. Incredilorious!</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="editor/editor.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="newprod/newprod.htm">New Products</A></H4>
<H4><A HREF="letters/letters.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<p>In this web-only component of <I>CUJ</I>, we publish columns by experts involved in the development, standardization, and deployment of C++. The following articles are featured on the <I>CUJ</I> website this month:</p>

<H4><A HREF="../cexp2005/hyslop/hyslop.htm">&#147;Conversations: Making a Real Hash of Things&#148;</A></H4>
<p><b>by Jim Hyslop and Herb Sutter</b><br>
<I>This month, Bob gets an up-close and personal look at tree-based versus hash-based containers.</I></p>

<H4><A HREF="../cexp2005/vinoski/vinoski.htm">&#147;Object Interconnections: Real-time CORBA, Part 4: Protocol Selection and Explicit Binding&#148;</A></H4>
<p><b>by Douglas C. Schmidt and Steve Vinoski</b><br>
<I>Strict control over the association of operations, threads, and networking resources is essential for many DRE applications. This column explores Real-time CORBA features that allow DRE applications to select protocol properties and to explicitly bind clients to server objects using pre-allocated connections, priority bands, and private connections.</I></p>

<H4><A HREF="../cexp2005/reeves/reeves.htm">&#147;The (B)Leading Edge: Musings on the IndexedFile Design&#148;</A></H4>
<p><b>by Jack W. Reeves</b><br>
<I>This month Jack continues to work on the <B>IndexedFile</B> class, but steps back from the actual code to look at a number of design issues: high-level, mid-level, and low-level. In the end, he pulls out one of his favorite soapboxes and pontificates (briefly) about the art of software design.</i></p>

</BODY>
</HTML>
