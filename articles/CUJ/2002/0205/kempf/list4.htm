<HTML><HEAD>
<TITLE>May 2002/The Boost.Threads Library/Listing 4</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 4: The boost::condition class</A></h4>
<pre>
#include &lt;boost/thread/thread.hpp&gt;
#include &lt;boost/thread/mutex.hpp&gt;
#include &lt;boost/thread/condition.hpp&gt;
#include &lt;iostream&gt;

const int BUF_SIZE = 10;
const int ITERS = 100;

boost::mutex io_mutex;

class buffer
{
public:
  typedef boost::mutex::scoped_lock
    scoped_lock;
    
  buffer()
    : p(0), c(0), full(0)
  {
  }
    
  void put(int m)
  {
    scoped_lock lock(mutex);
    if (full == BUF_SIZE)
    {
      {
        boost::mutex::scoped_lock
          lock(io_mutex);
        std::cout &lt;&lt;
          "Buffer is full. Waiting..."
          &lt;&lt; std::endl;
      }
      while (full == BUF_SIZE)
        cond.wait(lock);
    }
    buf[p] = m;
    p = (p+1) % BUF_SIZE;
    ++full;
    cond.notify_one();
  }

  int get()
  {
    scoped_lock lk(mutex);
    if (full == 0)
    {
      {
        boost::mutex::scoped_lock
          lock(io_mutex);
        std::cout &lt;&lt;
          "Buffer is empty. Waiting..."
          &lt;&lt; std::endl;
      }
      while (full == 0)
        cond.wait(lk);
    }
    int i = buf[c];
    c = (c+1) % BUF_SIZE;
    --full;
    cond.notify_one();
    return i;
  }
    
private:
  boost::mutex mutex;
  boost::condition cond;
  unsigned int p, c, full;
  int buf[BUF_SIZE];
};

buffer buf;

void writer()
{
  for (int n = 0; n &lt; ITERS; ++n)
  {
    {
      boost::mutex::scoped_lock
        lock(io_mutex);
      std::cout &lt;&lt; "sending: "
        &lt;&lt; n &lt;&lt; std::endl;
    }
    buf.put(n);
  }
}

void reader()
{
  for (int x = 0; x &lt; ITERS; ++x)
  {
    int n = buf.get();
    {
      boost::mutex::scoped_lock
        lock(io_mutex);
      std::cout &lt;&lt; "received: "
        &lt;&lt; n &lt;&lt; std::endl;
    }
  }
}
    
int main(int argc, char* argv[])
{
  boost::thread thrd1(&amp;reader);
  boost::thread thrd2(&amp;writer);
  thrd1.join();
  thrd2.join();
  return 0;
}
&#151; End of Listing &#151;</pre></body></html>
