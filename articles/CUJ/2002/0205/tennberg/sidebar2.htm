<html><HEAD>
<TITLE>May 2002/Refactoring Global Objects in Multithreaded Applications/Sidebar</TITLE></HEAD>
<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<H3 align=center><FONT COLOR="#000080">Static vs. Dynamic TLS</FONT></H3>

<HR>

<BLOCKQUOTE>
<p>The Win32 platform provides TLS in two different flavors: dynamic and static. The technique presented in this article uses dynamic TLS. Static TLS also associates data with a thread, but it is much easier to use. The compiler provides a modifier <B>declspec(thread)</B> that automatically allows you to associate the data with a TLS slot:</p>
<pre>
__declspec(thread) int n;
</pre>
<p>The above statement will create an instance of the integer <B>n</B> for every thread created by the process. Static TLS is not to be used by DLLs that are loaded in run time (e.g., with <B>LoadLibrary</B>) because the operating system does not handle that scenario (see [3] for details).</p>
</blockquote></body></html>
