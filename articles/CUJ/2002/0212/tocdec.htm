<HTML>
<HEAD>
<TITLE>December 2002</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">December 2002<BR>
                Volume 20 Number 12</FONT></H3>
               
<H3><FONT COLOR="#FF0000">Internet &amp; Network programming</FONT></H3>

<H4><A HREF="kientzle/kientzle.htm">Fast UDP-Based Network Storage</A></H4>
<p><b>Tim Kientzle</b><br>
<i>If network performance is critical, you can bypass that database of yours with this clever approach.</i></p>

<H4><A HREF="rooney/rooney.htm">A Templated Library for Fast Multiplexing</A></H4>
<p><b>Christopher Rooney</b><br>
<i>If the number of your network connections hits the stratosphere, then you need this.</i></p>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="bushell/bushell.htm">Adaptable-Size Classes</A></H4>
<p><b>Julian Bushell</b><br>
<i>Save space by letting the C++ template facility generate classes with only the data you need.</i></p>

<H4><A HREF="wilson/wilson.htm">C/C++ Tip #10: Efficient Integer to String Conversions</A></H4>
<p><b>Matthew Wilson</b><br>
<i>The fastest <B>to_string</B> in town.</i></p>

<H4><A HREF="laird/laird.htm">How to Use Tcl and C Together</A></H4>
<p><b>Cameron Laird</b><br>
<i>Mixing Tcl and C/C++ just got a whole lot easier.</i></p>

<H4><A HREF="virzi/virzi.htm">C/C++ Tip #11: Overwrite Iterator</A></H4>
<p><b>Ray Virzi</b><br>
<i>A very handy iterator that saves heap operations.</i></p>

<H3><FONT COLOR="#FF0000">CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="dewhurst/dewhurst.htm">Common Knowledge &#151; A Bitwise typeof Operator, Part 3</A></H4>
<p><b>Steve Dewhurst</b><br>
<i>As Steve finishes his singular implementation of a <B>typeof</B> operator, you&#146;ll see why the C++ language needs this feature. It&#146;s too hard to get right!</i></p>

<H4><A HREF="koenig/koenig.htm">C++ Made Easier &#151; Handles and Exception Safety, Part 3: Non-Intrusive Reference Counting</A></H4>
<p><b>Andrew Koenig &amp; Barbara E. Moo</b><br> 
<i>More wisdom on using abstraction to achieve exception-safe designs.</i></p>

<H4><A HREF="becker/becker.htm">STL &amp; Generic Programming &#151; Typelists</A></H4>
<p><b>Thomas Becker</b><br>
<i>Variable-length template argument lists are a cinch with this fundamental metaprogramming technique.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="editor/editor.htm">Editor&#146;s Forum</A></H4>
<H4><A HREF="newprod/newprod.htm">New Products</A></H4>
<H4><A HREF="letters/letters.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<H4><A HREF="../cexp2012/alexandr/alexandr.htm">&#147;Generic&lt;Programming&gt;: Efficient Generic Sorting and Searching in C++ (II) </B>&#151;<B> Sorting through Sorts of Sort Algorithms (Well, Sort Of)&#148;</A></H4>
<p><b>by Andrei Alexandrescu</b><br>
<i>It&#146;s not everyday that you get to read about randomized algorithms and loop unrolling through template recursion in the same article. The result is a cool generic sorting function, taken from the legendary YASLI.</i></p>

<H4><A HREF="../cexp2012/hyslop/hyslop.htm">&#147;Conversations: It&#146;s an Object-ful Lifetime&#148;</A></H4>
<p><b>by Jim Hyslop </b><br>
<i>It is possible to bind a temporary object to a non-constant reference, at least indirectly. As with all unusual techniques (sometimes pronounced &#147;hacks&#148;), you must pay close attention. In this case, object lifetimes play a significant role.</i></p>

<H4><A HREF="../cexp2012/sutter/sutter.htm">&#147;The New C++: Typedef Templates&#148;</A></H4>
<p><b>by Herb Sutter</b><br>
<i>Here&#146;s a detailed look at the <B>typedef</B> template proposal for the next C++ Standard.</i></p>

<H4><A HREF="../cexp2012/sutter2/sutter2.htm">&#147;Unmanaged Pointers in C++: Parameter Evaluation, auto_ptr, and Exception Safety&#148;</A></h4>
<p><b>by Herb Sutter</b><br>
<i>An excerpt from his book </i>More Exceptional C++<i>.</i></p>
</blockquote>
</body>
</html>
