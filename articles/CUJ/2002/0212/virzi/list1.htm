<HTML><HEAD>
<TITLE>December 2002/C/C++ Tip #11: Overwrite Iterator/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1: The overwrite iterator class</A></h4>
<pre>
#include &lt;iterator&gt;

template&lt;class Cont&gt;
    class overwrite_iterator
        : public std::iterator&lt;std::output_iterator_tag, void, void&gt; {
public:
    typedef Cont container_type;
    typedef Cont::value_type value_type;
    explicit overwrite_iterator(Cont&amp; x)
        : cont(x), iter(x.begin())
    {}
    overwrite_iterator(Cont&amp; x, Cont::iterator it)
        : cont(x), iter(it)
    {}
    overwrite_iterator&amp; operator=(const Cont::value_type&amp; val)
    {
        iter == cont.end() ? cont.push_back(val) 
                                 : (*iter = val, ++iter);
        return *this;
    }
    overwrite_iterator&amp; operator*()
    {
        return *this;
    }
    overwrite_iterator&amp; operator++()
    {
        return *this;
    }
    overwrite_iterator operator++(int)
    {
        return *this;
    }
    operator Cont::iterator()
    {
        return iter;
    }
protected:
    Cont&amp; cont;
    Cont::iterator iter;
    };
&#151; End of Listing &#151;</pre></body></html>
