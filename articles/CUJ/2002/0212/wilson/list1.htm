<HTML><HEAD>
<TITLE>December 2002/C/C++ Tip #10: Efficient Integer to String Conversions/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1: Unsigned integer conversion</A></h4>
<pre>
/* /////////////////////////////////////////////////////////////
 *
 * ...
 *
 * Extract from stlsoft_integer_to_string.h
 *
 * www:        http://www.synesis.com.au/stlsoft
 *             http://www.stlsoft.org/
 *
 * Copyright (C) 2002, Synesis Software Pty Ltd.
 * (Licensed under the Synesis Software Standard Source License:
 *  http://www.synesis.com.au/licenses/ssssl.html)
 *
 * ...
 *
 * ////////////////////////////////////////////////////////// */

...

template &lt;class C, class I&gt;
inline const C *unsigned_integer_to_string( C       *buf,
                                            size_t  cchBuf,
                                            I       i)
{
    C   *psz    =   buf + cchBuf - 1;   // Set psz to last char

    *psz = 0;                           // Set terminating null

    do
    {
        unsigned    lsd = i % 10;       // Get least significant
                                        // digit

        i /= 10;                        // Prepare for next most
                                        // significant digit

        --psz;                          // Move back

        *psz = get_digit_character&lt;C&gt;()[lsd]; // Place the digit

    } while(i != 0);

    return psz;
}

&#151; End of Listing &#151;</pre></body></html>
