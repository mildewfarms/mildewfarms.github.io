<HTML><HEAD>
<TITLE>December 2002/Adaptable-Size Classes/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1: Required boilerplate code for attribute class A_</A></h4>
<pre>
template &lt;class Parent&gt;
struct A_: public Parent {
    template &lt;class T&gt;
    A_(const T &amp; t_): Parent(t_)
    {
        t_.set(this-&gt;a, A_&lt;Unique_&gt;());
    }
    
    template &lt;class T&gt;
    A_ &amp; operator=(const T &amp; t_)
    {
        Parent::operator=(t_);
        t_.set(this-&gt;a, A_&lt;Unique_&gt;());
        
        return *this;
    }
    
    template &lt;class T&gt;
    void set(double &amp; t_, T t) const {
        Parent::set(t_, t);
    }        
    void set(double &amp; a, A_&lt;Unique_&gt;) const
    {
         a = this-&gt;a;
    }    
    A_() {}
    
    double a;
};
&#151; End of Listing &#151;</pre></body></html>
