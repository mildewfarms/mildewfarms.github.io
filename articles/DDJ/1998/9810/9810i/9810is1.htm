<html><head><title>Oct98: HTML Help in Distributed Environments</title></head><body bgcolor="FFFFFF"><!--Copyright &#169; Dr. Dobb's Journal--><p><i>Dr. Dobb's Journal</i> October 1998 </p><h1>HTML Help in Distributed Environments</h1><h3>By Max I. Fomitchev</h3><hr><p>Upgrading client-server applications designed for distributed multiuser environments can be an arduous task because each workstation has to be upgraded individually. Even if you have an automated process that performs upgrades, help files and supporting documentation can change more frequently than the application itself. In such cases, it seems reasonable to have a single up-to-date copy of the help files and other documentation accessible to users. One way to do this is to place HTML help files on the corporate intranet web site or Internet server. Even if the network is slow, HTML files will be delivered quickly because each help screen is generally small. Moreover, after the first access, HTML help pages will be cached locally. This can significantly improve performance and reduce the load on the web server. Since help information is viewed relatively rarely and help pages are generally small, it doesn't take much in the way of server resources to support the feature. In fact, in tests I've conducted, it takes longer to launch the Internet Explorer (IE) browser than to display the request help page (the average help page size was 20 KB, and the total size of all help files was only 600 KB -- almost five times less than the size of the original .HLP file). It is also easier to publish HTML files than Windows standard .HLP files because most tools allow export in HTML.</p><p>HTML help files must be viewed in a browser window. Microsoft provides the <i>IWebBrowser2</i> interface object (<i>IWebBrowser</i> and <i>IWebBrowserApp</i> in earlier releases of SHVDOC.DLL) to automate the IE part. For displaying the help screen, either the browser's ActiveX component or the IE frame can be used. IE can also display a variety of files such as Word documents, Excel files, and so on, provided corresponding components are installed on the client's workstation. In addition, HTML help pages can contain links to a corporate help desk and e-mail feedback to tech support.</p><p>Using the IE frame to display help information provides more flexibility, since all the functionality of the browser is available (for example, users can adjust font sizes and make bookmarks). When the <i>WebBrowser</i> object is used as an ActiveX control, some IE functions are inaccessible and others require coding.</p><p>To use the IE frame to display HTML help pages, the <i>IWebBrowserApp</i> object must be initialized. In the example presented here, the <i>WebBrowser</i> object is created from the <i>IWebBrowserApp</i> interface with the help of Visual C++ class wizard. This object launches IE by means of OLE Automation; see <A NAME="rl1"><A HREF="9810i.htm#l1">Listing One</A> This operation must be done each time users request a help page since, after viewing, users might close the IE window and destroy the <i>IWebBrowserApp</i> dispatch handle. (It is easy to test if the handle was destroyed by calling <i>IWebBrowserApp::GetHwnd</i>. This call will throw an exception indicating that the dispatch handle is no longer valid.)</p><p>The IE frame must be closed when the application that requested help page terminates. <A NAME="rl2"><A HREF="9810i.htm#l2">Listing Two</A> must be placed in <i>OnExitInstance</i> or <i>OnClose</i> handlers.</p><p>If users have closed the IE frame by the time the application is terminated, the dispatch handle of the <i>IWebBrowserApp</i> has already been released and an exception will occur (because the framework will attempt to release the handle again).</p><p>You can also map UI help IDs into the HTML help pages. At first glance, a simple integer-to-string mapping routine (like <A NAME="rl3"><A HREF="9810i.htm#l3">Listing Three</A>) will do.</p><p>In the MFC application presented here, it is sufficient to overwrite the <i>CWinApp::WinHelp()</i> method and add some of the code in <A HREF="9810i.htm#l3">Listing Three</A>. <i>CWinApp::WinHelp()</i> handles all help messages sent by UI elements and dialogs. This routine can be configured to display HTML help pages, standard HLP-files, or both; see <A HREF="9810i.htm#l4">Listing Four</A>.</p><P><A HREF="9810i.htm#rs1">Back to Article</A></P><HR><I>Copyright &copy; 1998, Dr. Dobb's Journal</I><BR>
</body></html>