<html><head><title>Dr. Dobb's Journal August 1998: Object Serialization, Java, and C++ </title></head><body bgcolor="FFFFFF"><!--Copyright &#169; Dr. Dobb's Journal--><h2>Object Serialization, Java, and C++  </h2><h3><i>By Kevin Haverlock </i></h3><p><i>Dr. Dobb's Journal</i> August 1998 </p><pre><b>(a)</b>. . . SerializableInputStream is = new SerialiableInputStream(socket);TimeDate timeDate = new TimeDate(). . .is.readObject(timeDate);class SerializableInputStream{  . . .   public void readObject(SerializableObject serializedObj)  }    serializedObj.read(this);  }  . . . }class TimeDate extends SerializableObject{  . . .  public void read(SerializableInputStream inputStream)  {    month_ = inputStream.readString( );    day_ = inputStream.readString( );    year_ = inputStream.readInt( );    date_ = inputStream.readInt( );    hour_ = inputStream.readInt( );    minutes_ = inputStream.readInt( );    seconds_ =  inputStream.readInt( );  }  . . . }<b>(b)</b>TimeDate *timeDate = new TimeDate(). . . SerializableOutputStream os = SerializableOutputStream(socket);. . . timeDate-&gt;setServerTime( );os-&gt;writeObject(timeDate)SerializableInputStream::writeObject(SerializedObject&amp;serializedObj){    serializedObj.write(*this);}void TimeDate::write (SerializableOutputStream &amp;outputStream){   outputStream.writeString (month_);   outputStream.writeString (day_);   outputStream.writeInt (year_);   outputStream.writeInt (date_);   outputStream.writeInt (hour_);   outputStream.writeInt (minutes_);   outputStream.writeInt (seconds_);}</pre><H4>Figure 4: (a) Java code fragment showing the reading of the serialized data stream; (b) C++ code fragment showing  writing to the serialized data stream. </H4><p><A HREF="9808c.htm#rf4">Back to Article</A></p><HR><I>Copyright &copy; 1998, Dr. Dobb's Journal</I><BR>
</body></html>