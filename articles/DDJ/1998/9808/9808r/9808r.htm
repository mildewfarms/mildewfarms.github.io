<html><head><title>Dr. Dobb's Journal August 1998: Editorial</title></head><body bgcolor="FFFFFF"><!--Copyright &#169; Dr. Dobb's Journal--><h1>Lessons Learned</h1><p><i>Dr. Dobb's Journal</i> August 1998</p><hr><p>The trouble with history is that it's about old stuff that really doesn't matter anymore -- the Peloponnesian Wars, the Hanseatic League, Bob Dole. The trouble with computers is that they are too unique, too new, and too fast moving to have a history at all.</p><p>Debunking these notions is Robert Glass's recently published <i>In the Beginning: Recollections of Software Pioneers</i> (IEEE Computer Society Press, 1998). In compiling his book, Glass (who wears the hats of a programmer, author, and editor) asked computer pioneers David Myers, Watts Humphrey, Norman Schneidewind, Barry Boehm, Robert Britcher, Donald Reifer, Frank Land, Ben Matley, Harold Highland, Robert Babor, John Bennett, Bruce Blum, Peter Denning, and Raymond Houghton for their recollections of computing way back when -- well, mainly in the 1960s. In response, the contributors present a lively set of essays describing the world of computer programming back when punched cards ruled the rack.</p><p>Granted, much of <i>In the Beginning</i> is of the "who did what when" or "setting the record straight" ilk. Not that you'd expect a whole lot of hands-on information, of course. Let's face it, in this day and age, there's little practical value in knowing how to program -- in assembler, no less -- a Control Data 6400 or IBM 704. Still, Glass and his cohorts remind us of a number of important points.</p><p>For one thing, despite what today's hucksters would have us believe, many "modern" concepts -- data abstraction, modularity, dynamic linking, and object-oriented virtual memory, among them -- have been around since, well, when Ike was in the White House. The MIT Multics system, described by Peter Denning in "Before Memory Was Virtual," is just one early research project that explored many of the concepts that are mainstream today.</p><p>More importantly, <i>In the Beginning</i> underscores that the difference between journeymen programmers and great ones is often in how they approach problem solving. Even though the tools and resources software developers had in the 1960s and 1970s were primitive by today's standards, there's much to be learned from how they tackled problems. The lessons learned by Barry Boehm in "An Early Application Generator and Other Recollections" (such as anticipating future extensions) and Robert Britcher in "A View from Below" are just as true today as then. And today, as back then, a solid foundation in mathematics and grasp of fundamental algorithms is central to the software-development process.</p><p>(Buyer beware: According to the IEEE Computer Society Press, <i>In the Beginning</i> retails for $29.00. For several weeks, however, Amazon.com priced the book at $101.25. At this writing, Amazon.com had dropped the price to $37.00. Maybe this explains the growth in dollar revenues for web-based e-commerce. The lesson to be learned here is "buy elsewhere" -- <i>In the Beginning</i> is worth 29 bucks, but not a hundred.)</p><p>Actually, we've been knee-deep in this history stuff for the past few weeks, putting together a CD-ROM of interviews with leading programmers and computer scientists. In addition to interviews from the past ten years or so of <i>DDJ</i>, we're including the full text to Susan Lammers' classic (but out of print) <i>Programmers at Work</i> and James Hague's <i>Halcyon Days: Interviews with Classic Computer and Video Game Programmers</i>. The CD-ROM also includes audio/video interviews from <i>Dr. Dobb's TechNetcast.com</i> Internet "radio" program and never-before-published conversations contributing editor Jack Woehr has had with a number of leading programmers. All in all, <i>Dr. Dobb's Programmers at Work CD-ROM</i>, which is being built by Kevin Carlson, <i>DDJ</i>'s managing editor for digital media, includes more than 50 interviews that get you inside the heads of Chuck Moore, Elizabeth Rather, Bill Gates (back when he was a programmer), Donald Knuth, and a host of others. To borrow from Susan Lammers' "Introduction," our goal is "to discuss timeless matters...[and] detail the myriad ideas, methods, and personalities that go into developing innovative software." </p><p>And speaking of history, it's sad to report that a computer-industry icon is just that -- history. Yes, after nearly 24 years of publication, the venerable <i>BYTE</i> magazine is no more. Effective with its July 1998 issue, <i>BYTE</i> was unceremoniously killed off by its new corporate masters. I've always felt it an honor to have worked at <i>BYTE</i>, and feel saddened at its demise. They claim that <i>BYTE</i> will rise from the ashes later this year, with yet another focus. However, after the shabby way its corporate owners have treated tens of thousands of loyal <i>BYTE</i> readers, I don't know why they'd bother. Alas, the magazine is dead, and the <i>BYTE</i> experience won't be repeated.</p><p>The lesson we can learn from <i>In the Beginning</i>, <i>Programmers at Work</i>, and the life and death of <i>BYTE</i> is that time passes and things change. Consequently, what's important is to remember why we were attracted to all this stuff in the first place. Donald Reifer summed it up for me in his <i>In the Beginning</i> essay "Almost Thirty Years as a Change Agent" -- to make a difference. Once Java is forgotten, once Windows is history, that'll be enough.</p><p>--Jonathan Erickson</p><HR><I>Copyright &copy; 1998, Dr. Dobb's Journal</I><BR>
</body></html>