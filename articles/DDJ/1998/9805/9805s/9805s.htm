<html>
<META NAME="year" CONTENT="1998">
<head>
<title>Programmer's Bookshelf</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<h1>Fuzzy Logic</h1>

<p><i>Dr. Dobb's Journal</i> May 1998
</p>
<h3>By Peter N. Roth</h3>

<I>Peter is president of Engineering Objects International, producers of commercial and custom Delphi and C++ components. He can be contacted at http://www.inconresearch.com/eoi/ or peteroth@erols.com.</I>

<hr>

<H4><I>Fuzzy Engineering</I><br>
Bart Kosko<br>
Prentice-Hall, 1997<br>
547 pp., $80.00<br>
ISBN 0-131-24991-6<br>
<br>
<I>Applications of Fuzzy Logic: Towards High Machine Intelligence Quotient Systems</I> <br>
Mohammad Jamshidi, Andri Titli, Lotfi Zadeh, Serge Boverie (editors)<br>
Prentice-Hall, 1997<br>
423 pp., $74.00<br>
ISBN 0-133-62831-0 <br>
<br>
<I>The Design and Development of Fuzzy Logic</I><br>
Byron Miller<br>
Impatiens Publications, 1997<br>
142 pp., $52.00<br>
ISBN 0-963-66370-4<br></H4>

<p>Computationally, it is convenient to represent logical values with a single bit -- False being represented by 0, and True by 1. Fuzzy logic does not refute reality, but rather extends the convenient binary representation into the floating-point range [0.0...1.0]. Thus, it can be said that perception becomes part of the computational milieu. "The sky is blue" may be 95 percent true at 10 am, and five percent true at sunset. The paradox point is 0.5; at that point, truth and falsity are equal.</p>

<p>When designing a system to control a washing machine, for instance, you use perception to state what the system is to do. At the early stages of design, these statements take the following form: If the wash water is dirty, then add more detergent. This <i>if-then </i>statement is called a rule in a fuzzy system. It's fuzzy, because quantities are not mentioned (yet). Usually, several overlapping rules are used to model an entire system, so a second rule controlling the cleaning system might be as follows: If the wash water is very dirty, then add a lot more detergent. The difficulty, and art, of control-system design is determining the meaning of "water is dirty," and determining how much detergent is "more detergent." One might think of a fuzzy cleaning system as one that takes a poll of water quality and detergent quantity experts, and acts on some combination of their advice.</p>

<p>Because these are computerized systems, the programs can revise their own rules. Thus, fuzzy systems can be said to learn how to improve their own responses. The study of fuzzy logic is an attempt to codify these ideas, and place the discipline on a firm theoretical basis such that control systems can be built economically and confidently.</p>

<p>I first heard of fuzzy logic in 1993, when a friend urged me to read the semipopular treatment of the topic in <i>Fuzzy Logic: The Revolutionary Computer Technology That Is Changing Our World</i>, by Daniel McNeill and Paul Freiberger (Simon &amp; Schuster, 1994). Given the pace of change these days, it seemed time to revisit the subject. </p>

<h3><i>Fuzzy Engineering</i></h3>

<p><i>Fuzzy Engineering</i>, by Bart Kosko, is organized into 15 chapters. Each chapter presents a single topic at what I would guess is a graduate level (this comes as no surprise, considering that Kosko is a professor at the University of Southern California). The mathematics in all the chapters is challenging.</p>

<p>A list of references follows each chapter. The overwhelming majority of the references date from 1985, and the most-recent reference in each chapter is (at most) two years old, so the material is current. In addition to Kosko, there are 11 contributors to the text. While the book claims a single editorial control, there is some overlap and repetition of material. Each chapter repeats the mantra "a fuzzy system is a set of fuzzy <i>if-then </i>rules that maps inputs (the <i>if</i> parts) to outputs (the <i>then</i> parts)."</p>

<p>Each chapter concludes with homework problems. I would have appreciated a section that gave answers to, say, odd-numbered problems. That there is no such section suggests that the book was not designed primarily for self study, but to be used in a fuzzy-logic curriculum. </p>

<p>Kosko's focus is the Standard Additive Method (SAM). In this fuzzy-logic technique, the <i>then</i> parts of the rules are simply summed, rather than being combined with more elaborate techniques. Although this simplifies the computations, the SAM approach is not without its difficulties. Because good approximations require many rules, the SAM can suffer from rule explosion -- that is, it may require more rules to approximate a good solution than can be computed in minimal time or with the computing facilities allocated to the job. Attacks on this problem are made in several ways: by altering the shape of the rules such that they cover ellipsoidal patches rather than rectangles; by training the systems to learn and adapt their solutions; by making some parts of the system "smarter"; and so on. Programmers will recognize these strategies as attempts to deal with the law of the conservation of hair, which is stated roughly: In a hairy computation, you can move the hair around, but the quantity of hair remains constant.</p>

<p>Other chapters develop and apply fuzzy-logic theory to chaos, recursive partitioning, signal processing, communication, hardware, and cognitive maps. Chapter 12, entitled "Fuzzy Cubes And Fuzzy Mutual Entropy," is a tour de force. Given that a single fuzzy variable can be mapped continuously over the [(0,0),(1,0)] line, then two fuzzy variables map to the unit square [(0,0),(1,0),(1,1),(0,1)]; three map to the unit cube; and <i>n</i> variables map to the <i>n</i>-dimensional hypercube. The information state within the fuzzy cube is continuous, with the center paradox point being the fuzziest of the fuzzy. Kosko deduces from the presence of the divergence operator in the information field equations that fuzzy computations can be thought of as information fluid calculations. </p>

<p><i>Fuzzy Engineering</i> is a product of at least 12 authors. It is therefore appropriate to indicate such collaboration on the cover. In fairness to the other contributors, Kosko should have been listed as the editor, rather than implied to be the sole author.</p>

<p>Kosko is best suited to the fuzzy-logic practitioner, or to a graduate student following the Kosko curriculum: This is not a starter book. The book does include a 3.5-inch diskette with software that runs on DOS and Windows 3.x. The programs are demos only; no source code is provided. The fuzzy cognitive map demo is only useful after thorough study of the text. </p>

<h3><i>Applications of Fuzzy Logic</i></h3>

<p><i>Applications of Fuzzy Logic</i>, edited by Mohammad Jamshidi, Andri Titli, Lotfi Zadeh, and Serge Boverie, is a collection of 20 papers by an international panel of authors. The spectrum is wide: The systems to be measured and controlled include mobile robots, active autosuspension systems, traffic noise, cement production, automotive powertrains, locomotive slip, shuttle training aircraft, and zero-sum games.</p>

<p>Each paper has the familiar engineering paper outline:</p>

<ul>
<li>The problem is described.  <li>The theory that will be applied to solve the problem is described.
  <li>The particulars about the project are delineated.
  <li>The data are presented with graphs and text.
  <li>Conclusions are drawn, and recommendations made, for future work.
</ul>

<p>Because the authors work independently, and produce their papers to stand alone, there is some overlap in specifying the fundamentals of fuzzy logic.</p>

<p>The first beef (of two) that I have with <i>Applications of Fuzzy Logic</i> is the New Registered Phrase. On the cover, it's presented as "High Machine Intelligence Quotient Systems &reg." In the "Preface," the text is self-praised with the sentence "This is one of the first volumes in which MIQ&reg is brought to the attention of the scientific community." I was disappointed that the index had no entries to what was apparently an important idea. A careful search of the text revealed the single mention of Machine Intelligence Quotient on page 103, without the &reg mark. The text does not explain MIQ&reg, nor why it is important.</p>

<p>The second beef is that the four editors who collected the papers and prepared them to be published should have refined the material: You can find clinkers such as, "The essence of the developed in the work ideas allows as well come along other way, that is to design original [system] for the new plants being constructed." Practitioners are more likely to be interested in the mathematics and the graphs than in pellucid syntax, so this is more of a cavil than a beef.</p>

<p>Judging by the dates of the references, the papers presented here are state of the art. Practitioners in the control field will want to have a copy of this book on their shelf, but are likely to be interested only in the papers that apply to their discipline. </p>

<p><i>Applications of Fuzzy Logic</i> does not include a diskette, and the papers contain little code. On the other hand, the authors occasionally mention the languages in which their control programs are written: Fortran, C, Matlab/Simulink, and Pascal. Computers mentioned in the papers included a DEC PDP-11/44, 20-MHz Inmos T800 Transputer, 386 laptop, and IBM RISC6000. I can only conclude that fuzzy-logic engineers are more interested in getting their jobs done, than in exploiting the hyped technology du jour.</p>

<h3><i>The Design and Development of Fuzzy Logic Controllers</i></h3>

<p>As I scanned <i>The Design and Development of Fuzzy Logic Controllers</i>, by Byron Miller, several simple drawings illustrated what looked like interesting low-budget projects. However, the "graphics" are the bane of this book.</p>

<p>On page 2, Figure 1.1 is supposed to show a dynamic system. Instead, it shows graphs of continuous and discrete data, and the graphs are mislabeled.</p>

<p>On page 3, Figure 1.2 is a duplicate of Figure 1.1. Again, the continuous and discrete data labels are swapped.</p>

<p>After an abbreviated and fairly clear survey of fuzzy logic, an input file for the FuzzyStat system is listed in its entirety. It is followed by an unintelligible and unexplained "3D graph." Several additional unintelligible input files are included, each accompanied by an equally opaque graphic.</p>

<p>The software-development process is diagrammed with the hoary waterfall diagram. Unfortunately, the diagram is said to demonstrate the spiral model of development.</p>

<p>These, and other errors, make the text unreliable and not at all credible. </p>

<p>Save yourself $52.00 and skip this one.</p>

<p><b>DDJ</b></p>


<HR><I>Copyright &copy; 1998, Dr. Dobb's Journal</I><BR>

</BODY>
</html>
