<html>
<META NAME="year" CONTENT="1998">
<head>
<title>Dr. Dobb's Journal March 1998: Programming Pardigms</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<h1>Adventures in Benchmarking (My Don't Do List)</h1>

<p><i>Dr. Dobb's Journal</i> March 1998
</p>
<h3>By Michael Swaine</h3>

<I>Michael is DDJ's editor-at-large. He can be contacted at mswaine@cruzio.com.</I>

<hr>

<p>I don't do benchmarks. I don't do software evaluations. I don't do hardware evaluations. I don't do book reviews. Okay, I do, but I try not to, and if I have to, I don't enjoy it.</p>

<p>Rummaging through the dusty back shelves in the library at Stately Swaine Manor, I came across the December 28, 1981 issue of <i>InfoWorld</i>, which contains a long and boring article entitled, "For our readers: <i>IW</i>'s hardware review guidelines."</p>

<p>Although this dreary stretch of prose is marked by no byline, I suppose I have to cop to having written it. At least I do remember being told to develop hardware review guidelines not long after I was hired at <i>IW</i>. I sure don't remember writing the article, though.</p>

<p>The article went on for pages, big 11&amp;times;14 pages, detailing the format of each review and what each section of a review meant and the process we would follow and the ratings we would assign and what they meant. We developed equally verbose software review guidelines, written either by Thom Hogan (currently executive editor of <i>Backpacker</i> magazine) or Scott Mace (now senior editor at <i>Byte</i>). Maybe one of them wrote this piece.</p>

<p>"As far as we can tell," wrote the hardware review guidelines author, whoever he or she may be, "<i>InfoWorld</i> is the only publication that has attempted to create a set of standards and evaluate equipment and software based on them." Maybe that was true.</p>

<p>As it turned out, I had to write a lot of the hardware reviews myself. And a few software reviews. I never figured out how to make the reviews enjoyable, either for the reader or for the writer.</p>

<p>So when I was offered the job of editor-in-chief of <i>Dr. Dobb's Journal</i> in 1984, one of my first decisions was, "no reviews."</p>

<h3>Adrift at C</h3>

<p>I wish I could say that I obeyed my own injunction.</p>

<p>But shortly after I came on board the Good Ship <i>DDJ</i>, I noticed that the C programming language was really getting hot. (This was several years ago.) There were a lot of vendors selling C compilers, and I thought that a comparative review of all of them would make a good feature article. C was on the rise, and I wanted to catch the wave. I did have the sense this time to farm out the reviews to real programmers, and I also farmed out the review guideline process, knowing that I didn't know enough to do it properly. I chose wisely in the person to whom I gave the guideline project and the responsibility for managing this multiproduct comparative review.</p>

<p>I wasn't so wise in scheduling the piece. There were a <i>lot</i> of compilers.</p>

<p>Before I knew it, we ran smack into the iceberg of the drop-dead deadline for the issue.</p>

<p>Somehow or other, we made the thing work out. Then-managing editor Vince Leone got everybody into lifeboats and saved the day. The issue proved to be one of our most popular ever.</p>

<p>It took its toll on me, though, turning me from a happy-go-lucky friend to all into the grouchy curmudgeon I am today. You'd think I'd learn, but I continue to write reviews, recently for <i>MacUser</i> (until it morphed into <i>MacUserWorld</i> or whatever it calls itself). And I hated every minute of it.</p>

<p>I still can't answer the simplest questions, like should I buy the old, cheap, soon-to-be-obsoleted model, or the new, expensive, soon-to-be-discounted model?</p>

<p>But I keep doing it. I'm still doing it. I don't know why.</p>

<h3>The Final Frontier?</h3>

<p>But I won't review Userland Software's Frontier scripting system. I've reviewed Frontier repeatedly over the years, and enough is enough. I do want to report, though, that grouchy curmudgeon Dave Winer and his loyal crew have released Version 5 for Mac and Windows in alpha, perhaps even in release versions by the time you read this. The version numbering is version syncing; the Windows version is actually the first version for that platform. It's nice that they released for the two platforms almost simultaneously.</p>

<p>It's news that Frontier is available for Windows. You may or may not recall the history of the product.</p>

<p>Winer began work on Frontier long before there was such a thing as AppleScript. He talked regularly with Apple insiders about the likelihood of Apple developing something that would compete with Frontier, and was repeatedly reassured by what he heard that he wasn't being stupid to try to create a system-level scripting system for the Mac. Then he released Frontier and Apple released AppleScript, and Winer found himself in the unenviable position of trying to compete against a free, bundled product. He did the only thing he could, he took the high road, positioning Frontier as a more powerful AppleScript. That worked, but not well enough, and eventually Frontier became a free product, although Winer and his minions never stopped supporting and upgrading it.</p>

<p>Now they're trying to turn it into a commercial product again, and have increased their potential market by porting it to Windows. Exactly how they turned a Mac system-level scripting tool into a Windows ditto is something of a mystery to me, but if I explored that mystery it would be dangerously close to reviewing the product again. I'll leave it as a mystery.</p>

<h3>Rhap Sheet</h3>

<p>I <i>can't</i> review Apple's Rhapsody operating system.</p>

<p>There's a basic problem in evaluating software: You're given a beta version under a nondisclosure agreement and you expect the release version to be out by the time your column sees print. What can you say? What can I say about Apple's Rhapsody that isn't embargoed and won't be false or misleading by the time the column sees print?</p>

<p>I can say this: I wrote this column in the Blue Box.</p>

<p>The Blue Box is the Mac OS don't-call-it-emulation component of Rhapsody. I'll say this: Even in this initial developer release, Blue Box is sometimes slightly <i>faster</i> than the native MacOS. </p>

<p>Yes, faster.</p>

<p>Blue Box is still early beta software as I write this, so it crashes often: twice in the first half hour. But when Blue Box does crash, it's just an app in Rhapsody that's crashed; it doesn't hang the whole machine. And in my experience, Blue Box relaunches slightly faster than the MacOS reboots.</p>

<p>The machine Apple lent me has a dual-boot configuration; I can boot into the MacOS or into Rhapsody. Once in Rhapsody, I can launch Blue Box and I'm in the MacOS, so there are two paths to Macishness. Although Rhapsody and MacOS have different disk partitions and file formats, I can read all my Mac disks and my MacOS partition once I'm in Blue Box. If this developer release supported AppleTalk so I could print, I'd just do my Mac-based work in Blue Box. I can handle an occasional crash; hey, I use Netscape Navigator.</p>

<p>Rhapsody itself hasn't crashed once in the months I've been playing with it.</p>

<p>I can also say this: Based on what I've seen, there are certain things I'll be looking for in the Premier release or the later Unified release later this year.</p>

<p>I'll be looking for decent performance, and I see reason for optimism about that. I'll be looking for solid tools for managing servers, and I see no reason to think that these will be lacking. I'll be looking for smooth UI integration, and here I'm not so sure all the problems will be solved by the premier release.</p>

<p>And I'll be looking for driver support.</p>

<p>As I write this there's a lot of chat about the lack of drivers, and of vendors thinking about writing drivers, and of any kind of driver development kit from Apple. Apparently, this chat is a waste of bandwidth, since it's way too early to think about developing drivers. But I will be watching with interest to see if drivers arrive when it isn't too early any more.</p>

<h3>Why the Server Market is Critical for Apple</h3>

<p>For Apple's recent moves to pay off and the company to reemerge as anything but a niche vendor, Rhapsody has to become a player in the server market. Here's my reasoning:</p>

<ul>
  <li>Apple has to hold onto its current market while growing. It won't be <i>possible</i> to grow, to attract new customers or to open new markets, until the marketshare slide is halted. Nobody wants to buy into a dying company.
  <li>To hold onto the current market Apple must fully support the MacOS. Jobs understands that: The company has invested heavily in the MacOS in the past year, and brought out a good, if not earth-shaking upgrade in OS8. But that's not the whole story.
  <li>To fully support the MacOS, Apple must offer no alternative. Offering Rhapsody to the current user base would be an admission that the MacOS is history, would dry up third-party development in a flash, and would signal customers that they were free to consider <i>all</i> their options.
  <li>"The current user base" means those market segments where Apple still has respect and meaningful marketshare. That means education and content development, and that's the turf Apple has to defend with its last, dying breath, using MacOS for now. Maybe for a long time.
  <li>New markets are a different story, and for Apple, servers are essentially a new market, with no appreciable marketshare to lose. That's where Rhapsody can drive a wedge. But the server market is competitive; can Apple win enough converts to Rhapsody to become a player? Read on.
  <li>If Apple can't make Rhapsody a player in servers, it probably will have missed its last chance to grow beyond the niche markets of education and content development. In that case, the company might be able to create a nice little niche business and hold onto or even grow marketshare in those two niches. Partnering with other companies like Oracle, migrating more and more of OpenStep into the MacOS, some RedBoxish support for running Windows (or NT) apps -- there might be a way.
  <li>But if Apple can establish Rhapsody as a player in the server market (and stop the marketshare erosion in both total sales and its key markets), it's a different story. Then developers will be drawn to Rhapsody (or Yellow Box) for the economy of development effort and the ability to write once and run on multiple platforms. Then the press will see Apple with two arguably successful operating systems and a corporate turnaround strategy that appears to be working. And then MacOS customers will begin to envy the Rhapsody users who have what they perceive to be the future mainstream Apple OS. Which is what it is intended to be. But first must come the customer perception. First must come the desire.
</ul>

<h3>For Apple to Win, Microsoft Must Lose</h3>

<p>So the question is, what will it take for Apple to make Rhapsody a player in the server market?</p>

<p>Protestations about not needing Microsoft to lose notwithstanding, that's a market currently targeted by Microsoft for NT. Apple's apparent strategy of establishing a beachhead with Rhapsody in servers and then seeping onto the desktop (I promise that is the most mixed metaphor you'll find in this column) is not a bad one, but it's also Microsoft's strategy for NT, and Microsoft has a lot more leverage to make its strategy work.</p>

<p>A lot of ill-informed people think NT has already won the server market, although that's far from true. Nevertheless, carving out space in the server market means competing directly with Microsoft in a market it intends to dominate. There are only three ways I can see to sell into this market: Steal from UNIX, steal from NT, or catch new users. Since Microsoft is aggressively trying to do the first and the last, all three strategies put you squarely in Microsoft's gunsights.</p>

<p>I <i>think</i> that the Jobs strategy is to compete by delivering better technology. A more solid operating system, better apps. And that implies another step in the process. Before Rhapsody can move to the desktop, it must become a player in the server market, yes. But for it to become a player in the server market, there must be compelling applications that are not just Windows or UNIX or MacOS(?) ports. So developers have to develop apps for the platform. (There are some great apps already, but there need to be no chinks in the armor of third-party software. The MacOS is losing marketshare chiefly because of perceived holes in the knees and elbows of its software coverage.)</p>

<p>Getting developers to develop for Rhapsody in large numbers means giving them more than the hope of a market; many will want to see a sizable and plausible market right now. That's where Yellow Box for Intel comes in. Write for Yellow Box and you can run on Yellow Box for Intel or on Rhapsody on PowerPC hardware. A huge market, a nifty development environment, a chance to develop apps that you couldn't develop for Windows or the Mac. Maybe that's a compelling story for developers. I <i>think</i> that's the strategy. It sounds possible to me. It also sounds like a house of cards. I hope it doesn't collapse.</p>

<p>And I think that's about all I can say about Rhapsody.</p>

<h3>No Prizes</h3>

<p>I don't award prizes. I sometimes award no-prizes, in the tradition of Stan Lee, the creator of <i>The Fantastic Four</i> and <i>Spiderman</i>, who was overlooked by the Nobel committee again last year. But I don't award prizes.</p>

<p>The Nobel committee does award prizes.</p>

<p>Last year, once again, the committee awarded no Nobel Prize for hardware or software, but it gave the literature prize to Dario Fo, an Italian satirist who offends the church, the government, and everybody whose shirt shows any sign of stuffiness.</p>

<p>Oh, and I don't review books. Although I do write about them. </p>

<p>That's probably a distinction without a difference. What I mean is that I don't follow anyone's reviewing guidelines when I write about a book. I just say what seems to need to be said.</p>

<p>What seems to need to be said about <i>The Trouble with Dilbert</i>, by Norman Solomon (1997, Common Courage Press, Monroe, ME; ISBN 1-56751-132-5), is the following:</p>

<blockquote><p>
In his book attacking Dilbert cartoonist Scott Adams, Norman Solomon is guilty of exactly the sort of crass commercial opportunism of which he accuses Adams. Solomon, who has written several cautionary books about politics and media bias, has capitalized on the popularity of Adams' cartoon character to recycle a number of his political chestnuts, clothing them as a critique of Adams and his creation.</p>
</blockquote>

<p>I don't challenge Solomon's claim that Adams is only in it for the money, since Adams says it himself. If, as Solomon claims, many people think that Adams is waging some sort of moral war against corporate evils, then those people are kidding themselves. Adams is, as he admits, an MBA who hit upon a clever money-making scheme, and is merchandising it for all it's worth.</p>

<p>Scott Adams is no Dario Fo. But he's no faux Fo, either.</p>

<p>Although I don't mean any criticism of Solomon's other books, which raise issues often papered over by the mass media, this book is cogno-intellectual blather.</p>

<p>Dilbert, on the other hand, is funny. Not as funny as South Park, but funny.</p>

<h3>And Speaking of Criticism</h3>

<p>I don't make mistakes...like some of my readers.</p>

<p>Readers evaluate writers, I've noticed, although who invited this is beyond me.</p>

<p>Andrzej Kozlowski, for example, wrote to point out with regard to my November 1997 column that "Machiavelli was a prince only on the basis of the principle 'You are what you write.'" That, Andy goes on to say, "would make Dostoyevsky an idiot."</p>

<p>Oh, right. Like I'm going to take criticism from somebody who can't even spell Andrew.</p>

<p>Duh.</p>

<p><b>DDJ</b></p>


<HR><I>Copyright &copy; 1998, Dr. Dobb's Journal</I><BR>

</BODY>
</html>
