<html>
<META NAME="year" CONTENT="1998">
<head>
<title>Dr. Dobb's Journal March 1998: Programmer's Bookshelf</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<h1>Learning ISAPI</h1>

<p><i>Dr. Dobb's Journal</i> March 1998
</p>
<h3>By Jeff Cromwell</h3>

<I>Jeff is a software engineer for Levi, Ray, and Shoup Inc. in St. Louis, Missouri. He can be contacted at jcromwell@lrs.com.</I>

<hr>
<H4><I>Using ISAPI</I><br>
<I>Stephen Genusa, Bobby, Jr. Addison, Allen Clark, Dean Cleaver</I><br>
Que Education and Training, 1997<br>
590 pp., $49.99<br>
ISBN 0-789-70913-9<br>
<br>
<I>Professional Visual C++ ISAPI Programming</I><br>
<I>Michael Tracy</I><br>
Wrox Press Inc., 1996<br>
273 pp., $40.00<br>
ISBN 1-874-41666-4<br>
<br>
<I>Programming ISAPI with Visual Basic 5</I><br>
<I>Wayne S. Freeze and Tim Ritchie</I><br>
Prima Publishing, 1997<br>
468 pp., $40.00<br>
ISBN 0-761-50914-3<br></H4>

<p>One test for any "how to" book is the author's ability to convey information in such a manner that you can easily digest difficult material and transfer that knowledge to solve your own software-development problems. Although a single book is not a panacea to what ails software developers, books do serve as important instruments in the building of the mental tools that all programmers need and desire. One such tool that I needed was the ability to interface a database, server, and web site on Windows NT 4.0. Although many technologies exist to do this, my situation demanded the use of the Microsoft Internet Server Application Interface (ISAPI) to communicate between these applications. In addition to this, I wanted the ability to develop programs that can manipulate data from the traffic of my company web site. Technically, I wanted to perform filter control of the site.</p>

<p>Being unfamiliar with ISAPI, I turned to the three books examined here to get the essential tools to accomplish the task. The first, designated as the most complete reference, is entitled <i>Using ISAPI</i>, and written by Stephen Genusa et al. The other two books are more specific and deal with the subject matter in the confines of a specific language. For example, Michael Tracy's <i>Professional Visual C++ ISAPI Programming</i> and <i>ISAPI with Visual Basic 5</i>, by Wayne S. Freeze and Tim Ritchie are self explanatory. I'll first examine the general book by Genusa, then move on to the other two.</p>

<h3><i>Using ISAPI</h3>

<p></i>Using ISAPI, by Stephen Genusa et al., is readable and delivers on its promise to teach you what the API is, how it can best be used, and to provide a reference. It is broken down in typical ISAPI fashion: You first proceed through brief tutorials on the Web, NT, and ISAPI. Next comes a discussion on the pros and cons of ISAPI usage versus CGI, and an introduction into the meat of the book -- including a substantial discussion on ISAPI extensions and filters. The book concludes with advanced topics with respect to debugging and threading. </p>

<p><i>Using ISAPI</i> provides an excellent treatment on filters and includes a well-developed tutorial that monitors the HTTP communication event process. Considerable space is devoted to the issue of the information flow in the filter as well as ISAPI filter rules. Some of the ISAPI filter applications that can port to a real-world setting are the custom authentication and logging filters. The authors provide an excellent treatment of these applications, which, at times, can be demanding from a technical standpoint.</p>

<p>While <i>Using ISAPI</i> provides a detailed treatment of individual topics mixed with a seminal application in both C++ and Visual Basic, I found it limiting: Reference books tend to be unsuitable for quickly transmitting an author's knowledge to solve a reader's specific problems. The book's breadth and richness take considerable time to digest. I would say that it is a necessary addition to my ISAPI library, and that the Que books are technically sound. However, they often require considerable effort to follow along and understand. The sample applications ("Hello World" and "guestbook") do provide some quick instructional coding examples. Still, most of the work is focused on a discussion of the API and associated parameters. This is necessary, of course, for reference, but it hinders readability and consistency. If you have time to generate sample programs and learn overall conceptual development, and you desire to know the intricacies of ISAPI programming, you need this book. Otherwise, do not expect to use this book right away to solve specific problems like interfacing databases to web applications.</p>

<h3><i>Programming ISAPI with Visual Basic 5</i> </h3>

<p>Moving from the general to the specific, <i>Programming ISAPI with Visual Basic 5</i>, by Wayne S. Freeze and Tim Ritchie, delivers on the promise of showing you how to effectively program the ISAPI and efficiently use ActiveX controls in the development of web pages. Freeze and Ritchie build an integrated example application called "WebMaster," which provides information on important groupware concepts such as mail, discussions, and calendaring. While it is entirely a "how-to" book, it does offer good referential treatment of the OLE ISAPI 2 interface. If you are new to the OLE ISAPI 2 interface, this book demonstrates how to use a Visual Basic program with a web server as an ISAPI extension. The rationale behind this is to allow the creation of server-side ActiveX applications for Microsoft's Internet Information Server (IIS). Freeze and Ritchie quickly state some of the limitations of using OLEISAPI2, which (as mentioned before) does not let you write ISAPI filters or allow multiple thread activity. The authors go over the basics of objects, properties, and methods; and the remainder of the book is devoted to the WebMaster application, which is similar to applications like Lotus Notes and Microsoft Exchange.</p>

<p>While there are many potential problems with an integrated application approach to code instruction, the authors do an excellent job of remaining consistent throughout the book and adhering to their approach. The time and effort you will put into the coding example will give you the feeling of accomplishment, and their systematic code instruction (along with sample screen snapshots) lets you replicate their work easily. If you are seeking a solution to a particular problem, however, the book's approach is at times impractical.  </p>

<p>If you have the time, <i>Programming IS</i>API with Visual Basic 5 is an excellent book. The author's code is well designed with both substantial and suitable comments that provide considerable aid in the learning process. The main drawback of the book has more to do with the OLE ISAPI than with the author's work. However, if you find that going through the code of an entire application is the best way you learn interface concepts, then this is a necessary item for your bookshelf.</p>

<h3><i>Professional Visual C++ ISAPI Programming</i> </h3>

<p>Michael Tracy's <i>Professional Visual C++ ISAPI Programming</i> promises to teach you how to program real-world, industrial-strength ISAPI extensions, and it delivers. For example, I was able to take the content provided in Chapter 4; code, test, and adapt it to meet my needs; while, at the same time, learning the concepts. The book is not a reference, but Tracy provides invaluable tips and strategies within the context of the application development. Although it is half the size of the other two books, <i>Professional Visual C++ ISAPI Programming</i> provides immediate access to easily extend the author's sample code. The section on e-mailing form data not only teaches you the API, but also provides a strategy for those engaged in sockets programming. I admit my partiality to C++, but no matter what the language, <i>Professional Visual C++ ISAPI Programming</i> easily conveys difficult concepts in the code. In addition, the sample ISAPI debugger included with the book is great, and I have used it successfully in debugging my own ISAPI extensions. Tracy provides the complete source code, so you can dwell deeper into substantive issues about ISAPI programming. One drawback is that the book can be, at times, terse, but this is probably due to the writing style of the author and the length of the book.  </p>

<p>I found the treatment on the multithreading issues, coupled with Tracy's illustration on the pitfalls of synchronized threading in ISAPI, extremely important. Tracy does not provide a detailed treatment of thread-synchronization objects (such as critical sections, mutexes, semaphores, and events), but does provide the necessary details to use these in the context of database application writing. In the context of the ISAPI filter, he develops the same User Authentication alluded to in <i>Using ISAPI</i>. However, emphasis on both the cache manager and the ODBC API provide considerable insight, and the ready-to-use code can easily be implemented in current development projects.</p>

<p>This book does presume that you have some well-developed tools already at your disposal (knowledge of both Microsoft's Internet Information Server and MFC, for instance). If you want to build applications through real-world examples in Visual C++ with ISAPI, then this is the book for you.</p>

<h3>Conclusion</h3>

<p>All three books would be good additions to the ISAPI programmer's resource toolkit. Apart from the CD-ROMs that come with two of the books (Genusa and Freeze books), each book fulfills a different need. Genusa's book provides an overall reference work with a complete description of ISAPI, along with some tutorials illustrated in both Visual Basic and Visual C++. Its main drawback is that it is a typical reference book, and must be utilized in that way. The other two books are quintessential "how-to" books: Freeze relies on using the integrated application approach to convey VB and ISAPI programming; while Tracy demonstrates the use of VC++ with ISAPI in the context of real-world applications. Both teach you about the necessary tools within their respective contexts.</p>


<p><b>DDJ</b></p>


<HR><I>Copyright &copy; 1998, Dr. Dobb's Journal</I><BR>

</BODY>
</html>
