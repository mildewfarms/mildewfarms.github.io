<html><head><title>Dr. Dobb's Journal Spring 1998: Skills Acquisition</title></head><body bgcolor="FFFFFF"><!--Copyright &#169; Dr. Dobb's Journal--><H1>Skills Acquisition</H1><H2>Keeping pace with shifting technologies</H2><P><I>Dr. Dobb's Journal</I> Spring 1998</P><h3>By Marian Corcoran</h3><I>Marian is CEO of the San Francisco Bay Area Center for Advanced Technology, and does consulting and training for companies worldwide in Java, C++, and Windows/ActiveX. She can be contacted at marian@centeradv.com.</I><hr>Sidebar:<A NAME="rs1"> <A HREF="#s1"><I>The San Francisco Bay Area Center for Advanced Technology</I></A><HR><p>Programmers who want to update their skills generally fall into one of four categories. Those who:</p><p></p><ul><li>Perceive a new technology coming down the pike.  <li>Are needed for a project with a technology they don't yet know.  <li>See coworkers being laid off.  <li>Get laid off themselves.</ul><p></p><p>There is a good chance that many of us are in the first category -- programmers who keep our skills updated on a regular basis. Why? Well, for one thing, we like the challenge of a new technology, to see how it builds on the things of the past, and to make it do things we used to do with earlier technologies. There's a sense of excitement as we explore the latest in software development.</p><p>If you fall in the second category, you may find yourself needing to learn a language such as C++ or Java in a week of intensive preparation for an upcoming project. Depending on your background and how quickly you learn, such mastery could be difficult and have serious consequences on your current position.</p><p>Clearly, we all want to avoid falling into the third or fourth category -- watching our fellow workers get laid off, or worse, losing our own positions. If you do find yourself in one of the latter two categories, it's not too late to update your skills, but it is more difficult, due to the stresses that result from getting laid off. </p><p>If you do get laid off, are you likely to have difficulty finding a new job? I can hear you thinking right now, "But times are good. There is a shortage of programmers!" And I would answer, "Yes, that is true -- this quarter." The truth, is our field is a volatile one.</p><p>Back in the days when people spent entire careers at one large company, you would not have had to worry about reeducation, because the company would take care of it for you. Now, more and more people work for smaller companies and hold several jobs over the span of their careers. I suspect that one reason for this shift is simply to keep pace with the rapid evolution of technology. Some people resent this shift away from lifetime positions and having to learn new skills.</p><p>Along with increased competition from global markets, this shift places a greater importance on taking charge of your own education, regardless of your personal situation. Your greatest assets are your skill set and your network of contacts. </p><h3>Continuing Education Opportunities</h3><p>Taking company-sponsored courses can be advantageous, since they cover the latest versions of the technology. These courses are usually week-long intensives, which is good if you are already familiar with some of the material and need to fill in the holes in your knowledge. The disadvantage is that you may have great difficulty absorbing the material if you've had no previous exposure to the field. In addition, the courses are expensive, usually somewhere between $1500 and $2000 per week. You might also have to travel for these courses, adding more expenses. However, I find that professionals who take these courses are usually reimbursed by their employers.</p><p>Many colleges and universities also offer continuing education courses. Students appreciate that these courses are taught in a weekly lecture by experienced teachers, with plenty of time between classes for students to absorb the material through homework and study. These courses usually cost less than company-sponsored courses, since the universities are nonprofit. As a result, extension or continuing education courses are a better option if you are trying to learn some fundamentally new concepts, and may not need to use them in your work right away. The disadvantage is that continuing education courses may require 10 to 12 hours per week of programming outside of class in addition to your work and family responsibilities.</p><p>Employers often will pay for courses from extension schools, generally requiring a grade of B or better for reimbursement. In my experience, about 75 percent of the students in these courses get reimbursed. One concern I have with these courses is that not all college instructors keep up to date. Because schools have limited funds, professors don't have the latest versions of software and may be forced to teach with older versions. And sometimes, the professor simply doesn't keep up. Some students report that the courses they took taught K&amp;R C instead of ANSI C.</p><p>Special interest groups (SIGs) may also be a good place for you to continue your professional education. For example, the Object Developers Group in New York City (http://www.objdev.org/) offers seminars and study groups in C++, Java, and CORBA. The seminars are often taught by leaders in the field, and the topics are timely. These SIG meetings are usually free or very inexpensive, and they are also a good way to make contacts in the industry. I know people who have gotten job offers through contacts made from the SIGs. Seminars are helpful for a short introduction to a subject, but they are not a substitute for a full-fledged course. </p><p>Usenet groups are a good place to turn to if you are learning something and run across a problem. Many people have frequently asked questions (FAQs) that provide answers to some of the more esoteric aspects of a technology. If you are not comfortable asking a question on the group, you might consider writing to someone who posts to the group who has a similar interest to yours. If you do post a question to a newsgroup, make sure you check the FAQ first to see if the question has already been answered.</p><h3>Developing a Course Curriculum</h3><p>How can an instructor create a course covering the latest topics, when technology is changing so quickly? This question is important for those of us teaching courses, as well as for the professional software engineer, because the techniques of keeping your skills up to date are the same. Furthermore, I believe that the students should be deeply involved in course development.</p><p>At the Center for Advanced Technology (http://www.centeradv.com/), students -- all of whom are software specialists -- have as much to say about what goes into the course as the instructors. For instance, I recently had to develop a course in Advanced Java Programming. What belongs in such a course? I worked with students and came up with several topics, including those in <A NAME="rt1"><A HREF="9813ft1.htm">Table 1</A>.</p><p>As a general rule, professionals prefer courses that introduce them to a number of topics. Once they know the basics, they can learn a topic in more depth when they use it. If you are studying on your own and want to know what is important, ask around -- colleagues, friends, even on Usenet. In the list of topics for my Advanced Java course in <A HREF="9813ft1.htm">Table 1</A>, much of the material is new. This presents the problem of finding information, as most of it has probably not reached books yet, or if you do find something in a book, it is most likely already out of date.</p><p>Today, I find it impossible to develop courses without the help of the World Wide Web, and you, as a professional pursuing continuing education, will also find the Web invaluable. For example, for updated material on Java, the JavaSoft site (http://www.javasoft.com/) is an invaluable source.</p><p>Much of the software and tutorial material for our Advanced Java course came from the "Products and APIs" section of the JavaSoft site. Sun has done outstanding work in making software available with good explanations of the concepts involved and "how to" material. For example, if you download software for Java and CORBA (under Java Interface Definition language) you will automatically get a folder called docs containing documentation, examples, and so on. This is true for each of the APIs. Going through this for all of the topics in such a course is time consuming, so instructors who do this for their students add a lot of value to the course and saves time for the students.</p><h3>Innovative Approaches to Education</h3><p>Some organizations are using innovative approaches to help software professionals keep their skills up-to-date. For example, while visiting a training professional in a company in Arizona, I was shown a room with many VCRs. The trainer had arranged for courses from all over the world to be taped so that members of the staff could study subjects not locally available. Members of his staff, especially those with families, could watch the tapes on their own time, rather than during rigid course times. As a learning tool, tapes have some advantages over live courses, since students can replay or pause the tape if there is something they don't understand.</p><h3>Conclusion</h3><p>I find that 90 percent of the students who take courses from the Center for Advanced Technology are not reimbursed by their companies. This concerns me, as the percentage of students who must now "pay their own way" is increasing. I am concerned because I fear that as that trend continues, professionals will simply be unable to keep up. This could have serious ramifications not only for the region where I work (Silicon Valley), but nationwide as well.</p><p>Only two percent of the population has the ability to program. That makes us a special group, contributing in a unique way to the advancement of mankind with our gift. There are only 25,000 computer-science graduates per year. Silicon Valley alone has a shortage of 250,000 programmers. In response to such demand, many without degrees in the field move into software development. What we are calling "continuing" education is really "primary" education for many people.</p><HR><A NAME="s1"><H1>The San Francisco Bay Area Center for Advanced Technology</H1>How do you set up an organization to further technology, assist software professionals in updating their skills, and reach out to the programmers of the future? At the San Francisco Bay Area Center for Advanced Technology (http://www.centeradv.com/), a training and consulting group, we have shaped our program by asking what professional programmers wanted. Here are some of the things programmers requested, and that we consequently offer.<p></p><UL>	<LI>Programmers prefer overview style courses with multiple topics. Instead of Java GUIs in JFC, they wanted Java GUIs in JFC/AFC. Instead of separate courses in OLE, ActiveX, COM/DCOM, they want those topics combined into one course.  <LI>Workload can vary widely depending on where programmers are in the product development stage. Therefore, programmers want flexibility in "due dates" for assignments. Compassion for the stresses and demands in their lives is important.  	<LI>Our students enjoy seminars with leading specialists, which we offer at no cost, as well as courses to examine the material in more detail and depth.  	<LI>Many of our students pay their own tuition, so, to keep the costs down, we hold our classes in host companies such as Mentor Graphics or Lockheed Martin, who get free seats in exchange for using their facilities.  	<LI>Some feel a contribution to the technical community in the form of reaching out to young people of high school age will help the future. Only a small percent of the population can program, and most high school teachers do not have that ability. We are starting to work with such organizations as Plugged-In (http://www.pluggedin.org/) in East Palo Alto, California, to educate their teachers in the latest technologies.</UL><p> -- M.C.</p><P><A HREF="#rs1">Back to Article</A></P><p><b>DDJ</b></p><HR><I>Copyright &copy; 1998, Dr. Dobb's Journal</I><BR>
</body></html>