<html><head><title>May01: Encoding Windows Media Video Files</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h2>Encoding Windows Media Video Files</h2><p>The steps required to encode Windows Media files are:</p><p>1.	A <i>WMEncoder</i> object needs to be instantiated.</p><DDJADVERTISEMENT INLINE><blockquote><p>'Create a WMEncoder object</p><p> Dim encoder As WMEncoder</p><p> Set encoder = New WMEncoder</p></blockquote><p>2. A Source Group has to be created. A Source Group holds the synchronized multimedia streams being encoded. It must contain an audio stream, and can contain a video stream and a script stream. </p><blockquote><p>'Add a new source group to the source group collection</p><p> Dim SrcGrpColl As IWMEncSourceGroupCollection</p><p> Dim SrcGrp As IWMEncSourceGroup</p><p> Set SrcGrpCol = encoder.SourceGroup Collection</p><p> Set SrcGrp = SrcGrpCol.Add("SG_1")</p></blockquote><p>3.	Create an <i>IWMEncSource</i> object for each type of multimedia content in the source group. The <i>IWMEncSource</i> interface is used to either load streams from a file or capture streams from a device. Use the <i>IWMEncSourceGroup</i> interface to add streams to a source group.</p><blockquote><p>'Create a video and an audio source object.</p><p>  Set AudSrc = SrcGrp.AddSource(WMENC_AUDIO)</p><p>  Set VidSrc = SrcGrp.AddSource(WMENC_VIDEO)</p><p> 'Specify the .avi source file.</p><p>  AudSrc.SetInput "C:\UserTemp\clip4.avi"</p><p>  VidSrc.SetInput "C:\UserTemp\clip4.avi"</p></blockquote><p>4.	Select a profile for the encoding session. A profile specifies a codec, and identifies the number and bit rates of the encoded output streams. Only one profile can be assigned to all of the source groups in the encoding session.</p><blockquote><p>'Iterating through all Windows Media Profiles on your System and 				setting the 'one you want</p><p> Dim ProColl As IWMEncProfileCollection</p><p> Dim Pro As IWMEncProfile</p><p> Set ProColl = encoder.ProfileCollection</p><p> For i = 0 To ProColl.Count - 1</p><p>    Set Pro = ProColl.Item(i)</p><p>    If Pro.Name = "Test01" Then</p><p>       SrcGrp.Profile = Pro</p><p>       Print "Profile: " &amp; Pro.Name &amp; vbCrLf</p><p>       Exit For</p><p>    End If</p><p> Next</p></blockquote><p>5.	Specify an output option; in this case, the name of the encoded Windows Media file.</p><blockquote><p>'Specify the Output Windows Media File</p><p> Dim File As IWMEncFile</p><p> Set File = Encoder.File</p><p> File.LocalFileName = "C:\filename.wmv"</p></blockquote><p>6.	Before starting the actual encoding process, set some crucial parameters.</p><blockquote><p>'Setting some crucial parameters. </p><p> Encoder.EnableAutoArchive = True</p><p> Encoder.AutoStop = True</p><p> Encoder.RemoteAdmin = True</p><p> Encoder.EnableAutoArchive = True</p><p> Encoder.PrepareToEncode True</p></blockquote><p>7.	Finally, start the Windows Media Encoder and stop the Encoder once it is finished. While the video clip is encoded, check on the <i>RunState</i> property of the <i>Encoder</i> object and call the Visual Basic <i>DoEvents</i> statement as long as <i>RunState</i> is not WMENC_ENCODER_STOPPED. <i>DoEvents</i> gives Windows a chance to do other chores while a clip is encoded.</p><blockquote><p>'Start the encoder engine.</p><p> Encoder.Start</p><p>'Statistics Object required to determine if Encoding is finished</p><p> Dim Statistics As IWMEncStatistics</p><p> Dim IndexerStats As IWMEncIndexerStats</p><p> Set Statistics = encoder.Statistics</p><p> Set IndexerStats = Statistics.IndexerStats</p><p>'Loop until the Encoding process is finished.</p><p> While Encoder.RunState &lt;&gt; WMENC_ENCODER_STOPPED Do						             Events</p><p> Wend</p><p> While IndexerStats.FileCount &lt;&gt; 0</p><p>    DoEvents</p><p> Wend</p><p>'Stop the encoder engine.</p><p> Encoder.Stop</p><p> Encoder.PrepareToEncode False</p></blockquote><p>The server-side Visual Basic Application uses the described sequence to create Windows Media Video (WMV) files. Since WindowsMedia 7, Microsoft no longer uses the .ASF extension to describe WindowsMedia files, but uses the .WMV and .WMA (Windows Media Audio) extensions. As far as WindowsMedia Profiles is concerned, use the Microsoft WindowsMedia Encoder application to create the Profiles the encoding application expects. The encoding application requires profiles to comply with the following naming convention: <i>SIZExHEIGHT_BITRATE1_BITRATE2_BITRATEX.</i> For instance, 160X120_56_100 describes a profile that generates a WindowsMedia video clip that has a screen-size of 160X120, and contains a 56 Kbps and 100 Kbps stream. To generate a 320X240 file that contains a single 300 Kbps stream, the original video needs to be encoded with the profile 320X240_300. </p><p> &#151; J.G.</p><a href="0105d.htm#rs1">Back to Article</a></body></html>