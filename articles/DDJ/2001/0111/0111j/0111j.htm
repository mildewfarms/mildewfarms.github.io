<html><head><title>Nov01: E-mail Relaying</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h1>E-mail Relaying</h1><p><i>Dr. Dobb's Journal</i> November 2001</p><h2>Coping with the sendmail and qmail mail transport agents</h2><h3>By Robert Kiesling</h3><I>Robert is maintainer of the Linux Frequently Asked Questions with Answers FAQ on the Internet. He can be contacted at <a href="mailto:rkiesling@mainmatter.com">rkiesling@mainmatter.com</a>.</I><hr><p>Without a doubt, e-mail traffic is on the rise. And partly due to security concerns, the number of available e-mail relay packages has increased as well. But these packages have introduced interoperability challenges for programmers who need compatibility with existing e-mail software.</p><p>For instance, there are a handful of free software mail transport agents that provide mail relaying for both individual systems and large backbone sites. In this article, I'll describe the relaying capabilities and idiosyncrasies of sendmail and qmail, two of the most popular mail transport agents.</p><DDJADVERTISEMENT INLINE><p>All popular relay software primarily uses domain addressing, which works best with hosts that have a continuous TCP/IP connection to the Internet. Unfortunately, many users still have dial-up telecommunication reminiscent of UUCP addressing and static host map routing. Unless system administrators have the facilities to provide their own relay hosts and name servers, they are more likely to face incompatible, competing services from different vendors. Adding to this complexity is the lack of standardized authentication methods for SMTP message transfers. And considering that mail relay software has to cope with clients and servers of half a dozen or more message transfer protocols (SMTP, ESMTP, POP3, IMAP, UUCP, HTTP, and the like) as well as spam filters, mailing list servers, mobile dial-up providers, dynamic address pools, and local, user-level routing software, it's no surprise that the dreaded "Relaying Denied" error message is familiar to users and sysadmins. The end result is that many administrators resort to security methods that inadvertently restrict relaying of valid messages.</p><p>The standard sendmail program lost its default relay configuration &#151; the "promiscuous_relay" option &#151; in Version 8.9. However, sendmail still contains legacy code that provides UUCP-style addressing and routing information that has been deprecated in more recent standards. The configuration options are still present, but SMTP envelope addressing is now the default transfer method, and arriving at a configuration that satisfies the needs for one or more delivery protocols can be difficult. To fill the gap, programs like qmail have appeared. These programs contain features designed to facilitate the handling of mailing lists and dial-up SMTP queues. However, even with the simplified options that qmail offers, you still need to be aware of the configurations of other relay hosts.</p><p>In this article, I focus on the cause of relay failures &#151; incompatibilities between domain-compatible envelope addressing schemes &#151; and examine DNS factors only as they relate to specific configurations of e-mail relay software. In the process, I present a Perl/Tk e-mail client called "ec" (available electronically; see "Resource Center," page 5), which provides SMTP and POP3 e-mail communication that adheres as closely as possible to the standards covered in this article.</p><h3>Internet Standard Address Formatting</h3><p>Although e-mail clients and servers adhere to the specifications first defined in RFC 822 (Standard for the Format of ARPA Internet Text Messages) and RFC 821 (Simple Mail Transport Protocol), different programs' interpretations of the standards can make e-mail message handling one of the more arcane areas of software design. For instance, while RFC 822 specifies a strict format for e-mail headers, it does not specify routing or delivery methods. The SMTP Standard does not allow host aliasing, and the lack of a standard authentication procedure means that relay servers often overcompensate for the lack of security by making their relaying rules too restrictive. These and other factors make it difficult for e-mail relay programs to deliver all the different, yet valid, e-mail messages it might encounter.</p><p>Not all of the possible message fields defined by RFC 822 need to be present for the message to be valid. Before it can be processed by mail relay software, a header need only contain the address of the recipient (the <i>To:</i> field), the address of the sender (often, but not always, in the <i>From:</i> field), and an RFC-compliant date/time (the <i>Date:</i> field) from the originating e-mail program. But even messages with headers that do not contain this information can be processed. If a domain name is absent, e-mail software can try to deliver the message to a mailbox in a local domain, or it can add a domain address depending on the relay software's configuration.</p><p>If a message header does not contain a <i>From:</i> field, it is up to the e-mail software to add a <i>Sender:</i> field to the message. Only one of these fields is required, but e-mail programs must add a <i>Sender:</i> field that contains a valid domain address, especially if a domain address in the <i>From:</i> field contains only the sender's user name or if the field is absent. <A NAME="rf1"><A HREF="0111jf1.htm">Figure 1</A> is a typical e-mail message header, before the message is sent toward its destination. The ordering of the fields is only recommended; RFC 822 does not require that fields appear in any particular order.</p><p>The first step is determining the sender and recipient addresses (called the "reverse path" and "forward path," respectively) after they are translated into domain addresses. Considering that an e-mail header's address fields can consist of a sender's name and e-mail address, and that multiple forward paths may be specified, the procedure for parsing the address fields can become complicated because the software must take into account the entire grammar specified in RFC 822.</p><p>For instance, the Perl subroutine in <A NAME="re1"><A HREF="0111je1.htm">Example 1</A> provides the user's full name and the envelope address (the portion that is to be enclosed in angle brackets &lt; and &gt;) that has any of these forms:</p><ul>  <li>From: Robert Kiesling rkiesling@mainmatter.com  <li>From: Robert Kiesling &lt;rkiesling@mainmatter.com&gt;  <li>From: rkiesling@mainmatter.com  <li>From: &lt;rkiesling@mainmatter.com&gt;</ul><p>The subroutine must return at least the envelope address that relay software can recognize and resolve as a valid domain name, which is the argument to the SMTP "RCPT TO:" in <A NAME="rf2"><A HREF="0111jf2.htm">Figure 2</A>. The user's real name need not be present in the message field for delivery. The subroutine does assume, however, that the address is composed entirely of ASCII characters, as required by RFC 822.</p><h3>Address Lists</h3><p>Additionally, the e-mail software &#151; either the mail user agent that creates the message or the local transport software, via aliasing &#151; must take into account multiple addresses in fields, as well as different syntactic formats within individual addresses. This formatting, called "address unfolding," requires a careful look at the entire e-mail header so that all of the message's recipients will receive it, even though only one <i>To:</i> field is recognized.</p><p>For example, if a "To:" header line spans multiple text lines and contains extra whitespace such as in <A NAME="rf3"><A HREF="0111jf3.htm">Figure 3</A>(a), then the e-mail software must be able to concatenate the addresses into something that a relay agent can recognize. Ideally, a correctly formatted list of addresses should look something like <A NAME="rf3"><A HREF="0111jf3.htm">Figure 3</A>(b). This can usually be performed with a subroutine like <A NAME="re2"><A HREF="0111je2.htm">Example 2</A>, which looks at each line of a header for the lines of the field given by the <i>$fieldname</i> argument, and concatenates them and removes excess whitespace with a simple regular expression substitution from the perlre man page.</p><p>Of course, address-formatting routines must still take into account the user's full name if it is present, as well as the mailbox name as provided by a routine like <A NAME="re1"><A HREF="0111je1.htm">Example 1</A>.</p><p>As a practical matter, address unfolding must be handled before e-mail software can begin translating user mailbox addresses into envelope addresses; see <A NAME="re3"><A HREF="0111je3.htm">Example 3</A>. Finally, a remote SMTP server must receive a list of domain address routes, each an argument to the SMTP RCPT TO: command at the server. (The backslashes indicate line breaks.)</p><h3>Optional Message Fields</h3><p>The information presented to this point applies equally to optional fields that require one or more mailbox addresses that can be translated into envelope addresses as operands. The most commonly used optional fields include: <i>Cc:</i>, <i>Bcc:</i>, and <i>Reply-To:</i>. </p><p>Fields that can replace a <i>To:</i> field include <i>Apparently-To:</i> (which is handled by sendmail's <i>NoRecipientAction</i> option), and <i>Errors-To:</i> (handled by the <i>ErrorsTo</i> option), although their use is deprecated. In addition, RFC 822 defines the fields <i>Resent-to:</i>, <i>Resent-cc:</i>, and <i>Resent-bcc:</i>.</p><p>Qmail writes an <i>X-Apparently-To:</i> envelope field to recognize similarly ambiguous envelope addresses and detect circular forwarding loops.</p><h3>Address Rewriting</h3><p>Because RFC 821 does not allow host aliasing, the envelope addresses must be present before a message is sent to a remote host. If the person creating the message specifies a recipient as only "rkiesling," it is up to the local mail software to provide the domain address. This process is complicated by the fact that a host with a dial-up Internet connection may not have access to a domain name server, or a user's login name may not match his or her mailbox name, and the host may need to serve a virtual domain of its own.</p><p>The process of envelope rewriting (masquerading) is the cause of much confusion for e-mail software (not to mention system administrators). To add to the confusion, each relay program has its own procedures.</p><h3>Sendmail Address Rewriting</h3><p>A quick look at the sendmail man page reveals the <i>-f</i> command-line option, which tells sendmail what address to use for a message's sender. Here's one solution, where a host name can be provided on the command line: </p><blockquote><p>$ cat email.msg | sendmail -f rkiesling@mainmatter.com</p></blockquote><p>Sendmail then sets the <i>Sender:</i> field to "rkiesling@mainmatter.com," but it will also add this warning in the message header:</p><blockquote><p>X-Authentication-Warning: rkiesling set	sender to rkiesling@mainmatter.com</p></blockquote><p>A more secure solution is required for standard message handling. Sendmail lets you add option macros when building the sendmail.cf configuration file. In addition, sendmail configurations include "rulesets" to rewrite local and Internet addresses when necessary, although custom rulesets are used primarily to accommodate legacy UUCP addresses.</p><p>The process of substituting one host or domain for another is called "masquerading," and is usually defined in the preprocessed source of the sendmail.cf file. <A NAME="rt1"><A HREF="0111jt1.htm">Table 1</A> lists the basic sendmail macros for defining canonical envelope addresses.</p><p>In <A NAME="rt1"><A HREF="0111jt1.htm">Table 1</A>, messages from hosts within the ftp.mainmatter.com domain would be shown as originating from mainmatter.com, except for mail.mainmatter.com. The file /etc/mail/masq contains a list of host names to masquerade. Any of the macros that take a domain address as an argument can also accept a list of addresses separated by spaces.</p><p>The feature <i>always_add_domain</i> adds the domain mainmatter.com even to local addresses. The <i>allmasquerade</i> option adds the MASQUERADE_AS domain to recipient addresses. The <i>limited_masquerade</i> feature masquerades only those hostnames given as arguments to MASQUERADE_DOMAIN macros. However, if the <i>masquerade_entire_domain</i> feature is set, the hostnames in the MASQUERADE_DOMAIN macro arguments are treated as complete domains.</p><p>These options, as well as the procedure for generating the sendmail.cf configuration, are described in the cf/README file of the sendmail source-code distribution.</p><h3>Message Relaying with Sendmail</h3><p>Sendmail relay configurations must define a map of allowed domains, listed /etc/mail/relay-domains, and an access list, /etc/mail/access by default, which define the remote hosts for whom relaying is permitted. Sendmail uses these features to configure relay behavior:</p><p></p><ul>  <li>promiscuous_relay  <li>relay_entire_domain  <li>relay_hosts_only  <li>relay_mail_from  <li>relay_mail_from_domain  <li>relay_local_from  <li>accept_unqualified_senders  <li>accept_unresolvable_domains</ul><p>As mentioned, the <i>promiscuous_relay</i> configuration (which creates a so-called "open relay" host) was the default configuration up to sendmail Version 8.9. Recent versions use a default configuration that is a combination of the <i>relay_mail_from</i> and <i>relay_local_from</i> features. </p><h3>Address Rewriting and Relaying with Qmail</h3><p>Qmail uses unique user and group IDs for run-time files, so a secure installation requires less prebuild configuration than sendmail. The features in qmail are designed less for legacy address syntax and polled connections than for consistent domain addressing and mailing lists.</p><p>Qmail also operates more closely than sendmail with domain name servers when relaying mail, so if a sendmail program writes an address that a name server does not recognize, a qmail program in its default configuration provides stricter relaying than sendmail. Qmail is more likely to refuse messages from unrecognized domains unless configured specifically to relay them.</p><p>However, defining a default hostname requires only that the name be listed in the ~qmail/control/defaulthost file, so qmail is easier to reconfigure for Internet leaf sites that do not have to worry about relaying messages for other domains.</p><h3>Using Addresses in SMTP Transfers</h3><p>When using SMTP as the transport protocol between hosts, the server on the receiving host must be able to resolve at least the originator address. SMTP transaction initiation requires that these addresses be resolved before the message itself is sent. The RCPT TO: argument (the envelope address portion of the <i>To:</i> field) is enclosed in angle brackets. This field contains a domain-addressable route to one or more addressee mailbox, and may specify additional routing information. RFC 821 also requires that the return-path argument of the MAIL FROM: argument be an envelope address.</p><p>RFC 821 provides a detailed listing of the possible responses at each phase of the dialog, including standard error messages. A relay program may also define additional site-specific error messages.</p><h3>Internet Standard Date Format</h3><p>Although SMTP mail relays do not strictly require a <i>Date:</i> field for message delivery, RFC 822 does. The originating host's relay adds a <i>Date:</i> or <i>Resent-Date:</i> header line by default if it is not already present, and messages that do not contain at least an RFC standard date from an e-mail client run the risk of being misidentified as spam.</p><p>Formatting and interpreting RFC 822 dates can be as challenging as formatting and interpreting e-mail addresses. A typical RFC 822 date (the output of the GNU <i>date -R</i> command, in this case) has the format <i>Wed, 02 Mar 2001 12:34:25 +0400</i>. However, RFC 822 makes the weekday optional, so an equally valid date string would be <i>02 Mar 2001 12:34:25 +0400</i>. The time zone is required and can have, respectively, a local differential from Greenwich Mean Time, a North American Time Zone abbreviation that includes daylight savings time, a military zone letter, GMT, or UTC. The dates and times <i>02 Mar 2001 12:34:25 -0400</i>, <i>02 Mar 2001 12:34:25 EDT</i>, and <i>02 Mar 2001 12:34:25 D</i> are equivalent. </p><p><A NAME="re4"><A HREF="0111je4.htm">Example 4</A>(a), however, is the Perl regular expression to parse an RFC 822 date that does not include the weekday. To parse a date that contains the weekday, the regexp in <A NAME="re4"><A HREF="0111je4.htm">Example 4</A>(b) is slightly different.</p><p>Different e-mail clients transmit the date differently. For example, Microsoft Windows Messaging does not include the time zone. E-mail client software that is not Y2K compliant may transmit a two-digit year, and some clients may not use leading zeros on single-digit dates and times.</p><h3>Host Relaying and Forwarding</h3><p>Because RFC 821 does not allow host name aliasing &#151; nor does it specify authentication procedures &#151; a domain name server must provide routing information to the destination host.</p><p>The variables in sendmail that control relaying mail include LOCAL_RELAY and MAIL_HUB. The <i>stickyhost</i> option can bypass a LOCAL_RELAY if desired. Most mail destined for the Internet, however, should be routed to a defined SMART_HOST. Sendmail's relay definitions include:</p><ul>  <li>The host defined by the LOCAL_RELAY macro sends mail to unqualified mailboxes.  <li>The MAIL_HUB macro's defined host routes mail qualified with the name of the local host.  <li>SMART_HOST routes mail with domain addresses qualified by other hosts.</ul><p>Qmail's relaying configurations are less well documented than sendmail's; fortunately, qmail uses a simpler configuration that makes routing decisions based on the hosts in these configuration files: </p><ul>  <li>~qmail/control/locals  <li>~qmail/control/rcpthosts  <li>~qmail/control/virtualdomains  <li>~qmail/control/smtproutes</ul><p>It is also easier to define a null client to forward all mail using the route listed in the ~qmail/control/smtproutes file.</p><p>If the ~qmail/control/rcpthosts file does not exist, then qmail acts as an open relay. In practice, however, this increases the likelihood that an improperly addressed message will be denied, relaying by a host further up the line.</p><h3>Forwarding for Individual Users</h3><p>Sendmail's <i>ForwardPath</i> option lets users forward mail to addresses listed in a ~/.forward file. The <i>ForwardPath</i> option is synonymous with the <i>-o</i> command-line option. Although long a standard option in sendmail, it is considered a security risk as are many other per-user forwarding techniques &#151; not the least of which is that a series of forwarders will create a loop. That is, the addresses in two or more .forward files will refer to each other.</p><p>Qmail provides loop checking by using a <i>Delivered-To:</i> header field. Qmail provides site-wide default forwarding rules as well as aliasing, and per-user forwarding rules using a ~/.qmail configuration file. Like sendmail, qmail can use host-based filtering software, but the configuration can be performed on a per-user basis.</p><p>In many host installations, particularly those that provide virtual domains, procmail is used as a local forwarding agent. Sendmail provides a compile-time option to use procmail as a local delivery agent, and qmail users can specify procmail as a first-stage message filter.</p><h3>Conclusion</h3><p>Different software packages address the complicated process of e-mail envelope addressing, and each provides its own configuration scheme to provide more flexible domain addressing to machines and users that use a wide variety of connection methods and e-mail software. Mail software configuration and maintenance, even for administrators of single-user machines, has become more complicated as the Internet has grown in size and complexity, and the increased number of  e-mail relay software packages has made it even more important that administrators choose software that suits the needs of their sites and individual users.</p><h3>References</h3><p>Allman, Eric. <i>Sendmail Installation and Operation Guide</i>. Version 8.317.4.56. Sendmail Inc.</p><p>Costales, Bryan and Eric Allman. <i>Sendmail</i>, Second Edition. O'Reilly &amp; Associates, 1993.</p><p>Crocker, David H. <i>RFC 822: Standard for the Format of ARPA Internet Text Messages</i>.</p><p>Johnson, Chris. <i>The Qmail Newbie's Guide to Forwarding and Relaying</i>. <a href="http://www.palomine.net/qmail/relaying.html">http://www.palomine.net/qmail/relaying.html</a>.</p><p>Postel, Jonathan B. <i>RFC 821: Simple Mail Transfer Protocol</i>.</p><p><b>DDJ</b></p></body></html>