<html><head><title>Jan01: So Why PHP? </title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h2>So Why PHP? </h2><p>There are several options available for server-side web scripting. Here, I limit my discussion to the four that I use on a daily basis &#151; PHP, ASP/VBScript, Perl, and Java Server Pages (JSP). What makes PHP any better or worse than these alternatives? I'll start with JSP. </p><p>JSP is Java code intermixed with HTML code. It can execute only on a server that supports JSP and Java servlets. Some web servers do not support Java servlets, and many ISPs or ASPs do not offer it as an option in all configurations. Generally, the development cycle in a Java environment is considerably longer than developing in PHP. The second issue with JSP is that its implementation and future are married to the futures of Java, Java Servlets, and Enterprise JavaBeans. All of these change constantly, mostly for the better. However, the changes are not always backwardly compatible. As any web developer knows, you don't only have to worry about your own code, but also about the technologies that you are using. Using JSP simply means that you have three more layers of software wherein things can go wrong due to no fault of your own code. </p><DDJADVERTISEMENT INLINE><p>The second alternative is Perl, which is a powerful scripting language used not only for web applications, but also for many standalone programs, system administration programs, and software management programs. There's a huge amount of Perl software ready for use. One problem with Perl, however, is that on most web servers, it is executed as an out-of-process CGI program, making it slower and less efficient (PerlScript being the most notable exception). </p><p>The major advantage of Perl over PHP is that you can use Perl for various system administration tasks. This may change in the near future since PHP 4 has a superior new scripting engine. The new engine (known as the "Zend engine," see http://www.zend.com/) was designed and implemented in a fashion that makes it easy to use as a standalone scripting environment. Therefore, expect to see it available as a standalone scripting engine, much like Perl, in the near future. Moreover, there are talks between the authors of MySQL and Zend about possibly using the scripting engine in MySQL. If this happens, you will then be able to develop MySQL stored procedures in PHP. Thus, one set of familiar syntax can be used to perform the system administration tasks, business logic at the web server level, and the business logic at the database level. </p><p>If you keep your eyes on the URLs when navigating the Web, you will notice that next to HTML, the two most widely used extensions are ASP and PHP. ASP is not really a language, but a framework that lets you run your favorite scripting engine under Microsoft's Internet Information Server (IIS). The most widely used option is VBScript. However, you can easily plug in other engines, such as PerlScript. In this context, when I mention ASP I am referring to running a VBScript engine using the ASP framework under IIS. Both VBScript and PHP are powerful scripting languages that contain almost every feature you would need. </p><p>The first glaring difference between the two is the syntax of the language. PHP syntax is based on C/C++, Perl, and some UNIX shell scripting. With a UNIX background, you can pick up the PHP syntax in a few minutes. VBScript is modeled after Visual Basic, which means no real object support, no encapsulation, and no inheritance. Also VBScript lacks many system level functions, for example, most file manipulation functionality that is available under PHP has to be executed via invocation of the external File System Object. Being based on Basic, VBScript has some odd features, such as the While/Wend syntax and the lack of short-circuit Boolean evaluation. For example, if you are reading a record set from a database, and you want to test for a value being NULL or an empty string, then code similar to the following should do the trick in most languages:</p><blockquote><p>if isNull(rs(0)) or Cstr(rs(0)) = "" Then</p><p>  response.write "Empty Value"</p><p>end if</p></blockquote><p>but under VBScript, this code will generate a run-time error if the value is NULL upon invocation of the <i>Cstr()</i> function. </p><p>You can still develop well-structured code in VBScript, but not real modular code. It is a chore to split your logic into self-contained functions with any level of OO programming.</p><p>Aside from VBScript, one major problem with ASP is that it is IIS centric, which takes UNIX-based servers out of the equation. There are a couple of vendors out there trying to develop UNIX flavors of ASP. The problem with this option is that they will always play catch-up, never being able to release all the new functionality that ASP on IIS offers on the same release date.</p><p>Also these options rely heavily on Java. If, for example, you check out one of those options &#151; iASP (that is, instant ASP), the first thing you learn is that you need Java to run it. The first example you will likely see is how to instantiate Java Objects from JAR classes. But if my goal is to work in a Java environment, I will not use ASP but rather JSP or Servlets and EJB.</p><p>So what gives PHP the edge? For starters it is available on almost any platform and web server. Language syntax is flexible and robust, yet simple. It is a scripted language, which makes the mechanics of development and testing straightforward, resulting in short development times. PHP is available as open source, and you can learn from it and add your changes. That is, by the way, how PHP 3 and now PHP 4 were developed. While PHP is a free open-source environment, you can still take advantage of commercial support from companies such as Zend. </p><p>PHP as a scripted language has no strong typing of variables, thus making it easy for beginners to learn. However, PHP does have basic object support, regular expressions, support for recursion, a complete set of string functions, and encryption functions. It can generate images and PDF files on the fly, connect to a multitude of databases, handle many network protocols, and has almost any functionality required in a scripting language for the Web.</p><p>A.A.</p><a href="0101c.htm#rs1">Back to Article</a></body></html>