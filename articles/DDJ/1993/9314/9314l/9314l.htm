<HTML>
<META NAME="year" CONTENT="1993">
<HEAD>
<TITLE>SP93: EDITORIAL</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<h1>EDITORIAL<a name="03cc_0002"></h1><P>
<h2><a name="03cc_0001"><a name="03cc_0000">You Can Never Be Too Thin, Too Rich, or Have Too Much Information on Windows Programming</h2><P>
Few software systems have generated the mountains of books, forests of articles, and swamps of manuals as Windows has--and, if there's ever such a thing as a sure bet, you can wager there's more on the way. As much a testament to the success of Windows in capturing the hearts, minds, and mice of end users, the feast of Windows-related information speaks to the complexity of Windows software development. How complex is it? For starters, no one--not even Microsoft--can tell you the total number of Windows function calls available to programmers. Granted, the Windows 3.1 SDK sports upwards of 700 documented calls, and Win32 even more.<P>
But when you stir in other Windows-related APIs, such as the multimedia or Asian SDK (which supports Kanji/Korean/Chinese), the Win32s subset, the unreleased Win32c, Modular Windows, and the future Cairo environment, the old head starts spinning, as the eyes roll back and glaze over. Toss in a bushel or two of undocumented calls (yes, they <I>really</I> do exist), DLLs from third-parties (like Borland's custom controls), emerging standards like ODBC, class libraries and application frameworks, and suddenly we're talking about a serious souffl&eacute;, API-wise.<P>
Considering the sheer volume of absolutely critical information, even a company with as many cooks in its coding kitchen as Microsoft can choke when it comes to serving up that information in a timely manner. Updating the Visual C++ pre-releases was more hampered by the need to photocopy manuals than fixing bugs and duping disks. By the time NT betas rolled around, Microsoft proved it had learned its lesson, employing the Heimlich-like maneuver of distributing the Win32 SDK, sample programs, documentation, books, magazines, and more on CD-ROM.<P>
What all this boils down to is that, when it comes to Win16 and Win32 development, you can never have too much in-depth, technical information. And just as importantly, that information needs to come from programmers who've earned their silver spatulas on the stovetops of both platforms--and that's where <I>Dr. Dobb's Sourcebook of Windows Programming</I> comes in through the swinging doors.<P>
This special edition of <I>Dr. Dobb's Journal</I> focuses exclusively on Windows 3 and Windows NT programming. As with the regular issue of <I>Dr. Dobb's Journal</I>, all of the articles in this issue are written by battle-scarred Windows programmers who are graciously sharing with you some of what they've learned--techniques they would have liked to have read about <I>before</I> they launched into serious development projects.<P>
There's no question that you'll find this special edition an invaluable addition to your programming bookshelf. We look forward to hearing about the Windows problems the <I>Sourcebook</I> helps you solve--and maybe even turning those experiences into articles.<P>
Jonathan Erickson<P>editor-in-chief<P>

<HR><P>Copyright &copy; 1993, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
