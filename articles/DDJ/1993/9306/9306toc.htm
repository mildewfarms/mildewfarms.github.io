<HTML>
<META NAME="year" CONTENT="1993">
<HEAD>
<TITLE>June 1993 - ASM AND ARCHITECTURES</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>June 1993 - ASM AND ARCHITECTURES</H1>
<hr>
<h2>FEATURES</h2><P>
<h3><a href="9306a/9306a.htm">COMPUTER SCIENCE AND THE MICROPROCESSOR by Nick Tredennick</A></h3><P>
You bet it's a hardware problem, but the decisions chip designers make impact  the software tools you use, programming techniques you employ, and  applications you write.  From the 8008 to the Pentium, Nick examines trends in  the microprocessor arena.<P>
<h3><a href="9306b/9306b.htm">PROGRAMMING THE PENTIUM PROCESSOR by Ramesh Subramaniam and Kiran Kundargi</A></h3><P>
Intel's recent entry into the 32-bit microprocessor race ups the performance  ante.  Our authors describe the Pentium's superscalar, pipelined architecture,  focusing on floating-point code.  John Dahms shares some of his experiences in  writing a Pentium-aware compiler.<P>
<h3><a href="9306c/9306c.htm">PROCESSOR DETECTION SCHEMES by Richard Leinecker</A></h3><P>
Knowing the processor--286, 386, or 486--means your program can include  processor-specific code to improve application performance.  Bob Moote adds  Pentium-detection code, while Steve Heller discusses 80486 cache detection.<P>
<h3><a href="9306d/9306d.htm">32-BIT FLOATING-POINT MATH by Al Williams</A></h3><P>
This approach to floating-point math uses 32-bit instructions.  Although Al  uses the 80386 as an example, these techniques can be applied to other 32-bit  processors as well.<P>
<h2>BONUS SECTION: SCIENTIFIC &amp; ENGINEERING COMPUTING</h2><P>
<h3><a href="9306e/9306e.htm">DISTRIBUTED COMPUTING NOW: APPLICATION ENVIRONMENTS by Lowell S. Schneider and Stephen S. Murray</A></h3><P>
Our authors focus on the Astrophysics Data System and other applications that  make the most of the distributed-computing paradigm.<P>
<h3><a href="9306f/9306f.htm">OBJECT-ORIENTED FINITE-ELEMENT SOFTWARE by Al Vermeulen</A></h3><P>
Object-oriented languages promise that you can code at higher levels of  abstraction than with traditional languages.  Al examines spline-based, finite  element models coded in C++, concentrating on bicycle-wheel load-deflection.<P>
<h3><a href="9306g/9306g.htm">EXTENDING A VISUAL LANGUAGE FOR SIMULATION by Peter D. Varhol</A></h3><P>
Peter uses Turbo Pascal for Windows to extend VisSim, an off-the-shelf   simulation package that provides a visual design environment for Microsoft  Windows and UNIX/X.<P>
<h3><a href="9306h/9306h.htm">NEURAL NETWORKS AND CHARACTER RECOGNITION by Ken Karnofsky</A></h3><P>
Ken tackles optical character recognition using Matlab's Neural Network  Toolbox.  Matlab integrates matrix computation, numerical analysis, and data  analysis--and without traditional programming.<P>
<h3><a href="9306i/9306i.htm">A GUI ENVIRONMENT FOR FORTRAN DEVELOPMENT by Vinod Anantharaman</A></h3><P>
VShell is an icon-based visual tool that aids Fortran development by  simplifying the process of creating Fortran DLLs accessible from Visual Basic  via drag-and-drop.<P>
<h2>EMBEDDED SYSTEMS</h2><P>
<h3><a href="9306j/9306j.htm">DETECTING OUT-OF-RANGE REFERENCES by Chan Y. Lee</A></h3><P>
You've committed an out-of-range reference violation if you've attempted to  access a memory location outside the permitted memory range.  Chan discusses  the implications of this for embedded systems designers, using AMD's 29200  RISC processor as an example.<P>
<h2>NETWORKED SYSTEMS</h2><P>
<h3><a href="9306k/9306k.htm">HIPPI AND HIGH-PERFORMANCE LANS by Andy Nicholson</A></h3><P>
The high-performnace parallel interface (HIPPI) defines a standard for  100Mbyte/sec and 200-Mbyte/sec point-to-point links using 32- or 64-bit wide  copper cabling.  Andy examines HIPPI-based LANs and makes the case for  peer-to-peer over client/server.<P>
<h2>EXAMINING ROOM</h2><P>
<h3><a href="9306l/9306l.htm">EXAMINING MFC 2.0 by Michael Yam</A></h3><P>
Micrsoft claims that any application written under version 1.0 of the Microsoft  Foundation Class Library (MFC) will run unmodified under MFC 2.0.  He  shows how he ported PT, a Windows-based periodic table originally written  using MFC 1.0, to MFC 2.0.<P>
<h2>PROGRAMMER'S WORKBENCH</h2><P>
<h3><a href="9306m/9306m.htm">A CROSS-PLATFORM PLUG-IN TOOLKIT by Ramin Firoozye</A></h3><P>
XPIN, the cross-platform plug-in toolkit Ramin presents here, helps you create  portable applications that (currently) run on Windows and the Macintosh.   Ramin's toolkit consists of a caller API and a plug-in skeleton.<P>
<h2>COLUMNS</h2><P>
<h3><a href="9306n/9306n.htm">PROGRAMMING PARADIGMS by Michael Swaine</A></h3><P>
Rome wasn't built in three days--and neither BBS Michael set out to wire  together using off-the-shelf objects.<P>
<h3><a href="9306o/9306o.htm">C PROGRAMMING by Al Stevens</A></h3><P>
Al presents JOYKEY, a joystick-driven keyboard simulator designed to provide  handicapped computer users with a simple means of interacting with PC's.<P>
<h3><a href="9306p/9306p.htm">ALGORITHM ALLEY by Tom Swan</A></h3><P>
Permutation algorithms are useful for arranging a sequence in all possible  ways.  Tom examines how they're implemented by Niklaus Wirth and Robert  Sedgewick.<P>
<h3><a href="9306q/9306q.htm">UNDOCUMENTED CORNER edited by Andrew Schulman</A></h3><P>
Ron Burk uncovers undocumented features of Windows' WinHelp facility,  giving you yet another powerful tool for Windows development.<P>
<h3><a href="9306r/9306r.htm">PROGRAMMER'S BOOKSHELF by Jonathan Erickson</A></h3><P>
Fuzzy systems may or may not be logical.  This month we examine fuzzy logic  books, conference proceedings, and journals.<P>
<h2>FORUM</h2><P>
<h3><a href="9306s/9306s.htm">EDITORIAL by Jonathan Erickson</A></h3><P>
<h3><a href="9306t/9306t.htm">LETTERS by you</A></h3><P>
<h3><a href="9306u/9306u.htm">SWAINE'S FLAMES by Michael Swaine</A></h3><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9306v/9306v.htm">OF INTEREST</A></h3><P>
<HR><P>Copyright &copy; 1993, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
