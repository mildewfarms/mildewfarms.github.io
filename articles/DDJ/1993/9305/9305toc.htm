<HTML>
<META NAME="year" CONTENT="1993">
<HEAD>
<TITLE>May19:93 - OPERATING ENVIRONMENTS</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>May19:93 - OPERATING ENVIRONMENTS</H1>
<hr>
<h2>FEATURES</h2><P>
<h3><a href="9305a/9305a.htm">THE COMMONS OF INFORMATION by Lee Felsenstein</A></h3><P>
Will tomorrow's computer networks meet our  commercial, social, and  political interaction needs in the same way as yesteryear's village commons or today's shopping malls?  One of the true personal-computer pioneers  looks back at how people and computers interact, and explores what that  means for the future.<P>
<h3><a href="9305b/9305b.htm">MODELESS DIALOG BOXES FOR WINDOWS by Joseph M. Newcomer</A></h3><P>
Joe uses modeless dialog boxes to speed up construction of both user and  developer interfaces.  Using modeless dialog boxes effectively, however,  requires awareness of what Windows does when you want to iconize these  dialog boxes and have them display unique icons.<P>
<h3><a href="9305c/9305c.htm">OS/2 2.X INITIALIZATION FILES AND PROFILE MANAGEMENT by Derrel Blain, Kurt Delimon, and Jeff English</A></h3><P>
All kinds of information is hidden inside OS/2 initialization files, but  you can't get to it because of the binary form of  INI files.  Our authors  present a file browser and editor - based on the OS/2 2.0 Profile Manager  API - that lets you examine INI file contents.<P>
<h3><a href="9305d/9305d.htm">DYNAMIC LINKING UNDER BERKELEY UNIX by Oliver Sharp</A></h3><P>
Dynamic linkers are invoked on pieces of code at run time, combining the  new code with executing programs.  Oliver discusses how this is handled  under Berkeley UNIX, and presents the source to a dynamic linker he's used  with SunOS (Sun 3 and SPARC), BSD 4.3 Reno, and Dynix.<P>
<h3><a href="9305e/9305e.htm">A PORTABLE LIBRARY FOR EXECUTING CHILD PROCESSES by Matt Weisfeld</A></h3><P>
One of  C's big advantages is the ease with which you can port code between environments. Matt presents a library that makes the creation and  execution of child processes portable across different platforms including  VMS, UNIX, and DOS.<P>
<h3><a href="9305f/9305f.htm">A VISUAL APPROACH TO DATA ACQUISITION by James F. Farley and Peter D. Varhol</A></h3><P>
Our authors use LabView for Windows to prototype a data-acquisition system for collecting data from infrared sensors.  This tool lets you build  applications by manipulating icons in a window instead of writing code.<P>
<h2>EMBEDDED SYSTEMS</h2><P>
<h3><a href="9305g/9305g.htm">FLASH FILE SYSTEMS by Drew Gislason</A></h3><P>
Flash memory packaged in solid-state, credit card-size PCMCIA cards is  starting to change the face of embedded and portable systems.  Drew  examines Flash file systems and presents one that's FAT-like.<P>
<h2>NETWORKED SYSTEMS</h2><P>
<h3><a href="9305h/9305h.htm">YOUR OWN NETWORK DATA SNOOPER  by Rahner James</A></h3><P>
This network data snooper lets you peek into network request packets and  their corresponding responses and logs the received packets to a file for  later retrieval.  The snooper also lets you tune in to specific node  addresses and sockets.<P>
<h2>EXAMINING ROOM</h2><P>
<h3><a href="9305i/9305i.htm">DIRECT MEMORY ACCESS FROM PC FORTRANS by Kenneth G. Hamilton</A></h3><P>
Standard Fortran has never supported direct memory access because large  multiuser systems had to worry about conflicting , concurrent programs.   With single-user, DOS-based PCs, however, this isn't a problem.  Ken  examines the issues involved in performing direct memory access using PC  Fortran compilers from Microsoft, Watcom, Lahey, and SVS.<P>
<h2>PROGRAMMER'S WORKBENCH</h2><P>
<h3><a href="9305j/9305j.htm">BUILDING A PORTABLE PROGRAMMING ENVIRONMENT by Ian E. Gorman</A></h3><P>
Ian describes the working PC development environment he's built using the  MKS Toolkit, a set of UNIX-like utilities for MS-DOS.  It's his contention  that the environment makes him much more productive when using a DOS-based  PC to write programs for platforms ranging from micros to mainframes.<P>
<h2>COLUMNS</h2><P>
<h3><a href="9305k/9305k.htm">PROGRAMMING PARADIGMS by Michael Swaine</A></h3><P>
Michael explains the phenomena of the &quot;open programmer&quot; and, unsurprisingly discovers that visionaries like Richard Feynman, Donald Knuth, Raymond Kurzweil, Marvin Minsky, and Richard Stallman all share an open state of mind.<P>
<h3><a href="9305l/9305l.htm">C PROGRAMMING by Al Stevens</A></h3><P>
D-Flat++ is put on the backburner this month, as Al develops a tool he's  needed for quite a while. - a text-mode screen grabber for generating  laser-printer printouts.<P>
<h3><a href="9305m/9305m.htm">ALGORITHM ALLEY by Tom Swan</A></h3><P>
In this inaugural column, Tom sorts out sorting algorithms.  For starters, he zeroes in on topological sorting, a method that relies on a data set's partial ordering and preserves existing  relationships between elements.<P>
<h3><a href="9305n/9305n.htm">UNDOCUMENTED CORNER edited by Andrew Schulman</A></h3><P>
Jeff Cogswell and his cohorts examine the Windows palette manger which  oversees the graphics-card registers that contain the colors currently  available for display.  The palette manager is intended to solve the  problem of a multitasking system allowing all programs to have  simultaneous access to a single graphics card.<P>
<h3><a href="9305o/9305o.htm">PROGRAMMER'S BOOKSHELF by Al Stevens</A></h3><P>
Billionaire Bill and his big bucks - how he got them and what he does with them - are described in Hard Drive, the focus of this month's book review.<P>
<h2>FORUM</h2><P>
<h3><a href="9305p/9305p.htm">EDITORIAL by Jonathan Erickson</A></h3><P>
<h3><a href="9305q/9305q.htm">LETTERS by you</A></h3><P>
<h3><a href="9305r/9305r.htm">SWAINE'S FLAMES by Michael Swaine</A></h3><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9305s/9305s.htm">OF INTEREST</A></h3><P>
<HR><P>Copyright &copy; 1993, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
