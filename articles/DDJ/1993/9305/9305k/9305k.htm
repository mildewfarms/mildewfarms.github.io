<HTML>
<META NAME="year" CONTENT="1993">
<HEAD>
<TITLE>MAY93: PROGRAMMING PARADIGMS</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<h1>PROGRAMMING PARADIGMS<a name="0137_0003"></h1><P>
<h2><a name="0137_0001"><a name="0137_0000">The Open Programmer</h2><P>
<h3>Michael Swaine</h3><P>
<a name="0137_0002"><a name="0137_0000">I always expect Bill Moyers to let me down.  I'm always pleased when he doesn't. Moyers, the San Jose Mercury News tells me, &quot;is virtually revered, as if he were the second coming of Edward R. Murrow.&quot;  I admire him, too, but he's always running off to China to explore Oriental medicine or interviewing some original thinker not accepted by the scientific community, and I watch these shows with reservations.  Moyers, with his earnest look, is the very image of the open-minded observer, and I want to believe that I'm going to see the truth unadorned through his baby blues.  But I can't get it out of my mind that this guy isn't a scientist or a priest; he's the former press secretary to Lyndon Johnson.<P>
Often, Moyers remains unconvinced by what I consider unconvincing arguments and demonstrations, and when that happens, I'm relieved.<P>
I find that I believe passionately in open-mindedness, so long as it comes up with the right answer.  That may not be the right attitude.<P>
This is a column about attitude.<P>
<h3><a name="0137_0004">The Innocence of Richard Feynman<a name="0137_0004"></h3><P>
Yoshiro NakaMats, the inventor of the floppy disk and holder of more patents than Thomas Edison, brainstorms on a special waterproof pad while floating underwater.<P>
Whatever works, I guess.  Some creative people are more artless than this.  Physicist Richard Feynman, surely one of the most creative scientists of this century, was artfully artless.<P>
In two books of autobiographical anecdotes, Feynman (through his &quot;as-told-to&quot; ghoster, Ralph Leighton) paints a picture of himself as an innocent child, curious about the world and approaching it with unprejudiced openness.  Like Bill Moyers, only funny.  The style in which these books are written is the style in which Feynman lived his life:<P>
The main reason people hired me was the Depression.  They didn't have any money to fix their radios, and they'd heard about this kid who would do it for less.  So I'd climb on roofs to fix antennas and all kinds of stuff.<P>
No wonder Feynman was as close as anybody has ever come to being a hero to Bill Gates: They sound alike.  Feynman brought this artlessness to everything he did: fixing radios as a kid in Far Rockaway; cutting string beans on a summer job; watching ants on his windowsill as a graduate student at Princeton; disobeying orders and taking apart the calculators while working on the atomic bomb at Los Alamos; doing his Nobel work in physics; and bucking the red tape while serving on the committee investigating the Challenger disaster, when he demonstrated the cause of the crash so vividly that any 12-year-old could understand.  Feynman bragged that he was never impressed by the credentials of the person, but always focused on the idea.  &quot;If the idea was lousy, I said that it looked lousy.  If it looked good, I said it looked good.  Simple proposition.&quot;<P>
In James Gleick's biography of Feynman, Gleick also captures this image clearly, but he goes on to examine the image and to pry it apart.  Feynman went to some lengths, it appears, to paint this picture of himself.  &quot;He could not, or would not, distinguish between the prestigious problems of elementary particle physics and the apparently humbler everyday questions that seemed to belong to another era,&quot; Gleick tells us, supporting the image of the curious child approaching the world with unprejudiced openness.  But he then quotes Murray Gell-Mann: &quot;He surrounded himself with a cloud of myth, and he spent a great deal of time and energy generating anecdotes about himself.&quot;<P>
Ultimately, one comes away from these books with the image of a person knowledgeably, deliberately, consciously, and artfully trying to be open, spontaneous, intuitive, artless. And succeeding.<P>
So it can be done.<P>
<h3><a name="0137_0005">The Errors of Donald Knuth<a name="0137_0005"></h3><P>
Donald Knuth, one of our most respected programmers, a legend, a Turing laureate, and the author of a series of definitive books on algorithms, is one of the most modest of men. Donald Knuth is not the sort of person to spend time and energy generating anecdotes about himself.  Quite the opposite: He's willing to expose his shortcomings as a programmer to the scrutiny of the community of programmers.<P>
In Literate Programming, Knuth has the courage to publish his errors.  Thinking it might be useful to others, he presents the error log he kept while writing his typesetting program, T[E]X.<P>
As <a href="#0137_0006">Figure 1</A> illustrates, this sort of thing may indeed be useful to other programmers.<P>
<h4><a name="0137_0006">Figure 1: Excerpt from Knuth's error log.</h4><P>
<pre>
  11 Mar 1978
  10 insert space before '(' on terminal when opening a new file.
  11 Put 'p &lt;- link(p)' into the loop of show_token_list, so that it
     doesn't loop forever.
  12 Shift the last item found by scan_tocs into the info field.
  13 Fix the previous bugfix: I shifted by the wrong amount.
  13 Mar 1978
  36 Introduce a new variable hang_first [later the sign of hang_after].
  37 Simplify the new code, realizing that if hang_indent = 0 then
     hang_first is irrelevant.
     Time sharing is very slow today, so I'm mostly reading technical
     reports while waiting THREE HOURS for compiler, editor, and loading
     routine.
  14 Mar 1978
     (Came in evening after sleeping most of day, to get computer at
     better time.)
     (Some day we will have personal computers and we will live more
     normally.)      8:30pm, began to enter corrections to yesterday's problems.
  53 Issue an error message for non-character in file name or font name.
  54 Display '...' for omitted stuff in show_context routine.</pre><P>
<P>
Knuth points out that his error log doesn't have the statistical virtues of pools of data from a large population of programmers and projects.  &quot;However, I do have one advantage that the authors of previous studies did not have; namely, the entire program for T[E]X has been published.  Hence I can give fairly precise information about the type and location of each error.&quot;  He adds, &quot;I believe that a detailed list gives important insights that cannot be gained from statistical summaries.&quot;<P>
The error log may have been useful to other programmers; the published source code surely has been.  And it has probably been useful to Knuth, too.  Cast your bread on the waters you'll get soggy bread, but cast your ideas on minds and you'll get new ideas.<P>
<h3><a name="0137_0007">The Risks of Raymond Kurzweil<a name="0137_0007"></h3><P>
In Raymond Kurzweil's stylish book, The Age of Intelligent Machines, he attaches to the section in which he discusses his own work the following epigraph, attributed to Eric Vogt: &quot;Success provides the opportunity for growth, and growth provides the opportunity to risk at a higher level.&quot;<P>
Kurzweil has taken a few risks in his life.  He started three companies to bring AI to different real-world applications.  He founded Kurzweil Computer Products in 1974 to solve the problem of omnifont optical character recognition.  That venture led to reading machines that have changed the lives of many blind people and launched the OCR industry.  In 1982, he founded Kurzweil Applied Intelligence to master automatic speech recognition.  Today, radiologists dictate the results of examinations hands-free using Kurzweil speech-recognition devices.  Later in 1982 Kurzweil founded Kurzweil Music Systems, inspired by a request from Stevie Wonder.  The result can be seen in the ads in any music magazine.<P>
All of these ventures were ridiculously ambitious, and in no case can it be said that Kurzweil has solved the problem he set out to solve.  Is this failure?  Hardly.<P>
Kurzweil summarizes his work with two points.  The goal of the work has been helping the handicapped and serving other useful social goals, and that was satisfying.  The other point, from which he seems to draw as much satisfaction, has to do with the rewards of working with diverse teams.<P>
All of the projects...have been highly interdisciplinary efforts and have required the dedication and talents of many brilliant individuals in a broad range of fields.  Invention today is very much a team effort and its success is a function of the quality of the individual members of the team as well as the quality of the group's communication.<P>
Drawing on diverse areas of expertise requires a kind of intellectual openness.  Kurzweil says it's worth it: &quot;Perhaps my greatest pleasure has been the opportunity to share in the creative process with the many outstanding men and women who have contributed to these endeavors.&quot;<P>
Well, yes, that does sound like 50 zillion other acknowledgments written or delivered at the completion of a project or onstage at the awards ceremony.  But that doesn't mean it doesn't mean anything.  It certainly means something to Kurzweil, who applied the same multiple-experts approach to software development.  In his March, 1978, Byte article on the technology of the Kurzweil Voice Writer, he says:<P>
...rather than select a single technique such as Markov modeling, dynamic time warping, robust feature analysis, or high-level feature extraction, the KVW technology incorporates multiple experts, each of which uses a somewhat different approach to the problem of large vocabulary speech recognition.<P>
This multiparadigmatic approach is also a kind of intellectual openness.<P>
<h3><a name="0137_0008">The Mind of Marvin Minsky<a name="0137_0008"></h3><P>
In Society of Mind, Marvin Minsky presents a model of the human mind based on this same image: the image of teams of experts working together.  Any model of the mind has to deal with how there can emerge from blind biological processes something like mind or intelligence or soul or personality or self or some such trait that we perceive as unitary.  Minsky faces the question.  &quot;How can intelligence emerge from nonintelligence?  To answer that, we'll show that you can build a mind from many little parts, each mindless by itself.&quot;<P>
Well, maybe &quot;expert&quot; isn't the right word.  Little parts, mindless by themselves, are not what we usually think of as experts.  But Minsky's mindless mind parts are possessed of expertise.  &quot;I'll call 'Society of Mind',&quot; he says, &quot;this scheme in which each mind is made up of many smaller processes.  These we'll call agents.  Each mental agent by itself can only do some simple thing that needs no mind or thought at all.  Yet when we join these agents in societies--in certain very special ways--this leads to true intelligence.&quot;<P>
Minsky's book is aimed at a broad audience, so his presentation makes some sacrifices to simplicity and clarity.  This can have the effect of making his argument seem to the knowledgeable reader either facile or obvious.  Facile because it skips over important points, obvious because it successfully hides what it is skipping over.  But I don't think that Minsky's model of the mind is obvious.  It isn't the most obvious model.<P>
It's easier, I think, to view the mind as having somebody in charge, to picture a hierarchical mental structure with a dispatcher sitting at the top.  That's the model implicit in the common use of words like &quot;self' and &quot;mind.&quot;  Minsky again:<P>
One common image of the Self suggests that every mind contains some sort of Voyeur-Puppeteer inside--to feel and want and choose for us the things that we feel, want, and choose.  But if we had those kinds of Selves, what would be the use of having Minds?  And, on the other hand, if Minds could do such things themselves, why have Selves?  Is this concept of a Self of any real use at all?  It is indeed--provided that we think of it not as a centralized and all-powerful entity, but as a society of ideas that include both our images of what the mind is and our ideals about what it ought to be.<P>
Minsky's Mind is an open mind.<P>
<h3><a name="0137_0009">The Economics of Richard Stallman<a name="0137_0009"></h3><P>
&quot;After nine years, people still don't get it.&quot;  So begins Simson Garfinkel's article on Richard Stallman in the premiere issue of Wired.<P>
Stallman, the legendary last true hacker of Steve Levy's Hackers, is the founder of the Free Software Foundation, the tireless and brilliant programmer at MIT's AI Lab in the '70s, and the author of EMACS.  Almost a decade ago, Stallman launched the GNU project to create a free, portable, open operating system that users could extend.  His intent was and is that GNU be an environment in which users share software as freely as researchers share ideas in a scientific community.  Or as freely as hackers at the MIT AI Lab shared code in the '70s.<P>
What is it that people don't get after nine years?  That Stallman's philosophy of free software isn't about giving away software; it's about the free flow of ideas.<P>
&quot;Stallman's vision of freedom is software that has no secrets,&quot; Garfinkel says.  &quot;It comes complete with source code so that anyone who gets it can take it apart, see how it works, and make changes.&quot;  The benefits of this kind of openness are clear enough.  Knuth's error log is useful, is meaningful, precisely because the source code is all available.  This master's lesson depends on that openness.  His books on T[E]X and Metafont are useful because of the source code in them.<P>
But Stallman has more in mind than that.  Garfinkel continues: &quot;But most important, people can share free software with their friends--just by making a copy--without having to pay royalties, shareware fees, or anything at all.&quot;<P>
That's piracy to most of the software-development community.  Stallman's view?  &quot;I don't think that people should ever make promises not to share with their neighbor.&quot;<P>
This view runs counter to some other deeply held notions, and Stallman knows it.  I saw him on CNN the other day, and he summed it up: &quot;Digital technology is on a collision course with the concept of ownership of information.&quot;  People, he said, naturally want to share with their friends.  If the law prohibits this generous, natural act, &quot;you're going to need a police state to enforce it.&quot;<P>
As we move into Cyberspace, onto the data highways that the Vice President envisions, the threat of an information police is one of the dangers we need to avoid.  Another is a kind of information range war.  Now, while there is a chance to avoid some of these problems, we need to be open to all sorts of ideas about how to manage that virtual space.  We need to try on different attitudes toward openness.<P>
And we can, like Richard Feynman, choose our attitude.  There are risks in openness of any kind: Neither T[E]X nor GNU looks like a model of profitable--or rapid--software development. And there are benefits: As Raymond Kurzweil's experience shows, the idea you need is probably in somebody else's head right now.<P>
Or maybe the idea resides in the act of collaboration.  Maybe we will discover that Cyberspace is a Society of Mind, and we humans are its Minskyan agents.<P>
Ah, but now I'm starting to sound like one of those people Bill Moyers interviews.<P>
<h3><a name="0137_000a">Open Books<a name="0137_000a"></h3><P>
<h3><a name="0137_000b">On the innocence of Richard Feynman:<a name="0137_000b"></h3><P>
Feynman, Richard P. Surely You're Joking, Mr. Feynman!: Adventures of a Curious Character. New York, NY: Bantam Books, 1985.<P>
Feynman, Richard P. What Do You Care What Other People Think?: Further Adventures of a Curious Character.  New York, NY: Bantam Books, 1988.<P>
Gleick, James.  Genius: The Life and Science of Richard Feynman.  New York, NY: Pantheon Books, 1992.<P>
Thompson, Charles &quot;Chic.&quot;  What a Great Idea!: The Key Steps Creative People Take. HarperCollins, 1992.<P>
<h3><a name="0137_000c">On the errors of Donald Knuth:<a name="0137_000c"></h3><P>
Knuth, Donald E. Literate Programming.  Stanford University: Center for the Study of Language and Information, 1992.<P>
Knuth, Donald E. Metafont: The Program, Volume D of Computers and Typesetting.  Reading, MA: Addison-Wesley, 1986.<P>
Knuth, Donald E. T[E]X: The Program, Volume B of Computers and Typesetting.  Reading, MA: Addison-Wesley, 1986.<P>
<h3><a name="0137_000d">On the risks of Raymond Kurzweil:<a name="0137_000d"></h3><P>
Kurzweil, Raymond.  The Age of Intelligent Machines.  Cambridge, MA: MIT Press, 1990.<P>
Kurzweil, Raymond.  &quot;The Technology of the Kurzweil Voice Writer.&quot;  Byte (March, 1986)<P>
<h3><a name="0137_000e">On the mind of Marvin Minsky:<a name="0137_000e"></h3><P>
Minsky, Marvin.  The Society of Mind.  Englewood Cliffs, NJ: Simon and Schuster, 1985-1986.<P>
<h3><a name="0137_000f">On the economics of Richard Stallman:<a name="0137_000f"></h3><P>
Garfinkel, Simson L. &quot;Is Stallman Stalled?&quot; Wired (January, 1993).<P>
Levy, Steven.  Hackers: Heroes of the Computer Revolution.  Garden City, NY: Anchor Press/Doubleday, 1985.<P>
<h3><a name="0137_0010">On the culture of cyberspace:<a name="0137_0010"></h3><P>
Benedikt, Michael.  Cyberspace: First Steps.  Cambridge, MA: MIT Press, 1992.<P>
Gengle, Dean.  The Netweaver's Sourcebook: A Guide to Micro Networking and Communications. Reading, MA: Addison-Wesley, 1984.<P>


<HR><P>Copyright &copy; 1993, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
