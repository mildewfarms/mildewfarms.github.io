<HTML>
<META NAME="year" CONTENT="1988">
<HEAD>

<TITLE>APR88: RUNNING LIGHT</TITLE></HEAD>
<body bgcolor="FFFFFF">
<h1>RUNNING LIGHT<a name="009d_0003"><a name="009d_0003"></h1><P>
<h3><a name="009d_0001"><a name="009d_0000">Tyler Sperry</h3><P>
<a name="009d_0002"><a name="009d_0000">As my friend Ezra Shapiro has pointed out, when it comes to Artificial Intelligence in personal computer software, we've still got a long way to go. For all our simulations of neural nets and expert systems, our machines still seem woefully inadequate in reasoning power. Today someone told me about an advanced communications package that recognizes when it's been invoked without being configured and actually prompts the user for the information it needs. While I acted suitably impressed, I couldn't help wondering why the program couldn't check the hardware, access a database containing parameters and phone numbers, and furnish the user with a list of assumptions for approval. It could be that I just expect too much; the program my friend described is apparently considered a fairly sophisticated program by his peer group.<P>
Yes, Ezra, still we have a long way to go.<P>
DDJ readers, as a class, probably have less road to travel than other programmers. This issue, after all, has a couple of articles designed to stimulate your interest in expanding what we commonly describe as AI languages. As we investigated articles for this issue, I discovered that for many people the line between AI languages and &quot;ordinary&quot; languages has blurred. For Bill and Bev Thompson, authors of &quot;Topics in Knowledge-Based Languages,&quot; (page 40 in this issue), and authors of KnowledgePro,<P>
KnowledgeMaker, and MicroExpert, the distinction is no longer relevant to their work--they do most of their expert system work in an extended version of Pascal. Their article demonstrates that real world problems often require more flexibility' from the language (and by extension the programmer) than you'd expect from the standard AI discussion. After talking it over for hours, Bev said, they'd had to admit that whatever you do, the program will eventually be translated into binary, and they've decided they no longer &quot;believe&quot; in AI languages, per se.<P>
While on the subject of unbelievable things, you'll probably want to' check out Edward Yourdon's newsletter, American Programmer. The premier issue just arrived and describes the publication as &quot;dedicated to casting a caustic eye on the American software scene.&quot; It certainly does that! While Yourdon's perspective is a little more MIS oriented than many of us prefer, the newsletter is filled with perceptive commentary and intelligent discussion of such topics as the economics of the DP industry, and the issues of programmer productivity and costs.<P>
One of the more startling forecasts in the premier issue is what Yourdon admits a rash prediction, the thesis that &quot;the American programmer is about to go the way of the dinosaur and the dodo bird.&quot; Yourdon is talking here about programmers in the corporate environment, and he has a substantial body of facts and figures to buttress his thesis that foreign competition is about to do for programmers what it did for the American auto worker a few years back.<P>
Obviously, at a charter subscription rate of (only) $295, this newsletter is not for the casual programmer. But a subscription for the company library would be a sound investment. It's good to be occasionally reminded that there are larger issues than the product announcements, advertisements, and reviews that many industry publications dwell on.<P>
Tyler Sperry editor<P>

<P>
<P>
</pre></BODY></HTML>
