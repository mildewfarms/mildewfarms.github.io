<HTML>
<META NAME="year" CONTENT="1988">
<HEAD>

<TITLE>NOV88: EDITORIAL</TITLE></HEAD>
<body bgcolor="FFFFFF">
<h1>EDITORIAL<a name="01e0_0002"><a name="01e0_0002"></h1><P>
<a name="01e0_0001"><a name="01e0_0000">If a single word sums up the current state of computing, that word is confusion. It's hard to remember a time when the PC industry was in a more confounding state of affairs. Now, more than ever, there is a bewildering array of choices in everything from operating systems to hardware architectures. And the choices aren't getting any easier.<P>
Take a look at operating systems, for example. It was only a few years ago that developers had a scarcity of options. There was CP/M, AppleDOS, and a few other systems available--TRS-DOS (boy, there's a stab from the past) was one I worked with--but for the most part, choices were few and the stakes relatively low.<P>
Today, developers must decide between DOS, OS/2, Unix (pick your favorite flavor), the Macintosh, and a host of other more specialized alternatives. If you pick the wrong development platform, the results may not be a pretty sight.<P>
In the same sense, the Macintosh was basically the only dominant windowing system three or four years ago. Today, there's at least a dozen, including Windows/Presentation Manager, the Macintosh, X-Windows, Rooms, GEM, and New Wave, to mention a few.<P>
Now, throw in a wildcard, like Display Postscript (Steve Jobs' choice), and take into consideration the rumor that former operating system rivals Digital Research and Microsoft are considering offering DRI's GEM application-development tool kit as a development tool for Presentation Manager. Now you're faced with a perplexing array of opportunities or quagmires, depending on your perspective.<P>
And things are just as confusing on the hardware side. We've somehow moved from a couple of accepted architectures (the AT bus and a closed-system Mac) to a plethora of standards that include the Micro Channel Architecture (MCA), the NuBus, and, more recently, the Extended Industry Standard Architecture (EISA). (EISA is a 32-bit extension of the AT bus that has been endorsed by several PC manufacturers--IBM not among them--that supposedly provides the performance benefits of the MCA, yet is compatible with existing AT-bus cards.) Not to mention, last month's introduction of Steve Jobs' NeXT workstation and the whisperings about an 80386 machine waiting in the wings at Apple. I'm getting an ulcer just writing about it.<P>
Now consider the various incarnations and implementations of programming languages. Should you go with C or begin thinking about C++? What about Modula-2? There are some powerful new Modula compilers out there that deserve consideration, and the renewed promise of Basic (hearken back to Bill Gates' remarks about Object-Basic) as a serious development platform.<P>
Anecdotically, a developer I know wrote a complicated Windows application in Pascal. He wound up rewriting the entire project after he figured out that Modula-2 would enable him to better accomplish what he was trying to do.<P>
Regardless of what the soothsayers predicted a couple of years ago, nothing about computing--from either the developer's or the end user's perspective--is getting any easier. Now, I'm not complaining about more powerful systems, you understand, or about the diversity of choices we're faced with today. I'll put it this way, it's better to be rich and healthy than sick and poor.<P>
The point to all of this is that developing for and porting between different environments is no easy matter. Developers must choose wisely and well. Some platforms won't be alive and kicking tomorrow. For that matter, neither will developers who've made the wrong choice.<P>
Jonathan Erickson editor-in-chief<P>

<P>
<P>
</pre></BODY></HTML>
