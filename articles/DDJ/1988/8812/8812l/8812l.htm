<HTML>
<META NAME="year" CONTENT="1988">
<HEAD>

<TITLE>DEC88: EDITORIAL</TITLE></HEAD>
<body bgcolor="FFFFFF">
<h1>EDITORIAL<a name="0218_0003"><a name="0218_0003"></h1><P>
<h3><a name="0218_0001"><a name="0218_0000">Jonathan Erickson</h3><P>
<a name="0218_0002"><a name="0218_0000">By now, you've probably read more about Steve Jobs' NeXT computer than you ever wanted to read. So far the computer (and Jobs) have been on the cover of several magazines. At least two books about it are in the works, and I've heard that at least three more book publishers are pursuing NeXT titles. Much of the initial coverage of the machine has been positive because most folks aren't quite sure yet about the nature of the beast. As programmers begin working with the machine (and reveal their findings), we should start seeing more in depth analysis of the computer.<P>
Until then, the significance of the NeXT computer, particularly when compared to other computers introduced recently, is that the NeXT system seems to deserve many of the accolades that have been heaped upon it. The NeXT is a fascinating computer and, even if it ultimately fails in the marketplace (and I have no reason to expect that it will), it is an important milestone because NeXT significantly ups the stakes in the computer game.<P>
Even though it's already been argued that, technologically speaking, the computer is less innovative than NeXT would like us to believe (after all, digital signal processing chips have been around a long time, and the NeXT computer doesn't even use the most recent version of the Motorola chip --not to mention, as Jobs readily admits, the architecture itself is based on existing mainframe design principles), the NeXT computer is still more than an incremental step forward. Because of this, computer manufacturers will have to react to it in one way or another over the next couple of years or face being left behind over the next decade.<P>
While it's the hardware of the system that first catches your attention --the 256-Mbyte erasable read/write optical storage drive, the &quot;megapixel&quot; display, the two VLSI chips that provide a mainframe-on-a-chip, the built-in digital signal processing chip, the 68030 CPU, the 400 DPI laser printer, and so on it is still the software that will determine end-user acceptance (or dismissal) of the computer. And therein lies our interest.<P>
For starters, Jobs and his cohorts built the system around Display Postscript and Unix, specifically the Mach version of the operating system. Next, they provided an easy-to-develop and easy-to-use object-oriented software environment called NeXTStep (written in Stepstone's Objective-C) that consists of a window server (which manages all onscreen image drawing, using Display Postscript), a workspace manager (which provides a graphical user interface [UI], using menus and icons to hide the complexity of Unix), an application kit (with pre-defined and userdefined objects to construct UIs), and an interface builder (to interactively create UIs). As Jobs correctly points out, most of the developers' efforts currently deal with the user interface. Jobs claims that the NeXTStep environment will cut this down to next to nothing so that programmers can devote their time to developing innovative applications instead of fighting UIs.<P>
In one overly simplistic comparison, Jobs has compared the 18 or so NeXTStep objects to the over 400 Macintosh toolbox routines. His point is that it is easier for developers to create applications if they have fewer functions to worry about. It seemed, however, that his distinction wasn't quite on the mark because what NeXTStep seems aimed at is &quot;end-user programming&quot; not &quot;professional software development.&quot; This isn't to say that end-user programming isn't important to the success of the machine (the argument could be made that end-user programming is what computing is all about anyway), but what Jobs didn't talk about was who will create the toolkits for end-user programmers and how those toolkits will be developed.<P>
Putting the technical mysteries of the machine aside, there are all kinds of unanswered questions, particularly for software developers. For one thing, software developers must decide whether or not the higher education market (the avowed market for the NeXT computer) is big enough to support a specialized computer system. Jobs insists that it is, calling higher education a Fortune 500 company under another name, and he is betting his millions on that premise. However, to the probable relief of thirdparty developers, Jobs is hedging his bets because he has licensed the software (application-development tools and end-user interface software) to IBM, which intends on running it on its AIX Unix-based RISC and 80386 systems. Presumably, this means Jobs will sell NeXT machines to universities while IBM will sell its boxes and NeXT-compatible software to the rest of the world. All that is necessary to run software written for one system that will run on its counterpart is re-compilation.<P>
Another confounding issue that comes to mind is the problem of software distribution. Are developers to be expected to distribute software on optical disks? That's a pretty expensive means, considering the end-user costs of blank disks will at least $50. Granted, the NeXT is a network-based workstation so most (expensive) software will be site-licensed. If there's one thing the PC revolution has shown, however, is that computer users demand the concept of one-person/one-machine, and they will want their own tools that may not be available on the network. And even if the NeXT machine had a floppy disk drive, many of the advanced applications that will be developed would require more disks than is practical. (CD-ROMs are one inexpensive possibility, as companies like Microsoft have already gleefully pointed out, and the NeXT does have those slots and SCSI port connecting peripheral devices.) Another concern is back-up procedures. One drive, one machine. How do you safely store your data? The easy answer is to back up the information onto the net, but that may not satisfy a lot of folks.<P>
In short, NeXT has recognized that useful, yet powerful, software development tools are central to the success of any computer, and the company should be commended for providing more than just lip service to this concept. NeXT should also be commended for pushing the technology farther (or packaging it more elegantly) than many of us ever expected it would, and bringing us a little closer to what computing may be really about.<P>

<P>
<P>
</pre></BODY></HTML>
