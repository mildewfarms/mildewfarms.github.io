<HTML>
<META NAME="year" CONTENT="1995">

<HEAD>
<TITLE>August 1995 - C/C++ PROGRAMMING</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>August 1995 - C/C++ PROGRAMMING</H1>
<hr>
<h2>FEATURES </h2><P>
<h3><a href="9508a/9508a.htm">GENERIC PROGRAMMING AND THE C++ STL</A></h3><P>
<i>by Dan Zigmond</i><P>
To illustrate how you can use the C++ Standard Template Library, Dan presents a filter program called &quot;Lexicon&quot; that takes ASCII text and outputs an alphabetized list of all the unique words in that text, ignoring case and punctuation. <P>
<h3><a href="9508b/9508b.htm">STANDARD C: AN UPDATE</A></h3><P>
<i>by Rex Jaeschke </i><P>
Rex, chair of the X3J11 committee on ANSI C, reports on recent developments concerning the C language.<P>
<h3><a href="9508c/9508c.htm">A POOLING MEMORY MANAGER FOR C++</A></h3><P>
<i>by Kirit Saelensminde</i><P>
While building a high-performance, object-oriented raytracer, Kirit discovered that C++ memory allocation isn't all it should be. Here's his alternative.<P>
<h3><a href="9508d/9508d.htm">IMPLEMENTING BIT VECTORS IN C</A></h3><P>
<i>by James Blustein</i><P>
Bit vectors provide an efficient means of implementing arrays of Boolean values. James originally implemented bit vectors to hash document signatures and analyze statistics.<P>
<h3><a href="9508e/9508e.htm">ALPHA BLENDING GRAPHIC IMAGES</A></h3><P>
<i>by Tim Wittenburg</i><P>
Alpha blending (sometimes called &quot;image compositing&quot;) lets you combine two or more images so smoothly that people can't tell that the resulting image is a composite. <P>
<h3><a href="9508f/9508f.htm">JAVA AND INTERNET PROGRAMMING</A></h3><P>
<i>by Arthur van Hoff</i><P>
Java, a language designed for Internet development, is an object-oriented, multithreaded, portable, dynamic language that's similar to C, yet simpler than C++.<P>
<h3><a href="9508g/9508g.htm">JPEG-LIKE IMAGE COMPRESSION, PART 2</A></h3><P>
<i>by Craig A. Lindley</i><P>
In this month's installment of his two-part article, Craig describes how the image-compression technique he calls &quot;CAL&quot; differs from JPEG. He then presents the C++ classes on which CAL is built.<P>
<h3><a href="9508h/9508h.htm">THE C++ STANDARD LIBRARY</A></h3><P>
<i>by Michael J. Vilot</i><P>
After five years, the ANSI and ISO C++ committees have finally released their first official document. Michael examines the most commonly used components of the proposed C++ Standard Library: <I>iostream</I>s, strings, and some of the containers, iterators, and algorithms included in the STL.<P>
<h2>EMBEDDED SYSTEMS      </h2><P>
<h3><a href="9508i/9508i.htm">68HC05-BASED SYSTEM DESIGN </A></h3><P>
<i>by Willard J. Dickerson</i><P>
From a driver's perspective, antilock brake systems prevent car wheels from locking. From an embedded-system designer's viewpoint, they are complex control applications requiring sensors, software, and microcontrollers such as the Motorola 68HC05B6.<P>
<h2>NETWORKED SYSTEMS </h2><P>
<h3><a href="9508j/9508j.htm">IMPLEMENTING DISTRIBUTED OBJECTS</A></h3><P>
<i>by Ernest N. Prabhakar</i><P>
Ernest uses NeXT's PDO and Objective-C to implement a simple client-server application that packages a legacy application into an interoperable object and its client. <P>
<h2>EXAMINING ROOM </h2><P>
<h3><a href="9508k/9508k.htm">EXAMINING SYMANTEC C++ 7.0</A></h3><P>
<i>by Ira Rodens</i><P>
Among other features, this recent incarnation of Symantec C++ sports a visual programming environment, class and hierarchy editors, distributed build tools, and support for templates, exceptions, and run-time type identification. Compiler author Walter Bright adds tips and techniques for optimizing C++ code.<P>
<h2>PROGRAMMER'S WORKBENCH </h2><P>
<h3><a href="9508l/9508l.htm">DEVELOPING C++ NLMs</A></h3><P>
<i>by W. Dale Cave </i><P>
NetWare Loadable Modules (NLMs) are 32-bit utilities that dynamically link into NetWare. Dale examines the complexity of writing NLMs in C++, then presents DSBROWSE, a utility that lets you view (or &quot;walk&quot;) the NetWare Directory Services tree. <P>
<h2>COLUMNS </h2><P>
<h3><a href="9508m/9508m.htm">PROGRAMMING PARADIGMS</A></h3><P>
<i>by Michael Swaine</i><P>
Michael walks the Cyberdog as he reflects on this year's Apple Worldwide Developer's Conference and Apple's Internet strategy.<P>
<h3><a href="9508n/9508n.htm">C PROGRAMMING</A></h3><P>
<i>by Al Stevens </i><P>
GNU C++ from the Free Software Foundation is part of a set of programming tools and utilities available from many online locations and several commercial CD-ROMs. After working with the compiler, Al decides this toolset is hard to beat--if you need a C++ compiler that's freely distributable and royalty-free. <P>
<h3><a href="9508o/9508o.htm">ALGORITHM ALLEY </A></h3><P>
<i>edited by Bruce Schneier </i><P>
In this month's column, Peter Pearson presents a fascinating look at how biochemical techniques can be applied to classical computer problems such as combinatorial optimization.<P>
<h3><a href="9508p/9508p.htm">PROGRAMMER'S BOOKSHELF </A></h3><P>
<i>by Lynne Greer Jolitz</i><P>
When you get on the net, who can you trust? Lynne examines several new books that address this question: <I>Network Security: Private Communications in a Public World</I>, by Charlie Kaufman, Radia Perlman, and Michael Speciner; <I>E-Mail Security</I>, by Bruce Schneier; <I>Network Security</I>, by Steven Shaffer and Alan Simon; and <I>Network Security: How to Plan for It and Achieve It</I>, by Richard H. Baker.<P>
<h2>FORUM</h2><P>
<h3><a href="9508q/9508q.htm">EDITORIAL</A></h3><P>
<i>by Jonathan Erickson</i><P>
<h3><a href="9508r/9508r.htm">LETTERS</A></h3><P>
<i>by you</i><P>
<h3><a href="9508s/9508s.htm">SWAINE'S FLAMES</A></h3><P>
<i>by Michael Swaine</i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9508t/9508t.htm">OF INTEREST</A></h3><P>
<i>by Monica E. Berg</i><P>

<HR><P>Copyright &copy; 1995, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
