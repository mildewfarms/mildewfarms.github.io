<HTML>
<META NAME="year" CONTENT="1995">

<HEAD>
<TITLE>December 1995 - VISUAL PROGRAMMING</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>December 1995 - VISUAL PROGRAMMING</H1>
<hr>
<h2>FEATURES </h2><P>
<h3><a href="9512a/9512a.htm">VISUAL PROGRAMMING IN 3-D</A></h3><P>
<i>by Marc Najork</i><P>
Many current development environments call themselves &quot;visual,&quot; but true visual-programming languages are built around executable graphics. To examine this concept, Marc presents Cube, a 3-D visual-programming language that supports recursion, function mapping, and user-defined types.<P>
<h3><a href="9512b/9512b.htm">VISUALLY CONSTRUCTING DELPHI COMPONENTS</A></h3><P>
<i>by Al Williams</i><P>
Although Delphi provides programmers with a first-class, visual application-development environment, it doesn't do much for component builders. CompBld, the form-based Delphi program Al presents here, takes up the slack, helping you create powerful new components. <P>
<h3><a href="9512c/9512c.htm">EXTENDING VISUAL BASIC'S COMM CONTROL</A></h3><P>
<i>by Michael Floyd</i><P>
The communication control that comes with Visual Basic 4.0 works fine when streaming text, but doesn't support binary transfers. Michael extends this control by adding support for Xmodem protocol.<P>
<h3><a href="9512d/9512d.htm">A C++ INTEGRATOR CLASS</A></h3><P>
<i>by Darrel J. Conway</i><P>
The C++ class presented here is designed to help you solve differential equations by enabling rapid incorporation of new integration methods. Darrel focuses on adaptive stepsize Runge-Kutta integrators.<P>
<h3><a href="9512e/9512e.htm">EXAMINING THE WINDOWS 95 LAYERED FILE SYSTEM</A></h3><P>
<i>by Mark Russinovich and Bryce Cogswell</i><P>
One of the biggest differences between Windows 95 and its predecessors is the Windows 95 &quot;layered&quot; approach to file-system management. Our authors explore the file system, focusing on the &quot;vendor supplied driver&quot; (VSD) layer. <P>
<h2>EMBEDDED SYSTEMS </h2><P>
<h3><a href="9512f/9512f.htm">TERSE: A TINY REAL-TIME OPERATING SYSTEM</A></h3><P>
<i>by Barry Kauler</i><P>
Barry presents an 8051-implementation of TERSE, a &quot;Tiny Embedded Real-time Software Environment&quot; that's only about 260 bytes in size.<P>
<h2>NETWORKED SYSTEMS </h2><P>
<h3><a href="9512g/9512g.htm">AN APPLICATION-ACCESS SECURITY MODEL</A></h3><P>
<i>by Mark Robinson</i><P>
One roadblock at the beginning of any client/server development project is how to implement access security. Mark uses PowerBuilder to present an integrated, generic, reusable model of network security.<P>
<h2>EXAMINING ROOM </h2><P>
<h3><a href="9512h/9512h.htm">VToolsD FOR VxD DEVELOPMENT</A></h3><P>
<i>by Charles Mirho</i><P>
VToolsD, a C/C++ toolkit for writing virtual device drivers (VxDs), is designed as a replacement for Microsoft's DDK. Charles shows you how to use the toolkit to visually write VxDs. <P>
<h2>PROGRAMMER'S WORKBENCH </h2><P>
<h3><a href="9512i/9512i.htm">VISUAL PROGRAMMING WITH REUSABLE OBJECTS</A></h3><P>
<i>by Carol Jones and Morgan Kinne</i><P>
VisualAge's object-oriented development environment is based on a construction-from-parts paradigm. Our authors use VisualAge to design and implement a timer part that runs for a certain length of time, then notifies other parts when that time has expired. <P>
<h2>COLUMNS </h2><P>
<h3><a href="9512j/9512j.htm">PROGRAMMING PARADIGMS </A></h3><P>
<i>by Michael Swaine </i><P>
Before looking at a variety of little languages available for the Macintosh, Michael examines Michael Malone's new book <I>The Microprocessor: A Biography</I>.<P>
<h3><a href="9512k/9512k.htm">C PROGRAMMING </A></h3><P>
<i>by Al Stevens </i><P>
Last month Al introduced his Raycaster project, a DOS raycasting game engine written in C++. This month he makes some additions to the project and ports it to Windows. <P>
<h3><a href="9512l/9512l.htm">ALGORITHM ALLEY </A></h3><P>
<i>edited by Bruce Schneier </i><P>
Gene Callahan discusses how to generate sequential keys in an arbitrary radix.  <P>
<h3><a href="9512m/9512m.htm">PROGRAMMER'S BOOKSHELF </A></h3><P>
<i>by Ray Duncan</i><P>
Stephen Talbott's <I>The Future Does Not Compute</I> and Clifford Stoll's <I>Silicon Snake Oil</I> present contrasting views of cyberspace.<P>
<h2>FORUM</h2><P>
<h3><a href="9512n/9512n.htm">EDITORIAL</A></h3><P>
<i>by Jonathan Erickson</i><P>
<h3><a href="9512o/9512o.htm">LETTERS</A></h3><P>
<i>by you</i><P>
<h3><a href="9512p/9512p.htm">SWAINE'S FLAMES</A></h3><P>
<i>by Michael Swaine</i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9512q/9512q.htm">OF INTEREST</A></h3><P>
<i>by Monica E. Berg</i><P>
<HR><P>Copyright &copy; 1995, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
