<HTML>
<META NAME="year" CONTENT="1995">

<HEAD>
<TITLE>October 1995 - OBJECT ORIENTED PROGRAMMING</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>October 1995 - OBJECT ORIENTED PROGRAMMING</H1>
<hr>
<h2>FEATURES </h2><P>
<h3><a href="9510a/9510a.htm">AUTOMATING ASSOCIATION IMPLEMENTATION IN C++</A></h3><P>
<i>by David M. Papurt</i><P>
David compares several unidirectional and bidirectional pointer-based methods for implementing one-to-one associations: a direct, handwritten implementation, a modular approach exploiting inheritance, and template-based implementations. <P>
<h3><a href="9510b/9510b.htm">OBJECT-ORIENTED FACILITIES IN ADA</A></h3><P>
<i>by David L. Moore</i><P>
With the adoption of the ISO/ANSI Ada 95 standard, Ada supports object-oriented programming features such as class-wide objects, private types and child packages, multiple inheritance, and more.<P>
<h3><a href="9510c/9510c.htm">PARTIAL REVELATION AND MODULA-3</A></h3><P>
<i>by Steve Freeman</i><P>
When compared to strongly typed languages, Modula-3 gives you greater flexibility in class reuse. Steve examines Modula-3's type system and describes how you can take advantage of its power.<P>
<h3><a href="9510d/9510d.htm">OBJECT-ORIENTED PROGRAMMING IN S</A></h3><P>
<i>by Richard Calaway</i><P>
S, a high-level, object-oriented language, was originally designed for data analysis and graphics. As Richard points out, however, the S language is useful for a wide range of applications. <P>
<h3><a href="9510e/9510e.htm">COBOL '97: A STATUS REPORT</A></h3><P>
<i>by Henry Saade and Ann Wallace</i><P>
The proposed Cobol '97 standard includes object-oriented features such as class definition, subclassing, data encapsulation, and polymorphism. Our authors focus on the object-oriented extensions to Cobol, and cover other proposed features.<P>
<h3><a href="9510f/9510f.htm">FILE-STREAMING CLASSES IN C++</A></h3><P>
<i>by Kirit Saelensminde</i><P>
Kirit implements a C++ file-streaming system that, unlike MFC or OWL, doesn't require a common superclass. This approach leads to less overhead and greater portability.<P>
<h3><a href="9510g/9510g.htm">INSIDE MFC SERIALIZATION</A></h3><P>
<i>by Jim Beveridge</i><P>
The Microsoft Foundation Class Library implements a typesafe serialization mechanism that is both fast and flexible. Jim takes an in-depth look at how this mechanism works -- and examines how you can get the most out of it.<P>
<h2>EMBEDDED SYSTEMS </h2><P>
<h3><a href="9510h/9510h.htm">INSIDE FLASH MEMORY</A></h3><P>
<i>by Brian L. Dipert</i><P>
Direct-execute flash memory systems don't require the gigabyte hard disks and 64-Mbit DRAM arrays common in desktop systems.<P>
<h2>NETWORKED SYSTEMS </h2><P>
<h3><a href="9510i/9510i.htm">ENVIRONMENT VARIABLES AND WINDOWS 3.1</A></h3><P>
<i>by John (Fritz) Lowrey</i><P>
Nothing can give network administrators a headache like several hundred networked computers which need to run software that demands customized run-time environments. To make the job even more difficult, using a single environment space in the Windows system area for all programs is dangerous, not to mention that environment handling under Windows 3.1 is poorly documented. <P>
<h2>EXAMINING ROOM </h2><P>
<h3><a href="9510j/9510j.htm">EXAMINING CA-VISUAL OBJECTS</A></h3><P>
<i>by Rod da Silva</i><P>
CA-Visual Objects is an application-development environment that sports an incremental, native-code compiler, visual painters and editors, an advanced, active, repository-based storage system, and an object-oriented language that allows for optional strong typing and full object orientation. <P>
<h2>PROGRAMMER'S WORKBENCH</h2><P>
<h3><a href="9510k/9510k.htm">POWERBUILDER NVOs</A></h3><P>
<i>by Mark Robinson</i><P>
Quite possibly, Non-Visual User Objects (NVOs) are PowerBuilder's most useful tool for creating true object-oriented applications. Mark examines the effective use of NVOs and their role in application development. <P>
<h2>COLUMNS </h2><P>
<h3><a href="9510l/9510l.htm">PROGRAMMING PARADIGMS </A></h3><P>
<i>by Michael Swaine </i><P>
Michael takes a look at Sun's HotJava Web browser, as well as Java, the programming language it was written in.<P>
<h3><a href="9510m/9510m.htm">C PROGRAMMING </A></h3><P>
<i>by Al Stevens </i><P>
Al wraps up &quot;MidiFitz,&quot; a Windows-based C++ program that uses MIDI to emulate a jazz piano player's rhythm section in real time. MidiFitz examines the notes being played, deduces a musical chord, and plays a bass line through the MIDI system.<P>
<h3><a href="9510n/9510n.htm">ALGORITHM ALLEY </A></h3><P>
<i>edited by Bruce Schneier </i><P>
This month, Louis Plebani examines search procedures that enable you to obtain the common fraction approximation of real numbers. In doing so, he focuses on number theories such as Farey Sequences.<P>
<h3><a href="9510o/9510o.htm">PROGRAMMER'S BOOKSHELF </A></h3><P>
<i>by Ray Vald&eacute;s</i><P>
A good C++ book can be hard to find. Ray looks at some of the better ones.<P>
<h2>FORUM</h2><P>
<h3><a href="9510p/9510p.htm">EDITORIAL</A></h3><P>
<i>by Jonathan Erickson</i><P>
<h3><a href="9510q/9510q.htm">LETTERS</A></h3><P>
<i>by you</i><P>
<h3><a href="9510r/9510r.htm">SWAINE'S FLAMES</A></h3><P>
<i>by Michael Swaine</i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9510s/9510s.htm">OF INTEREST</A></h3><P>
<i>by Monica E. Berg</i><P>
<HR><P>Copyright &copy; 1995, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
