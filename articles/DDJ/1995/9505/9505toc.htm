<HTML>
<META NAME="year" CONTENT="1995">

<HEAD>
<TITLE>May19:95 - OPERATING SYSTEMS</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>May19:95 - OPERATING SYSTEMS</H1>
<hr>
<h2>FEATURES </h2><P>
<h3><a href="9505a/9505a.htm">IMPLEMENTING LOADABLE KERNEL MODULES FOR LINUX</A></h3><P>
<i>by Matt Welsh</i><P>
The most recent release of Linux, a freely distributed UNIX-like operating system, supports dynamically loaded kernel modules. Matt describes the dynamic-kernel-module implementation, concentrating on the steps required to load a module on a running system. <P>
<h3><a href="9505b/9505b.htm">SHARED MEMORY AND MESSAGE QUEUES</A></h3><P>
<i>by Richard B. Lam</i><P>
Richard presents C++ classes for cross-platform coding of named shared memory and message queues. In doing so, he supports interprocess-communication mechanisms for OS/2, AIX, and Windows NT. <P>
<h3><a href="9505c/9505c.htm">A CROSS-PLATFORM BINARY DIFF </A></h3><P>
<i>by Kris Coppieters</i><P>
BinDiff is a utility that compares two versions of a binary file and creates a diff file containing the differences. Because Kris built BinDiff from a single C source file, it will compile on UNIX, OS/2, DOS, and the Macintosh. <P>
<h3><a href="9505d/9505d.htm">MAPMAN: BUILDING WINDOWS SYMBOLS FILES</A></h3><P>
<i>by Joseph Hlavaty</i><P>
Joe presents MapMan, a Windows map-file manager that lets you build .SYM files for any 16-bit Windows executable, including the DLLs that make up Windows itself. <P>
<h3><a href="9505e/9505e.htm">LIGHTWEIGHT TASKS IN C</A></h3><P>
<i>by Jonathan Finger</i><P>
While most modern operating systems allow multiple threads within a process, earlier-generation systems do not. Jonathan presents a multithreading package that allows for cooperatively multitasked threads within a single process for operating systems that do not explicitly support threads.<P>
<h3><a href="9505f/9505f.htm">WINDOWS 95 COMMON CONTROLS</A></h3><P>
<i>by Vinod Anantharaman</i><P>
Windows 95 GUI building blocks, collectively called &quot;common controls,&quot; give you reusable tools for everything from toolbars and tree controls to spin boxes and progress indicators.<P>
<h3><a href="9505g/9505g.htm">BOB AS A MACRO PROCESSOR LIBRARY</A></h3><P>
<i>by Brett Dutton</i><P>
Macro languages are user-programmable interfaces to applications. Brett adds to David Betz's original Bob an API that turns a stand-alone Bob interpreter into a macro processor library. David Betz then presents a new version of Bob that runs as a Windows DLL.<P>
<h3><a href="9505h/9505h.htm">PORTABLE SCREEN HANDLING</A></h3><P>
<i>by Matt Weisfeld</i><P>
Matt presents routines in C, Pascal, Fortran, and Basic for using ANSI escape sequences on a variety of platforms.<P>
<h2>EMBEDDED SYSTEMS </h2><P>
<h3><a href="9505i/9505i.htm">EFFICIENT MC68HC08 PROGRAMMING</A></h3><P>
<i>by Rand Gray and Deepak Mulchandani</i><P>
Rand and Deepak examine two basic optimizations for the Motorola MC68HC08 microcontroller: common-subexpression elimination and constant-value propagation. <P>
<h2>NETWORKED SYSTEMS </h2><P>
<h3><a href="9505j/9505j.htm">ROLE-BASED NETWORK SECURITY</A></h3><P>
<i>by William F. Jolitz and Lynne Greer Jolitz</i><P>
Role-based security is a mechanism orthogonal to the authentication, encryption, and threat-detection mechanisms implemented in most operating systems. Our authors describe how this minimal mandatory-access-control policy is implemented in the 386BSD operating system.<P>
<h2>EXAMINING ROOM </h2><P>
<h3><a href="9505k/9505k.htm">INSIDE THE OLE 2 SDK</A></h3><P>
<i>by Ira Rodens</i><P>
Ira presents techniques for building an OLE client application using the Microsoft OLE 2 SDK. The application allows embedded objects to be placed within a container, then moved, sized, and saved.<P>
<h2>PROGRAMMER'S WORKBENCH </h2><P>
<h3><a href="9505l/9505l.htm">PHOTON AND QNX</A></h3><P>
<i>by Peter D. Varhol</i><P>
Photon is a windowing system specifically designed for the QNX operating system. Peter uses the Application Builder, Photon's VB-like development environment, to build a graphical QNX application.<P>
<h2>COLUMNS </h2><P>
<h3><a href="9505m/9505m.htm">PROGRAMMING PARADIGMS </A></h3><P>
<i>by Michael Swaine</i><P>
Before examining the pros and cons of visual programming, Michael mulls over the virtues of monkey wrenches.<P>
<h3><a href="9505n/9505n.htm">C PROGRAMMING </A></h3><P>
<i>by Al Stevens</i><P>
Al wraps up his D-Flat project by putting a C++ wrapper called &quot;DFWrap&quot; around D-Flat. In doing so, he rewrites his IMail program in C++.<P>
<h3><a href="9505o/9505o.htm">ALGORITHM ALLEY </A></h3><P>
<i>edited by Bruce Schneier</i><P>
Rainer Storn implements an optimization algorithm that's based on Monte Carlo methods. To use his program, you simply provide a mathematical formulation of your constraints, without worrying about devising an appropriate objective function. <P>
<h3><a href="9505p/9505p.htm">PROGRAMMER'S BOOKSHELF </A></h3><P>
<i>by Peter D. Varhol</i><P>
Is there really a difference between how East and West Coast high-tech companies go about their business? This is the question Annalee Saxenian asks in her book, <I>Regional Advantage: Culture and Competition in Silicon Valley and Route 128</I>.<P>
<h2>FORUM</h2><P>
<h3><a href="9505q/9505q.htm">EDITORIAL</A></h3><P>
<i>by Jonathan Erickson</i><P>
<h3><a href="9505r/9505r.htm">LETTERS</A></h3><P>
<i>by you</i><P>
<h3><a href="9505s/9505s.htm">SWAINE'S FLAMES</A></h3><P>
<i>by Michael Swaine</i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9505t/9505t.htm">OF INTEREST</A></h3><P>
<i>by Monica E. Berg</i><P>
<HR><P>Copyright &copy; 1995, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
