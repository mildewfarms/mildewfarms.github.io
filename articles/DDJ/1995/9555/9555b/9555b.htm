<html><head><title>DDDU/Vol 2 No 5 May 95/ Tech Focus</title></head>
<body bgcolor="FFFFFF">



<h1>Copyright Ruling Against Borland Overturned</h1>
<H3><i>by Marc E. Brown</i></H3>

<center>
<hr>

<B>The court said that the copyright statute 
expressly prohibited protection for a "method of operation".
</B>

</center>



<HR AlIGN="CENTER" WIDTH="33%">
<CENTER>
<B>There are few today who would claim that source code 
could lawfully be copied.</B>
<HR>

</center>


  The prospect of being put out of business by a $300 million damage 
claim from Lotus Development has been lifted from the shoulders of 
Borland International by a federal appeals court in Boston. The court 
vacated an injunction prohibiting Borland from using a significant 
portion of the user interface from the Lotus 1-2-3 spreadsheet--a 
ruling which is likely to have broad ramifications throughout the 
software industry. <p>

<h2>Borland Copied Lotus for Compatibility</h2>

  At issue was a hierarchy of menu commands. The Lotus 1-2-3 program 
provided the user with 469 commands arranged into more than 50 menus 
and submenus. This menu tree allowed users to manipulate information 
in a spreadsheet and to perform associated operations. <p>

       The user selected an entry in a menu which performed an operation 
or displayed another menu of selections for the user to make. Lotus 
1-2-3 also allowed the user to write macros that automatically executed 
a series of desired menu commands (as well as other types of operations) 
when the user pressed a single keystroke combination. <p>

       Borland sold the Quattro and Quattro Pro programs to compete 
with Lotus, and claimed that they were superior to the Lotus 1-2- 3 
program. While the Borland programs had a much different menu tree 
structure, users familiar with Lotus 1-2-3 could switch without having 
to learn a whole new set of commands using the Borland-supplied 
alternate menu tree called the "Lotus Emulation Interface." Borland 
also supplied a "Key Reader" to read and execute the Lotus macros, 
thus also allowing Lotus users to run macros without having to rewrite 
them. In combination, the court found that the Borland programs 
provided "a virtually identical copy of the entire 1-2-3 menu tree." <p>

  Litigation Ensued For Almost Five Years On June 28, 1990, Lotus 
procured a ruling against Paperback Software International from a 
Massachusetts federal district court holding that the Lotus 1-2-3 "menu 
structure, taken as a whole--including the choice of command terms [and] 
the structure and order of those terms" was protected by copyright 
law (Lotus Development Corp. v. Paperback Software International, 
740 F. Supp. 37, 68, 70 (D. Mass. 1990)). Just four days later, Lotus 
sued Borland in the same court, alleging that the "Lotus Emulation 
Interface" infringed its copyright. <p>

       The trial court ruled against Borland on July 31, 1992.  Borland 
removed the interface, but continued to provide the Key Reader. Lotus 
then amended its complaint to allege that the Key Reader also violated 
its copyright. The district court again agreed with Lotus, requiring 
Borland to remove the Key Reader as well. <p>

       In each instance, the district court followed a traditional 
analysis. It determined whether the elements which Borland had copied 
were a "form of expression," which traditionally had been recognized 
as entitled to copyright protection, or the underlying "ideas," 
which traditionally had been denied copyright protection. In resolving 
this question in favor of Lotus, the district court concluded that 
there were numerous satisfactory ways for Borland to have named and 
organized its commands, other than to have copied from Lotus. In accordance 
with a long line of precedent, the presence of these numerous viable 
alternatives led the district court to conclude that protectable expression 
had been copied, not merely unprotectable ideas. <p>

<h2>Appellate Court Reverses And Makes New Law</h2>

  The appellate court began its analysis by noting fundamental 
distinctions between this case and most others. Borland conceded copying 
the menu tree from Lotus--but not the source code. Borland also 
conceded that it copied this tree precisely. In most cases, the appellate 
court noted that copying was in dispute. It also noted that the accused 
program usually contained similar, but not identical portions. This 
court concluded that it was faced with "a matter of first impression" 
and that it was "navigating in unchartered waters." <p>

       While in these "unchartered waters," the court accepted "the 
district court's finding that the Lotus developers made some expressive 
choices in choosing and arranging the Lotus Command terms." Nevertheless, 
the court did not follow the long line of cases which found copying 
of expression to constitute a key indication of actionable infringement. 
In fact, the court stated that the presence of such expressive content 
is "immaterial." <p>

       Instead, the court said that the copyright statute expressly 
prohibited protection for a "method of operation." It then concluded 
that the menu tree was such a method because it merely contained 
"specific words...essential to operating something" and because "the 
entire Lotus menu command hierarchy is essential to operating Lotus 
1-2-3." <p>

       A concurring judge offered a somewhat different rationale 
than "the majority's tightly focused discussion." "[T]he principal 
problem...is to stimulate creative expression," he said. Normally, 
providing exclusive rights in works of authorship promotes this goal 
by providing an inducement to create innovative works. In this case, 
however, the judge concluded that exactly the opposite would occur. 
Unless Borland was permitted to imitate the Lotus interface, the court 
reasoned, its incentive to improve the spreadsheet program would be 
reduced. Many users would simply not buy it because they could not 
utilize the operational habits they had learned. "[T]he question is 
not whether Borland should prevail," the court said, "but on what 
basis." It then concluded that "the majority's...formulation [of a 
rationale for Borland to lose] is as good, if not better, than any 
other...." <p>

<h2>Broader Ramifications Are Possible</h2>

  This decision makes clear that menu trees can be copied with 
impunity, along with the necessary structure for running the underlying 
macros that access them. The same reasoning might mean that programming 
languages, as well, are not subject to copyright protection. <p>

       The decision also seems to open the door to any copying which 
is done to ensure compatibility. Up until now, this type of copying 
involved significant risk. <p>

  All User-Interface Features Are Not Necessarily Available <p>

  The interface between the "engine" of a program and the user of 
the program typically consists of many elements, not merely a menu 
tree. For example, it includes screens, a flow of operations, and help 
prompts. It might be a big mistake to interpret this decision as paving 
the way to freely copy all of these other elements. <p>

       On the other hand, if the underlying rationale for this decision 
becomes the test for copyright infringement--whether copying of a 
feature is necessary to enable use of a new program without forcing the 
user to relearn already-established operating habits--all user-interface 
elements may become unprotectable. <p>

<h2>The Final Word Is Not Yet In</h2>

  This appellate court decision is not yet final. A re-hearing by 
the full court (that is, by all nine judges, not just the three who 
rendered this opinion) can still be requested and granted. The Supreme 
Court also has the discretion to re-hear this case. The other twelve 
appellate courts may also decline to follow it. <p>

       There are many reasons why other judges may view this case 
differently, as did the trial judge. <p>

       Many may not agree that removal of copyright protection from 
menu trees will further innovation. Menu trees are an important part 
of most computer programs. Why would a company spend a great deal of 
time and money developing a good one if anyone else could copy it for 
free? <p>

       The decision is also based on a statutory exclusion--a "method 
of operation"--which has rarely been applied to a computer program. 
As conceded by the court itself, it is also somewhat inconsistent 
with other decisions in its conclusion that copying of "expression"--which 
previously had been almost universally a signpost of copyright 
infringement--is "immaterial."      The rationale offered by the court for 
not protecting the menu tree seems to also squarely fit source code. 
"The fact that there may be many different ways to operate a computer 
program," the majority said, "does not make the actual method of operation 
chosen copyrightable; it still functions as a method for operating 
the computer and as such is uncopyrightable." It is hard to see how 
this description of an unprotectable "method of operation" does not 
also embrace source code. Yet, there are few today who would claim 
that source code could lawfully be copied. <p>

       The concurring judge invitingly noted that "no intermediate 
appellate court can make the final choice." During the next months, we 
are all likely to know whether the choice made by the Boston appellate 
court becomes the law of our land. <p>

<HR AlIGN="CENTER" WIDTH="33%">
Marc is a patent attorney and shareholder of Poms, 
Smith, Lande, & Rose, one of the oldest intellectual-property law 
firms in Los Angeles. Marc, who writes the "Software and the Law" 
column for Dr. Dobb's Sourcebook, specializes in computer law and can 
be contacted at<I> meb@delphi.com </I>. <p>


</body> </HTML>
