<HTML>
<META NAME="year" CONTENT="1995">

<HEAD>
<TITLE>June 1995 - SOFTWARE DESIGN</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>June 1995 - SOFTWARE DESIGN</H1>
<hr>
<h2>FEATURES </h2><P>
<h3><a href="9506a/9506a.htm">CONSTRUCTING OPERATIONAL SPECIFICATIONS</A></h3><P>
<i>by Mark Coats and Terry Mellon</i><P>
Complementing existing methodologies, Mark and Terry propose an operational specification that can be translated into most existing system-development methodologies. <P>
<h3><a href="9506b/9506b.htm">A PRACTICAL STRATEGY FOR OBJECT-ORIENTED DESIGN</A></h3><P>
<i>by Kanchan Kumar</i><P>
The methodology Kanchan presents here consists of a language-independent abstraction model and a rule-based implementation model for C++ programmers. <P>
<h3><a href="9506c/9506c.htm">INTERACTIVE DESIGN METHODOLOGY</A></h3><P>
<i>by Phil Herold and Carla Merill</i><P>
Helplus is a client-server hypertext help application modeled on the Microsoft Windows help system. Here, our authors describe the help compiler, help viewer, and server program.<P>
<h3><a href="9506d/9506d.htm">EVENT-DRIVEN THREADS IN C++</A></h3><P>
<i>by Dan Ford</i><P>
Dan presents a powerful, multithreaded architecture that can be used by almost any application. Implemented in C++, this class library lets you quickly create and  control threads. <P>
<h3><a href="9506e/9506e.htm">THREAD PROGRAMMING IN UNIXWARE 2.0</A></h3><P>
<i>by John Rodley</i><P>
With the advent of UnixWare 2.0, threads have made their way to the UNIX desktop. John describes how threads are implemented and how you can take advantage of them.<P>
<h2>EMBEDDED SYSTEMS </h2><P>
<h3><a href="9506f/9506f.htm">VISUALLY DESIGNING EMBEDDED-SYSTEMS APPLICATIONS</A></h3><P>
<i>by Doron Drusinsky</i><P>
Doron describes how design tools that incorporate object-oriented inheritance and extended state diagrams (the visual counterpart of finite state machines) can be used to build control systems.<P>
<h2>NETWORKED SYSTEMS </h2><P>
<h3><a href="9506g/9506g.htm">CODING WITH HTML FORMS</A></h3><P>
<i>by Andrew Davison</i><P>
HTML forms--which allow World Wide Web documents to include text-entry fields, radio boxes, selection lists, check boxes, and buttons--transform HTML from a hypertext page-description language into a tool for creating interactive documents. Andrew details the steps in writing forms-based applications.<P>
<h2>EXAMINING ROOM </h2><P>
<h3><a href="9506h/9506h.htm">COMPARING CASE TOOLS  </A></h3><P>
<i>by Jeffrey L. Armbruster</i><P>
To examine CASE tools such as Paradigm Plus 2.0, Select OMT, and Together C++, Jeffrey designs an application that collects pricing information in grocery stores. <P>
<h2>PROGRAMMER'S WORKBENCH </h2><P>
<h3><a href="9506i/9506i.htm">FLEXIBLE TESTING SYSTEMS</A></h3><P>
<i>by Herb Isenberg</i><P>
Today's application-development environments demand testing systems that can quickly adapt to new situations. Herb presents an automated, flexible testing system built around AutoTester, an off-the-shelf automated testing and verification tool that runs on a variety of platforms.<P>
<h2>COLUMNS </h2><P>
<h3><a href="9506j/9506j.htm">PROGRAMMING PARADIGMS </A></h3><P>
<i>by Michael Swaine</i><P>
Douglas Hofstadter's recently published <I>Fluid Concepts and Creative Analogies </I>may change the direction of AI research.<P>
<h3><a href="9506k/9506k.htm">C PROGRAMMING </A></h3><P>
<i>by Al Stevens</i><P>
Al continues his discussion of IMail, a C++ communications program for sending and receiving electronic mail through a modem connected to an Internet site. <P>
<h3><a href="9506l/9506l.htm">ALGORITHM ALLEY </A></h3><P>
<i>edited by Bruce Schneier</i><P>
Sound is surprisingly difficult to compress. It is much more subtle than video compression and less obvious than text. Kyle York examines lossy-compression techniques that have been optimized for sound. <P>
<h3><a href="9506m/9506m.htm">PROGRAMMER'S BOOKSHELF </A></h3><P>
<i>by Reginald B. Charney</i><P>
<I>Software Development with Z</I>, by J.B. Wordsworth, uses the Z specification language to examine formal methods of software development. <P>
<h2>FORUM</h2><P>
<h3><a href="9506n/9506n.htm">EDITORIAL</A></h3><P>
<i>by Jonathan Erickson</i><P>
<h3><a href="9506o/9506o.htm">LETTERS</A></h3><P>
<i>by you</i><P>
<h3><a href="9506p/9506p.htm">SWAINE'S FLAMES</A></h3><P>
<i>by Michael Swaine</i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9506q/9506q.htm">OF INTEREST</A></h3><P>
<i>by Monica E. Berg</i><P>
<HR><P>Copyright &copy; 1995, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
