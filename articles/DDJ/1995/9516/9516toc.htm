<HTML>
<META NAME="year" CONTENT="1995">

<HEAD>
<TITLE>Special Issue 1995 - POWERPC PROGRAMMING</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>Special Issue 1995 - POWERPC PROGRAMMING</H1>
<hr>
<h2>FEATURES</h2><P>
<h3><a href="9516a/9516a.htm">Porting to the PowerMac</A></h3><P>
<i>by Paul Kaplan </i><P>
Apple's PowerMac supports 68K applications by emulating both the 68K instruction set and the run-time model supported by the Macintosh operating system. Paul presents an application that demonstrates how you can mix code within an application using code resources.<P>
<h3><a href="9516b/9516b.htm">Optimizing for the PowerPC</A></h3><P>
<i>by Michael Ross</i><P>
Michael looks at some of the differences between the PowerPC and Pentium architectures and shares his techniques to optimize code for the PowerPC.<P>
<h3><a href="9516c/9516c.htm">Comparing PowerPC to DEC Alpha</A></h3><P>
<i>by Shlomo Weiss and James E. Smith</i><P>
The PowerPC processor includes a powerful instruction set coupled with flexible instruction ordering; DEC Alpha's more rigid structure relies on simple instructions and a faster clock.<P>
<h3><a href="9516d/9516d.htm">High-Performance Programming for the PowerPC</A></h3><P>
<i>by Kip McClanahan, Mike Phillip, and Mark VandenBrink</i><P>
While moving Windows NT applications from an 80x86- to a PowerPC-based platform is straightforward, performance may be sluggish after the port. Our authors examine how byte alignment, inlining, and exception handling affect performance, then show you how to avoid the pitfalls.<P>
<h3><a href="9516e/9516e.htm">Bit Operations with C Macros</A></h3><P>
<i>by John Rogers</i><P>
John lays the foundation for an &quot;endian engine&quot; that handles a variety of byte orders--from the 68K Big-endian and Intel Little-endian, to the PowerPC's Bi-endian format.<P>
<h2>COLUMNS</h2><P>
<h3><a href="9516f/9516f.htm">Ramblings in Real-Time</A></h3><P>
<i>by Michael Abrash</i><P>
3-D transforms let you convert coordinates from one coordinate space to another. But, as Michael has discovered, your approach to 3-D transform problems depends largely on your frame of reference.<P>
<h3><a href="9516g/9516g.htm">DTACK Revisited</A></h3><P>
<i>by Hal W. Hardenbergh</i><P>
From Hal's point of view, nothing much has happened in desktop-computing architectures since 1982. With that in mind, Hal compares the PowerPC 601 to Intel's upcoming P6.<P>
<h3><a href="9516h/9516h.htm">Software and the Law</A></h3><P>
<i>by Marc E. Brown</i><P>
Marc discusses when software can be patented, how to patent it, and how you can deal with patent-infringement allegations.<P>
<h3><a href="9516i/9516i.htm">Patterns and Software Design</A></h3><P>
<i>by Erich Gamma and Richard Helm </i><P>
While Observer patterns are commonly used to decouple data from a user interface, they can also help define and manage dependencies between objects.<P>
<h3><a href="9516j/9516j.htm">Editorial</A></h3><P>
<i>by Michael Floyd</i><P>
<HR><P>Copyright &copy; 1995, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
