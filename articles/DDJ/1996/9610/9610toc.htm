<HTML>
<META NAME="year" CONTENT="1996">
<HEAD>
<!-- This document was built using HyperWriter Professional by NTERGAID Inc. -->
<TITLE>October 1996: Object Oriented Programming</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<h1><i>DDJ</i> October 1996 Object Oriented Programming</h1><hr>
<h2>FEATURES </h2><P>

<h3><a href="9610a/9610a.htm">USABILITY AND CLASS LIBRARY DESIGN</A></h3><P>

<i>by Arthur T. Jolin</i><P>

As systems grow more complex, the usability of class libraries and frameworks becomes more important. Arthur presents a set of guidelines for usability that have been arrived at over time, during actual class-library and framework development. <P>

<h3><a href="9610b/9610b.htm">MULTIPLE INHERITANCE FOR DELPHI</A></h3><P>

<i>by Roland Kaufmann</i><P>

Although complex, multiple inheritance can be handy from time to time. Roland implements multiple inheritance for Delphi 2.0 using the TLead class. Al Williams then adds a note on aggregation, containment, and derivation.<P>

<h3><a href="9610c/9610c.htm">EXTENDING THE VISITOR DESIGN PATTERN</A></h3><P>

<i>by Matthew Nguyen</i><P>

The primary purpose of the Gamma/Helm Visitor design pattern is to promote code reuse. Matthew extends the Visitor pattern by adding conditional intelligence. <P>

<h3><a href="9610d/9610d.htm">COMPONENT OBJECTS AND DISTRIBUTED COMPUTING </A></h3><P>

<i>by Jeff Rush</i><P>

Interoperable component objects are making distributed computing a reality by handling much of the complexity inherent in distributed systems. Jeff uses IBM's SOM to create desktop objects for the OS/2 Workplace Shell that use Distributed SOM (DSOM) to invoke methods on remote objects-all implemented in C++.<P>

<h3><a href="9610e/9610e.htm">PERSISTENCE FOR C++</A></h3><P>

<i>by David Channon</i><P>

Persistent objects are data elements that can live after the program that created them has stopped. David implements a persistent layer for C++, which does not include persistence as a language feature. <P>

<h2>EMBEDDED SYSTEMS </h2><P>

<h3><a href="9610f/9610f.htm">OBJECT-ORIENTED FLOW DESIGN FOR EMBEDDED SYSTEMS</A></h3><P>

<i>by Barry Kauler</i><P>

GOOFEE notation, the object-oriented methodology Barry presents here, uses a single graphical notation and diagram for every phase of design. For embedded systems, designs done with GOOFEE notation are readable and easy to develop.<P>

<h2>NETWORKED SYSTEMS </h2><P>

<h3><a href="9610g/9610g.htm">ATM SOFTWARE ANALYSIS AND DESIGN</A></h3><P>

<i>by Derek Cheung</i><P>

Derek examines how you can apply OMT for analyzing and developing software for a simple Asynchronous Transfer Mode (ATM) switch. <P>

<h2>PROGRAMMER'S TOOLCHEST</h2><P>

<h3>  <a href="9610h/9610h.htm">EXAMINING THE NUTMEG CLASS LIBRARY</A></h3><P>

<i>by Doug Garrett</i><P>

The Nutmeg class library for Java is an implementation of a Smalltalk Collection class library. Thought Inc.'s Nutmeg provides a variety of &quot;smart,&quot; flexible array type objects to manage groups or sets of objects. <P>

<h3><a href="9610i/9610i.htm">EXAMINING THE LABOBJX REAL-TIME CHART CONTROL     </A></h3><P>

<i>by Jonathan Williams</i><P>

In developing a real-time monitoring system, Jonathan needed to display up to five channels at one time, allow users to scroll through large data sets, and more. He selected SST's LabOBJX Real-Time Chart, a custom control (VBX) that can be used with Visual Basic, C++, and Delphi. <P>

<h2>COLUMNS </h2><P>

<h3><a href="9610j/9610j.htm">PROGRAMMING PARADIGMS </A></h3><P>

<i>by Michael Swaine </i><P>

What's the state of computer science today? Michael finds out, as he examines a book of the same name.<P>

<h3><a href="9610k/9610k.htm">C PROGRAMMING</A></h3><P>

<i>by Al Stevens </i><P>

Al hears from you on topics ranging from Setup versus Uninstall programs, Registry versus .INI files, and the Kevorkian algorithm. He then returns to MidiFitz, a MIDI program that reads an 88-key keyboard, parses the notes into chords in real time, and plays a matching bass line. <P>

<h3><a href="9610l/9610l.htm">JAVA Q&amp;A</A></h3><P>

<i>by Cliff Berg</i><P>

How do you display media formats that Netscape does not support? Cliff presents an applet that makes this possible.<P>

<h3><a href="9610m/9610m.htm">ALGORITHM ALLEY </A></h3><P>

<i>by Dann Corbit</i><P>

Approximating the value of an integral is an important kind of calculation that's not nearly as hard as you think. Dann shows how simple it is to get good results, then discusses some new techniques that offer even better accuracy.<P>

<h3><a href="9610n/9610n.htm">UNDOCUMENTED CORNER</A></h3><P>

<i>by George Shepherd and Scot Wingo</i><P>

Understanding how drag-and-drop works at the Common Object Model (COM) level and how MFC implements drag-and-drop illustrates the power of COM, underscoring the kinds of things you can do by programming in it. <P>

<h3><a href="9610o/9610o.htm">PROGRAMMER'S BOOKSHELF</A></h3><P>

<i>by Warren Young </i><P>

Warren examines the now-classic Design Patterns: Elements of Reusable Object-oriented Software, by Erich Gamma, Richard Helm, Ralph Johnson, and John Vlissides, and the newly released Object-Oriented Design Heuristics, by Arthur J. Riel.<P>

<P>

 <P>

<h2>FORUM</h2><P>

<h3><a href="9610p/9610p.htm">EDITORIAL</A></h3><P>

<i>by Jonathan Erickson</i><P>

<h3><a href="9610q/9610q.htm">LETTERS</A></h3><P>

<i>by you</i><P>

<h3><a href="9610r/9610r.htm">NEWS &amp; VIEWS</A></h3><P>

<h3></h3><P>

<h3><a href="9610s/9610s.htm">SWAINE'S FLAMES</A></h3><P>

<i>by Michael Swaine</i><P>

<P>

<h2>PROGRAMMER'S SERVICES</h2><P>

<h3><a href="9610t/9610t.htm">OF INTEREST</A></h3><P>

<i>by Eugene Eric Kim</i><P>

<P>

<P>

</BODY>
</HTML>
