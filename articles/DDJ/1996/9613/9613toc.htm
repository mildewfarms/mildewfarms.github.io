<HTML>
<META NAME="year" CONTENT="1996">
<HEAD>
<!-- This document was built using HyperWriter Professional by NTERGAID Inc. -->
<TITLE>Special Issue 1996 - DATABASE DEVELOPMENT</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<h1><i>DDJ</i> Special Issue 1996 - DATABASE DEVELOPMENT</h1><hr>
<h2>FEATURES</h2><P>

<h3><a href="9613a/9613a.htm">SQL Access Group's Call-Level Interface</A></h3><P>

<i>by Roger Sippl</i><P>

The chairman of the SQL Access Group looks at the current status of SQL's call-level interface and provides a glimpse of the SQL specification's future.<P>

<h3><a href="9613b/9613b.htm">Performance Testing, ODBC, and Native SQL APIs</A></h3><P>

<i>by Ken North</i><P>

Network latency, application bottlenecks, and client libraries make it difficult to judge the performance of your SQL API. The benchmark software Ken presents here lets you test the SQL API while holding other variables constant.<P>

<h3><a href="9613c/9613c.htm">Partitioning Applications in Smalltalk</A></h3><P>

<i>by Jay Almarode</i><P>

Distributed Smalltalk systems allow you to build application servers, the middle tier in the three-tier architecture, where business logic is executed. Jay presents guidelines for partitioning your next application.<P>

<h3><a href="9613d/9613d.htm">A Client/Server DBMS for Managing Clinical Data</A></h3><P>

<i>by Richard A. Gams</i><P>

In developing a database to manage clinical-trial data, Richard discovered that a network/hierarchical model is more suitable than the relational model for large volumes of data of different types.<P>

<h3><a href="9613e/9613e.htm">Programming with M</A></h3><P>

<i>by Dan Shusman</i><P>

M, a successor to MUMPS, is an ANSI-standard language designed for direct data access and greater control than SQL over issues such as performance. Dan combines M and SQL to extend Visual Basic applications.<P>

<h2>COLUMNS</h2><P>

<h3><a href="9613f/9613f.htm">Ramblings in Real Time</A></h3><P>

<i>by Michael Abrash </i><P>

Michael lifts the hood on <I>Quake</I>, the successor to id Software's <I>DOOM</I>, detailing how <I>Quake</I>'s developer uses visible surface determination and culling to quickly perform surface rendering. <P>

<h3><a href="9613g/9613g.htm">DTACK Revisited</A></h3><P>

<i>by Hal W. Hardenbergh</i><P>

What do minitower cases, product loyalty, UNIX, RISC workstations, Cray supercomputers, and the Pentium Pro have in common? The answer may be contained in Gresham's Law.<P>

<h3><a href="9613h/9613h.htm">20/20</A></h3><P>

<i>by Al Williams</i><P>

Al kicks off a new column by showing how you can wrap an existing Windows control within a Delphi component.<P>

<h3><a href="9613i/9613i.htm">Patterns and Software Design</A></h3><P>

by Richard Helm and Erich Gamma<P>

Richard and Erich explain how Courier Patterns are used to pass arbitrary requests and information using a fixed interface.<P>

<h3><a href="9613j/9613j.htm">Software and the Law</A></h3><P>

<i>by Marc E. Brown</i><P>

Has your product infringed on someone's patent? Marc looks at both sides of the question and shows how you can determine whether your product contains someone else's invention.<P>

<h3><a href="9613k/9613k.htm">Editorial</A></h3><P>

<i>by Michael Floyd</i><P>

<h3><a href="9613l/9613l.htm">Letters</A></h3><P>

</BODY></HTML>
