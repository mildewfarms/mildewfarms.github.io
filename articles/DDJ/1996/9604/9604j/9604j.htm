<HTML>
<META NAME="year" CONTENT="1996">
<HEAD>
<!-- This document was built using HyperWriter Professional by NTERGAID Inc. -->
<TITLE>APR96: PROGRAMMING PARADIGMS</TITLE></HEAD>
<body bgcolor="FFFFFF">
<h1>PROGRAMMING PARADIGMS<a name="0181_007b"><a name="0181_007b"><a name="0181_0079"><a name="0181_0000"></h1><P>

<h2>VTOS, VRML, and other Virtualities</h2><P>

<h3>Michael Swaine</h3><P>

<a name="0181_007a"><a name="0181_0000">As we went to press, <I>The Wall Street Journal</I> was reporting that Apple Computer was about to be purchased by Sun Microsystems. If you keep your ear close to the ground, you hear one such rumor a month, on a rough average. This one, though, sounded more serious than most. <I>The Journal </I>said that the announcement was &quot;imminent.&quot; Apple immediately denied that the company was for sale. <I>The Journal </I>also opined, in its trademarked deadpan style, that Apple could benefit from Sun's &quot;focused management.&quot; Focused management. What a concept. Focused management would certainly be a novelty for Apple, but it does cross my skeptical mind that this is the same Sun Microsystems about which the following story was once told:<P>

<cite>Sun Microsystems is a three-billion-dollar firm that produces a variety of advanced computing hardware and software. Sun focuses on powerful solutions to the big problems facing companies in the '90s: too many vice presidents and too few promotion slots in upper management.</cite><P>

<cite>   Sun Microsystems today announced the creation of yet another subsidiary, bringing the total number of Sun wholly owned subsidiaries to 1,207. After successfully creating SunSoft, Sun Microsystems Computer Corporation, SunPICS, SunConnect, and a number of other smaller firms, Sun has created SunLHMPPP. SunLHMPPP is tasked with addressing the specific niche market of users who require both Left Handed Mice and a Parallel Printer Port on their workstations.</cite><P>

The SunLHMPPP announcement is part of a longer story by Chuck Musciano posted to Usenet back in 1991. Chuck went on to report that IBM was entering into a joint venture with Denny's restaurants: IBM's logic being, well, the competition has been eating our lunch for years, so.... Both stories are made up. They are parodies, but in the computer industry it's often hard to tell the difference between a parody and focused management. Andrew Davison, fortunately, can tell the difference, and has collected a bookful of parody press releases, song lyrics, true but incredible stories, and untrue but credible stories, that is, stories that are not actually true but that ring true--virtually true stories, you might say.<P>

Davison's <I>Humor the Computer</I> was published last year by MIT Press (ISBN 0-262-54075-4). Davison, who is a frequent contributor to <I>DDJ, </I>collected the stories from the Usenet, <I>Datamation, Byte, Creative Computing, </I>and other computer magazines, technical journals, popular magazines, books, newsletters, and a few other odd sources. Well, mostly odd sources, judging by the odd bits he collected.<P>

I particularly liked Tony Karp's report from <I>Datamation </I>on the language BABBAGE, which implements the WHAT IF, OR ELSE, BRIEF CASE, and DON'T DO WHILE NOT statements. BABBAGE runs on top of VTOS, the Virtual Time Operating System. <P>

<cite>While virtual memory systems make the computer's memory the virtual resource, VTOS does the same thing with CPU processing time. The result is that the computer can run an unlimited number of jobs at the same time. Like the virtual memory system, which actually keeps part of memory on disk, VTOS has to play tricks to achieve its goals. Although all of your jobs seem to be running right now, some of them are actually running next week.</cite><P>

Virtually true stories, virtual time. All part of the gradual virtualizing of reality, I suppose.<P>

Reading <I>Humor the Computer</I> sent me off searching for online humor on the Usenet and the Web, and that in turn got me following my many links to computer history sites on the Internet--and that should serve to usher us gracefully into the latest installment of &quot;Paradigms Past.&quot;<P>

<h3><a name="0181_007c">Paradigms Past<a name="0181_007c"></h3><P>

Last month, in discussing the historical dispute over credit for the invention of the automatic digital computer, I mentioned that several of the key inventors of computer technology died last year. I failed to mention Allen W.M. &quot;Doc&quot; Coombs, who was one of the principal designers of the British Mark 2, the production version of the Colossus code-breaking machines. Coombs died peacefully at home on January 30, 1995. Doc Coombs, like the rest of his British colleagues, was under a ban of secrecy about the Colossus work until recently. An obituary can be found at http://ei.cs.vt.edu/~history/Coombs.html.<P>

Sadly, I'm sure Doc Coombs and J. Presper Eckert, John V. Atanasoff, and Konrad Zuse, all of whom I mentioned last month, are not the only computer pioneers who died last year. 1995 was the 50th anniversary of the culmination of their work, which puts those pioneers in that awkward age bracket, the three-score-and-ten-somethings.<P>

1995 was the 50th anniversary of many important events in the history of computers, not to mention the 50th anniversary of the atomic age, the baby boom, the United Nations, and, according to my mother, &quot;Swaine's Flames.&quot; This year, 1996, is notable as the 100th anniversary of the death of Alfred Nobel (December 10). While some famous people are remembered on their birth dates, there is particular significance in Nobel's death date: When he died, he left behind a rather unusual will establishing the Nobel prizes. The prizes are even awarded on that date every year.<P>

Nobel's will was a surprise to almost everyone who knew him, because he was not the sort of guy you'd expect to establish a Peace prize. It wasn't just that he was the inventor of dynamite. He made his fortune (over 7 million 19th-century dollars) partly on the invention of dynamite, smokeless powder, and the detonator, and partly as a munitions merchant. So when the will set up the Nobel prizes, emphasizing the peace angle, and put the interest on practically all his millions into the prize pot, everyone was stunned. Everyone, that is, except Bertha Kinsky, a long-time friend of Nobel's whom he met through a personal ad placed in an 1876 issue of the Vienna <I>Neue Freie Presse</I>. It was Kinsky, a pacifist activist, who inspired Nobel to establish the Nobel Peace prize in his will. The will was written without the benefit of a lawyer, and it's not likely that the way the prizes have been distributed over the years exactly matched Nobel's intentions. An inventor himself, Nobel apparently had encouraging young Edisons in mind rather than the usually towering figures of theoretical science who typically win. Nobel might very well have thought it scandalous that no award was ever given for the invention of the automatic digital computer.<P>

The Peace prize, though, has always been awarded, apparently as Nobel intended, for efforts in the advancement of peace in the world. It's possible that Nobel has done more to advance peace since he died than he did to advance war while he was alive. At least it's pleasant to think so. When old computers die...<P>

<h3><a name="0181_007d">Scrap Iron<a name="0181_007d"></h3><P>

When old computers die, either as the victims of the onrush of technological progress or of focused management, they are occasionally reanimated, Frankenstein-like, by scavenging technophilic computer history buffs. From Douglas W. Jones at gopher://wiretap.spies.com:70/00/Library/Techdoc/Lore/oldiron:<P>

<cite>Back at surplus, I bought the third PDP-8. It was battered, but it had an RX8E interface in it that I needed if I was to hook an RX01 drive to my machines, and besides, it only cost $7. I kept what I needed and shipped the remainder to Charles Lasner in NY. Later, for $40, I picked up another surplus DEC relay rack so I could get everything up off the floor and nicely rack mounted.</cite><P>

You picked up on the crucial detail in that excerpt, right? <I>There's some guy in New York that you can ship all your obsolete computer junk to.</I> Charles, watch for the UPS truck delivering that Sol-20 that I dropped a crate of books on back in 1985. And thanks!<P>

Just kidding, Charles. But technophilic computer history buffs aside, most of us wouldn't want to give up the living room or office space that a PDP-8 would demand, even if we could buy one for $7. Maybe that explains the appeal of old slide rules: the small footprint. Anyone interested in becoming obsessive about slide rules should visit The Slide Rule Home Page at http://photobooks.atdc.gatech edu/~slipstick/. The maintainer of that page keeps track of sources for old slide rules, among his other slipstickish obsessions.<P>

I suspect, though, that part of the appeal is the fact that anything you can carry in a leather holster clipped to your belt is by definition cool. That's how I felt about my Newton PDA until it died recently. I don't know whether it was from a broken heart when it learned that the recently released and way-cool (relative to version 1) version 2 of the Newton operating system won't run on it, or the fact that the warranty was up, but it's one DOA PDA. I don't suppose it has a measurable street value, but if anybody out there is interested, I've kept it in really good condition.<P>

<h3><a name="0181_007e">Daisy May<a name="0181_007e"></h3><P>

That PDP-8 is well out of warranty, too. I wonder what Douglas W. Jones ever did with it? Once you've got that obsolete computer cleaned up and set up in the spare bedroom, apart from showing it off to your friends, what do you do with it?<P>

I suppose you could use it to play music. You can always use any computer to play music.<P>

Paul Freiberger and I described one technique in our computer history book, <I>Fire in the Valley</I>. A fanatic computer hacker, Steve Dompier, bought one of the first MITS Altair computers. Although it wasn't obsolete yet, the focused management at MITS hadn't delivered any software or peripherals to speak of, so he was faced with the question: What do I do with this thing? His solution was to write a machine-language program, loaded with the toggle switches that served as an input device: A program that cleverly manipulated the RFI that the unshielded machine put out to cause a nearby radio to emit static in controlled frequencies, producing that old favorite &quot;Daisy&quot; or &quot;A Bicycle Built for Two.&quot;<P>

Yes, I've told that story before. It had all been done before, too. Steve Dompier wasn't the first programmer to cause a computer to play music, not even the first to make a computer play that particular tune. The best-known computer ever to play &quot;Daisy&quot; was HAL in the movie <I>2001</I>. I have it on good authority that you could make Dompier music on the beloved Trash-80, or TRS-80 Model 1, as Tandy called it, as well as on many other early microcomputers, all now pushing up daisies. On the theory that a peripheral is a peripheral, many disturbed individuals have stooped to using disk drives and printers to play music. Scott H. Redd reports:<P>

<cite>One day I stopped by the machine room at the University of Maryland and some one had trotted out an archaic piece of software that played Christmas Carols by writing variable block sizes to the old Uniservo 7 track tape, causing different notes to emanate from the vacuum columns. Unfortunately, nobody updated the program for the 9 track drives.</cite><P>

<cite>   For its day, the Commodore 64 was quite capable at making music. However, I remember a program that someone had made that played &quot;Bicycle Built For Two&quot; by vibrating the 1541's disk drive head at different rates. [There] was very quiet, but distinct, music, coming out of the floppy disk drive.</cite><P>

It gets worse: Both dot-matrix printers and Daisy wheel (you make up the joke) printers have been bent to the task of playing &quot;Daisy.&quot; Ric Werme confesses:<P>

<cite>I designed some fonts that were variable numbers of vertical bars in half-inch-wide characters. The printer's horizontal resolution was 0.001&quot;, better than laser printers, but not good enough for decent music. I had to compute line spacings in 0.0001&quot; units and round to the nearest 0.001&quot;. About an octave-and-a-half would fit in a 2Kb PROM (this was before 16K ram chips made down-loaded fonts practical). I arranged &quot;A Bicycle Built for Two.&quot; It attracted a fair amount of attention at the trade shows.&quot; </cite><P>

I have a Laserwriter IINTX that squeals like a pig if I don't oil it; has anybody written PostScript code to make a laser printer squeal &quot;Daisy?&quot; There are recorded cases of computer operators making practical use of those pig squeals. I'm not referring to the Macintosh with its diagnostic chord; that was deliberately put in for diagnostic purposes, and sounds sort of nice. But diagnosing a computer by the unhappy noises it makes dates back at least to 1943 and the British work on the Colossus code-breaking machines. Ironically, when Doc Coombs took over supervision of the production of the machines, they were soon running too well to make the noises, and a useful diagnostic tool was lost.<P>

<h3><a name="0181_007f">A World of Your Own<a name="0181_007f"></h3><P>

Future histories will record that on February 14, 1994, a three-dimensional banana appeared on the Internet. Visitors to the banana could execute banana fly-bys using their mice as joysticks, examining all sides of the fruit and poking around in the dark corners of this banana space. The banana was hooked into the World Wide Web: You could click on a link in a Web page and find yourself face-to-face with the banana, or click on the banana to return to the familiar two-dimensional Web.<P>

According to Mark Pesce, who, along with Tony Parisi, put that banana out there, that event marked the beginning of virtual reality on the Web. By October 17th, Parisi and Gavin Bell had presented a draft spec for VRML 1.0, the Virtual Reality Modeling Language, a language for describing 3-D objects and worlds on the World Wide Web. Here's the long-form definition from the spec: <P>

<cite>VRML is a language for describing multi-participant interactive simulations--virtual worlds networked via the global Internet and hyperlinked with the World Wide Web.</cite><P>

Here in the back of the column in recent months I've been talking about little or old or obscure languages. VRML is not old or obscure, but it does qualify as a little language, in some sense, and I've recently spent some time learning it. Thus the following brief sketch of VRML: VRML 1.0 is designed to provide platform independence, extensibility, and the ability to work over low-bandwidth connections.<P>

The language is, at the highest level of abstraction, a way for objects to read and write themselves. The objects can contain 3-D geometry, MIDI data, JPEG images, or whatever.<P>

VRML defines useful objects for doing 3-D geometry and calls them &quot;nodes.&quot; &quot;Scene graphs&quot; are structures of nodes. Nodes contain fields with specified field values, and can contain other nodes as child nodes. A node is represented in VRML like this: <I>DEF objectname objecttype { fields children }</I> but only the object type and the curly braces are required. So a sphere, which has one field, <I>radius</I>, could be represented like this: <I>Sphere { radius 2.3 }</I>. Not all nodes actually result in something being drawn; there are property nodes and coordinate-system nodes, for example, that set characteristics of the drawing environment.<P>

Extensibility is supported via self-describing nodes. A self-describing node is a node that is not defined in the language definition, and defines itself by specifying its own fields:<P>

<pre>Cube {
fields [ SFFloat width, SFFloat height, <P>
SFFloat depth ]
width 10 height 4 depth 3 }</pre>

Anyone wanting to write a VRML browser will want to get hold of QvLib, the essential library, and read about building browsers and QvLib in the definitive book on VRML, <I>VRML: Browsing and Building Cyberspace,</I> by Mark Pesce (New Riders Publishing, 1995). Good Web sites for following VRML developments are the VRML Repository at http://www.sdsc.edu/ vrml/, Mecklermedia's site at http://www.mecklerweb.com/netday/vrml.html, and <I>Wired </I>magazine's VRML page at http://vrml.wired.com/.<P>

<P>

<P>

<P>

<P>

<P>

<P>

<P>

<P>

<P>

<P>

<P>

</BODY></HTML>
