<HTML>
<META NAME="year" CONTENT="1996">
<HEAD>
<!-- This document was built using HyperWriter Professional by NTERGAID Inc. -->
<TITLE>February 1996 - DATA COMMUNICATIONS</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<h1><i>DDJ</i> February 1996 - DATA COMMUNICATIONS</h1>
<h2>FEATURES</h2><P>

<h3><a href="9602a/9602a.htm">PROPOSING A STANDARD WEB API</A></h3><P>

<i>by Michael Doyle, Cheong Ang, and David Martin</i><P>

At last count, there were nearly a dozen APIs vying for hearts and home pages of Web developers. Our authors propose a standard API that leverages the concept of embedded executable content for interactive application development and delivery.<P>

<h3><a href="9602b/9602b.htm">IMPROVING KERMIT PERFORMANCE</A></h3><P>

<i>by Tim Kientzle</i><P>

Tim compares the error-handling strategies of a variety of popular protocols, then presents heuristics that improve the performance of Kermit's windowing strategy.<P>

<h3><a href="9602c/9602c.htm">CGI AND THE WORLD WIDE WEB</A></h3><P>

<i>by G. Dinesh Dutt</i><P>

The Common Gateway Interface (CGI) makes it possible for Web servers to interact with external programs. Dinesh presents a program that reports gateway-execution errors.<P>

<h3><a href="9602d/9602d.htm">USING SERVER-SIDE INCLUDES</A></h3><P>

<i>by Matt Kruse</i><P>

Server-side includes are commands embedded inside HTML documents that enable your page to do something different each time it is loaded. Matt describes the format of these commands and shows how to write programs that work with your Web pages.<P>

<h3><a href="9602e/9602e.htm">JAVA COMMAND-LINE ARGUMENTS</A></h3><P>

<i>by Greg White</i><P>

Greg introduces a package of Java classes that parse the command-line parameters for HtmlXlate, an application that converts HTML to RTF. Because HtmlXlate doesn't require display graphics, Greg made it an &quot;application&quot; instead of an &quot;applet.&quot;<P>

<h3><a href="9602f/9602f.htm">IMPLEMENTING MULTILEVEL UNDO/REDO</A></h3><P>

<i>by Jim Beveridge</i><P>

The Undo/Redo mechanism Jim presents here is based on a history length limited only by available memory. Because it is implemented in Visual C++ and MFC, this mechanism can easily be added to your applications. <P>

<h2>EMBEDDED SYSTEMS </h2><P>

<h3><a href="9602g/9602g.htm">NETWORKING INTELLIGENT DEVICES</A></h3><P>

<i>by Gil Gameiro</i><P>

Novell's Embedded Systems Technology (NEST) lets you incorporate network protocols and client services into embedded systems. Gil uses NEST to put an intelligent coffee maker online, then controls it with a Windows-hosted menu program.<P>

<h2>NETWORKED SYSTEMS </h2><P>

<h3><a href="9602h/9602h.htm">FAST NETWORKING WITH WINSOCK 2.0</A></h3><P>

<i>by Derek Brown and Martin Hall</i><P>

Derek and Martin show how you can get maximum performance from WinSock 2.0 applications by taking advantage of two features new to the spec--event objects and overlapped I/O. <P>

<h2>EXAMINING ROOM </h2><P>

<h3><a href="9602i/9602i.htm">EXAMINING ROGUEWAVE'S TOOLS.H++</A></h3><P>

<i>by P.W. Scherer</i><P>

RogueWave's Tools.h++, a C++ library consisting of more than 100 classes, has been the cornerstone of Perry's development efforts ever since he ported over 30,000 lines of C++ code to an equivalent app that was only 6000 lines long. <P>

<h2>PROGRAMMER'S WORKBENCH </h2><P>

<h3><a href="9602j/9602j.htm">LEX AND YACC</A></h3><P>

<i>by Ian E. Gorman</i><P>

Ian describes how he used traditional compiler-development techniques and the MKS Lex &amp; Yacc Toolkit to build a keyword-query compiler for a CD-ROM database.<P>

<h2>COLUMNS </h2><P>

<h3><a href="9602k/9602k.htm">PROGRAMMING PARADIGMS </A></h3><P>

<i>by Michael Swaine </i><P>

Before continuing his examination of little languages for the Macintosh, Michael looks at a number of books devoted to HTML coding.<P>

<h3><a href="9602l/9602l.htm">C PROGRAMMING </A></h3><P>

<i>by Al Stevens </i><P>

Al launches &quot;Quincy 96,&quot; a C/C++ interpreter that runs under Windows 95 and is based on GNU C and C++. Among other features, Quincy 96 manages two kinds of documents--project documents and text source-code documents. <P>

<h3><a href="9602m/9602m.htm">ALGORITHM ALLEY </A></h3><P>

<i>edited by Bruce Schneier </i><P>

Binary searches are algorithmic staples that can be used in just about any program. Micha Hofri sees how efficient he can make a basic binary-search algorithm. <P>

<h3><a href="9602n/9602n.htm">PROGRAMMER'S BOOKSHELF </A></h3><P>

<i>by Dean Gahlon</i><P>

Dean compares <I>Practical Algorithms for C Programmers</I>, by Andrew Binstock and John Rex, and <I>Practical Algorithms in C++</I>, by Bryan Flamig.<P>

<h2>FORUM</h2><P>

<h3><a href="9602o/9602o.htm">EDITORIAL</A></h3><P>

<i>by Jonathan Erickson</i><P>

<h3><a href="9602p/9602p.htm">LETTERS</A></h3><P>

<i>by you</i><P>

<h3><a href="9602q/9602q.htm">SWAINE'S FLAMES</A></h3><P>

<i>by Michael Swaine</i><P>

<h2>PROGRAMMER'S SERVICES</h2><P>

<h3><a href="9602r/9602r.htm">OF INTEREST</A></h3><P>

<i>by Monica E. Berg</i><P>

<P>

</BODY></HTML>
