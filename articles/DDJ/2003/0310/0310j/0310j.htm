<html><head><title>Oct03: Programmer's Bookshelf</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h1>Has It Really  Been That Long?</h1><p><i>Dr. Dobb's Journal</i> October 2003</p><h3>By Gregory V. Wilson</h3><I>Greg is a DDJ contributing editor and can be contacted at gvwilson@ddj.com.</I><hr><h4><br><b>Java Extreme  Programming  Cookbook</b><i><br> Eric M. Burke and Brian M. Coyner </i><br>O'Reilly &amp; Associates, 2003 <br>275 pp., $34.95<br>ISBN 0596003870<b><br><br>MySQL and Java Developer's Guide</b><i><br>Mark Matthews, Jim Cole,  and Joseph D. Gradecki</i><br>Wiley, 2003 <br>410 pp., $45.00<br>ISBN 0471269239<b><br><br>Java Performance Tuning,  </b><b>Second Edition</b><i><br>Jack Shirazi </i><br>O'Reilly &amp; Associates, 2003<br>570 pp., $44.95<br>ISBN 0596003773 <b><br><br>JDBC: Practical Guide for  Java Programmers</b><i><br>Gregory D. Speegle </i><br>Academic Press, 2002<br>113 pp., $14.95<br>ISBN 1558607366<br></h4><p>It's still a bit of a shock sometimes to realize how long Java has been around. Eight years is a long time in our industry&#151;long enough for two generations of undergraduates to have it as a first language, and long enough for books about it to go into their second edition.</p><p>Which is a welcome thing, because by and large, only good books are updated and reprinted. Take Jack Shirazi's <i>Java Performance Tuning,</i> for example. Shirazi is the driving force behind http://www.javaperformancetuning.com/, a site devoted to making Java programs faster, smaller, and more efficient. As the book acknowledges, speed has always been Java's Achilles' Heel. While today's compilers and virtual machines are much better than their predecessors, Java programs are still noticeably slower than their C or C++ counterparts. Knowing how to avoid performance bottlenecks is, therefore, an important part of a Java programmer's education, as is knowing how to fix them when they haven't been avoided.<i></p><DDJADVERTISEMENT INLINE><p>Java Performance Tuning </i>starts by asking a simple question: "Why is it slow?" After presenting a simple strategy for methodical tuning, Shirazi looks at the tools programmers have (or can build) for collecting performance data, including timing and memory-usage profilers. He then spends a chapter on JVM improvements, presenting such tricks as replacing standard JDK classes with ones tailored to application needs, uncompressing JAR files, and so on.</p><p>Chapters 4-11, which span over 250 pages, form the meat of the book. Object creation, strings, exceptions, casts, loops, I/O, threading&#151;Shirazi looks at how thoughtless use of each can lead to performance problems, and then presents ways to make those problems go away. Many of the examples include before-and-after speeds or quantitative comparisons of different approaches, which help to ground the discussion and set your expectations.</p><p>The last eight chapters of the book cover more advanced topics, such as J2EE and JDBC. This material is (necessarily) higher level than what's in the first half, but no less enjoyable. I think everyone who is using Java in real-world applications will get a lot out of this book, and I expect to refer to it often.</p><p>I will probably get almost as much out of Eric Burke and Brian Coyner's<i> Java Extreme Programming Cookbook,</i> although I think the eight tools they cover are as useful to other programming styles as they are to XP. This book covers almost exactly the same material as Hightower and Lesiecki's<i> Java Tools for eXtreme Programming </i>(reviewed here in May 2002), and in almost the same order. After one chapter introducing XP, the authors present solutions for common problems with:</p><ul>  <li>ANT (a Java/XML replacement for Make).  <li>JUnit (a unit testing framework).  <li>HttpUnit, Mock Objects, and Cactus (for testing web applications).  <li>JUnitPerf (an add-on for JUnit that collects performance data).  <li>XDoclet (an XML-based code generator).  <li>Tomcat and JBoss (which are an open-source servlet container and EJB framework, respectively).</ul><p>Burke and Coyner answer most of the questions that first-time users of these tools will have, while also providing more background detail for people who are already familiar with them. Throughout, their explanations are clear, and both their text and their code samples are easy to read. I might have asked for more diagrams, and for a chapter each on a couple of other tools (most notably CVS and Checkstyle), and I think that if web testing deserves three chapters, then GUI testing deserves at least one, but these are quibbles with an otherwise impressive book.</p><p>The third book this month is <i>JDBC: Practical Guide for Java Programmers,</i> by Gregory Speegle. This book is a slim, easy-to-read introduction to the essentials of Java database connectivity. All of JDBC's core features are covered in just enough detail to leave the reader feeling comfortable with what the API is for, and how it ought to be used. Each chapter ends with a short API summary, and a "Going Beyond" section that instructors could use as a starting point for exercises.</p><p>I enjoyed Speegle's book, and will recommend it to students. However, I will probably <i>not</i> recommend the <i>MySQL and Java Developer's Guide,</i> by Mark Matthews, Jim Cole, and Joseph D. Gradecki. It does contain more information than Speegle's book, but it also contains more bugs. For example, pages 36-37 list the data types supported by MySQL. Page 37 then repeats this list, word for word, in a different font. I realize this is just a typesetting glitch, but there are enough others, and enough places where the text seems to have been thrown together in a hurry, that I found my confidence in the book ebbing. The nearly unreadable screen shots of DOS Windows didn't help matters either. On balance, I think developers would be better off reading Speegle's tutorial, and then going straight to online documentation.</p><p><b>DDJ</b></p></body></html>