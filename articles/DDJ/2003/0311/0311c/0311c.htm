<html><head><title>Nov03: SAML &  Single Sign-On</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h1>SAML &amp;  Single Sign-On</h1><p><i>Dr. Dobb's Journal</i> November 2003</p><h2>An XML-based  language for  authentication</h2><h3>By S. Srivatsa Sivan</h3><I>S. Srivatsa Sivan is a senior software engineer for HP's India Software Operations. He can be contacted at srivatsa.sivan .subramania@hp.com.</I><hr><p>Single Sign-On (SSO) refers to the ability of a system to authenticate users once, then subsequently authorize or reject those users across multiple services. Web applications and web services that provide access and interaction between multiple disparate applications and services require SSO functionality, and one approach to providing it is through use of the Security Assertions Markup Language (SAML); http://www.oasis-open.org/committees/security/.</p><p>Developed under the auspices of OASIS (a nonprofit, international standards group), SAML is an XML framework for exchanging authentication/authorization information. SAML includes XML schemas that define the information exchanged, as well as the protocols for requesting and responding to these messages. </p><DDJADVERTISEMENT INLINE><p>SAML elements describe both "subjects," which exchange information on the network, and "assertions," which include information about the subjects (who the subjects are, what they can do, and/or what information can be exchanged). SAML defines assertions for authentication, authorization, and attributes. </p><p>In this article, I use SAML to implement SSO for a hypothetical web portal (portal.com) offering services to customers. These services include content services that need SSO to retain the consistency desired by the web portal. The web portal uses SAML to convince the external service of the authenticity and authorization of users on the web portal. In this way, the external service can decide whether to honor the web portal's assertions during its own authentication/authorization process.</p><p>Included in the content-based services that portal.com offers are third-party content services, such as a greeting service from greetings.com. If authentication occurred at portal.com and is passed to greetings.com (through SAML), then greetings.com is satisfied with the authentication that has already happened in portal.com. In other words, portal.com acts as the SAML assertion producer and greetings.com as the SAML assertion/relying consumer; see <A NAME="rf1"><A HREF="0311cf1.htm">Figure 1</A>.</p><p>For starters (see step 1, <A NAME="rf1"><A HREF="0311cf1.htm">Figure 1</A>), customers use browsers to access portal.com  via HTTP requests shown in <A NAME="rl1"><A HREF="#l1">Listing One</A>. Since portal.com requires authentication (step 2), you should assume that the site uses a password mechanism for authentication and presents a login page to users. The HTTP message looks similar to <A NAME="rl2"><A HREF="#l2">Listing Two</A>.</p><p>Customers then fill in and submit the login form with a username/password (step 3); see <A NAME="rl3"><A HREF="#l3">Listing Three</A>. At portal.com, authentication is done for the given username/password (step 4). If authentication passes, users are shown a list of available services (<A NAME="rl4"><A HREF="#l4">Listing Four</A>), including greetings.com. The <i>href</i> portion of the link in <A NAME="rl4"><A HREF="#l4">Listing Four</A> points to a service called <i>AssertionCreator</i>, which is present in the portal.com domain. The chosen service's URL, (http://www.greetings.com/) is passed to the <i>AssertionCreator</i> service as part of the query string. Customers then select the greetings service (step 5), the request is forwarded to <i>AssertionCreator</i>, and the destination service URL is sent along with the request as part of the URL query string.</p><p>The real SAML part starts at the <i>AssertionCreator</i> service (step 6). When the greetings service is chosen, the request is forwarded to the <i>AssertionCreator</i> service with the destination service's URL as part of the query string. This service creates the authentication assertion for customers (<A NAME="rl5"><A HREF="#l5">Listing Five</A>), based on the authentication information they used for login. <i>AssertionCreator</i> also creates a unique random SAML token, called an "artifact," which is associated with the created assertion. </p><p>The SAML authentication assertion has three broad parts: </p><ul>  <li>The inner part of the assertion is common to all assertions. This portion contains details about which versions of SAML are being used and what version is acceptable (<i>&lt;MajorVersion&gt; </i>and<i> &lt;MinorVersion&gt;</i>), who the issuer of the assertion is (<i>&lt;Issuer&gt;</i>), and when the assertion is/was issued (<i>&lt;IssuerInstant&gt;</i>).  <li>A set of conditions applies to the assertions. The conditions have to be validated to True for the assertion to be relied upon. If conditions are not valid, then the issuing authority cannot be held responsible for the validity of the assertion. Here, the condition is that the assertion is valid only between the <i>&lt;NotBefore&gt;</i> and <i>&lt;NotOnOrAfter&gt;</i> time period. Also, the <i>&lt;Assertion&gt;</i> is valid only for the specified audience contained in the <i>&lt;Audience&gt;</i> element.  <li>Information about the authentication includes details about the subject who was authenticated (<i>&lt;NameIdentifier&gt;</i>) and what the method of authentication was (<i>&lt;AuthenticationMethod&gt;</i>).</ul><p>The <i>&lt;ConfirmationMethod&gt;</i> element is a URI reference that specifies that the browser/artifact profile is used for this assertion.</p><p>The assertion does not contain the password because the receiver of the assertion (greetings.com) trusts the authentication that has happened with the issuing authority (portal.com). Consequently, the assertion receiver (greetings.com) need not perform any further authentication. This frees SAML from any underlying authentication mechanism.</p><p>This assertion is created and stored against an <i>Assertion</i> artifact&#151;a unique random number that is used by the relying party to retrieve the assertion. After creating the assertion and artifact, the <i>AssertionCreator </i>service forwards the request to the destination URL (http://www.greetings .com/) with the artifact as part of the query string; see <A NAME="rl6"><A HREF="#l6">Listing Six</A>.</p><p>Upon receiving the request with the SAML assertion artifact, greetings.com retrieves the artifact (step 7). Then, greetings.com has to send a request to portal.com to get the assertions corresponding to the artifact. The Simple Object Access Protocol (SOAP) request sends this SAML protocol request to portal.com (<A NAME="rl7"><A HREF="#l7">Listing Seven</A>).</p><p>The <i>SAMLProtocol</i> request, embedded in a SOAP message to portal.com, consists of three main parts: </p><ul>  <li>Common attributes, which contain details about the common attributes of the SAML protocol. The common attributes could be the version of the SAML protocol that is being used and what version is acceptable (<i>&lt;MajorVersion&gt;</i> and <i>&lt;MinorVersion&gt;</i>), and the time when this request was issued (<i>&lt;IssueInstant&gt;</i>).  <li><i>AssertionArtifact</i>, which consists of the assertion artifact that was received by greetings.com.  <li><i>RespondWith</i>, which defines what the requesting site (greetings.com) is expecting in reply to this request.</ul><p>An optional <i>&lt;ds:Signature&gt;</i> element lets you include digital signatures, thereby making the requests and assertions more secure.</p><p>Upon receiving the SOAP message requesting assertions, portal.com retrieves the <i>Assertion</i> artifact from the message (step 8). It uses this artifact to retrieve the assertion it created in step 6 corresponding to this artifact. It then sends this assertion to greetings.com in the form of a SOAP response; see <A NAME="rl8"><A HREF="#l8">Listing Eight</A>.</p><p>The SAML protocol response is embedded in the SOAP message. There are three main parts to the SOAP response.</p><ul>  <li>SAML protocol's common attributes, which consist of the attributes that are common to the SAML protocol responses. It has information such as the version number (<i>&lt;MajorVersion&gt;</i> and <i>&lt;MinorVersion&gt;</i>), the request ID of the request to which this is a response (<i>&lt;InResponseTo&gt;</i>), the response URL (<i>&lt;Recipient&gt;</i>), and so on.  <li>Assertion. The actual assertion about the <i>Subject</i> is appended to the message. (This assertion was created in step 6.)  <li>Status, which gives information about the status of the request.</ul><p>The SOAP response with the assertion is then sent to greetings.com.</p><p>When greetings.com receives the SOAP response containing the assertions, it processes the assertions and finds out who the <i>Subject</i> is and how the <i>Subject</i> was authenticated in portal.com. Based on this information, greetings.com decides if it can allow access to its resources to the <i>Subject</i>.</p><p>Assuming that greetings.com accepts the assertions (step 10), the <i>Customer</i> is allowed access to greetings.com. By using SAML, I have transferred authentication information from portal.com to greetings.com (a federated site of portal.com), thereby eliminating the need to log into greeting.com again and, thus, achieving Single Sign-On.</p><h3>Conclusion</h3><p>In general, large integrated portals have difficulty in providing SSO functionality because there has been no standard defined for exchanging authentication messages. SAML defines XML formats for such message exchanges. With the introduction of SAML, message exchanges become more standardized, thereby making SSO possible between disparate web entities.</p><p></p><p><b>DDJ</b></p><H4><A NAME="l1">Listing One</H4><pre>GET http://www.portal.com HTTP 1.0&lt;other HTTP components &gt;</pre><P><A HREF="#rl1">Back to Article</A></P><H4><A NAME="l2">Listing Two</H4><pre>HTTP 1.0 200 OKContent-type : text/htmlContentLength : nnnn&lt;form&gt;  &lt;...Login form...&gt;&lt;/form&gt;&lt;other HTTP components &gt;</pre><P><A HREF="#rl2">Back to Article</A></P><H4><A NAME="l3">Listing Three</H4><pre>POST http://www.portal.com HTTP 1.0&lt;form&gt;    &lt;username=...... &gt;    &lt;password=.......&gt;&lt;/form&gt;&lt;other HTTP components &gt;</pre><P><A HREF="#rl3">Back to Article</A></P><H4><A NAME="l4">Listing Four</H4><pre>&lt;html&gt;  &lt;body&gt;  &lt;....other html components... &gt;    &lt;a href=http://www.portal.com/AssertionCreator?       serviceURL=www.greetings.com&gt;Greetings Service  &lt;/a&gt;        &lt;a href= other services url &gt; Other Services &lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</pre><P><A HREF="#rl4">Back to Article</A></P><H4><A NAME="l5">Listing Five</H4><pre>&lt;saml:Assertion xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion" xmlns:xsi=http://www.w3.org/2001/XMLSchema-instanceAssertionID="VN5zxvNB+vtelx5uiOdbKHtVmH+u" IssueInstant="2002-12-20T06:39:36Z" Issuer="http://www.portal.com" MajorVersion="1" MinorVersion="0" &gt;  &lt;saml:Conditions NotBefore="2002-12-20T06:39:35Z"NotOnOrAfter="2002-12-0T06:40:06Z"&gt;    &lt;saml:AudienceRestrictionCondition&gt;      &lt;saml:Audience&gt;http://www.greetings.com&lt;/saml:Audience&gt;    &lt;/saml:AudienceRestrictionCondition&gt;  &lt;/saml:Conditions&gt;  &lt;saml:AuthenticationStatement AuthenticationMethod = "Password"AuthenticationInstant="2002-12-20T06:39:36Z"&gt;    &lt;saml:Subject &gt;      &lt;saml:NameIdentifier&gt;Customer'sLoginName&lt;/saml:NameIdentifier&gt;      &lt;saml:SubjectConfirmation&gt;        &lt;saml:ConfirmationMethod&gt;          urn:oasis:names:tc:SAML:1.0:cm:artifact-01        &lt;/saml:ConfirmationMethod&gt;      &lt;/saml:SubjectConfirmation&gt;    &lt;/saml:Subject&gt;  &lt;/saml:AuthenticationStatement&gt;&lt;/saml:Assertion&gt;</pre><P><A HREF="#rl5">Back to Article</A></P><H4><A NAME="l6">Listing Six</H4><pre>GET http://www.greeting.com?SAMLart=&lt;AssertionArtifact&gt;HTTP 1.0&lt;other http 1.0 components &gt;</pre><P><A HREF="#rl6">Back to Article</A></P><H4><A NAME="l7">Listing Seven</H4><pre>POST  www.portal.com  HTTP1.0Host: www.greetings.comContent-type : text/xmlContent-length : nnnnSOAPAction : http://www.oasis-open.org/committees/security&lt;soap-env:Envelope xmlns:soap-env="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;soap-env:Header/&gt;&lt;soap-env:Body&gt;&lt;samlp:Request xmlns:samlp="urn:oasis:names:tc:SAML:1.0:protocol"IssueInstant="2002-12-20T06:39:40Z" MajorVersion="1"MinorVersion="0" RequestID="0PSbtwzxi03kwCGWhi/wCwN8JMBU"&gt;&lt;samlp:AssertionArtifact&gt;AAP5E18Eyd5Sm2ixiXrk9kaZ92HwMBtedSjAOqZlDqPsRp4NNNwW0R/h      &lt;/samlp:AssertionArtifact&gt;      &lt;samlp:RespondWith&gt;saml:AuthenticationStatement      &lt;/samlp:RespondWith&gt;      &lt;ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#"&gt;[Digital Signature Elements]      &lt;/ds:Signature&gt;&lt;/samlp:Request&gt;&lt;/soap-env:Body&gt;   &lt;/soap-env:Envelope&gt;</pre><P><A HREF="#rl7">Back to Article</A></P><H4><A NAME="l8">Listing Eight</H4><pre>HTTP /1.0 200 OK Content-type : text/xmlContent_Length :nnn&lt;soap-env:Envelope xmlns:soap-env="http://schemas.xmlsoap.org/soap/envelope/"&gt;  &lt;soap-env:Header/&gt;  &lt;soap-env:Body&gt;    &lt;samlp:Response xmlns:samlp="urn:oasis:names:tc:SAML:1.0:protocol"  InResponseTo="0PSbtwzxi03kwCGWhi/wCwN8JMBU"        IssueInstant="2002-12-20T06:39:36Z" MajorVersion="1" MinorVersion="0" Recipient=http://www.greetings.comResponseID="t0isXqwoUc40E0XVnL5/BtZo6y2Y"&gt;      &lt;saml:Assertion xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion"xmlns:xsi=http://www.w3.org/2001/XMLSchema-instanceAssertionID="VN5zxvNB+vtelx5uiOdbKHtVmH+u" IssueInstant="2002-12-20T06:39:36Z" Issuer="http://www.portal.com" MajorVersion="1" MinorVersion="0" &gt;        &lt;saml:Conditions NotBefore="2002-12-20T06:39:35Z" NotOnOrAfter="2002-12-0T06:40:06Z"&gt;          &lt;saml:AudienceRestrictionCondition&gt;            &lt;saml:Audience&gt;              http://www.greetings.com            &lt;/saml:Audience&gt;          &lt;/saml:AudienceRestrictionCondition&gt;        &lt;/saml:Conditions&gt;        &lt;saml:AuthenticationStatement  AuthenticationMethod = "Password"AuthenticationInstant="2002-12-20T06:39:36Z"&gt;          &lt;saml:Subject &gt;            &lt;saml:NameIdentifier&gt;              CustomerUserName            &lt;/saml:NameIdentifier&gt;            &lt;saml:SubjectConfirmation&gt;              &lt;saml:ConfirmationMethod&gt;                urn:oasis:names:tc:SAML:1.0:cm:artifact-01              &lt;/saml:ConfirmationMethod&gt;            &lt;/saml:SubjectConfirmation&gt;          &lt;/saml:Subject&gt;        &lt;/saml:AuthenticationStatement&gt;      &lt;/saml:Assertion&gt;      &lt;samlp:Status&gt;        &lt;samlp:StatusCode Value="samlp:Success"/&gt;      &lt;/samlp:Status&gt;    &lt;/samlp:Response&gt;   &lt;/soap-env:Body&gt;&lt;/soap-env:Envelope&gt;</pre><P><A HREF="#rl8">Back to Article</A></P></body></html>