<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>Special Issue 1994 - WINDOWS PROGRAMMING</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>Special Issue 1994 - WINDOWS PROGRAMMING</H1>
<hr>
<h2>FEATURES  </h2><P>
<h3><a href="9417a/9417a.htm">2PANE Illuminates Windows </A></h3><P>
<i>by Dick Wilmot </i><P>
2PANE, the program presented here, lets you create multiple windows and probe Windows messaging and window procedures. Dick implements 2PANE for both Windows 3.x and Windows NT.  <P>
<h3><a href="9417b/9417b.htm">Very Dynamic Linking in Windows </A></h3><P>
<i>by Craig A. Lindley </i><P>
Craig presents a technique he calls &quot;dynalinking&quot; that manages the interface between an application program and one or more DLLs, maximizing the power and flexibility of both. <P>
<h3><a href="9417c/9417c.htm">A Generic About... Box Handler </A></h3><P>
<i>by Joseph M. Newcomer </i><P>
Joe's generic About... box handler is a single binary that can be used by all applications. He also incorporates it into a DLL that has some support code needed by the applications.  <P>
<h3><a href="9417d/9417d.htm">DOS Pipes for Windows </A></h3><P>
<i>by Al Williams </i><P>
Traditional multitasking operating systems let you  use pipes to chain programs together--but not Windows. Al shows you a pipe-like way of running a DOS program that collects its output as it's created, then routes it to a cooperating Windows program. <P>
<h3><a href="9417e/9417e.htm">A Program Architecture for  Visual Basic Development </A></h3><P>
<i>by Joachim Sch&uuml;rmann </i><P>
A program architecture provides constraints and services which appear desirable for a particular project. The architecture Joachim discusses here is designed to squeeze more performance out of Visual Basic applications. <P>
<h3><a href="9417f/9417f.htm">A Windows I/O Monitor </A></h3><P>
<i>by Rick Knoblaugh </i><P>
VRKIOMON is a driver that lets you eavesdrop on I/O processes, such as COM ports, that are normally trapped by existing Windows drivers. Rick's trick is to hook the VMM services for installing I/O handlers and enabling and disabling I/O trapping. <P>
<h3><a href="9417g/9417g.htm">Customizing Window Behavior </A></h3><P>
<i>by Vinod Anantharaman </i><P>
Vinod examines how you can use subclassing with the Microsoft Foundation Class (MFC) library. He illustrates this technique by developing a DLL that lets you change the default look of windows running on your system. <P>
<h3><a href="9417h/9417h.htm">Avoiding Windows PATH Cram </A></h3><P>
<i>by Joseph M. Newcomer </i><P>
How many times have you installed a new application, only to find that it added itself at the front of your PATH, maxing out the 127-byte PATH limit? FreePath, the program Joe presents here, handles the PATH problem by simulating the effect of PATH without actually requiring that new directories be added to the PATH. <P>
<h3><a href="9417i/9417i.htm">Exception Handlers and Windows Applications  </A></h3><P>
<i>by Joseph Hlavaty </i><P>
TrapMan, the Windows tool Joe presents here, is a debugging tool for analyzing exceptions in Windows applications. <P>
<h3><a href="9417j/9417j.htm">Editorial </A></h3><P>
<i>by Michael Floyd </i><P>
<HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
