<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>October 1994 - INTEROPERABLE OBJECTS</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>October 1994 - INTEROPERABLE OBJECTS</H1>
<hr>
<h2>FEATURES  </h2><P>
<h3><a href="9410a/9410a.htm">INTEROPERABLE OBJECTS </A></h3><P>
<i>by Mark Betz </i><P>
If the next great battle in the computing wars revolves around interoperable (or component) objects, you'd better know who the combatants are and what their arsenals hold. Mark analyzes the specifications and proposals, ranging from CORBA and SOM/DSOM to COM and OpenDoc.  <P>
<h3><a href="9410b/9410b.htm">OBERON SYSTEM 3 </A></h3><P>
<i>by Johannes L. Marais </i><P>
From certain perspectives, developing truly interoperable component objects requires viewing the programming language and operating system as a symbiotic whole. Oberon System 3 is just such an environment. <P>
<h3><a href="9410c/9410c.htm">MAKING A CASE FOR ANIMATING C++ PROGRAMS </A></h3><P>
<i>by Alan West </i><P>
Alan argues that for object-oriented systems, it's better to have dynamic, object-oriented, animated views that show objects as they are created and destroyed and as they communicate than it is to animate static structural views.  <P>
<h3><a href="9410d/9410d.htm">ENDIAN-NEUTRAL SOFTWARE </A></h3><P>
<i>by James R. Gillig </i><P>
In the first installment of this two-part article, Jim examines what Endian means from the programmer's perspective, including Big-endian, Little-endian, and the PowerPC's  Bi-endian architecture. Next month, he'll discuss how to write portable software by applying Endian-neutral design and programming principles. <P>
<h2>EMBEDDED SYSTEMS  </h2><P>
<h3><a href="9410e/9410e.htm">EXTENDED STATE DIAGRAMS AND REACTIVE SYSTEMS </A></h3><P>
<i>by Doron Drusinsky </i><P>
Doron examines how extended state diagrams (also known as &quot;Harel diagrams&quot;) can be used in reactive systems--those systems that endlessly react to a plurality of partially correlated entities in their environment. <P>
<h2>NETWORKED SYSTEMS </h2><P>
<h3><a href="9410f/9410f.htm">NETWORK COMMUNICATIONS USING THE NetBEUI PROTOCOL </A></h3><P>
<i>by Marshall Brain </i><P>
NetBEUI, the native network protocol for both Windows NT and the upcoming &quot;Chicago,&quot; handles such things as disk and printer sharing over the network. Marshall describes the protocol and shows how to apply it in your own applications.  <P>
<h2>EXAMINING ROOM </h2><P>
<h3><a href="9410g/9410g.htm">EVALUATING THE SOFTWARE DEVELOPMENT PROCESS </A></h3><P>
<i>by James O. Coplien </i><P>
How efficient is your software-development process? Jim presents techniques for measuring process efficiency, then describes a real-world example of its application. <P>
<h2>PROGRAMMER'S WORKBENCH  </h2><P>
<h3><a href="9410h/9410h.htm">OLE2 AND WINDOWS .INI FILES </A></h3><P>
<i>by Billy Cousins </i><P>
Object Linking and Embedding (OLE) is an architecture that allows applications to integrate data or objects into a compound document. Billy presents functions that let you use compound files to replace and enhance the initialization file functions provided with Windows.  <P>
<h2>COLUMNS  </h2><P>
<h3><a href="9410i/9410i.htm">PROGRAMMING PARADIGMS  </A></h3><P>
<i>by Michael Swaine </i><P>
Can software model the human mind? If so, what kind of model should it be? Michael examines these and other topics. <P>
<h3><a href="9410j/9410j.htm">C PROGRAMMING </A></h3><P>
<i>by Al Stevens </i><P>
Al discusses the symbol-table process and the lexical scan Quincy uses to build a run-time, interoperable token stream. He also ponders the Zen of Zen books. <P>
<h3><a href="9410k/9410k.htm">ALGORITHM ALLEY  </A></h3><P>
<i>edited by Bruce Schneier </i><P>
Ken Price examines genetic annealing, a versatile approach to global optimization that's based on a combination of genetic algorithms and simulated-annealing techniques. <P>
<h3><a href="9410l/9410l.htm">UNDOCUMENTED CORNER  </A></h3><P>
<i>edited by Andrew Schulman </i><P>
After going nose-to-nose over trade practices, either Microsoft or the Feds blinked. Andrew analyzes the case and its implications. <P>
<h3><a href="9410m/9410m.htm">PROGRAMMER'S BOOKSHELF  </A></h3><P>
<i>by Peter D. Varhol </i><P>
Peter discovers that two seemingly unrelated books--<I>Things That Make Us Smart</I> and <I>The Fuzzy Systems Handbook</I>--do have something in common. <P>
<h3><a href="9410n/9410n.htm">EDITORIAL </A></h3><P>
<i>by Jonathan Erickson </i><P>
<h3><a href="9410o/9410o.htm">LETTERS </A></h3><P>
<i>by you </i><P>
<h3><a href="9410p/9410p.htm">SWAINE'S FLAMES </A></h3><P>
<i>by Michael Swaine </i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9410q/9410q.htm">OF INTEREST </A></h3><P>
<i>by Monica E. Berg </i><P>
<P>
<HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
