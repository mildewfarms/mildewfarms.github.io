<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>Special Issue 1994 - THE INTEROPERABLE OBJECTS REVOLUTION</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>Special Issue 1994 - THE INTEROPERABLE OBJECTS REVOLUTION</H1>
<hr>
<h2>FEATURES  </h2><P>
<h3><a href="9416a/9416a.htm">Introducing Interoperable Objects </A></h3><P>
<i>by Ray Vald&eacute;s </i><P>
<i>You can't tell the players without a program. DDJ's senior technical editor surveys the world of interoperable objects, from object models to  compound-document architectures. </i><P>
<h3><a href="9416b/9416b.htm">OMG's CORBA </A></h3><P>
<i>by Mark Betz </i><P>
<i>The Object Management Group's Common Object Request Broker Architecture (CORBA) specification is foundation of distributed-computing systems such as IBM's DSOM and Sunsoft's DOE, among others.  </i><P>
<h3><a href="9416c/9416c.htm">The Component Object Model </A></h3><P>
<i>by Sara Williams and Charlie Kindel </i><P>
<i>Microsoft's Component Object Model (COM) is a component-software architecture that allows applications and systems to be built from components supplied by different software vendors.  </i><P>
<h3><a href="9416d/9416d.htm">IBM's System Object Model </A></h3><P>
<i>by F.R. Campagnoni </i><P>
<i>The System Object Model (SOM), the linchpin of IBM's approach to interoperable objects, will eventually underlie all of IBM's object-technology offerings, including OpenDoc, the Taligent frameworks, and the Workplace family of operating systems.  </i><P>
<h3><a href="9416e/9416e.htm">OpenDoc </A></h3><P>
<i>by Jeff Rush </i><P>
<i>OpenDoc is an open-architecture-enabling technology designed by Apple for creating compound documents which can contain many different types of data, such as text, graphics, tables, video, sound, and animation.  </i><P>
<h3><a href="9416f/9416f.htm">The Architecture of the Taligent System </A></h3><P>
<i>by Michael Potel and Jack Grimes </i><P>
<i>The Taligent system is a web of frameworks that includes an object-oriented application-programming model, a fully object-oriented operating environment, and a suite of framework-based developer tools that complement the programming model.  </i><P>
<h3><a href="9416g/9416g.htm">OLE Integration Technologies </A></h3><P>
<i>by Kraig Brockschmidt </i><P>
<i>OLE 2.0, which is built upon Microsoft's COM, is a component-integration technology for interoperable objects that can be located inside applications, in-process DLLs, or out-of-process EXEs. </i><P>
<h3><a href="9416h/9416h.htm">Novell's AppWare Distributed Bus </A></h3><P>
<i>by Joseph Firmage </i><P>
<i>Novell's AppWare Bus provides the tools and technologies to rapidly develop client applications that leverage existing network services.  </i><P>
<h3><a href="9416i/9416i.htm">Distributed Applications and NeXT's PDO </A></h3><P>
<i>by Dennis Gentry </i><P>
<i>The Portable Distributed Objects system and Distributed Objects, subsets of NextStep technology, make it possible to construct and maintain complex client/server apps in a heterogeneous environment.  </i><P>
<h3><a href="9416j/9416j.htm">Implementing Interoperable  Objects </A></h3><P>
<i>by Ray Vald&eacute;s </i><P>
<i>The best way to see how one approach to interoperable objects differs from another is to review actual code.  </i><P>
<HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
