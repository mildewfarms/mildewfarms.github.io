<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>February 1994 - SOFTWARE DESIGN AND TESTING</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>February 1994 - SOFTWARE DESIGN AND TESTING</H1>
<hr>
<h2><a name="000d_0001">FEATURES</h2><P>
<h3><a href="9402a/9402a.htm">PATTERNS AND SOFTWARE DEVELOPMENT</A></h3><P>
<i>by Kent Beck</i><P>
If we're ever to realize the promise of object-oriented programming, we first have to be able to create and package truly reusable software components--and &quot;patterns&quot; may be the way to do it. Kent examines one of the hottest topics in software development.<P>
<h3><a href="9402b/9402b.htm">DESIGNING AN APPLICATION FRAMEWORK</A></h3><P>
<i>by Grady Booch</i><P>
An object-oriented pioneer presents his strategies for building flexible, general-purpose foundation-class libraries that enable you to make the most of code reuse.<P>
<h3><a href="9402c/9402c.htm">COMPUTER-AIDED SOFTWARE TESTING</A></h3><P>
<i>by Birger Baksaas</i><P>
According to the Quality Assurance Institute, as much as 80 percent of all software is tested manually. Birger shares an automated testing system which simulates user interaction by producing events and sending them to the applications.<P>
<h3><a href="9402d/9402d.htm">THE BLACK ART OF GUI TESTING</A></h3><P>
<i>by Laurence R. Kepple</i><P>
The old rules governing automated software testing don't always apply to event-driven graphical-user interfaces. Dr. Kepple examines how the shift from character-based user interfaces to GUIs affects test automation, and why the programming approach to testing is superior to conventional record/playback methods. George Symons adds notes on different approaches to record and playback.<P>
<h3><a href="9402e/9402e.htm">SOFTWARE TESTING CYCLES</A></h3><P>
<i>by N. Scott Bradley</i><P>
The key to testing more and more code in less and less time is to have a clearly defined software test cycle. Scott discusses a testing cycle composed of four steps: test generation, playback, verification, and reuse.<P>
<h2>EMBEDDED SYSTEMS</h2><P>
<h3><a href="9402f/9402f.htm">SIGNAL ANALYSIS VIA THE BOOTSTRAP</A></h3><P>
<i>by Gary McGrath</i><P>
Signal analysis requires that you minimize assumptions--and the Bootstrap is a resampling algorithm which estimates the error on quantities by resampling the data in random ways. Gary analyzes this algorithm and describes how the astrophysics community has adapted it to search for tenuous signals in multidimensional data.<P>
<h2>NETWORKED SYSTEMS</h2><P>
<h3><a href="9402g/9402g.htm">YOUR OWN TOKEN-RING NETWORK MANAGER</A></h3><P>
<i>by Andy Yuen</i><P>
Andy presents an IEEE 802.5 MAC-layer token-ring network-management application consisting of a Windows front end and a network-management agent on the back end. This tool lets you list active token-ring adapters on the ring, associate descriptive names with token-ring adapters, identify soft errors and the fault domain, monitor the network status, and more.<P>
<h2>EXAMINING ROOM</h2><P>
<h3><a href="9402h/9402h.htm">EXAMINING THE WINDOWS SETUP TOOLKIT</A></h3><P>
<i>by Walter Oney</i><P>
One of the best-kept secrets in the Microsoft Windows Software Development Kit is the Setup Toolkit. Walter examines the contents of the Setup Toolkit and explains how you can use it to quickly build high-quality setup programs for your Windows application.<P>
<h2>PROGRAMMER'S WORKBENCH</h2><P>
<h3><a href="9402i/9402i.htm">NT-STYLE THREADS FOR MS-DOS</A></h3><P>
<i>by Al Williams</i><P>
Al uses Phar Lap's TNT 386|DOS-Extender to implement NT-style threads in a DOS program that removes a directory tree. Instead of recursing down the tree, the program (which works with NT and TNT) processes directories in parallel.<P>
<h2>COLUMNS</h2><P>
<h3><a href="9402j/9402j.htm">PROGRAMMING PARADIGMS</A></h3><P>
<i>by Michael Swaine</i><P>
If, like Michael, you consider yourself a card-carrying member of the Age of Information, then you're also likely suffering from &quot;Information Overload.&quot;<P>
<h3><a href="9402k/9402k.htm">C PROGRAMMING</A></h3><P>
<i>by Al Stevens</i><P>
Al builds an <I>Editor </I>class for D-Flat++, takes a look at Mark Terribile's <I>Practical C++</I>, and examines what all the fuss is about in the great C++ preprocess-or-not debate.<P>
<h3><a href="9402l/9402l.htm">ALGORITHM ALLEY</A></h3><P>
<i>by Tom Swan</i><P>
Tom catches up on his mail and shares reader implementations of palindrome encryption and other algorithms.<P>
<h3><a href="9402m/9402m.htm">UNDOCUMENTED CORNER</A></h3><P>
<i>edited by Andrew Schulman</i><P>
In Part 2 of his article on the Windows 3.1 Virtual Machine Manager, Kelly Zytaruk presents his Windows VM Explorer application.<P>
<h3><a href="9402n/9402n.htm">PROGRAMMER'S BOOKSHELF</A></h3><P>
<i>by Peter D. Varhol</i><P>
Nearly 15 years ago, Seymour Papert defined our view of the relationship between computers and teaching with his seminal book, <I>Mindstorms and the Logo Programming Language</I>. This month, Peter examines whether Papert's views have changed in his new book, <I>The Children's Machine: Rethinking School in the Age of the Computer</I>.<P>
<h2>FORUM</h2><P>
<h3><a href="9402o/9402o.htm">EDITORIAL</A></h3><P>
<i>by Jonathan Erickson</i><P>
<h3><a href="9402p/9402p.htm">LETTERS</A></h3><P>
<i>by you</i><P>
<h3><a href="9402q/9402q.htm">SWAINE'S FLAMES</A></h3><P>
<i>by Michael Swaine</i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9402r/9402r.htm">OF INTEREST</A></h3><P>
<i>by Monica E. Berg</i><P>
<HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
