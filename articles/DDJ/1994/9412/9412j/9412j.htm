<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>DEC94: PROGRAMMING PARADIGMS</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<h1>PROGRAMMING PARADIGMS<a name="0219_00b1"></h1><P>
<h2><a name="0219_00af"><a name="0219_0000">The Pizza Clerk, the Bookmaker, and the UPS Truck</h2><P>
<h3>Michael Swaine</h3><P>
<a name="0219_00b0"><a name="0219_0000">This is not the month in which we learn how to get rich developing software. This is also not the month in which I pick the best erotic QuickTime movies on CompuServe. This is the month in which I relate strange tales of Internet access, critique Newton development tools, and describe some things I found in my driveway. I wanted you to know that up front in case these subjects were not at the top of your must-research list.<P>
<h3><a name="0219_00b2">Tales of the On Ramp<a name="0219_00b2"></h3><P>
Every year for eight years, the Santa Cruz Operation has hosted a bash called SCO Forum on the University of California, Santa Cruz campus, just down the road from me. This year for the first time I bestirred myself early one morning to grace the festivities with my bleary-eyed presence. It wasn't primarily an interest in SCO specialties like multiuser system support and fast-food service that drew me to this romp in the redwoods, although back when I was a working programmer, I was heavily into both.<P>
No, I was there chiefly as working press--that is, to suss the vibes and nab the perks and bennies. I scarfed up a bottle of official SCO wine, two nifty tie tacks, one SCO Forum shoelace, and a Frisbee for the lab. I didn't stay till the last day, so I didn't get to take my seat cushion home with me.<P>
The seat cushions were to ease the pain of sitting on the hard bleachers in the quarry, listening to--to name perhaps the least painful player in the motley troupe--Electronic Frontier Foundation cofounder John Perry Barlow, on whose thoughts as then expressed I hope to report in depth within the next month, but not now.<P>
From players other than Barlow I heard that SCO just had its best year ever, is profitable, and has money in the bank some 15 months after going public. I learned that new SCO CFO Alok Mohan considers the UNIX wars over now that SCO has a 37 percent market share, and that SCO tells the press it ain't afraid of no NT, while admitting to its stockholders that SCO was feeling the NT pinch at the end of fiscal '93.<P>
I heard more than I ever wanted to hear about Lotus Notes for SCO. SCO customers apparently couldn't hear enough about one of the two big themes of SCO Forum: its new OS version that is more friendly to Windows clients.<P>
And I got the real story on Internet pizza delivery.<P>
SCO is big with fast-food folks. Pizza Hut and its parent, Pepsi, are major customers, as is Dr. Pepper, which I think is part of Pepsi, isn't it? So is KFC, which announced that it was installing SCO back-of-house management software in 800 of its chicken joints, but that's not the big news, oh no; that would be PizzaNet.<P>
It probably shouldn't come as a surprise that the first pizza order over the Internet occurred at SCO Forum. The other big theme at SCO Forum, and the theme of the August issue of <I>SCO World</I> magazine, was access to the Internet. Now there's a no-brainer. Access to the Internet is probably a theme at Tupperware parties these days. As Ray Vald&eacute;s reported in the August <I>Dr. Dobb's Developer Update</I>, the Icon Bar &amp; Grill in San Francisco has a TCP/IP link to the Internet. It's everywhere. Tell me about it; my mom Veronicas. I'd paraphrase John Lennon and say that the Internet is bigger than Jesus, but a clause in my contract holds that my pay gets docked for all copies of the magazine burned by Christian fundamentalists. It's big, though. And SCO noticed. And they thought, &quot;We could use it to order pizza.&quot;<P>
A big draw at SCO Forum was the pizza-ordering station. The idea was, you log on to the WWW via NCSA Mosaic and custom &quot;PizzaNet&quot; software from SCO, and you enter your name and address and your order (including drinks). The PizzaNet server at Pizza Hut headquarters in Wichita, Kansas, takes the order and modems it back to your local Pizza Hut, which calls you back (voice) to verify the order and then dispatches a driver. To the local Pizza Hut's back-of-store SCO software it looks no different from an order from a point-of-sale terminal in the front of the store.<P>
The main drawbacks seem to be: 1. You still have to talk to your local store; 2. it's only available in Santa Cruz, so far; 3. delivery was unimpressive in the test run my friend J&uuml;rgen did; and 4. _er, well, I don't know, maybe you actually <I>like </I>Pizza Hut pizza.<P>
What's interesting about this whole thing is that they already had a back-end system and only needed to attach a user interface, and the one they chose was Mosaic. In the competition for On Ramp of Choice to the Infobahn, the leading contender is a noncommercial program (take that, commercializers of the net), and it's a noncommercial program that pretty much requires a 56Kbs connection (take that, Joe Average User).<P>
Of course, Mosaic has been licensed to various developers for commercial versions.<P>
How does anyone not already into computers and telecommunications and UNIX make any sense of the Internet? How do such people even find out about service providers, or find out that there are different kinds of service providers, or learn that service providers are anything to ask about?<P>
Access is a puzzle for anyone not already on the Internet. And that's still most of the world: Americans tend to take terms like World Wide Web literally, but most Internet users today are U.S. resident. (Second place goes to &quot;unknown,&quot; which says something about Internet culture, I suppose.) It's only been for about a year now that the general public in Japan has had any access, which they now get through IIKK via TWICS, no doubt using TCP/IP and SLIP or PPP, unless they want WWW access, in which case maybe they should talk to SCO about PizzaNet.<P>
Okay, it's not just the acronym soup that confuses neophytes. Access to the Internet is a puzzle. So you'd think that solving that puzzle would be the business of any introductory Internet book. But my latest visit to a good computer bookstore showed that the Internet neophyte has a bigger access problem than that. There was a wall of probably 500 books on the Internet, and there didn't seem to be more than four of any one title. There should be a book to tell people what book to read.<P>
<I>DDJ</I> has offered some advice on Internet books (and does so again in this issue), but the problem with any book about a topic like the Internet is that it is guaranteed to be out of date by the time it's published. I suspect the best advice you can give anyone interested in the Internet is to read Howard Reingold's <I>The Virtual Community</I> for the history and culture and sociology and philosophy of the Net, get some actual person to set you up, and then start surfing. The only reliable source regarding the Internet is the Internet. The best information on Internet access is accessed through the Internet. Joseph Heller could have designed this.<P>
<h3><a name="0219_00b3">Making Book on Newton<a name="0219_00b3"></h3><P>
With used Newton MessagePad 100s selling for $350 now, improvements in the handwriting recognition in place and more coming, and with cellular-phone Newton devices probably available by the time this sees print, you might be tempted to pick one up. A MessagePad is not a bad appointment calendar, to-do list manager, and phone list, and it justifies being more expensive than a dedicated device of this sort by being, well, nondedicated. There are hundreds of Newton applications out there now, mostly freeware or shareware, and mostly pretty good stuff. And if you don't like the built-in applications, there a third-party alternatives. There's even a shareware program that turns the MessagePad into a Sony remote, with separate screens for controlling your Sony TV, CD, VCR, or whatever.<P>
So you just might possibly be tempted to pick up at least a used Newton. What you probably may not be tempted to do is to plunk down $800 for the developer's kit just to program the thing for your own purposes. There are, however, some alternatives.<P>
There are shareware and freeware products that let you write Newton code on the Newton. By and large, this is not something you would ever do if you were in your right mind. Handwriting code or typing on an on-screen keyboard with the stylus is not a fun way to program. (There is a shareware product, Typomatica, that lets you turn any computer with serial communications software into a keyboard for the Newton, though.)<P>
Electronic books are actually catching on for the Newton platform. Till now, the only way to make them had been via the Bookmaker component of the Developer's Kit (NTK). Now there's an alternative, David Fedor's <I>PaperBack</I>. It's fine for doing simple electronic books, but what Apple really needs to do is to spin Bookmaker off as a separate product. Bookmaker actually produces executables and allows you to embed NewtonScript code in them, so a standalone Bookmaker and a book on NewtonScript could be a low-cost approach to a limited programming system for the Newton.<P>
There are also a number of tools for knocking out Newton data-entry applications quickly and cheaply. These are form-creation programs that sell for anywhere from $49 to $200. Some even support development under Windows. The ones I can recommend from personal experience are FilePad from HealthCare Communications (Lincoln, NE), PowerForms from Sestra Inc., (Omaha, NE), a powerful product whose name is unsettled from Fulcrum Software (Austin, TX) and, for quick-and-dirty creation of simple data-entry apps with good data-type screening, Flash-Data from ISIS International (Sherman Oaks, CA).<P>
<h3><a name="0219_00b4">Hurled from the UPS Truck<a name="0219_00b4"></h3><P>
Generations of UPS drivers have concluded that our dog, whom we consider a frisky, Frisbee-catching lab, is in truth a bloodthirsty beast who makes it unsafe to set foot out of the truck anywhere within the gates of stately Swaine Manor. Quivering in fear, they throw their packages from the truck as they squeal through the drive. Okay, they turn around slowly in the drive, and from my garret window I can tell neither whether they quiver nor whether they throw the boxes out while moving or set them gently on the ground while stopped. I just know they don't get out of the truck.<P>
FedEx drivers and Express Mail drivers do: They walk their packages past the lab to the front door, and if she sets the Frisbee at their feet they sometimes even throw it for her. Having collected data over the years across several drivers, several services, and four dogs (counting neighbors'), I have concluded that big brown trucks make dogs angry. No other conclusions are supported by the data, but I suggest you don't send me glassware.<P>
Among recent UPS (or FedEx or Express Mail) deliveries to the stately Swaine vestibule (or driveway, as the case may be) are Prograph CPX, VIP-C, and a book by Scott Jarol, all of which I am in the process of evaluating.<P>
There's another reason for looking at these particular products. Coincidentally, all these products deal, in one way or another, with visual programming. Also coincidentally, I've heard the suggestion from a couple of respected sources just recently that what OOP really needs is visible objects, a programming environment that gives a concreteness to software objects. Some coincidences are meaningful, so I'm looking at these products.<P>
Prograph CPX from Prograph International (Halifax, NS) and VIP-C from Mainstay (Camarillo, CA) are visual programming systems for the Macintosh. They reflect a lot of experience in visual programming and a lot of thinking about how it ought to be implemented in an object-oriented development universe, and I hope to write about one or both of them in the coming months as I get more deeply into them. Jarol's book has something to do with visual programming, not on the Mac, but it's really about multimedia development.<P>
There are already a lot of books out on multimedia development, and Scott Jarol's <I>Visual Basic Multimedia Adventure Set</I> (Coriolis Group Books, 1994) has a couple of strikes against it before it even gets to the plate. There's the title. Adventure set? Please. And there's the dog-ear announcing a $2500 multimedia contest, which, in addition to being gimmicky, turns out to be $2500 worth of software, not $2500 cash.<P>
But I think the cover blurb is not far off the mark when it calls Jarol's approach &quot;The best way to develop multimedia with animation, sound, video, music, and more.&quot; I am of the opinion, not original with me, that developing multimedia titles is something that should be done as cost-effectively as possible. Two reasons: multimedia is inherently costly and you can't expect to price it higher enough than analogous monomedia products to offset the cost differential, and you need to plan for failures.<P>
Failures, fer sure. Book publishers have been at it for much longer than multimedia publishers and they have come up with nothing better than a system in which a few best-sellers support a big backlist of losers. If you know something about computer-book publishing or science fiction or some other niche, you may question that, but it's the reality in general fiction and nonfiction-book publishing. Can you expect multimedia publishers to be any better at reading the market?<P>
<I>Myst</I>, a CD-ROM-based adventure game distributed by Br0derbund and produced by Rand and Robyn Miller, has sold over 400,000 copies at around $50 per. <I>Myst</I> is deep, rich, and beautiful with thousands of professional-quality images produced just for it, music composed just for it, live actors, and a complex game structure--an intriguing, well-developed virtual world. The production that went into <I>Myst</I> is comparable to what goes into a movie, and if it had been developed on a movie budget the $20 million gross to date would not have been very impressive.<P>
In fact, <I>Myst</I> was produced by the multitalented workaholic genius Miller brothers and team, who created the art, the music, the game, the world, and even acted in scenes in Myst, so we can assume that the Millers got a pretty good return on their investment of time. But how many Miller-and-Miller teams are there out there?<P>
And the situation is worse than that. Although CD-ROM hardware sales numbers are high and growing, an alarming number of these devices are being left on the shelves after they're bought, according to some observers. Most multimedia development is for presentations or training, not for producing CD-ROM titles. CD-ROM title sales are encouragingly high if you look at total volume and its growth, but the number of titles is increasing faster, and reports on user satisfaction indicate that a lot of CD-ROMs are sitting on the shelf after one viewing. I haven't seen this particular trend plotted, but my guess is that user perception of value of CD-ROM titles is falling. People are spending money on these things and, far too often, are being disappointed in what they get.<P>
This is a picture of a market poised for a consumer backlash. So if you're going to develop CD-ROM titles you should not be surprised if the first one is not a commercial success, or if fewer than half your publisher's titles are successful, or if the whole market goes through some painful times in the near future. You should write for Windows and only then, maybe, for the Mac. And you should keep costs, especially your time, down.<P>
This leads me to think that Visual Basic or some Windows-targeted authoring system is the way to go. That's Jarol's position, but he points out that no authoring system is going to give you the kind of flexibility you'll probably want. Thus Visual Basic. Visual Basic is well documented and supported. The question is, can you find the add-ons to make it a multimedia development system?<P>
That's what his book is about. Jarol argues against using a lot of extensions, instead showing how to get there chiefly via Windows API calls. And he bundles up all his solutions in a sort of multimedia kit.<P>
Overall, I like the book. In addition to building the kit and a multimedia title in the process, the book includes chapters on animation, audio, and MIDI that contain the kind of material you'd expect to find in appendices but that don't read (shudder) like appendices.<P>
He also gives sound advice, like, for Pete's sake don't waste time upgrading a PC to MPC yourself. Just buy an upgrade package.<P>
<P>
<HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
