<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>DEC94: World Wide Web & HTML</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<h1>World Wide Web &amp; HTML<a name="01e2_009f"></h1><P>
<h2><a name="01e2_009d"><a name="01e2_0000">Preparing documents for online presentation</h2><P>
<h3>Douglas C. McArthur</h3><P>
<p><i><a name="01e2_009e"><a name="01e2_0000">Douglas is a systems integration engineer for BioData Inc. He can be reached at douglas@biodata.com.</i></p><hr><P>
The World Wide Web--a network of computers providing information and resources on the Internet--grew out of a hypertext project started at CERN, the European Laboratory for Particle Physics. As a resource for finding information and services ranging from protein-databank searches to pizza deliveries, the World Wide Web (WWW) has become a centerpiece of the information superhighway. To access information on the WWW, you use hypertext-based &quot;browser&quot; applications that lead you to the desired documents, then display that information on the screen. <P>
At the heart of the WWW is a platform-independent page-description language called &quot;Hypertext Markup Language&quot; (HTML). Based on the Standard Generalized Markup Language (SGML), HTML lets you prepare documents for WWW browsing by embedding control codes in ASCII text to designate titles, headings, graphics, and hypertext links, making use of SGML's powerflinking capabilities. HTML is still evolving. The specification is currently at Document Type Definition (DTD) Level 2, which includes support for forms within standard hypertext documents. (The DTD describes the logical structure of possible document instances.) Work is also underway for DTD Level 3, which is focusing on a &quot;scalable HTML.&quot; Undoubtedly, additions to HTML such as those described in the accompanying text box entitled, &quot;Evolution of the HTML 3.0 Spec,&quot; will continue to be made, especially as commercial WWW browsers and servers become available.<P>
An understanding of HTML is critical to properly preparing documents for the WWW. There are, of course, a variety of sophisticated freeware and commercial tools designed to simplify this process. SoftQuad's (Toronto, ON) HoTMetal Pro, for instance, is a word processor for Mosaic and other WWW browsers that shields you from coding, then checks that documents are valid HTML. Likewise, Avalanche's (Boulder, CO) FastTag, a filter for use with word processors such as WordPerfect for Windows and Microsoft Word for Windows, lets you create documents normally, then execute a conversion macro to transform them into HTML format. Quarterdeck's (Santa Monica, CA) yet-to-come Normandy project promises similar capabilities. <P>
Still, most &quot;automated&quot; HTML tools are narrowly focused for specific tasks (such as translating previously created documents into HTML format) and generally not suited for robust WWW development. For instance, you would not want to create a WWW &quot;home page&quot;--the default hypertext document you see when you first enter the WWW--with a word processor, then translate it to HTML. In short, being familiar with HTML coding techniques is fundamental to WWW development. Thankfully, a wealth of information and tutorials are available to the HTML designer online. For instance, the NCSA provides the &quot;Beginner's Guide to HTML&quot; (<I>http://www.ncsa.uiuc.edu/SDG/Software/Mosaic/Docs/d2-htmlinfo.html</I>), while experienced HTML coders will find Michael Grobe's &quot;HTML Quick Reference&quot; (<I>http://kuhttp.cc.ukans.edu/lynx_help/HTML_quick.html</I>) valuable. In addition, James Tilton's &quot;Composing Good HTML&quot; should be required reading (<I>http://www.williamette.edu/html-composition/strict-html.html</I>). In this article, I'll cover the basics of HTML coding, then present the complete HTML source (see <a href="#01e2_00b2">Listing One</A>) to the live WWW home page shown in <a href="199401e4.htm">Figure 1</A> (from BioData, the company where I work). You can find the BioData home page on the WWW at <I>http://www.biodata.com/</I>. With a grasp of the HTML fundamentals presented here and the HTML source to the BioData home page, you can create your own customized home page. <P>
<h3><a name="01e2_00a0">WWW Browsers<a name="01e2_00a0"></h3><P>
There are numerous free (and a few commercial) hypertext browsers, the most well-known being Mosaic, from the National Center for Supercomputing Applications, a graphical, hypermedia front end to the Internet. Other graphical browsers include HaL Software's (Austin, TX) Olias Browser and Spyglass's (Champaign, IL) Enhanced NCSA Mosaic 2.0, which supports links to Adobe Acrobat 2.0, OLE 2.0, and AppleEvents. Likewise, Mosaic Communication Corp. (Mountain View, CA) has recently released its Mosaic NetScape browser for Windows, Macintosh, and the X Window System. At the other end of the spectrum is Lynx, a popular text-based browser for UNIX and DOS developed at the University of Kansas.<P>
Obviously, all WWW browsers aren't created equal. For instance, the X Windows version supports forms, while the current stable Macintosh version does not (alpha releases of NCSA Mosaic for the Mac do support forms, however). Lynx, on the other hand, supports forms, but can't display graphic images. Note that the freely distributable WWW browsers are regularly updated and usually available via anonymous ftp as soon as they are released. Keep the ftp sites handy and check them from time to time. (If you're using Mosaic, put them in your &quot;hotlist&quot; of documents that you can access via a quick menu selection.)<P>
The capabilities of WWW browsers should be kept in mind when designing HTML pages. For instance, if you create a fancy GIF image as a hypertext link, remember that some users will likely be using text-based browsers like Lynx. Consequently, they'll probably see only a noninformative [IMAGE] label on their screen. (There's an easy way around this one though, as I'll discuss shortly.) With a little forethought, however, your HTML documents can retain both aesthetics and functionality across a variety of WWW browsers.<P>
<h3><a name="01e2_00a1">WWW Servers<a name="01e2_00a1"></h3><P>
WWW server software has been ported to a number of platforms, ranging from UNIX to Macintosh. For this discussion, I will focus on UNIX-based servers. Two freely distributable UNIX-based WWW servers are widely available, one from NCSA the other from CERN. Although both have the same basic functionality, I prefer the CERN server because it provides better security, easier configuration, and has a wealth of online documentation available. In addition, Mosaic Communication has released two versions of its Mosaic NetSite server, one for nonsecure communications, and the other secure &quot;commerce&quot; transactions that require encryption and authentication.<P>
Currently, many of the advanced features of HTML coding, such as image mapping and utilizing forms data, require modification of server-configuration files. Thus, in most cases, the system administrator has yet another hat to wear, that of &quot;webmaster.&quot; Of course, the webmaster need not have root privileges. If security is an issue, I suggest creating a group &quot;www,&quot; adding the appropriate users, and setting group file permissions on WWW configuration files appropriately.<P>
<h3><a name="01e2_00a2">Writing HTML<a name="01e2_00a2"></h3><P>
If you are familiar with UNIX text-formatting languages such as troff, you can easily adapt to HTML coding. HTML tags, embedded within the body of the text, are used to define a document and guide its display. <a href="#01e2_00ac">Example 1(a)</A>, for instance, produces the output in <a href="#01e2_00ac">Example 1(b)</A>. Tags are bracketed by less-than (&lt;) and greater-than (&gt;) symbols. The slash (/) signifies an end-tag. Different tags can be embedded to combine type styles. Lines of text are automatically concatenated when displayed. Some common HTMLtags are listed in <a href="#01e2_00aa">Table 1</A>.<P>
All text following a tag is acted upon, up to the occurrence of the end-tag. A missing slash can have interesting effects! A few tags, like &lt;P&gt;, do not require an end-tag, since the tag does not act upon anything else.<P>
Hypertext links, graphics, or both text and graphics can be defined as a link. Note in <a href="#01e2_00ad">Example 2</A>, for instance, that the &lt;IMG_&gt; tag requires an attribute (SRC), which defines the graphic file. <P>
The majority of HTML tags are commands for text formatting. The exceptions are for creating hypertext links, inline graphics, and forms. Let's first examine creating a hypertext link, or &quot;anchor,&quot; which points to other documents; see <a href="#01e2_00ae">Example 3(a)</A>. The anchor tag is different from most formatting tags in that it includes an attribute. In this case the attribute is a hypertext reference (HREF) to another document. The entire text between the &lt;A_&gt; and &lt;/A&gt; becomes the link. Also note that &lt;IMG_&gt; is one of the few tags, like &lt;P&gt;, that does not require an end-tag. Additional attributes that can be used with the &lt;IMG_&gt; tag are ALIGN and ALT. You can use the ALIGN=BOTTOM attribute to display text at the bottom of an inline image; other values for the ALIGN attribute are TOP and MIDDLE. <P>
If graphics cannot be displayed, the ALT attribute will allow you to display an alternate text label; see <a href="#01e2_00af">Example 4(a)</A>. Remember that GIF images can be large and demand a lot of network bandwidth to download. If you have a large graphic image, create a smaller version of the image that is a link to the large image. For instance, in <a href="#01e2_00af">Example 4(b)</A> I've made a hypertext link to a GIF image instead of another HTML document. This is perfectly valid, as most browsers will automatically recognize the file type (based either on the .GIF extension, or via MIME type) and invoke the appropriate viewer. Note also that the smaller image, which has been defined as a link, will be displayed as an inline image, while the larger image will probably be displayed by an external viewer or in a separate window. If the browser does not recognize the file type or does not know of an appropriate &quot;helper application&quot; to invoke to display the image, you will be prompted for a filename and the data will be downloaded to a file.<P>
<h3><a name="01e2_00a3">Uniform Resource Locators<a name="01e2_00a3"></h3><P>
Up to this point, I've demonstrated only HTML documents and GIF images as hypertext reference (HREF) values. However, any uniform resource locator (URL) can be a valid HREF. URLs, like that in <a href="#01e2_00b0">Example 5(a)</A>, let you specify how to reach an Internet resource. The exact form of URLs depends upon whether you are using WWW, ftp, Telenet, Gopher, and so on. For the WWW, a URL begins with the name of the server you want to access (<I>http://www.biodata.com</I>), followed by the path name of your HTMLpage (<I>/douglas/people/douglas.html</I>). <P>
Because any URL can be used, HTML has the flexibility to reference many types of data. A URL can point to more hypertext, an image, a sound file, an MPEG animation sequence, or even a Microsoft Word document. Remember, however, that not every browser will be capable of handling that particular file type. For instance, clicking on a link pointing to a Microsoft Word document using NCSA Mosaic for the Macintosh will successfully launch Word and display the document. However, someone using NCSA Mosaic for X Windows will be out of luck. In short, stick to standard file types; see <a href="#01e2_00ab">Table 2</A>.<P>
A URL can also specify one of many types of protocols. For instance, to create a link that will download a file instead of trying to view it, use a URL specifying file-transfer protocol (FTP) instead of HTTP, as in <a href="#01e2_00b0">Example 5(b)</A>. In fact, an HREF value is not limited to being a URL as currently defined. Some of the more advanced (and impressive) HTML coding tricks are possible via URL overloading, or tacking extra information onto the end of a URL.<P>
<h3><a name="01e2_00a4">Back to Graphics<a name="01e2_00a4"></h3><P>
One example of URL overloading is demonstrated in image mapping. By clicking on different parts of a mapped image, you can access other HTML pages, just like clicking on a hypertext link. An image map is defined in HTML as in <a href="#01e2_00b1">Example 6</A>. Note the added attribute ISMAP in the &lt;IMG_&gt; construct and the HREF value used. While this looks like a valid URL, it is interpreted differently. The HREF in <a href="#01e2_00b1">Example 6</A> is being used to execute a program called &quot;imagemap&quot; with the argument &quot;picture.&quot; (Provided the server is configured with <I>http://host.domain.com/cgi-bin</I> as the directory for executable files.) The imagemap program returns the URL corresponding to the x,y coordinates of the point where the GIF image was clicked, based on the map file referenced by the argument <I>picture</I>.<P>
Image maps with icons or buttons for certain subjects, departments, and the like add a nice touch to home pages. You can also add the capability of zooming in on images by linking an area of a mapped image to an enlarged image (which could be another image map).<P>
Don't forget to provide a separate HTML document with text-only links for those users that can't view your mapped image. For details about configuring a NCSA WWW server to handle image mapping (creating the map files and the like), refer to <I>http://winter- mute.ncsa.uiuc.edu:8080/map-tutorial/image-maps.html</I>.<P>
<h3><a name="01e2_00a5">Forms<a name="01e2_00a5"></h3><P>
Before the advent of HTML forms, information flow via the WWW was unidirectional. Forms provide the means to collect and act upon data entered by the end user. They also open up a number of possibilities for online transactions, such as requesting specific news articles or ordering pizza (Pizza Hut's PizzaNet, <I>http://www.pizzahut.com/</I>, lets you do this).<P>
A number of gadgets are available for building forms, including text boxes, radio buttons, and check boxes. A user can enter text, select items from a list, check boxes, and then submit the information to the server. A program on the server then interprets the data and acts upon it appropriately, either by returning information in hypertext form, downloading a file, or (in the PizzaNet example) electronically notifying the local Pizza Hut restaurant of your order.<P>
All forms begin with the construct: <I>&lt;FORM METHOD=POST ACTION=&quot;cgi-bin/program</I>&quot;<I>&gt;_&lt;/FORM&gt;</I>. The ACTION should be a URL pointing to the program which will be processing the data collected by the form. Do not forget the attribute METHOD=POST, since use of METHOD=GET, the default attribute, should be avoided, especially if a large amount of data could potentially be submitted using the form.<P>
<a href="#01e2_00b3">Listing Two</A> &quot;Prototypical HTML forms&quot; shows how the &lt;INPUT_&gt;, &lt;TEXTAREA_&gt;, and &lt;SELECT_&gt; tags and their attributes are used to create a form. Note that one special &lt;INPUT_&gt; attribute must always be included in your form: <I>&lt;INPUT TYPE=SUBMIT VALUE=&quot;Continue.&quot;&gt;</I> This button causes the data entered into the form to be transmitted to the server program specified by the &lt;FORM ACTION_&gt; attribute. The VALUE attribute simply defines the name of the button, usually Continue, Submit, or Do It. For more on HTML-form coding, see <I>http://www.ncsa.uiuc.edu/SDG/Software/Mosaic/Docs/fill-out-forms/overview.html</I>.<P>
<h3><a name="01e2_00a6">Common Gateway Interface<a name="01e2_00a6"></h3><P>
Generating forms in HTML is only half the battle. The challenge is how to decode the data submitted from the form. The data is passed to an executable program in much the same way as x,y coordinates are passed to the imagemap program described previously. Programs that use data submitted from an HTML form must conform to the CGI (Common Gateway Interface) specification. Any language that produces executable files is suitable for creating a CGI. The most popular languages are C/C++, Perl, sh, and csh. Information on the CGI specification can be found at <I>http://hoohoo.ncsa.uiuc.edu/cgi/interface.html</I>.<P>
On a UNIX server, your CGI program will receive the form data via <I>stdin</I>--provided that the METHOD=POST attribute was used. By the same token, output produced by the CGI program sent to <I>stdout</I> will be sent back to the browser. If the METHOD=GET attribute was used (not recommended) all the form data is encoded in the environment variable QUERY_ STRING. Obviously, this would not work for large strings of data.<P>
<h3><a name="01e2_00a7">Tools<a name="01e2_00a7"></h3><P>
A number of tools exist to facilitate creation of HTML documents--macro libraries for emacs, for instance--that have shortcuts for all the HTML tags. On the Macintosh, there's the BB-Edit editor, which lets you highlight blocks of text and select an HTML formatting command from a pull-down menu. BBEdit will then automatically insert the start-tag and end-tag in the proper places. Another useful tool is rtf2html, which converts rich-text documents to HTML, preserving type styles, footnotes, graphics, and the like. For a list of useful HTML tools, refer to <I>http://www.ncsa.uiuc.edu/SDG/Software/Mosaic/Docs/faq-software.html</I> and <I>http://info.cern.ch/hypertext/WWW/Tools/ Overview.html</I>. <P>
<h3><a name="01e2_00a8">Server Statistics<a name="01e2_00a8"></h3><P>
It's nice to know that after working long hours producing HTML documents, someone is actually reading them. Most servers produce a log file which records when pages are accessed and by what Internet address. Programs are available that can analyze WWW-server log files and produce reports showing which pages are accessed the most and which Internet domains access your server the most. Kevin Hughes' getstats program, for example, produces at least 12 different reports and bar graphs showing WWW server accesses. For information on getstats, refer to <I>http://www.eit.com/software/getstats/getstats.html</I>.<P>
<h3><a name="01e2_00a9">Things to Come<a name="01e2_00a9"></h3><P>
As the number of WWW servers on the Internet continues to increase, so will the amount of information and services available. At the same time, the HTML specification will evolve, as will the capabilities of WWW browsers and servers. In the future, we'll continue to see exciting developments from the commercial sector, as companies rush to provide WWW servers and browsers that are faster, more robust, and more feature filled than the freely distributable versions that paved the way. Despite rapid changes, it is my hope that the World Wide Web will remain the collaborative environment that it is today. <P>
<h2>Evolution of the HTML Spec</h2><P>
<h3>Dan Connelly</h3><P>
<cite>Dan, the author of the HTML 2.0 spec, is an engineer at HaL Software. He can be contacted at connelly@halsoft.com.</cite><P>
The HTML language was first specified in 1991 by Tim Berners-Lee of CERN as part of the World Wide Web initiative to facilitate communication among high-energy physicists. The specification continued to evolve quickly to meet the requirements of the Web community. In 1993, I wrote the first SGML Document Type Definition (DTD) describing HTML and started assembling a suite of documents for testing Web browsers.<P>
At the beginning of 1994, the HTML spec was out of date and no longer reflected current practice. I drafted a revision that reflected many of the enhancements from NCSA Mosaic, called it the HTML 2.0 specification, and began organizing a review committee. The first meeting was at the WWW conference at CERN in May. We met again at the IETF (Internet Engineering Task Force) meeting in Toronto to form the HTML Working Group. The HTML 2.0 spec is an attempt to put a boundary around the current usage of HTML. It is out as a draft for review (see <I>http://www.hal.com/~connolly/html-spec</I>) and the Working Group expects to publish it by the end of 1994.<P>
The HTML 2.0 specification divides the HTML elements, or tags, into four categories:<P>
<UL>
<LI>The core set which consists of features every WWW application must support.</LI>
<LI>Optional features, including inline images and font changes.</LI>
<LI>Form elements for designing interactive, GUI-based forms for creating sophisticated, Web-based applications.</LI>
<LI>Obsolete elements that are supported but shouldn't be used in new documents, because they may be phased out in the future.</LI>
</UL>
HTML forms are the most innovative addition to the 2.0 spec. They allow the author of a Web document to present the reader with an interactive form that includes type-in fields, radio buttons, and pull-down menus. Forms allow the implementation of new types of Web applications. The uses range from providing sophisticated interfaces to search engines to on-line registration and interactive applications where the input to the form determines the nature and content of the document displayed.<P>
The HTML specification follows an open development model: A new feature is proposed, then implemented in some clients and tested in some applications. If the demand for the new feature is sufficient, the other browser implementors are encouraged to follow suit, and the new feature becomes widely deployed. In this process, the design is reviewed and perhaps modified or enhanced. Eventually, when there is sufficient experience with the new feature, it becomes part of the standard set of HTML features.<P>
The prime example of this is a set of features called HTML+, originally proposed in late 1993 by Dave Raggett of Hewlett-Packard Labs in Bristol, England. The forms elements were first proposed in his HTML+ document. Support for HTML+ tables will soon be stable enough to become a standard part of HTML. A simple markup scheme allows the encoding of complex tables, where each cell can contain text, images, or multiple paragraphs.<P>
The HTML+ proposal also allows the author more typographic control over the presentation of the document. Many Web users have been brought up using WYSIWYG word processors and expect the same level of presentation control of their Web-based documents. HTML+ addresses these needs with features such as inline images with automatic wraparound.<P>
HTML+ has features that meet the specialized requirements of Web users. It specifies a MATH element, making it simpler to encode mathematical equations for display.<P>
At this point, it's not clear how many more of the HTML+ features will become standard in a future revision of HTML, or if HTML+ will become a separate data format, supported by sophisticated browsers.<P>
The best place to find out more information about the Web is, of course, on the Web itself. For instance, see Tim Berners-Lee's original writings on WWW, HTML, and other topics at <I>http://info.cern.ch/hypertext/WWW/TheProject.html</I>. The HTML 2.0 review materials are at <I>http://www.hal.com/~connolly/html-spec</I>, while the HTML+ discussion documents are at <I>http://info.cern.ch/hypertext/WWW/MarkUp/HTMLPlus/htmlplus_1.html</I>. <P>
Discussions of HTML and other WWW topics are conducted over e-mail and USENET news. To join the HTML Working Group discussion, send mail to <I>html-wg-request@oclc.org</I>; to join the general HTML technical discussion, contact <I>www-html-request@info.cern.ch</I>; to join the general WWW technical discussion, contact <I>www-talk-request@info.cern.ch</I>. <P>
<a href="199401e5.htm">Figure 1</A>  Typical WWW home page.
<h4><a name="01e2_00aa"><B>Table 1:</B> Common HTML Tags. (a) headers; (b) general formatting; (c) logical styles; (d) physical styles; (e) lists; (f) miscellaneous; (g) hyperlinks or anchors; (h) graphics; (i) forms.<a name="01e2_00aa"></h4><P>
<pre>(a)
&lt;h1&gt;_&lt;/h1&gt;                      Most prominent header
&lt;h2&gt;_&lt;/h2&gt;
&lt;h3&gt;_&lt;/h2&gt;
&lt;h4&gt;_&lt;/h4&gt;
&lt;h5&gt;_&lt;/h5&gt;
&lt;h6&gt;_&lt;/h6&gt;                      Least prominent header

(b)
&lt;title&gt;_&lt;/title&gt;                Specify document title
&lt;p&gt;                             New paragraph
&lt;br&gt;                            Forces a line break
&lt;hr&gt;                            Horizontal line
&lt;pre&gt;_&lt;/pre&gt;                    Preformatted text
&lt;listing&gt;_&lt;/listing&gt;            Example computer listing
&lt;blockquote&gt;_&lt;/blockquote&gt;      Quoted text.

(c)
&lt;em&gt;_&lt;/em&gt;                      Emphasis
&lt;strong&gt;_&lt;/strong&gt;              Stronger emphasis
&lt;code&gt;_&lt;/code&gt;                  Display an HTML directive
&lt;samp&gt;_&lt;/samp&gt;                  Include sample output
&lt;kbd&gt;_&lt;/kbd&gt;                    Display a keyboard key
&lt;var&gt;_&lt;/var&gt;                    Define a variable
&lt;dfn&gt;_&lt;/dfn&gt;                    Display a definition
&lt;cite&gt;_&lt;/cite&gt;                  Display a citation

(d)
&lt;b&gt;_&lt;/b&gt;                        Bold font
&lt;i&gt;_&lt;/i&gt;                        Italics
&lt;u&gt;_&lt;/u&gt;                        Underline
&lt;tt&gt;_&lt;/tt&gt;                      Typewriter font

(e)
&lt;ul&gt;_&lt;/ul&gt;                      Unordered list
&lt;ol&gt;_&lt;/ol&gt;                      Ordered list
&lt;menu&gt;_&lt;/menu&gt;                  Menu list
&lt;dir&gt;_&lt;/dir&gt;                    Directory list
&lt;li&gt;                            Item in a list
&lt;dl [compact]&gt;_&lt;/dl&gt;            Definition list/glossary
&lt;dt&gt;                            Term to be defined
&lt;dd&gt;                            Definition of term

(f)
&lt;!-- text --&gt;                   Place a comment in the HTML source
&lt;link href=&quot;URL&quot;[rev=][rel=]&gt;   Define relationship between documents
&lt;address&gt;_&lt;/address&gt;            Address information
&lt;isindex&gt;                       Specify index file
&lt;nextid&gt;                        Set a variable value
&lt;base&gt;                          Path of current file

(g)
&lt;a name=&quot;target&quot;&gt;_&lt;/a&gt;          Define a target
&lt;a href=&quot;#&quot;&gt;_&lt;/a&gt;               Link to target in the same file
&lt;a href=&quot;URL&quot;&gt;_&lt;/a&gt;             Link to another file

(h)
&lt;img src=&quot;URL&quot;[alt=][align=][ismap]&gt;    Include a graphic image

(i)
&lt;form [ACTION=][METHOD=]&gt;_&lt;/form&gt;       Define a form.
&lt;input [type=text|password|checkbox|radio|submit|reset]
  [name=][value=][checked][size=][maxlength=]&gt;            Create a gadget
&lt;select [name=][size=][multiple]&gt;       Define a list of options&lt;/select&gt;
&lt;option [selected]&gt;                     Define values within a &lt;SELECT&gt;
&lt;textarea name=&quot;&quot;[rows=][cols=]&gt;        Define a text area
&lt;/textarea&gt;</pre><P>
<h4><a name="01e2_00ab"><B>Table 2:</B> Standard file types.<a name="01e2_00ab"></h4><P>
<PRE>
    Type   Description

    HTML   Hypertext markup
    GIF    Graphic interchange format
    XBM    Bitmapped graphics
    AU     Audio (raw) format
    JPEG   Graphic format
    MPEG   Animation/movie format
    AIFF   Audio format</pre><P>
<h4><a name="01e2_00ac"><B>Example 1:</B> (a) produces the output in (b).<a name="01e2_00ac"></h4><P>
<pre>(a)  This word is in &lt;I&gt;italics&lt;/I&gt;.
     &lt;P&gt;
     &lt;U&gt;Underlined, and 
     &lt;B&gt;bold&lt;/B&gt; 
     too.&lt;/U&gt;
</PRE>

<P>
(b)  This word is in <I>italics</I>.
<P>
<U>Underlined, and <B>bold</B> too.</U><P>

<h4><a name="01e2_00ad"><B>Example 2:</B> The &lt;IMG_&gt; tag requires an attribute (SRC) which defines the graphic file.<a name="01e2_00ad"></h4><P>
<pre>&lt;A HREF=&quot;another.html&quot;&gt;
Text and
&lt;IMG SRC=&quot;graphic.gif&quot;&gt;
link.&lt;/A&gt;</pre><P>
<h4><a name="01e2_00ae"><B>Example 3:</B> (a) This hypertext link points to other documents; (b) text which produces the image in Figure 2.<a name="01e2_00ae"></h4><P>
<pre>(a)
      &lt;A HREF=&quot;index.html&quot;&gt;This is a link.&lt;/A&gt;

(b)
&lt;IMG ALIGN=BOTTOM SRC=&quot;graphic.gif&quot;&gt;
This text is at the bottom.
&lt;P&gt;</pre><P>
<h4><a name="01e2_00af"><B>Example 4:</B> (a) Using the ALT attribute; (b) a hypertext link to a GIF image.<a name="01e2_00af"></h4><P>
<pre>(a)
&lt;IMG SRC=&quot;graphic.gif&quot; ALT=&quot;Click here [  ]&quot;&gt;

(b)
&lt;A HREF=&quot;larger_image.gif&quot;&gt;
&lt;IMG SRC=&quot;smaller_image.gif&quot;&gt;
&lt;/A&gt;</pre><P>
<h4><a name="01e2_00b0"><B>Example 5:</B> (a) URLs let you specify how to reach Internet resources; (b) a URL that specifies FTP instead of HTTP.<a name="01e2_00b0"></h4><P>
<pre>(a)
      http://www.biodata.com/douglas/people/douglas.html

(b)
      ftp://www.somewhere.edu/file_name</pre><P>
<h4><a name="01e2_00b1"><B>Example 6:</B> Defining an image map.<a name="01e2_00b1"></h4><P>
<pre>&lt;A HREF=&quot;http://host.domain.com/cgi-bin/imagemap/picture&quot;&gt;
&lt;IMG SRC=&quot;picture.gif&quot; ISMAP&gt;
&lt;/A&gt;</pre><P>
<P>
<h4><a name="01e2_00b2">Listing One <a name="01e2_00b2"></h4><pre>

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;!-- ---------------------------------------------------------------- --&gt;
&lt;!-- http://www.biodata.com/index.html, last modified 9/20/94 -=DCM=- --&gt;
&lt;!-- ---------------------------------------------------------------- --&gt;
&lt;TITLE&gt;BioData Navigator&lt;/TITLE&gt;
&lt;IMG SRC=&quot;biodatabanner.gif&quot; ALT=&quot;BioData Information Navigator&quot;&gt;
&lt;/HEAD&gt;
&lt;PAGE&gt;
&lt;P&gt;
&lt;I&gt;Copyright (c) 1994 by BioData, Inc. All rights reserved.&lt;/I&gt;
&lt;P&gt;
The BioData Navigator is a
&lt;I&gt;Collaborative Information System&lt;/I&gt;
designed to give World Wide Web users two-way access to
bioscience-related information. The
&lt;A HREF=&quot;launch.html&quot;&gt;BioData Cyberspace Launching Pad&lt;/A&gt;
is the most popular part of BioData's web site. Check out
&lt;A HREF=&quot;BioData.html&quot;&gt;BioData Information&lt;/A&gt;
and
&lt;A HREF=&quot;WWW.html&quot;&gt;WWW Information&lt;/A&gt;
for more about BioData and the Navigator technology.
&lt;HR&gt;
&lt;H1&gt;What's New On The BioData Navigator?&lt;/H1&gt;
A complete history of BioData
&lt;A HREF=&quot;whatsNew.html&quot;&gt;What's New notices&lt;/A&gt;
is kept in another page.
&lt;P&gt;
&lt;I&gt;August 15, 1994&lt;/I&gt;
&lt;P&gt;
The
Democratic Party's version of the
&lt;A HREF=&quot;/gov/s2357/index.html&quot;&gt;Health Security Act&lt;/A&gt;
is on-line at BioData!
&lt;P&gt;
&lt;I&gt;August 6, 1994&lt;/I&gt;
&lt;P&gt;
Check out the new
&lt;A HREF=&quot;pr/index.html&quot;&gt;Press Releases&lt;/A&gt;
for information on BioData's latest expansion efforts! New employees --
&lt;A HREF=&quot;pr/prVPeng.html&quot;&gt;Barry Silver&lt;/A&gt;,
VP of enginering and
&lt;A HREF=&quot;pr/prSciComp.html&quot;&gt;Barr Bauer&lt;/A&gt;,
director of scientific computing -- are working together to
deliver innovative computer resources to biotechnology companies worldwide!
&lt;P&gt;
&lt;I&gt;July 21, 1994&lt;/I&gt;
&lt;P&gt;
The
&lt;A HREF=&quot;jobs.html&quot;&gt;BioData Job Board&lt;/A&gt;
is now on-line! Check here for information about open positions
at BioData and application instructions.
&lt;P&gt;
&lt;I&gt;July 20, 1994&lt;/I&gt;
&lt;P&gt;
A
&lt;A HREF=&quot;douglas/darkwater.html&quot;&gt;geekhouse&lt;/A&gt;
has invaded BioData! Our local Geek House Resident,
&lt;A HREF=&quot;douglas/people/douglas.html&quot;&gt;Douglas McArthur&lt;/A&gt;
has some interesting links to Bay Area and Central Coast California people.
&lt;HR&gt;
&lt;H1&gt;BioData Information Resources&lt;/H1&gt;
Check out the following topics to learn more about BioData and how
to use computers in a biotechnology company:
&lt;P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;B&gt;BioData Product and Service Information.&lt;/B&gt;
Sections on
&lt;A HREF=&quot;BioData.html&quot;&gt;Company information&lt;/A&gt;
and a
&lt;A HREF=&quot;Products.html&quot;&gt;detailed product catalog&lt;/A&gt;
present basic information about BioData.
&lt;A HREF=&quot;pr/index.html&quot;&gt;BioData Press Releases and News sightings&lt;/A&gt; 
documents significant milestones in BioData history. On-line versions
of our newsletter, the &lt;A HREF=&quot;newsletter/index.html&quot;&gt;BioData Report&lt;/A&gt;,
are available.
&lt;P&gt;
&lt;LI&gt;&lt;A HREF=&quot;launch.html&quot;&gt;The BioData Cyberspace Launching Pad&lt;/a&gt; 
is your gateway to the many bioscience, computer-related and fun spots 
on the Internet.
&lt;P&gt;
&lt;LI&gt;&lt;A HREF=&quot;who/whoswho.html&quot;&gt;Who's Who At BioData.&lt;/A&gt;
A directory of the special knowledge and skills of BioData employees plus
detailed biographical information.
&lt;P&gt;
&lt;LI&gt;&lt;A HREF=&quot;vendors/index.html&quot;&gt;Vendor And Supplier Information.&lt;/A&gt;
Many of BioData's suppliers have Internet resources available. This link puts
you in contact with those resources.
&lt;P&gt;
&lt;LI&gt;&lt;A HREF=&quot;jobs.html&quot;&gt;BioData Job Board.&lt;/A&gt;
BioData is a quickly growing company and has immediate
openings for highly motivated individuals. Send resumes to
&lt;A HREF=&quot;mailto:jobs@biodata.com&quot;&gt;jobs@BioData.COM&lt;/A&gt;.
&lt;/UL&gt;
&lt;HR&gt;
Send comments to
&lt;A HREF=&quot;mailto:webmaster@BioData.COM&quot;&gt;webmaster@BioData.COM&lt;/A&gt;.
&lt;P&gt;
Have a happy journey through the cyberspace!
&lt;P&gt;
&lt;I&gt;All information contained in the BioData Navigator system is
Copyright (c) 1994 by BioData, Inc.&lt;/I&gt;
&lt;P&gt;
&lt;ADDRESS&gt;
BioData Home Page /
&lt;A HREF=&quot;who/vern.html&quot;&gt;vern@BioData.COM&lt;/A&gt;
&lt;/ADDRESS&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;

</pre>
<h4><a name="01e2_00b3">Listing Two<a name="01e2_00b3"></h4><pre>

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;!-- ------------------------------------------------------------------- --&gt;
&lt;!-- http://www.biodata.com/douglas/form.html - Modified 9/20/94 -=DCM=- --&gt;
&lt;!-- ------------------------------------------------------------------- --&gt;
&lt;TITLE&gt;Prototypical HTML Forms&lt;/TITLE&gt;
&lt;H1&gt;Prototypical HTML Forms&lt;/H1&gt;
&lt;/HEAD&gt;
This document displays the various form gadgets currently supported.
&lt;P&gt;
&lt;FORM ACTION=&quot;http://hoohoo.ncsa.uiuc.edu/htbin-post/post-query&quot; METHOD=&quot;POST&quot;&gt;
&lt;HR&gt;
&lt;H1&gt;Text Fields&lt;/H1&gt;
Basic text entry field:
&lt;INPUT TYPE=&quot;text&quot; NAME=&quot;entry1&quot; VALUE=&quot;&quot;&gt; 
&lt;P&gt;
Text entry field with default value:
&lt;INPUT TYPE=&quot;text&quot; NAME=&quot;entry2&quot; VALUE=&quot;This is the default.&quot;&gt; 
&lt;P&gt;
Text entry field of 40 characters:
&lt;INPUT TYPE=&quot;text&quot; NAME=&quot;entry3&quot; SIZE=40 VALUE=&quot;&quot;&gt; 
&lt;P&gt;
Text entry field of 5 characters, maximum:
&lt;INPUT TYPE=&quot;text&quot; NAME=&quot;entry5&quot; SIZE=5 MAXLENGTH=5 VALUE=&quot;&quot;&gt; 
&lt;P&gt;
Password entry field (*'s are echoed):
&lt;INPUT TYPE=&quot;password&quot; NAME=&quot;password&quot; SIZE=8 MAXLENGTH=8 VALUE=&quot;&quot;&gt; 
&lt;HR&gt;
&lt;H1&gt;Textareas&lt;/H1&gt;
A 60x3 scrollable textarea:
&lt;P&gt;
&lt;TEXTAREA NAME=&quot;textarea&quot; COLS=60 ROWS=3&gt;NOTE:
Default text can be entered here.
&lt;/TEXTAREA&gt;
&lt;HR&gt;
&lt;H1&gt;Checkboxes&lt;/H1&gt;
Here is a checkbox
&lt;INPUT TYPE=&quot;checkbox&quot; NAME=&quot;Checkbox1&quot; VALUE=&quot;TRUE&quot;&gt;,
and a checked checkbox
&lt;INPUT TYPE=&quot;checkbox&quot; NAME=&quot;Checkbox2&quot; VALUE=&quot;TRUE&quot; CHECKED&gt;. 
&lt;HR&gt;
&lt;H1&gt;Radio Buttons&lt;/H1&gt;
Radio buttons (one-of-many selection):
&lt;OL&gt;
&lt;LI&gt;
&lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;radio1&quot; VALUE=&quot;value1&quot;&gt;
First choice. 
&lt;LI&gt;
&lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;radio1&quot; VALUE=&quot;value2&quot; CHECKED&gt;
Second choice. (Default CHECKED.)
&lt;LI&gt;
&lt;INPUT TYPE=&quot;radio&quot; NAME=&quot;radio1&quot; VALUE=&quot;value3&quot;&gt;
Third choice. 
&lt;/OL&gt;
&lt;HR&gt;
&lt;H1&gt;Option Menus&lt;/H1&gt;
One-of-many (Third Option selected by default):
&lt;SELECT NAME=&quot;first-menu&quot;&gt;
&lt;OPTION&gt;First Option&lt;/OPTION&gt;
&lt;OPTION&gt;Second Option&lt;/OPTION&gt;
&lt;OPTION SELECTED&gt;Third Option&lt;/OPTION&gt;
&lt;OPTION&gt;Fourth Option&lt;/OPTION&gt;
&lt;OPTION&gt;Last Option&lt;/OPTION&gt;
&lt;/SELECT&gt;
&lt;P&gt;
Many-of-many (First and Third selected by default):
&lt;SELECT NAME=&quot;second-menu&quot; MULTIPLE&gt;
&lt;OPTION SELECTED&gt;First Option&lt;/OPTION&gt;
&lt;OPTION&gt;Second Option&lt;/OPTION&gt;
&lt;OPTION SELECTED&gt;Third Option&lt;/OPTION&gt;
&lt;OPTION&gt;Fourth Option&lt;/OPTION&gt;
&lt;OPTION&gt;Last Option&lt;/OPTION&gt;
&lt;/SELECT&gt;
&lt;P&gt;
&lt;B&gt;NOTE: Hold down CTRL and click to multiple-select.&lt;/B&gt;
&lt;!-- You can also assign VALUEs using TYPE=&quot;hidden&quot; --&gt;
&lt;INPUT TYPE=&quot;hidden&quot; NAME=&quot;hidden&quot; VALUE=&quot;invisible&quot;&gt;
&lt;HR&gt;
&lt;H1&gt;Special Buttons&lt;/H1&gt;
Submit button (mandatory):
&lt;INPUT TYPE=&quot;submit&quot; VALUE=&quot;Submit Form&quot;&gt;
&lt;P&gt;
Reset button (optional):
&lt;INPUT TYPE=&quot;reset&quot; VALUE=&quot;Clear Values&quot;&gt;
&lt;P&gt;
&lt;/FORM&gt;
&lt;HR&gt;
&lt;H1&gt;References&lt;/H1&gt;
Heres a link to
&lt;A HREF=&quot;http://www.ncsa.uiuc.edu/SDG/Software/Mosaic/Docs/fill-
out-forms/overview.html&quot;&gt;
a handy HTML forms reference
&lt;/A&gt;.
&lt;P&gt;
&lt;HR&gt;
&lt;ADDRESS&gt;
Prototypical HTML Form /
&lt;A HREF=&quot;http://www.biodata.com/douglas/people/douglas.html&quot;&gt;
douglas@BioData.COM 
&lt;/A&gt;
&lt;/ADDRESS&gt;
&lt;/HTML&gt;
</pre><HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
