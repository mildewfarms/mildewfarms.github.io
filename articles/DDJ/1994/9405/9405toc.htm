<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>May 1994 - MICROKERNELS AND OPERATING SYSTEMS</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>May 1994 - MICROKERNELS AND OPERATING SYSTEMS</H1>
<hr>
<h2><a name="0010_0001">FEATURES</h2><P>
<h3><a href="9405a/9405a.htm">TRENDS IN OPERATING SYSTEM DESIGN</A></h3><P>
<i>by Peter D. Varhol</i><P>
Although there's really nothing new about them, microkernels are suddenly all the rage in operating system design. Peter examines modular OS architectures such as QNX, OS/2, and Windows NT; and Sing Li shares a recent conversation with Linus Torvalds, the creator of Linux.<P>
<h3><a href="9405b/9405b.htm">A C++ MULTITASKING CLASS LIBRARY</A></h3><P>
<i>by Ken Gibson</i><P>
Multithreaded applications that concurrently execute more than one section of code aren't directly supported by languages such as C++. Ken presents a C++ multitasking class library for MS-DOS that lets you implement a program as a set of <P>concurrent threads.<P>
<h3><a href="9405c/9405c.htm">MMURTL: YOUR OWN 32-BIT OPERATING SYSTEM</A></h3><P>
<i>by Richard Burgess</i><P>
MMURTL is a message-based, multitasking, real-time kernel with a DOS-compatible FAT-like file system. In presenting this kernel, Richard focuses on MMURTL's messaging scheme and paged-memory management.<P>
<h3><a href="9405d/9405d.htm">INSIDE WINDOWS NT SERVICES</A></h3><P>
<i>by Marshall Brain</i><P>
Windows NT services are implemented as otherwise-normal executables that follow a specific protocol to allow proper interaction with the service control manager (SCM). Marshall discusses how you can build, create, and install Win32 services in Windows NT.<P>
<h3><a href="9405e/9405e.htm">OPTIMIZING MATRIX MATH ON THE PENTIUM</A></h3><P>
<i>by Harlan W. Stockman</i><P>
The Pentium processor is more than just a fast 486. Its pipeline and floating-point and integer operations require that you pay more attention to the flow of data on and off the FPU. Harlan presents and measures methods for speeding up Pentium matrix-math operations.<P>
<h2>EMBEDDED SYSTEMS</h2><P>
<h3><a href="9405f/9405f.htm">RTMK: A REAL-TIME MICROKERNEL</A></h3><P>
<i>by J.F. Bortolotti, P. Bernard, E. Bouchet</i><P>
Our authors present RTMK, a real-time microkernel that's portable across platforms ranging from PCs to DSPs. RTMK delivers total control over the interrupt state of processors such as the TMS320C30.<P>
<h2>NETWORKED SYSTEMS</h2><P>
<h3><a href="9405g/9405g.htm">OS/2 AND UNIXWARE INTERPROCESS COMMUNICATION</A></h3><P>
<i>by John Rodley</i><P>
Interprocess communication isn't portable between IBM's OS/2 2.1 and Novell's UnixWare 1.1. But even though the implementation details differ greatly, the two systems do share ways of thinking about IPC. John looks at IPC under OS/2 and UnixWare to see what common ground exists.<P>
<h2>EXAMINING ROOM</h2><P>
<h3><a href="9405h/9405h.htm">PORTING D-FLAT++ TO OS/2 </A></h3><P>
<i>by Jon Wright</i><P>
Jon examines Borland C++ for OS/2 by porting Al Stevens's D-Flat++ class library to OS/2. In its original form, D-Flat++ allows you to build CUA '89-compliant user interfaces for DOS.<P>
<h2>PROGRAMMER'S WORKBENCH</h2><P>
<h3><a href="9405i/9405i.htm">A MULTICOLUMN LIST-BOX CONTAINER FOR OS/2</A></h3><P>
<i>by Brian Proffit</i><P>
Brian uses GpfRexx's visual-programming environment to develop a multicolumn <P>list-box control in a Workplace Shell container. He then turns to Gpf to generate a C implementation of the control that you can optimize.<P>
<h2>COLUMNS</h2><P>
<h3><a href="9405j/9405j.htm">PROGRAMMING PARADIGMS </A></h3><P>
<i>by Michael Swaine</i><P>
Michael wonders what in the world is going on with operating systems, particularly when it comes to the PowerPC processor.<P>
<h3><a href="9405k/9405k.htm">C PROGRAMMING</A></h3><P>
<i>by Al Stevens</i><P>
This month, Al launches &quot;Quincy,&quot; a C-language interpreter with a D-Flat-based integrated development environment.<P>
<h3><a href="9405l/9405l.htm">ALGORITHM ALLEY</A></h3><P>
<i>by Tom Swan</i><P>
Tom examines the problem of exceptions, then presents an algorithm (in pseudo-Pascal and C++) which uses exceptions to report illegal input values.<P>
<h3><a href="9405m/9405m.htm">UNDOCUMENTED CORNER </A></h3><P>
<i>by Andrew Schulman</i><P>
Andrew had a front-row seat at the recent Stac Electronics vs. Microsoft court proceedings. Here is his report.<P>
<h3><a href="9405n/9405n.htm">PROGRAMMER'S BOOKSHELF </A></h3><P>
<i>by Al Stevens</i><P>
Bruce Schneier's recently published <I>Applied Cryptography</I> is a one-of-a-kind book that no programmer should be without.<P>
<h2>FORUM</h2><P>
<h3><a href="9405o/9405o.htm">EDITORIAL</A></h3><P>
<i>by Jonathan Erickson</i><P>
<h3><a href="9405p/9405p.htm">LETTERS</A></h3><P>
<i>by you</i><P>
<h3><a href="9405q/9405q.htm">SWAINE'S FLAMES</A></h3><P>
<i>by Michael Swaine</i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9405r/9405r.htm">OF INTEREST</A></h3><P>
<i>by Monica E. Berg</i><P>
<HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
