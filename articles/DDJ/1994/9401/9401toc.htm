<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>January 1994 - PC SUPERCOMPUTING</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>January 1994 - PC SUPERCOMPUTING</H1>
<hr>
<h2><a name="000c_0001">FEATURES</h2><P>
<h3><a href="9401a/9401a.htm">SHARED MEMORY AND PC SUPERCOMPUTING</A></h3><P>
<i>by Stephen Fried</i><P>
Shared-memory parallel processing, a supercomputer technique used by companies like Cray, is making its way into the PC world. Steve discusses the differences and implications between the shared-memory and distributed-memory approaches to implementing algorithms from the programmer's perspective.<P>
<h3><a href="9401b/9401b.htm">CPU PERFORMANCE: WHERE ARE WE HEADED?</A></h3><P>
<i>by Hal W. Hardenbergh</i><P>
Hal discusses the improvements you can expect in personal uniprocessor computer systems, and the factors that limit those improvements. Nick Tredennick examines the topic from another perspective.<P>
<h3><a href="9401c/9401c.htm">OPTIMIZING PENTIUM CODE</A></h3><P>
<i>by Mike Schmit</i><P>
Chances are you've heard that the payback for optimizing code via hand-tuning for Intel's Pentium processor isn't worth the effort. That's not the case, however, as you'll see with the optimization tricks ASM-expert Mike Schmit shares here. Michael Abrash adds a few thoughts of his own.<P>
<h3><a href="9401d/9401d.htm">SKIP LISTS</A></h3><P>
<i>by Bruce Schneier</i><P>
Skip-list algorithms are generally faster, simpler to implement, require less memory, and are more versatile than balanced-tree algorithms. Bruce examines skip lists and shows how you can squeeze even more performance out of them.<P>
<h2>EMBEDDED SYSTEMS</h2><P>
<h3><a href="9401e/9401e.htm">MAXIMIZING PERFORMANCE OF REAL-TIME RISC APPLICATIONS</A></h3><P>
<i>by Mitchell Bunnell</i><P>
RISC processors were designed for fast computation, not necessarily fast real-time performance. Nevertheless, embedded-system designers can benefit from RISC technology following the application-design guidelines Mitchell presents here.<P>
<h2>NETWORKED SYSTEMS</h2><P>
<h3><a href="9401f/9401f.htm">POLYMORPHIC PROTOCOLS</A></h3><P>
<i>by William F. Jolitz</i><P>
The Internet's fixed address space is being put to the test by dramatic growth in the number of Internet users. Polymorphic protocols may ultimately be the solution to the address-space problem and similar network limitations.<P>
<h2>EXAMINING ROOM</h2><P>
<h3><a href="9401g/9401g.htm">EXAMINING OS/2 2.1 THREADS</A></h3><P>
<i>John M. Kanalakis, Jr.</i><P>
The OS/2 2.1 multitasking model is based on the execution of threads, making it possible for many sections of a single process to execute simultaneously. John examines OS/2's thread architecture, specifically, the scheduling process.<P>
<h2>PROGRAMMER'S WORKBENCH</h2><P>
<h3><a href="9401h/9401h.htm">SYMMETRIC MULTIPROCESSING FOR PCs</A></h3><P>
<i>by John Norwood and Shankar Vaidyanathan</i><P>
Our authors focus on multithreaded application development for single-processor and symmetric-multiprocessor machines under Windows NT. In doing so, they present Fortran interface statements for the Win32 console API and a black-box solution for calling 32-bit DLLs from 16-bit applications under NT.<P>
<h2>COLUMNS</h2><P>
<h3><a href="9401i/9401i.htm">PROGRAMMING PARADIGMS </A></h3><P>
<i>by Michael Swaine</i><P>
Michael picks up where our October &quot;Beyond C++: Considering the Alternatives&quot; issue left off by examining some concrete programming techniques that can be used to compare paradigms.<P>
<h3><a href="9401j/9401j.htm">C PROGRAMMING</A></h3><P>
<i>by Al Stevens</i><P>
Before getting back to D-Flat++'s TED text editor, Al takes a second look at Symantec's technical support and C++ compiler.<P>
<h3><a href="9401k/9401k.htm">ALGORITHM ALLEY </A></h3><P>
<i>by Tom Swan</i><P>
Tom explores three different methods of generating random numbers--middle-square, linear-congruential, and Fibonacci--and shows how you can mix two of them to create a combination generator.<P>
<h3><a href="9401l/9401l.htm">UNDOCUMENTED CORNER </A></h3><P>
<i>by Andrew Schulman</i><P>
Much of the preemptive multitasking for Microsoft's Chicago operating system already exists in the form of the Windows 3.1 Virtual Machine Manager. This month, Kelly Zytaruk examines the overall structure of the virtual-memory control block. Next month, he presents a Windows VM Explorer application.<P>
<h3><a href="9401m/9401m.htm">PROGRAMMER'S BOOKSHELF </A></h3><P>
<i>by Peter D. Varhol</i><P>
John Koza's <I>Genetic Programming: On the Programming of Computers by Means of Natural Selection</I> explains what genetic programming is all about and how it can be used to solve a wide variety of problems in system control, planning, and decision support.  Thanks to Jim Enochs and Alejandro Roman for their assistance in photographing Apple Computer's Napa, California data facility, which is shown on our cover.<P>
<h2>FORUM</h2><P>
<h3><a href="9401n/9401n.htm">EDITORIAL</A></h3><P>
<i>by Jonathan Erickson</i><P>
<h3><a href="9401o/9401o.htm">LETTERS</A></h3><P>
<i>by you</i><P>
<h3><a href="9401p/9401p.htm">SWAINE'S FLAMES</A></h3><P>
<i>by Michael Swaine</i><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9401q/9401q.htm">OF INTEREST</A></h3><P>
<i>by Monica E. Berg</i><P>
<HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
