<HTML>
<META NAME="year" CONTENT="1994">
<HEAD>
<TITLE>AUG94: Lotfi Visions Part 2</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<h1>Lotfi Visions Part 2<a name="0095_002b"></h1><P>
<h2><a name="0095_0029"><a name="0095_0000">Concluding our conversation with the father of fuzzy logic</h2><P>
<h3>Jack Woehr</h3><P>
<p><i><a name="0095_002a"><a name="0095_0000">Jack is a frequent contributor to DDJ and can be contacted at jax@cygnus.com.</i></p><hr><P>
Last month, Jack Woehr spoke with Lotfi Zadeh, the father of fuzzy logic, shortly after Zadeh presented a paper entitled &quot;Fuzzy Logic: Issues, Contentions and Perspectives&quot; at the 22nd Annual ACM Computer Science Conference in Phoenix, Arizona on March 8, 1994. In this installment, Woehr and Zadeh (identified as &quot;LZ&quot; in the following interview) are joined by Professor William Kahan (WK) and John Osmundsen (JO), associate director, public affairs, of the ACM. <P>
<B><I>DDJ</I></B><B>:</B> Professor Zadeh, do you travel to Japan?<P>
<B>LZ:</B> Yes, I was there a week ago. There are many misconceptions. One of the misconceptions is that the Japanese just jumped on this thing. No. I wrote my paper in 1965. Starting in 1968, you'll find that there are quite a few papers in Japanese literature dealing with fairly sophisticated applications of fuzzy logic. In 1970 a study group was formed and met once a month, sometimes in Tokyo, sometimes in Kyoto.<P>
There were some people in Japan, influential people, who saw that this was promising. The director of the National Laboratory for Fuzzy Engineering is one of them, Toshio Terano. The late Okicha Tanaka was one of them.<P>
In 1974, there was a joint America-Japan symposium on fuzzy-set theory in Berkeley. There were about 20 people from Japan that time. Professor Terano was among them. The Japanese came in at an early stage. It was not a rash decision. They started working on it a long time ago.<P>
They started working on the Sendai train in 1979. Sendai is a modern city, beautifully planned. The system is a real model. It runs beautifully, it's clean, it's an outstanding system. They went into operation in 1987, so they spent eight years. Hitachi did the electronics, Kawasaki Heavy Industries built the train. I must take my hat off to the Hitachi people and Kawasaki people for starting with an idea that, in 1979, was still in a somewhat embryonic stage. Subway systems are not toys! Lives are at stake.<P>
In Japan, people are so careful, and bureaucracy is so strong. The regulatory agencies in Japan are notorious in their insistence on all kinds of tests. Three-hundred thousand simulations and two thousand actual runs before they finally certified that system. No American company would have done that. No American company would have spent eight years on that sort of thing.<P>
Today in Japan they have a large number of engineers working for various companies who have quite a bit of experience in the use of fuzzy logic.<P>
<B><I>DDJ</I></B><B>:</B> Hitachi was daring in going with an embryonic technology that did not have an overwhelming body of field trials. To what extent was this confidence in your work? To what extent was it confidence in Japanese work? To what extent was it hubris, the Japanese deciding confidently they could solve any problems found along the way?<P>
<B>LZ:</B> I would say it was a combination of all of these things. These people are very serious. They take an idea which perhaps did not originate in Japan, but are much more thorough, much more serious about developing [it] than we would be in this country.<P>
All of these systems--our system, their system--have certain strengths and weaknesses. Their system is very strong when it comes to very methodical, very detailed research and development. They also have many original ideas, but the crux of their strength lies in the areas I have noted. They're tenacious, they're persistent, so they can take an idea and do wonders with it, because of the way in which they function.<P>
<B>JO:</B> What applications would one definitely prefer to do using fuzzy logic?<P>
<B>LZ:</B> There are many. When you talk about applications, you can divide them into a couple of groups.<P>
In one group are those applications in which there is no competition for fuzzy logic. Then in the second group are applications in which you can use fuzzy logic, or you can use something else. Then it becomes a question of what is better.<P>
Now, the first group I refer to as the issue of tractability. Forget the economics: Can you solve the problem? Let me give you some examples of this sort of thing. Let me start with a very practical sort of thing: the Isuzu hand-braking system.<P>
In Japan, automotive applications are becoming very widespread. This is a very simple idea. If you are in a car, and you are going uphill, and you want to park your car, it becomes a problem. You have to play with the hand brake, and if you have one of those hand brakes which you have to release with your foot, you are in real trouble.<P>
This simple idea occurred to the Isuzu people. Assume you know what you want to do. Express that in fuzzy rules. IF you are on a hill AND you want to back into a parking space AND IF you want so much pressure to be applied, and so forth, THEN do this and so forth. Just take these rules and implement them. The Isuzu system makes it possible for you to slide into a parking space.<P>
<B><I>DDJ</I></B><B>:</B> So you are saying that the various degrees of release of the brake, the gradations of speed of forward and backward motion, all combine to render this a fuzzy problem for fuzzy logic.<P>
<B>LZ:</B> Yes. Bill, come and join us! We're talking about fuzzy logic.<P>
<B>WK:</B> As in, &quot;What's the difference between fuzzy logic and fuzzy thinking?&quot;<P>
<B>LZ:</B> We were talking about problems in which there is competition for fuzzy logic and problems in which there is no competition, problems where if you want to solve them, you <I>must</I> use fuzzy logic, problems intractable by conventional solutions.<P>
How do you cross a traffic intersection in a vehicle? In our head, we have a bunch of rules. For example, if there is a light, a stop sign, two-way street, one-way street_various dynamics which describe the situation. But given those parameters, then you can formulate the rules._ IF there is a car that is approaching, if there's a red light, a green light, a yellow light. IF you are going so fast, THEN do something, press on the brake, et cetera. You can formulate a bunch of rules. Now, my point is that there is no way in which such rules could be formulated using some other methodology; there is no way you can do it.<P>
<B><I>DDJ</I></B><B>:</B> Do you mean there is no practical way, or there is, in an ideal sense, no mathematical way?<P>
<B>LZ:</B> Humans can't do it. First of all, operations research or something like that can't provide any answers, and secondly, humans can't formulate these rules crisply. If this car's speed is greater than or equal to 25 mph and you are within a distance of 20 feet, then apply so much pressure to the brake. People just cannot do it.<P>
<B><I>DDJ</I></B><B>:</B> There is a nonfinite number of rules without fuzzy logic.<P>
<B>LZ:</B> People can't be this precise. They have this fuzzy perception of what to do.<P>
<B>WK:</B> That's an interesting claim. It's always very hard to prove a negative. I don't know of any evidence, or for that matter, of any body of opinion that would say that no such set of rules could be formulated.<P>
I suppose we could put it to a test by creating a robot-controlled vehicle and seeing whether it succeeded in crossing a traffic intersection at least about as often as human-controlled vehicles do. I feel more optimistic than Lotfi. I feel I could design such a thing myself. I don't think it would be hard. All I have to do is get it to know when to stop and when to proceed through the intersection. There's one difficulty, perhaps what Lotfi is thinking about. It's called the &quot;Paradox of Buridan's Ass,&quot; the hungry donkey so neatly situated between two equally attractive piles of straw_.<P>
<B><I>DDJ</I></B><B>:</B> _that he starves to death.<P>
<B>WK:</B> It turns out that in every decision situation, every go/no-go situation, there is always a finite risk_. <P>
<B><I>DDJ</I></B><B>:</B> _of stasis.<P>
<B>WK:</B> _of being hung up. In fact, switching circuits offer a similar finite risk, although they are designed to make that risk so tiny that you don't normally notice it. If that is the difficulty Lotfi means, then there's an intrinsic impossibility. But if that's not the difficulty he means, if we're willing to take the chance that every now and then, maybe once in every millennium, the device may be paralyzed by indecision, then I rather dispute that it can't be done (by conventional control theory).<P>
<B><I>DDJ</I></B><B>:</B> I have two thoughts simultaneously. One is that I'm not sure that you and Professor Zadeh have the same meaning for the word &quot;can't.&quot;<P>
<B>WK:</B> Perhaps not.<P>
<B><I>DDJ</I></B><B>:</B> The second is that, [speaking] as a former taxi driver, the problem in a San Francisco intersection is that you are never sure that the oncoming cross-traffic is actually going to stop for the red light. Thus you are constantly adjusting your speed planning for a fail-safe abort pending the diminishing speed of the car coming down the hill towards the red light on the cross street.<P>
<B>WK:</B> I don't believe that those calculations are of the kind that can only be characterized in the language of fuzzy sets. The perceptions that you have as a driver can be quantified. With patience, one can enumerate these perceptions, and with sensors create a robot that can approximate a human being's actions without resorting to concepts like &quot;very,&quot; &quot;somewhat,&quot; et cetera.<P>
<B><I>DDJ</I></B><B>:</B> Let's look at another domain. The game of chess has an absolute mathematical solution for every sequence of moves. Knowing that there exists, in theory_an absolute solution, the field of computer chess does not seek any such solution except in the endgames, wherein brute force can solve the problem exhaustively in real time.<P>
Is it possible that there is a &quot;Platonic Ideal&quot; solution to all these engineering problems that Professor Zadeh brings up, but one that can't be reached in real time in the late twentieth century by American engineers, only approximated by fuzzy logic?<P>
<B>WK:</B> No, I think that's a different problem. In chess you have combinatorial explosion which makes it impossible to implement. The mathematical solution's existence you can prove, but a generalized algorithm is intractable because it would simply take too much computing. And so instead, we devise a variety of strategies. We have extremely good chess-playing programs. These have not been devised using the fuzzy calculus.<P>
<B><I>DDJ</I></B><B>:</B> But the heuristics of the chess-playing programs resemble fuzzy logic in many respects.<P>
<B>LZ:</B> Take backgammon. [Chess grand master emeritus] Hans Berliner wrote a program that was very good at playing backgammon. He used crisp rules. Then he introduced fuzzy rules, and the performance of the program improved to the point where the program played championship-quality backgammon. If you look at commentaries on chess, you'll find that all of the comments are fuzzy. They say, &quot;the center was strengthened,&quot; et cetera. The reason fuzziness comes into chess is that you have an ultimate goal--checkmate--which is crisp, but that ultimate goal is too far away, in some sense, at the intermediate stages of the game. So you have to replace it with local goals. The local goals are fuzzy goals. <P>
<B>WK:</B> Lotfi's error here is a failing of pride. He has a fuzzy calculus, infers that this is the way the mind works, and imputes to the commentators on chess a similar strategy. <P>
Another game in which the combinatorial explosion caused even more despair than chess is the Japanese game of Go. A book has come out recently by Burlekamp and Wolf which analyzes a large class of endgames in Go--endgames which used to use the same vocabulary as Lotfi is using for chess. What they've shown is that you can actually analyze these quite exactly, and consequently discover that positions which experts in Go would have given up as a draw or loss, are actually wins.<P>
<B><I>DDJ</I></B><B>:</B> When you gentlemen get into mathematical theory, you fly way over my head. But when you talk about chess, Go, and backgammon, I'm a United States Chess Federation expert-class player. I understand your references to Go research, and there is a similar problem in chess. That is, if you start backwards from the end of the game, you can analyze many, many positions. Nowadays, with the aid of computers, many endings which were unclear have been solved definitively by brute-force calculation.<P>
I know several grand masters of chess. The chess world hasn't had any doubt since the 1950s that computers would eventually revolutionize the endgame. They didn't use to believe they would be beaten by computers over the board, however, because by the standard of computers of the 1950s and 1960s, it didn't appear that computers would ever get good enough at working through approximate situations which have no potential for being solved deterministically in real time.<P>
<B>WK:</B> In other words, that they would never be able to formulate a strategy.<P>
<B><I>DDJ</I></B><B>:</B> Yes. But now people like grand master Julio Kaplan in Berkeley and Kaufmann and others have been instrumental in aiding the computer programmers to understand what strategy in chess consists of. It's a very fuzzy set! If the center is flexible (which covers a wide variety of possible pawn positions), then don't attack on the wing_.<P>
<B>WK:</B> The question about the use of fuzzy calculus in the context of computing is a question about whether that design paradigm is preferable in circumstances where you can see the possibility of using the standard design paradigms, albeit laboriously, to accomplish the desired technological goals.<P>
When it comes to playing various games, since it may very well be that there is <I>no</I> design paradigm that can be guaranteed to be better than another, it may not hurt very much to say, &quot;Let's try fuzzy logic, what have we got to lose?&quot;<P>
<B>LZ:</B> There is one transparency which I sometimes show in my lectures which I call the &quot;effectiveness chart.&quot; I have a triangle there, the vertices of which are labeled &quot;fuzzy logic,&quot; &quot;neural net,&quot; and &quot;probabilistic reasoning.&quot; Particular problems are represented as points. I put a problem close to the vertex labeled &quot;fuzzy logic.&quot; It means that that problem can be solved effectively using fuzzy logic. It may be far away from &quot;neural network,&quot; or it might be perhaps somewhere in between, meaning it can be solved using fuzzy logic or neural networks.<P>
The purpose of this sort of thing is to say, &quot;Look, you cannot take the position that any one of these methodologies in itself is superior to the other ones.&quot; It depends really on the problems you are examining.<P>
Returning to backgammon, there has recently been what I consider to be a highly significant development. Gerald Tesauro [at IBM Hawthorne] came out with a paper in which he described using reinforcement learning. You start with a description of the legal moves, the board, the rules. That's all. The system then begins to play, and eventually it learns to play quite well, until finally it plays championship-quality backgammon! <P>
<B>JO:</B> The interesting thing for me is not only the fact that the program eventually plays world-class backgammon, but that for the first few hundred thousand games it is a mess. Its weighting is graphed, and the weights appear randomly distributed. All of a sudden it kicks in, and there is order in the distribution of the weighted guesses. It reaches a point where it self-organizes its neural net and can repeat its high-quality plays from then on.<P>
<B>LZ:</B> If you look then at what Hans Berliner did, he himself supplied the rules. What can fuzzy logic do? Nothing. In that kind of a thing, fuzzy logic can do nothing, because fuzzy logic does not have the capability to start from scratch and learn. In combination with neural networks, it can, but not by itself. There is learning and training in fuzzy logic, but it is nowhere nearly as advanced as Tesauro's work and neural networking in general.<P>
Here is an example of a problem which can be solved in an impressive way by one methodology and not at all by other techniques!<P>
<B><I>DDJ</I></B><B>:</B> But on the other hand, Berliner, who heads a small and not terribly well-financed team, was able to achieve roughly equal tournament results simply by applying fuzzy logic based on what he already knew about backgammon.<P>
<B>LZ:</B> Exactly. But notice the different starting points. One starts with a blank slate; the other starts with Berliner's knowledge.<P>
There are problems of that kind for which fuzzy logic is the only thing you can use; others for which neural networks are the only solution. It's not just, in these cases, a matter of competition--that this is better than that.<P>
We talked about traffic intersections before. Let's look at parking a car. The problem has three components. The first component is how do you find a parking space? There is no methodology, and I include here operations research, control theory_.<P>
<B><I>DDJ</I></B><B>:</B> There being no guarantee you are going to find a parking space at all_. <P>
<B>LZ:</B> _where you can say, &quot;Here I have a theory, and I will turn the crank and the theory will tell me the precise steps to finding a parking space.&quot; Fuzzy logic's solution is [to ask] &quot;How do <I>you</I> find parking spaces?&quot; and encode it in this language.<P>
The second component is that once you have found a parking space, you must assess the desirability and difficulty of parking there. Is it close to where you are going? Is it tight? Is it safe? Again, operations research will do you no good whatsoever. There is nothing but fuzzy logic, which will again do the same thing: It will ask <I>you</I> to articulate whatever criteria you may have in judging.<P>
The third component is actually maneuvering your car into that space. Here some competition develops. You can say, &quot;What about control theory, or neural-network theory?&quot; What fuzzy logic will do is say, &quot;How do <I>you</I> park the car? Give me the rules.&quot; Control theory will ask, what is the final goal? The final goal is that the car is in the parking space, so it will use backwards iterations, &quot;Here is the final goal, the near goal, the subgoals,&quot; and work back to the starting point.<P>
Neural networking can take two approaches. It can observe the driver and try to work out the sequence of commands that the driver uses. The other is just to try this way, that way, until it succeeds, in the manner of reinforced learning and genetic algorithms. Neural networks will not succeed in the case of parking, although it does work in the case of trailer trucks where you have to back up without maneuvering back and forth. It will not work with parking a car.<P>
The only theory which can be used in the parking problem is fuzzy logic. The control-theory approach will fail because it will not exploit the tolerance for imprecision. Neural networks will fail because strategy is much more difficult to learn than a sequence of moves.<P>
<B>JO:</B> And in the Sendai train [which is operated under human control once a week so that the operators can refresh their skills] you have a weekly comparison of how well the task has been learned, compared to human skills.<P>
<B>LZ:</B> William [Kahan] will say that we could have done it just as well another way.<P>
<B>WK:</B> Or better!<P>
<B><I>DDJ</I></B><B>:</B> Fuzzy-logic compilers eventually output assembly code. A genius understanding the problem domain and understanding assembly code could have written the same code without the fuzzy-logic front end.<P>
<B>WK:</B> Or he could have written better code, or used a paradigm which admits of logical analysis.<P>
<B><I>DDJ</I></B><B>:</B> Plutarch says that logic takes us from point to point, but there are great gaps in between those points that have to [be] bridged by things other than logic.<P>
<B>WK:</B> People will extoll the virtues of some other style of thought, but the fact remains that a large component of creative thought is, in fact, trial and error. For that you need logic.<P>
<B><I>DDJ</I></B><B>:</B> But are all creative flashes based on logic?<P>
<B>WK:</B> Oh, no, what is often required is to allow yourself to think illogically, or even intentionally incorrectly, in order to come up with other possible scenarios. Still, you use logic to filter out the ones that are just pipe dreams.<P>
One of the serious failings of the fuzzy paradigm is that contradictory information is averaged, and that there is no incentive to resolve contradictions.<P>
I don't claim that other design paradigms automatically expose contradictions or conflicts. There's an impossibility of proving the consistency of the system without having a model of the system built up in terms of some other system you believe to be consistent. That's G&ouml;del's Incompleteness Theorem.<P>
But control systems written in the conventional way are broken up into modules with specifications which submit to testing to see whether, in fact, they do what they are supposed to do. That testing does not mean merely that you try all possible inputs and see whether you are satisfied with all resulting outputs. But with something written according to the fuzzy paradigm, there's not much else you can do but try all possible inputs and see whether you are satisfied with all the outputs.<P>
<B>LZ:</B> We have all kinds of rule-based systems; they're becoming ubiquitous. Whenever we use a rule-based system, you do have a problem with reduction of complications. It may be that one rule tells you one thing, and somewhere else in the system there is another rule that may be contradicting that rule. The discovery of these things may reveal a <I>degree</I> of contradiction, rather than a flat contradiction.<P>
This problem may exist in any rule-based system, whether that system is a crisp rule-based system or a fuzzy rule-based system. But in the case of fuzzy rule-based systems, it is a much less serious problem than in the case of a crisp rule-based system. In [the] case of a fuzzy rule-based system, the rules do not fire sequentially, as they do in a conventional system.<P>
In a conventional system, you look for a rule which is satisfied and fire that rule. Then things change, and you look for another rule. In a fuzzy system all rules fire in parallel, but each rule fires to a degree. The degree to which a rule fires is proportional to the degree to which the antecedent is satisfied. So if the antecedent matches the input to a slight degree, then weight associated with that rule will be a small weight.<P>
And then these things are aggregated, not necessarily through arithmetic averaging, but through disjunction or some other operation. Essentially each rule votes, but each rule has a weight. In practical systems in operation at this point, the aggregation is not arithmetical, it's disjunctive. It's the MAX operation. You take the maximum and you defuzzify and come up with a crisp conclusion.<P>
What I'm driving at is this: Because it's a voting system, if one rule is wrong, it will not affect the whole thing.<P>
<B>WK:</B> Wishful thinking.<P>
<B>LZ:</B> There are many systems which have demonstrated this, notably the balancing pendulum. There are seven rules. When Professor Yamakawa was demonstrating this thing, he would disable two out of these seven rules. The system would still continue to function. In other words, there is a graceful degradation. It's not sudden, because of the aggregation process. <P>
<B>WK:</B> Or perhaps because of a superfluity of rules, and [because] he could have gotten along with fewer.<P>
<B><I>DDJ</I></B><B>:</B> But is it better to achieve an ideal solution with more engineering, or is it better to achieve an adequate solution and save a million dollars in development costs?<P>
<B>WK:</B> That's where we also have a serious conflict. I propose that the cost of designing a control system for heating a house with a simple gas furnace can be a thousand times greater using fuzzy logic, and implementing the system about ten times greater using fuzzy logic than classic control theory.<P>
<B>LZ:</B> But that's your supposition. I will counter with the evidence of people who have actually done that. The Schlumberger company in France, an oil-exploration company, is becoming concerned with HVAC. One of their engineers has been using fuzzy logic to come up with an optimal system for them. He is a very well-informed person, he has tried a variety of techniques. There are companies in Germany working on heating buildings, there's Mitsubishi in Japan._ Air conditioning uses fuzzy logic, automobiles use fuzzy logic in their air-conditioning systems._ So we have a lot of experience. Hitachi, Toshiba_we have this kind of experience, versus people for whom I have great admiration saying they can do this in some other fashion.<P>
We are comparing the work of hard-headed people who have actually designed systems, built systems, tested them, compared them, with, with_I'm not sure how to refer to it.<P>
<B>WK:</B> Say something pejorative!<P>
<B>LZ:</B> (Laughing) Professor Tribus, when he was told about the Sendai system, said, and I quote, &quot;I could do the same thing using Bayesian logic.&quot; He admitted that it hasn't been done, but he thinks it can be done. The thing that struck me about it--and I know Tribus quite well--he's a person who knows quite a lot about probability, decision analysis. He knows nothing about control. He knows nothing about that system. And yet, he felt justified in saying he could do the same thing using Bayesian logic, without knowing anything about that system.<P>
I hear this frequently: &quot;I could do the same thing using something.&quot; Do you know something about that system? Do you know how it functions? &quot;No, I don't really.&quot;<P>
In the case of this Sendai system, one has to look at how this system functions. What are the rules? What's the performance? These people, as I said, performed three-hundred thousand simulations. They're not stupid, these Hitachi people. They spent eight years working on these things.<P>
So if you take the people working for Mitsubishi, Toshiba, Hitachi, Siemens, SGS Thompson_Siemens has about 30 or 40 people working on fuzzy problems.<P>
Cement kilns were the very first successful application of fuzzy logic. In 1980, the F.L. Smith company in Copenhagen came out with this application. Today, all cement kilns use fuzzy logic. They have sort of convinced themselves that this is the way to go.<P>
Let me take a little peek into the future. In five, ten, fifteen years from now, fuzzy logic will become a standard part of the curriculum. It's the sort of thing that engineering and other students really would be learning routinely. I think it will turn out that this capability to describe phenomena which do not lend themselves to precise characterization is something which is lacking in traditional approaches. This will provide a tool which does not displace the other tools, but adds to the other tools.<P>
I would also say that we should not look at fuzzy logic in isolation, but see it as part of &quot;soft computing.&quot; Soft computing tolerates imprecision, partial truth, considering them not as undesirable, because the real world is imprecise. We cannot capture many aspects of the world if we stick to the traditional framework. We cannot formulate theorems, we cannot solve problems, or if we can, the cost is excessive. So let us learn something about this other methodology.<P>
It is for this reason that I say fuzzy logic will become part of the curriculum. This controversy which we have today will be forgotten. In fact, people will be wondering why we were arguing about something that is so obvious!<P>
<P>
<HR><P>Copyright &copy; 1994, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
