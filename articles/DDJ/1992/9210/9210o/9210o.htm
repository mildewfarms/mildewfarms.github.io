<HTML>
<META NAME="year" CONTENT="1992">
<HEAD>
<TITLE>OCT92: EDITORIAL</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<h1>EDITORIAL<a name="021a_0003"></h1><P>
<h2><a name="021a_0001"><a name="021a_0000">Back on the Copyright Beat</h2><P>
<h3>Jonathan Erickson</h3><P>
<a name="021a_0002"><a name="021a_0000">I don't know about you, but I'm sleeping better knowing the Lotus look-and-feel copyright infringement suit against Borland has been decided.  If you recall, this was the action that spurred legions of parents to sign up their offspring for law school.  Lotus, by the way, won.<P>
The question remains though: What did Lotus really win, and who cares, anyway?  Sure, Lotus will likely receive damages if Borland's sure-to-be-filed appeal fails, maybe even enough money to cover several years worth of legal wrangling and corporate-image damage control.<P>
But more to the point, who, except maybe Lotus, cares anymore about the interface that started the ruckus?  Not Borland, which, the day after the ruling, started shipping Quattro Pro, bereft of the onerous 123.mu file that generates the look-alike interface.  (The file is still available to those who want it.)  Nor, so it seems, does anyone else.  When was the last time you saw a newly released application that resembles the Lotus look-and-feel?  In today's world, what counts is compliance with CUA, not 1-2-3.<P>
In truth, we all should care about the Lotus/Borland ruling.  By allowing Lotus to copyright menu structures, U.S. District Court Judge Robert Keeton said, in effect, that you can copyright not only the code that implements the software, but the structure of the program as well.  The problem with this is that the structure of a program represents an idea, while the source code is the expression of that idea.  Copyright law allows protecting the expression, but not the idea itself.<P>
Keeton's decision seems contrary to the landmark ruling of U.S. District Judge George Pratt, who decided the Computer Associates vs. Altai copyright-infringement case.  On the surface, the only similarity between the two cases is that they're both pigeonholed as copyright infringement.  The CA/Altai suit, however, focused on how software interacts with other software, while Lotus/Borland embraced how the user interacts with software.<P>
The original issues in the CA/Altai case were straightforward.  Altai software contained CA code that a former CA programmer brought to Altai.  The company conceded the infringement, took its lumps, paid its damages, and rewrote its software.<P>
CA then extended the suit, saying it also owned copyright to the structure of the operating-system interface routines--disk I/O and the like.  Since both companies' software was written for the same third-party operating system (MVS), the interface routines were understandably similar in structure.  After all, the OS demands this.  Pratt decided program structures can't be copyrighted, and ruled against CA.<P>
In his decision, Judge Pratt established guidelines that have since been supported by law professors and courts around the country.  (Keeton's Second District is a rare exception.)  As I interpret Pratt's decision, the elements you need to consider are:<P>
<UL>
<li>Text.  Printouts of a program's source code can be copyrighted just like book or magazine text.  If two programs have identical listings (as in CA/Altai), infringement is likely.</li>
<li>Appearance.  The images that make up a program's screen display can be copyrighted, as can a photograph or painting.  If the artistic screen display is the same (say, a video game like PacMan), infringement may have occurred.</li>
<li>Behavior.  The behavior, or method of operation, of a program can't be copyrighted because copyright law doesn't cover procedures and methods of operation.  (These are provided for under patent law.)</li>
</UL>
In short, one court says you can copyright a program structure; the other says you can't. One court says you can copyright a program's behavior; the other disagrees.  To buy into Keeton's decision, you have to accept the premise that a menu structure is somehow different from the other structures or submodules that collectively make up a program.  Interestingly, Keeton seems out on his own in this as other courts line up behind CA/Altai.  U.S.  District Court Judge Vaughn Walker (who's trying the Apple vs.  Microsoft/Hewlett-Packard case) has said, for instance, that the sequence and organization of commands should not be the sole property of a single organization.<P>
With this in mind, you'd think that the recent Unix System Labs' (nee AT&amp;T) suit against the University of California at Berkeley over copyright infringement on the BSD Networking Software, Release 2 tape should be as easy as, well, 1-2-3.  If infringement exists, it's a &quot;text&quot; issue.  USL should be able to put its listings side-by-side with Net/2 code and point to the offending source.  If A = A and B = B, then somebody goofed.<P>
Somehow, I don't think all this will be that easy.  Take the murky waters of copyright law and digital video, for instance.  As Michael Swaine discusses in this month's &quot;Programming Paradigms,&quot; the latest challenge for Apple's QuickTime team is to embed copyright information into individual digital frames, as well as to hone digital-video encryption techniques.<P>
It's a whole new world out there, copyright-speaking.  Maybe there's still hope for those parents who prematurely packed their kids off to law school.<P>
<P>
<P>
<HR><P>Copyright &copy; 1992, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
