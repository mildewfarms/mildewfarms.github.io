<HTML>
<META NAME="year" CONTENT="1992">
<HEAD>
<TITLE>November 1992 - USER INTERFACES</TITLE></HEAD>
<body bgcolor="#FFFFFF">
<H1>November 1992 - USER INTERFACES</H1>
<hr>
<h2>FEATURES</h2><P>
<h3><a href="9211a/9211a.htm">SIZING UP GUI TOOLKITS</a><br>by Ray Valdes</h3><P>
Last month, Ray got some expert programmers to show what object-oriented application frameworks can do with a simple graphics application.  This month, he applies the same approach to GUI Toolkits.<P>
<h3><a href="9211b/9211b.htm">PIE MENUS FOR WINDOWS</a><br>by Carl Rollo</h3><P>
Circular pie menus are faster and more accurate than the now-familiar linear menus.  Carl presents five functions that enable you to implement pie menus for Windows, using the &quot;owner draw&quot; features in the Windows API.<P>
<h3><a href="9211c/9211c.htm">DYNAMIC DIALOG BOXES AND C++</a><br>by Robert Sardis</h3><P>
There are many times when a dialog box's specification is only known at run time.  Bob shows how C++ constructs can simplify an existing C-based approach to dynamic dialogs.<P>
<h3><a href="9211d/9211d.htm">GARBAGE COLLECTION FOR C PROGRAMS</a><br>by Giuliano Carlini and Susan Redina</h3><P>
Garbage collection, which liberates you from needing to explicitly free memory, is used by languages like Lisp and Smalltalk.  In this article, our authors show you how to implement conservative, yet efficient, collection techniques in C.<P>
<h3><a href="9211e/9211e.htm">DESIGNING C++ CLASSES</a><br>by Steven Sinofsky</h3><P>
To maintain the consistent semantics of C++, a number of functions are required for each C++ class.  This article details the four functions that C++ generates when your program does not provide definitions for them:  default constructor, copy constructor (or copy initializer), destructor, and assignment operator.<P>
<h3><a href="9211f/9211f.htm">DESIGNING PORTABLE USER INTERFACES</a><br>by John L. Bradberry</h3><P>
The UI is one of the most important design issues to consider when porting applications from one platform to another.  John discusses UI design strategies and software-engineering techniques he implemented when porting a DOS application to UNIX.<P>
<h3><a href="9211g/9211g.htm">CONVERTING DITHERED IMAGES BACK TO GRAY SCALE</a><br>by Allen Stenger</h3><P>
Information loss in dithering generally makes it possible to recover the original black-and-white image from a dithered image unless you &quot;undither&quot; it.<P>
<h3><a href="9211h/9211h.htm">EXTENDING TURBO VISION</a><br>by Scott Nichol</h3><P>
Scott enhances Borland's Turbo Vision by creating a method to extend event generation, which can be used to perform periodic or background functions.<P>
<h2>EMBEDDED SYSTEMS</h2><P>
<h3><a href="9211i/9211i.htm">DESIGNING A REAL-TIME DEBUGGER</a><br>by David Potter</h3><P>
Intel's iRMX for Windows makes it possible for you to write real-time, deterministic applications for single-tasking DOS or cooperative multitasking Microsoft Windows.<P>
<h3><a href="9211j/9211j.htm">TIME DILATION AND RELATIVISTIC DEBUGGING</a><br>by Edward N. Adams III</h3><P>
Debugging some programs is made a lot easier when you use compact, graphic displays.<P>
<h2>NETWORKED SYSTEMS</h2><P>
<h3><a href="9211k/9211k.htm">DEBUGGING MOTIF WIDGETS</a><br>by Kamran Husain</h3><P>
Using test drivers simplifies the process of debugging motif widgets.  Kamran presents one such test driver and discusses some of the common debugging pitfalls.<P>
<h2>EXAMINING ROOM</h2><P>
<h3><a href="9211l/9211l.htm">EXAMINING TURBO PASCAL FOR WINDOWS</a><br>by Michael Floyd</h3><P>
Mike develops a general-purpose expert-system shell to see how Borland's Turbo Pascal for Windows measures up as a Windows programming tool.<P>
<h2>PROGRAMMER'S WORKBENCH</h2><P>
<h3><a href="9211m/9211m.htm">DEVELOPING A PORTABLE C++ GUI CLASS LIBRARY</a><br>by Andreas Meyer</h3><P>
Where would you start if you had to write a portable application for Windows, Presentation Manager, Motif, Open Look, and the Macintosh?<P>
<h2>COLUMNS</h2><P>
<h3><a href="9211n/9211n.htm">PROGRAMMING PARADIGMS</a><br>by Michael Swaine</h3><P>
What, Michael worry?  You bet, especially when it comes to user-interface rights, wrongs, and usability.<P>
<h3><a href="9211o/9211o.htm">C PROGRAMMING</a><br>by Al Stevens</h3><P>
D-Flat++ is a class library that implements the features necessary to launch a single-user, single-document application, while supporting CUA menus, dialog boxes, and controls.<P>
<h3><a href="9211p/9211p.htm">STRUCTURED PROGRAMMING</a><br>by Jeff Duntemann</h3><P>
Software design means different things to different kinds of applications.  Jeff investigates the issues surrounding program specification, design, and implementation.<P>
<h3><a href="9211q/9211q.htm">GRAPHICS PROGRAMMING</a><br>by Michael Abrash</h3><P>
Run-slice line drawing gains its efficiency by taking maximum advantage of available information, while minimizing redundant work.  The result is high-performance graphics.<P>
<h3><a href="9211r/9211r.htm">PROGRAMMER'S BOOKSHELF</a><br>by Ray Duncan</h3><P>
Ray has high praise for fellow columnist Andrew Schulman's Undocumented Windows.<P>
<h2>FORUM</h2><P>
<h3><a href="9211s/9211s.htm">EDITORIAL</a><br>by Jonathan Erickson</h3><P>
<h3><a href="9211t/9211t.htm">LETTERS</a><br>by you</h3><P>
<h3><a href="9211u/9211u.htm">SWAINE'S FLAMES</a><br>by Michael Swaine</h3><P>
<h2>PROGRAMMER'S SERVICES</h2><P>
<h3><a href="9211v/9211v.htm">OF INTEREST</a><br>by Tami Zemel</h3><P>
<HR><P>Copyright &copy; 1992, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
