<HTML>
<META NAME="year" CONTENT="1991">
<HEAD>
<TITLE>JAN91: EDITORIAL</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<h1>EDITORIAL<a name="001b_0003"></h1><P>
<h2><a name="001b_0001"><a name="001b_0000">The Right Thing To Do</h2><P>
<h3>Jonathan Erickson</h3><P>
<a name="001b_0002"><a name="001b_0000">Every now and then, the right things get done for the right reasons -- and at just the right time.  So it is this month as we launch a major series of articles by Bill and Lynne Jolitz.  The project they'll be describing involves porting BSD Unix to the 80386/486 platform.  Working with the Computer Science Research Group (CSRG) at the University of California at Berkeley, Bill conducted a clean-room port of 4.3BSD Unix from its VAX roots to its new home on the PC.<P>
There are a number of significant points here.  For one thing, you won't need tens, if not hundreds, of thousands of dollars in hardware to use the operating system.  Less apparent, but perhaps more important, is that 386BSD (as Bill refers to the port) will be free of AT&amp;T code -- the only license required will be that issued by the University of California.  There are many other issues of consequence, including the degree of MS-DOS &quot;cohabitation&quot; that enables shared disk space so that DOS and Unix can exchange information, but I'll let Bill and Lynne tell you about that.<P>
This obviously hasn't been a trivial project.  So why would anyone undertake such a massive project?  It's simple: To broaden the base for BSD Unix and, in the words of one CSRG member, &quot;to make Unix the right way.&quot;<P>
When the history of Unix is written, CSRG will be cast in the role of an information clearinghouse and source of innovation in Unix technology.  The shadow cast by the group and some of its graduates (who include Bill Joy) has provided Unix with much of the success and momentum it has today.  And, although it's less well known, much of the underlying technology of systems like Mach, System V, Release 4, and virtually every other version of Unix is based upon or contains some Berkeley code.<P>
Over the years, CSRG has faithfully adhered to its fundamental goal -- to learn, educate and innovate within a community of like-minded researchers, scholars, and programmers.  This had led to, among other things, early development of features such as virtual memory, networked file systems, and a standard visual editor.<P>
It's important to give credit where credit is due.  Bill's work couldn't have been undertaken without Michael Karel, Kirk McKusick, Keith Bostic, and many others.  Unraveling technical knots has often been the least of their concerns, what with political, legal, and bureaucratic battles to contend with.  Nevertheless, they've stuck by their consoles and deserve whatever accolades come their way.<P>
By the time you finish reading this first installment, the $64 question you'll be asking is how you can get your hands on 386BSD.  Although the specific details are still being worked out, the general approach is that there will be no restrictions on who can license the source -- including the kernel and all utilities.  There will be a nominal license fee and UC notices must remain in the code.  Bill and Lynne will keep you posted on the status of this as the series unfolds.<P>
<h3><a name="001b_0004">Coming to Terms with Software Design<a name="001b_0004"></h3><P>
The first 386BSD article, which focuses on designing the specification, fits right in with this month's theme -- software design.  Like just about everything else around us, terminology evolves and the term &quot;software design&quot; is no exception.  In this issue, we're taking a look at the topic from three different, yet related, perspectives: The traditional view of how programmers go about designing a program or system; the use of software engineering (CASE) tools that automate and structure the process to some degree; and the implications of software design from the user's perspective, the most recent evolution of the term as embodied in Mitch Kapor's &quot;software design manifesto.&quot;<P>
<h3><a name="001b_0005">My How Time Flies...<a name="001b_0005"></h3><P>
I certainly can't close without saying that this is a special issue of a special magazine. Fifteen years ago this month, Dr. Dobb's Journal of Computer Calisthenics &amp; Orthodontia: Running Light Without Overbyte rolled off the presses and into your hands.  Since then, DDJ has watched the technology evolve, creativity flourish, and, from Tiny Basic to 386BSD, has played a part in the process.<P>
As proud as we are of DDJ, this issue is really a celebration in honor of the progress made in the art and science of computer programming -- and the people responsible for those advances.<P>
Computers, and the people who build and program them, truly have changed the world.  By building on the foundations shaped by generations of scientists, programmers have given us fresh ways of looking at what's already there, and enabled us to see things in ways never thought possible.  They've freed us from the drudgery that those before us accepted as the norm, and have given us ways of enjoying newfound freedom.<P>
DDJs role in all of this is, and always has been, simply to provide a means of sharing information that makes all of this wonderment possible, &quot;realizable fantasies&quot; is how an early issue of DDJ put it.  Thanks to you, the past has been amazing and I genuinely hope you're with us to see how the future unfolds.<P>


<HR><P>Copyright &copy; 1991, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
