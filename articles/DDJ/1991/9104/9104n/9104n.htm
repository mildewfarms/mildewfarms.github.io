<HTML>
<META NAME="year" CONTENT="1991">
<HEAD>
<TITLE>APR91: EDITORIAL</TITLE></HEAD>
<BODY BGCOLOR="#ffffff">
<h1>EDITORIAL<a name="00d2_0003"></h1><P>
<h2><a name="00d2_0001"><a name="00d2_0000">Mark's Modest Patent Proposal</h2><P>
<h3>Jonathan Erickson</h3><P>
<a name="00d2_0002"><a name="00d2_0000">The subject of software patents won't go away.  And until the problems surrounding patents are solved, let's hope it doesn't.  The topic, in fact, was the subject of a lively (boy, that's putting it mildly) panel discussion at the recent Software Development '91 conference.  On the panel, moderated by Greenleaf Software's (and frequent DDJ contributor ) Mark Nelson, were Jim Bidzos (CEO of RSA Data Security), Richard Stallman (representing the League for Programming Freedom), Dick Gabriel (of Lucid and Stanford University), Woody Higgins (of Flohr, Hohbach, Test, Albritton &amp; Herbert--you guessed it, an attorney specializing in software patents), Paul Heckel (who holds, and has vigorously defended, several software patents), and yours truly.<P>
Things went fine until Mark began introducing the panel.  That's when the shouting started--and I hadn't even been acknowledged yet.<P>
Much of the ensuing discussion concerned whether or not software patents thwart innovation (no real consensus, although I suspect they do), whether or not the patent process works (nope, it sure doesn't), the definition of &quot;obvious&quot; (a key factor in granting a patent), and whether or not there are any alternatives to the system.  One comment really floored me: Woody Higgins said that currently about 100 software patents are being granted every month.<P>
Near the end of our two-hour session, Mark made a modest proposal which, if adopted, could have broad and profound implications.  According to the rules governing the granting of a patent (and I'm working from memory here, so bear with me), if there is prior art or a technique is &quot;obvious&quot; to the &quot;average&quot; practitioner of an art or science, a patent should not be allowed.  As I've said before, part of the problem with the current process is that many programming techniques are obvious to experienced programmers, but not to the general population or to patent examiners.  Consequently, it is likely that many of the 100 or so patents handed out every month wouldn't be granted if they were subject to peer review.<P>
What Mark proposed is the establishment of an ad hoc patent jury system.  Now there's nothing in his proposal that limits the process to software or the computer industry.  Other trades (auto, biotech, and so on) could (and probably should) have review panels of their own to advise the patent office.  (Okay, this is assuming that patents apply to software in the first place.  Many, including the League for Programming Freedom, don't believe in granting software patents at all.  I'll not get into a discussion of that right now.  However, I think Mark's proposal has a better chance of acceptance than that of doing away with software patents altogether.)  For software, the jury would be subdivided into graphics, communications, and so on.  Thus, a patent involving a complicated graphics algorithm would be reviewed by a group of &quot;average&quot; graphics programmers.<P>
Under the jury system, patent applications would be reviewed by the patent office in secrecy, just as now.  However, instead of waiting to make the application public on the day it's granted, the application would be opened for examination, say, one year before actually being granted.<P>
The patent office would make public not just the applications, but the &quot;wrapper&quot; that contains all of the give-and-take between the inventor and examiner.  Any interested parties could examine the patent and would have a period of six months to file objections, including prior art.<P>
The patent office could, at its discretion, act on or ignore these filings; objecting parties would not have the right of appeal.<P>
By putting a time limit on peer reviews, I'm willing to bet the review panel would speed up the entire process by invalidating many trivial or obvious applications early on.  The patent office could then focus on getting a fewer number of patents out the door quickly.  And the patents ultimately granted would be much stronger, having already survived a peer review.<P>
A lot of questions have to be answered before the process could be implemented: Those in the industry, for instance, would be concerned about submitting patents to committees that may include employees of competing firms.  Congress and the patent office would obviously have to buy into it, and they usually don't want to give up any power at any time without a fight.  It all comes down to just how sincere these groups are about solving a very serious problem.<P>
I'd like your feedback on this: Will it work?  How could it be implemented?  While this may not be the ultimate solution, it is a positive step in the right direction.  You can help point the way.  In the meantime, I'll start contacting the patent office and appropriate house subcommittees to gauge their reactions--and I'll keep you posted in this space.<P>
For the short term, Dick Gabriel shared some good advice.  His approach is to be open about what his company is doing, then out-engineer, out-market, and generally out-perform the competition.  Now that I think about it, that's good advice for the long term as well.<P>


<HR><P>Copyright &copy; 1991, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
