<html><head><title>Sep00: Representing Symbolic Data</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h2>Representing Symbolic Data</h2><p>The internal data structures used to represent and manipulate symbolic data are crucial for efficiency. A straightforward data structure closely models the expression tree: <i>ab</i>+<i>cd</i> would be represented as in <A NAME="rf6"><A HREF="0009cf6.htm">Figure 6</A>(a).</p><p>Maple uses directed acyclic graphs (DAGs) to represent arbitrary expressions. While similar to the tree structure, they have the additional property that all common subexpressions are identified and stored only once. Thus, <A NAME="rf6"><A HREF="0009cf6.htm">Figure 6</A>(a) would be represented as <A NAME="rf6"><A HREF="0009cf6.htm">Figure 6</A>(b). Since subexpressions are shared, all expressions must now be nonmutable and changing an expression always involves a copy operation. Even so, the reduced memory consumption and the ability to apply recursive operations only once to each unique subexpression, make processing complex symbolic expressions a much more efficient operation. Maple uses DAGs to represent arbitrary-size integers, arbitrary-precision floating-point numbers, rational numbers, lists, sets, polynomials, matrices, and more. Even procedures written using Maple's programming language are stored as DAGs.</p><DDJADVERTISEMENT INLINE><p> -- L.B.</p><a href="0009c.htm#rs1">Back to Article</a></body></html>