<html><head><title>Oct00: Finding the Best Software Developers</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><pre><b>(a)</b>Q:	Given<i> int n, i=</i>10,<i> j=</i>20,<i> x</i>=3, <i>y</i>= 100, what is the value of <i>n </i>and <i>y </i>at the end of the following    	expression?	n = (i &gt; j) &amp;&amp; (x &lt; ++y)A:	<i>n</i>==0 and <i>y</i>==100, <i>y </i>will not be incremented since <i>i</i> is less than<i> j,</i> so the first expression  	is False, and the logical "and" in C doesn't evaluate the second expression under  	that circumstance.<b>(b)</b>Q:	Given the following code fragment in Java:    String bob = new String( "Bob" );    String bob2 = new String( "Bob" );    boolean bobIsBob = ( bob == bob2 );	What is the value of <i>bobIsBob</i>?<b>A:</b>	False. The Java comparison operator compares the strings' references to see if they 			reference the same object. Two different string objects that happen to contain the 			same string value are still different to the comparison operator. Bob is not Bob -- he 			only looks like Bob. To get the behavior you would expect, use the following 			expression:    bobIsBob = bob.equals(bob2);</pre><h4>Example 2: Language feature questions.</h4><a href="0010n.htm#re2">Back to Article</a></body></html>