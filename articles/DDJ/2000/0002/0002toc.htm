<html><head><title>Feb00: Table of Contents</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h1>DDJ, February 2000 -- Java Programming</h1><p></p><hr><img src="cover.gif" width="120" height="158" align="right" border="1"><h2>FEATURES</h2><h3><a href="0002a/0002a.htm">GJ: A GENERIC JAVA</a></h3><h4>by Philip Wadler</h4><p>Generic Java (GJ) adds generic types to the Java language. GJ is compatible with Java, the Java Virtual Machine, and existing libraries. It is also efficient, in that information about generic types is maintained only at compile time, not run time.</p><h3><a href="0002b/0002b.htm">COLLABORATIVE APPLICATIONS AND THE JAVA SHARED DATA TOOLKIT</a></h3><h4>by Joshua Fox</h4><p>The Java Shared Data Toolkit is designed to help you write distributed collaborative applications so that groups of users can work simultaneously on a common task.</p><h3><a href="0002c/0002c.htm">JAVA REFERENCES</a></h3><h4>by Jonathan Amsterdam</h4><p>Java lets a program refer to objects without preventing those objects from being garbage collected. Jonathan explains how references work and presents useful abstractions that make working with them easier.</p><h3><a href="0002d/0002d.htm">PYTHON SERVER PAGES: PART II</a></h3><h4>by Kirby W. Angell</h4><p>Last month, Kirby introduced Python Server Pages and looked at how HTML pages with embedded scripts are translated into compilable JPython code. This month, he examines the Java Servlet side of PSP.</p><h3><a href="0002e/0002e.htm">JAVA, XML, &amp; LITERATE PROGRAMMING</a></h3><h4>by Andrew Dwelly</h4><p>Marius, the system Andrew presents here, implements some of Donald Knuth's ideas about literate programs, but uses Java as its programming language, with HTML as the output. In the process, Marius leverages the power of XML.</p><h3><a href="0002f/0002f.htm">OPENCARD FRAMEWORK APPLICATION DEVELOPMENT</a></h3><h4>by Vesna Hassler and Oliver Fodor</h4><p>The Personal Computer/Smart Card Interface (PC/SC) and OpenCard Framework emphasize the interoperability of smartcards and card terminals, and the integration of those card terminals into Microsoft Windows.</p><h2>EMBEDDED SYSTEMS</h2><h3><a href="0002g/0002g.htm">THE REAL-TIME SPECIFICATION FOR JAVA</a></h3><h4>by David Hardin</h4><p>The Real-Time Specification for Java promises to bring the benefits of Java to real-time developers. David examines the requirements and design decisions that led to the Real-Time Specification for Java, and provides practical examples of its use.</p><h2>INTERNET PROGRAMMING</h2><h3><a href="0002h/0002h.htm">WEBRELAY: A MULTITHREADED HTTP RELAY SERVER</a></h3><h4>by Peter Zhang </h4><p>Webrelay is a freely available multithreaded HTTP relay server that authenticates that clients are legitimate users before they are connected to vendor web servers.</p><h2>PROGRAMMER'S TOOLCHEST</h2><h3><a href="0002i/0002i.htm">VISUALIZING NETWORK RESOURCES USING VISIO</a></h3><h4>by Chris Trueman</h4><p>Visio is a generic diagram construction tool that just happens to include a powerful visualization engine. Chris uses that engine to write a C++ tool that generates diagrams to represent all the available resources on a Windows network.</p><h2>COLUMNS </h2><h3><a href="0002j/0002j.htm">PROGRAMMING PARADIGMS</a></h3><h4>by Michael Swaine</h4><p>You won't need to go to the state of "iDenmark" to know that something smells. And you can bet Michael nose what he's talking about this month.</p><h3><a href="0002k/0002k.htm">C PROGRAMMING</a></h3><h4>by Al Stevens </h4><p>Al resurrects S, a homebrew C variant he implemented a decade ago -- back before the days of Javascript and VB. His updated version is written in C++, and includes a shell program that tests the interpreter by loading and executing text source-code files written in the S language.</p><h3><a href="0002l/0002l.htm">JAVA Q&amp;A</a></h3><h4>by Ethan Henry and Ed Lycklama</h4><p>Our authors show what you can do when Java exhibits classic memory leak behavior -- unbounded memory growth leading to poor performance and eventually crashing.</p><h3><a href="0002m/0002m.htm">ALGORITHM ALLEY</a></h3><h4>by Michael J. Wiener</h4><p>Michael presents some key optimizations (with source-code examples) that can be made to make RSA algorithm as fast as possible.</p><h3><a href="0002n/0002n.htm">DR. ECCO'S OMNIHEURIST CORNER</a></h3><h4>by Dennis E. Shasha</h4><p>Landmines are a nasty piece of work, indeed. Ecco and Liane need to come up with ways to make removing them a safer proposition.</p><h3><a href="0002o/0002o.htm">PROGRAMMER'S BOOKSHELF</a></h3><h4>Gregory V. Wilson</h4><p>This month, Greg examines <i>Mastering Algorithms with Perl</i>, by Jon Orwant, Jarkko Hietaniemi, and John Macdonald, <i>Programming for the Java Virtual Machine</i>, by Joshua Engel, <i>Java for Engineers and Scientists</i>, by Stephen J. Chapman, <i>Introductory Java for Scientists and Engineers</i>, by Richard Davies, the <i>C++ Toolkit for Scientists and Engineers</i>, by James T. Smith, <i>Quantum Computing and Communications</i>, by Michael Brooks, and Steven Roman's <i>Learning Word Programming</i>.</p><p></p><h2>FORUM</h2><h3><a href="0002p/0002p.htm">EDITORIAL</a></h3><h4>by Jonathan Erickson</h4><h3><a href="0002q/0002q.htm">LETTERS</a></h3><h4>by you</h4><h3><a href="0002r/0002r.htm">NEWS &amp; VIEWS</a></h3><h4>edited by Nicholas Baran</h4><h3><a href="0002s/0002s.htm">OF INTEREST</a></h3><h4>by Nicholas Baran  and Amy Lincicum</h4><h3><a href="0002t/0002t.htm">SWAINE'S FLAMES</a></h3><h4>by Michael Swaine</h4></body></html>