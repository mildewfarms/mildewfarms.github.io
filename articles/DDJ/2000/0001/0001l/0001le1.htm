<html><head><title>Jan00: Java Q&A</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><pre><b>(a)</b>skij&gt; (define button (new 'java.awt.Button "Press Me"))  &lt;&lt;&lt; #&lt;java.awt.Button[button0,0,0,0x0,invalid,label=Press Me]&gt;<b>(b)</b>skij&gt; (invoke button 'setLabel "Please Press Me")skij&gt; (define window (new 'java.awt.Frame))  &lt;&lt;&lt; #&lt;java.awt.Frame[frame1,0,0,0x0,invalid,hidden,layout=java.awt.Border   Layout,resizable,title=]&gt;skij&gt; (invoke window 'setVisible #t)skij&gt; (invoke window 'add button);;; Hm, we still can't see anythingskij&gt; (invoke window 'getSize)  &lt;&lt;&lt; #&lt;java.awt.Dimension[width=112,height=27]&gt;skij&gt; (invoke window 'setSize 300 200);;; The window grows, but still we can't see the button!skij&gt; (invoke window 'show)<b>(c)</b>(invoke-static 'java.lang.Thread 'sleep (long 100))<b>(d)</b>skij&gt; (peek (invoke button 'getSize) 'width)  &lt;&lt;&lt; 292<b>(e)</b>skij&gt; (peek-static 'java.lang.System 'out)  &lt;&lt;&lt; #&lt;java.io.PrintStream@3ae82e8c&gt;<b>(f)</b>skij&gt; (define listener (new 'com.ibm.jikes.skij.misc.GenericCallback                            (lambda (event)                               (print "That tickles!"))))  &lt;&lt;&lt; #&lt;com.ibm.jikes.skij.misc.GenericCallback@8bbc2e8c&gt;skij&gt; (invoke button 'addActionListener listener)</pre><h4>Example 1: Scheme primitives and examples. (a) Arguments; (b) invoke<i>;</i> (c) invoke-static<i>;</i> (d) peek<i>; </i>(e) peek-static<i>;</i> (f) applying a procedure to an event. In these interactive examples, "skij&gt;" is the prompt, what follows is typed by users. If a value is returned, it is printed after "&lt;&lt;&lt;." Java objects that are not standard Scheme types are quoted with the "#&lt;...&gt;" notation.</h4><a href="0001l.htm#re1">Back to Article</a></body></html>