<html>
<head>
<title>Nov00: Absolute versus Self-Relative</title>
</head>

<body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000">
<!--Copyright &#169; Dr. Dobb's Journal-->


<h2>Absolute versus Self-Relative</h2>
<p>All Security Descriptors can be of two formats, Absolute and Self-Relative, both of which use the data structure:</p>
<blockquote><p>
struct _SECURITY_DESCRIPTOR {</p>
<DDJADVERTISEMENT INLINE>

<p>
BYTE  Revision;</p>

<p>BYTE  Sbz1;</p>

<p>SECURITY_DESCRIPTOR_CONTROL 					       Control;</p>

<p>PSID Owner;</p>

<p>PSID Group;</p>

<p>PACL Sacl;</p>

<p>PACL Dacl;</p>

<p>
};</p>

</blockquote>

<p>The difference between the two types of SD depends on the content of the four pointers (four last variables). With the Absolute format, the SD contains pointers to the address of memory containing the SID or ACL for each of these variables. This way, you can easily manipulate the structure and change SIDs and ACLs as you want. The problem with this format is that it is not in a contiguous block of memory and you cannot store it in a permanent fashion, such as in a file.</p>

<p>A Self-Relative SD doesn't contain pointers, but contains offsets from the beginning of the SD structure to the object that it is pointing to. In this case, you have your entire SD in a contiguous block of memory (see <A NAME="rf1"></a><A HREF="0011ef1.htm">Figures 1</A> and <A NAME="rf2"></a><A HREF="0011ef2.htm">2</A>). A Self-Relative SD is more difficult to edit and maintain because the space allotted might not be enough to add new ACEs or to set a new Owner. To do that, you can convert from one format into another using the Win32 functions <i>MakeSelfRelativeSD()</i> and <i>MakeAbsoluteSD()</i>.</p>

<p>All Windows APIs will return the SD in a Self-Relative format. However, most functions that assign an SD to an object accept both formats. You cannot use functions like <i>SetSecurityDescriptorOwner()</i> if you have your SD in Self-Relative format.</p>

<p> -- M.C.</p>

<a href="0011e.htm#rs1">Back to Article</a>


</body>
</html>
