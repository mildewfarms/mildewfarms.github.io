<HTML>
<META NAME="year" CONTENT="1989">
<HEAD>

<TITLE>September 1989 - SIMULATION AND MODELING</TITLE></HEAD>
<body bgcolor="FFFFFF">
<H1>September 1989 - SIMULATION AND MODELING</H1>
<hr>
<h2>FEATURES</h2>
</p><h3><a href="8909a/8909a.htm">AUTOROUTING WITH THE A* ALGORITHM</a></h3><p> by Randy Nevin<br>
Finding the best of all possible solutions can be made easier with AI-based search algorithms.  Randy looks at the A* algorithm -- and discusses  how it can be used to simulate a printed circuit board layout.
</p><h3><a href="8909b/8909b.htm">SIMULATED ANNEALING </a></h3><p> by Michael P. McLaughlin<br>
Simulated annealing is most often used by VLSI chip designers to determine  the optimum arrangement of thousands of circuits.  But, as Michael shows  here, it has other applications as well.
</p><h3><a href="8909c/8909c.htm">FORCE-BASED SIMULATIONS</a></h3><p> by Todd King<br>
The argument can be made that object-oriented language provide the most  efficient way of modeling the real world.  Todd states his case, as he uses  C++ to build a simulation system that mimics the force of one planet on  another.
</p><h3><a href="8909d/8909d.htm">SETTING PRECEDENCE</a></h3><p> by Mark C. Peterson<br>
Using precedence trees makes it possible to create ordered, binary trees  that have a single configuration for a given set of numbers.  What all this  leads to, says Mark, is more efficient programs.
</p><h3><a href="8909e/8909e.htm">ROLL YOUR OWN MINILANGUAGES WITH MINI-INTERPRETERS</a></h3><p> by Michael Abrash and Dan Illowsky<br>
Mini-interpreters can do lots of work within a small space, even letting  you create your own customized minilanguage.  Michael and Dan discuss the  pros and cons of mini-interpreters, then give you the tools to roll your  own.
</p><h3><a href="8909f/8909f.htm">80386 PROTECTED MODE AND MULTITASKING</a></h3><p> by Tom Green<br>
In this article, Tom presents a set of tools that let you take advantage of  the 80386's built-in memory protection and hardware-supported multitasking  capabilities.
<h2>EXAMINING ROOM</h2>
</p><h3><a href="8909g/8909g.htm">WATCOM C7.0</a></h3><p> by John M. Dlugosz<br>
Watcom got good reviews when DDJ looked at it last year.  In this issue,  John examines how its latest incarnation measures up.
<h2>COLUMNS</h2>
</p><h3><a href="8909h/8909h.htm">PROGRAMMING PARADIGMS</a></h3><p> by Michael Swaine<br>
Nobody knows the trouble Michael knows as he continues his discussion of  neural nets and his talks with Hal Hardenbergh.
</p><h3><a href="8909i/8909i.htm">C PROGRAMMING</a></h3><p> by Al Stevens<br>
Al is still intrigued</a></h3><p> by C++ and its potentials.  To test his new-found  knowledge and skills, Al uses C++ to build pop-up windows and menus.
</p><h3><a href="8909j/8909j.htm">STRUCTURED PROGRAMMING</a></h3><p> by Jeff Duntemann<br>
The rapid acceptance of objects in the world of Pascal convinces Jeff that  Pascal programming may never be the same again.  He then strays off into  the world of REXX programming, with a look at Personal REXX.
<h2>DEPARTMENTS</h2>
</p><h3><a href="8909k/8909k.htm">EDITORIAL</a></h3><p> by Jonathan Erickson
</p><h3><a href="8909l/8909l.htm">LETTERS</a></h3><p> by you
</p><h3><a href="8909m/8909m.htm">SWAINE'S FLAMES</a></h3><p> by Michael Swaine
</p><h3><a href="8909n/8909n.htm">OF INTEREST </a></h3><p>compiled by Janna Custer
<HR><P>Copyright &copy; 1989, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
