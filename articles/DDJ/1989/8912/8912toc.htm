<HTML>
<META NAME="year" CONTENT="1989">
<HEAD>

<TITLE>December 1989 - OBJECT ORIENTED LANGUAGES</TITLE></HEAD>
<body bgcolor="FFFFFF">
<H1>December 1989 - OBJECT ORIENTED LANGUAGES</H1>
<hr>
<h2>FEATURES</h2>
</p><h3><a href="8912a/8912a.htm">NETWORK GRAPHS IN OBJECT PASCAL</a></h3><p> by Steven Kienle<br>
Steve discusses Object Pascal, focusing on how the language implements  objects and methods. In the process, he implements a network graph, using  objects that can be reused for other applications.
</p><h3><a href="8912b/8912b.htm">WRITING FILTERS IN AN OBJECT-ORIENTED LANGUAGE</a></h3><p> by Marty Franz<br>
Filters come in all shapes and sizes, and writing them is easier with an  object-oriented language.  Marty shows you how, using Actor as his  environment of choice.
</p><h3><a href="8912c/8912c.htm">A HOME-BREW C++ PARSER</a></h3><p> by John M. Dlugosz<br>
The first step to designing your own C++ compiler is to build a good  parser.  Here's a table-driven parser generator John created, it may be the  foundation for a system of your own.
</p><h3><a href="8912d/8912d.htm">WRITING CORRECT SOFTWARE WITH EIFFEL</a></h3><p> by Bertrand Meyer<br>
Eiffel's been described as the only pure object-oriented language currently  around.  Bertrand developed Eiffel and he discusses how you can use the  language to write better software.
</p><h3><a href="8912e/8912e.htm">THE QUICKPASCAL IN QUICKPASCAL </a></h3><p> by Joseph Mouhanna and Michael Vose<br>
Microsoft used QuickPascal itself to write the QuickPascal user interface.   Joseph and Mike show you how they did it, and how you can take advantage of  some of the same techniques.
</p><h3><a href="8912f/8912f.htm">AN OBJECT-ORIENTED LOGIC SIMULATOR</a></h3><p> by Kenneth E. Ayers<br>
Ken's LogicLab, a simulated bench environment, includes everything from ICs  to a logic analyzer--and they're all written in Smalltalk.
</p><h3><a href="8912g/8912g.htm">ARE THE EMPEROR'S NEW CLOTHES OBJECT ORIENTED?</a></h3><p> by Scott Guthery<br>
Scott plays the devil's advocate, asking some tough questions about object-oriented programming while attempting to separate the technological wheat  from the marketing chaff.
</p><h3><a href="8912h/8912h.htm">FUNCTIONAL PROGRAMMING AND FPCA '89</a></h3><p> by Ronald Fischer<br>
Proponents of the functional programming paradigm get together every couple  of years to examine advances in their craft.  They met this year in London, and Ronald was there to report on what happened at the conference, paying  particular attention to the Haskell programming language.
<h2>EXAMINING ROOM</h2>
</p><h3><a href="8912i/8912i.htm">PDQ: LESS BAGGAGE, FASTER CODE </a></h3><p> by Bruce Tonkin<br>
It's no secret that smaller code runs faster and, as Bruce found out,  Crescent Software's PDQ really does help QuickBasic code run &quot;pretty darn  quick.&quot;
<h2>COLUMNS</h2>
</p><h3><a href="8912j/8912j.htm">PROGRAMMING PARADIGMS</a></h3><p> by Michael Swaine<br>
OOPSLA '89 was one of this year's most exciting--and importantconferences.   Here is Mike's wrap-up.
</p><h3><a href="8912k/8912k.htm">C PROGRAMMING</a></h3><p> by Al Stevens<br>
Al embarks on a new multi-issue project with the development of TEXTSRCH,  a document retrieval system, while continuing his review off C++ books and  his ANSI update.
</p><h3><a href="8912l/8912l.htm">STRUCTURED PROGRAMMING</a></h3><p> by Jeff Duntemann<br>
GUI development leads Jeff to Microsoft Windows, which in turn steers him  to Actor and Smalltalk/V for PM and all of the object-oriented baggage  that's associated with these languages.
<h2>FORUM</h2>
</p><h3><a href="8912m/8912m.htm">EDITORIAL</a></h3><p> by Michael Floyd
</p><h3><a href="8912n/8912n.htm">LETTERS</a></h3><p> by you
</p><h3><a href="8912o/8912o.htm">SWAINE'S FLAMES</a></h3><p> by Michael Swaine
<h2>PROGRAMMER'S SERVICES</h2>
</p><h3><a href="8912p/8912p.htm">OF INTEREST </a></h3><p>compiled by Janna Custer
<HR><P>Copyright &copy; 1989, <I>Dr. Dobb's Journal</I></P></BODY></HTML>
