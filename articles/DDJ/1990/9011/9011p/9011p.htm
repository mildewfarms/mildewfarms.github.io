<HTML>
<META NAME="year" CONTENT="1990">
<HEAD>

<TITLE>NOV90: SWAINE'S FLAMES</TITLE></HEAD>
<body bgcolor="FFFFFF">
<h1>SWAINE'S FLAMES<a name="0257_0003"><a name="0257_0003"></h1><P>
<h2><a name="0257_0001"><a name="0257_0000">How To Succeed In the Window Business Without Really Trying</h2><P>
<h3>Michael Swaine</h3><P>
<a name="0257_0002"><a name="0257_0000">Software author and Windows developer Alan Cooper recently asked me to appear on a Software Entrepreneur's Forum panel whose mission was to discuss making money with Windows 3.0.  It proved impossible for me to attend, but I prepared some remarks anyway.  For what they're worth, here are my thoughts on making money with Windows 3.0.  You are welcome to disagree with them, as a whole or individually.<P>
Windows 3.0 is being marketed as a new platform.  Given that, all the new-platform truisms apply; in particular, the get-there-first truism.  The first Windows 3.0 applications will get more press -- and be judged less critically -- than will comparable later products.  Be the first.<P>
This advice may seem not only obvious but also useless, because a couple dozen Windows applications were announced six months ago at the Windows rollout.  But the get-there-first truism also seems to work on a niche-by-niche basis.  I modify my advice.  Be the first at something.<P>
For any new platform, two hot markets are developers and early adopters of new technology. Particularly for these groups, a think-globally-act-locally truism applies, if you happen to live in the San Francisco Bay Area or in the Boston area.  Consider keeping costs low by spending most of your marketing budget locally.  Check the ad rates in the regional computer publications.  Talk to the local papers.<P>
Consider the home market.  This was what IBM and a lot of others companies did, to their chagrin, in the early 80s, and they're at it again.  Maybe this time they're right.  According to the September 10 Business Week story on the home market, 3.7 million computers a year are bought to be used in the home, and 20 percent of the PS/2s sold are being used at home.<P>
Does all of this actually constitute a distinct market for home software?  Beats me.  I don't think Tandy has the answer with the recipe program that it's including with its new home machine (which, incidentally, won't run Windows).  The Business Week piece suggests that home applications aren't much different from work applications: word processing, accounting, budgeting.  But if you have a brilliant idea for a home product, you should know that IBM, Apple, Tandy, and a lot of other hardware companies are going to be pushing computers for the home very hard.  Since the early 80's snafu almost certainly had to do with ease of use, your Windows application might do very well.<P>
Don't overlook Asymetrix ToolBook as a prototyping tool.  Here's a scenario: You write a design prototype using ToolBook.  You add core functionality in DLL functions to produce a working prototype.  Now you write the real application around the same DLL functions.  At this point you actually have two products under development: A full high-performance version, and a stripped-down, slower, but not unacceptable ToolBook version.  This gives you not just a product but a (sort of) product line from (sort of) one development cycle.<P>
You evolve these two products away from one another as you develop them, adding functionality to one (removing it from the other) to differentiate them.  You put the ToolBook version out first, staking out your market niche, arousing customer and press interest, and getting cash flowing in earlier than you could if you waited to get a real application done.<P>
This buys you two legitimate occasions to talk to the press about your product because you will have two product announcements.  And when you later release the non-ToolBook professional edition, the press and users already understand the concept of the product and the basic functionality, so their attention is naturally drawn to what is different about this product: Improved performance and niftier features.<P>
When considering maintaining Windows 2.1 compatibility, keep in mind that Microsoft is marketing Windows 3.0 primarily against Windows 2.1.  The success of Windows 3.0 will, to some extent, depend on how much users disliked Windows 2.1.<P>
When considering whether or not to develop simultaneously for Windows and PM, consider the cost of delaying your Windows release against the size of the OS/2 market in the near future. In the not-so-near future, you can always port a stable Windows version to OS/2.  And consider that developing simultaneously for Windows and PM requires that you care about Microsoft's relationship with IBM, whatever that may be this week.<P>
<P>
<P>
</pre></BODY></HTML>
