<HTML>
<META NAME="year" CONTENT="1990">
<HEAD>

<TITLE>August 1990 - C PROGRAMMING</TITLE></HEAD>
<body bgcolor="FFFFFF">
<H1>August 1990 - C PROGRAMMING</H1>
<hr>
<h2>FEATURES</h2>
<h3></p><a href="9008a/9008a.htm">PORTING C PROGRAMS TO 80386 PROTECTED MODE</a></h3><p><br> by William F. Dudley Jr.
Bill shares his experiences and suggestions for porting large C programs to  80386 protected mode.
<h3></p><a href="9008b/9008b.htm">ENCAPSULATING C MEMORY ALLOCATION</a></h3><p><br> by Jim Schimandle
Encapsulating memory routines gives you control over memory allocation.   Jim presents a memory shell that does this.
<h3></p><a href="9008c/9008c.htm">AWK AS A C CODE GENERATOR</a></h3><p><br> by Wahhab Baldwin
When you need to perform tasks such as converting data from one format to  another--and generate C code in the process--AWK may be the tool for you.
<h3></p><a href="9008d/9008d.htm">IMPLEMENTING BICUBIC SPLINES</a></h3><p><br> by Raymond G. Lauzzana and Denise E. M. Penrose
Raymond and Denise mix and match C and Lisp to generate a spline function  that uses the Macintosh Toolbox to draw a smooth curve.
<h3></p><a href="9008e/9008e.htm">EXTENDING PRINTF( )</a></h3><p><br> by Jim Mischel
Here's an easy-to-use variation on printf( ) that utilizes variable  arguments so you can output formatted numbers.
<h3></p><a href="9008f/9008f.htm">PARALLEL EXTENSIONS TO C</a></h3><p><br> by Graham K. Ellis
Ken discusses concurrency functions for parallel C compilers and describes  how to build transputer-based parallel systems.
<h3></p><a href="9008g/9008g.htm">DEBUGGING MEMORY ALLOCATION ERRORS</a></h3><p><br> by Lawrence D. Spencer
Larry tackles C memory allocation using functions that serve as a  bookkeeping layer between programs.
<h3></p><a href="9008h/9008h.htm">HANDLING OS/2 ERROR CODES</a></h3><p><br> by Nico Mark
Here's how to squeeze more information out of OS/2's cryptic error  messages.
<h2>EXAMINING ROOM</h2>
<h3></p><a href="9008i/9008i.htm">OPTIMIZING WITH MICROSOFT C 6.0</a></h3><p><br> by Scott Robert Ladd
Scott examines the most recent version of Microsoft's C compiler, focusing  on global optimization, while Bruce Schatzman provides additional comments  on based pointers.
<h2>PROGRAMMER'S WORKBENCH</h2>
<h3></p><a href="9008j/9008j.htm">COLLECTIONS IN TURBO C++</a></h3><p><br> by Bruce Eckel
Collections are classes that hold a number of object types.  Bruce uses  Borland's Turbo C++ to create this class and analyzes the C++ 2.0  specification.
<h2>COLUMNS</h2>
<h3></p><a href="9008k/9008k.htm">PROGRAMMING PARADIGMS</a></h3><p><br> by Michael Swaine
What do Windows 3.0, Hypercard 2.0, and Norman Mailer 1.0 have in  common?  Michael ponders this and other questions.
<h3></p><a href="9008l/9008l.htm">C PROGRAMMING</a></h3><p><br> by Al Stevens
Al mulls over C's past and future before exploring the NetWare programming  environment.
<h3></p><a href="9008m/9008m.htm">STRUCTURED PROGRAMMING</a></h3><p><br> by Jeff Duntemann
Jeff creates a Turbo Pascal object to solve a recent data-entry problem.
<h2>DEPARTMENTS</h2>
<h3></p><a href="9008n/9008n.htm">EDITORIAL</a></h3><p><br> by Jonathan Erickson
<h3></p><a href="9008o/9008o.htm">LETTERS</a></h3><p><br> by you
<h3></p><a href="9008p/9008p.htm">SWAINE'S FLAMES</a></h3><p><br> by Michael Swaine
<h2>PROGRAMMER'S SERVICES</h2>
<h3></p><a href="9008q/9008q.htm">OF INTEREST</a></h3><p><br> compiled by Janna Custer
</pre></BODY></HTML>
