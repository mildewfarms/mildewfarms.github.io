<HTML>
<META NAME="year" CONTENT="1990">
<HEAD>

<TITLE>MAR90: EDITORIAL</TITLE></HEAD>
<body bgcolor="FFFFFF">
<h1>EDITORIAL<a name="007d_0003"><a name="007d_0003"></h1><P>
<h2><a name="007d_0001"><a name="007d_0000">Patent Letter Suits</h2><P>
<h3>Jonathan Erickson</h3><P>
<a name="007d_0002"><a name="007d_0000">Mark Nelson's article on the LZW data compression algorithm (DDJ October, 1989) sparked a forest of fires, at least in respect to patenting algorithms.  The first spark, if you recall, was a letter from Ray Gardner, pointing out that the LZW algorithm was patented by Unisys back in 1985 (see &quot;Letters,&quot; December 1989).  Mark's response answered a few questions but raised several more.<P>
About the time we published Ray's letter and Mark's reply, the U.S. Court of Appeals settled a dispute between the U.S. Patent Office and Sharp Corporation in a case that revolved around Sharp's patent application for a voice-recognition circuit.  The Patent Office had rejected Sharp's original application in part because they felt the circuit's only purpose was to execute an algorithm.  And, the Patent Office insisted, algorithms can't be patented because they are nothing more than mathematical abstractions.  Furthermore, the Patent Office felt that Sharp was trying to patent every possible means of implementing the algorithm, not just the way it was used in this particular voice-recognition circuit.<P>
As it turned out, the Court of Appeals didn't agree with the Patent Office.  The court said that an algorithm can be safeguarded, at least as how it is used to describe a physical device (like a circuit) or in terms of other functional equivalents of that algorithm.<P>
To better come to grips with this issue, I called Charles Gorenstein, the Falls Church, Virginia attorney who represented Sharp.  Early in our conversation, Mr. Gorenstein stated that &quot;a purely mathematical algorithm is probably not patentable&quot; but, he added, the specific methods of implementing an algorithm are patentable.  In other words, what is patentable is the method, not the math.  If someone developed a different circuit to execute Sharp's voice-recognition algorithm, that's fine and dandy.  And apparently that's part of the basis of the Court of Appeal's decision.<P>
Key to any patent grant is the concept of &quot;new and unobvious,&quot; an area that Mr. Gorenstein feels the Patent Office has overlooked.  Using a 1979 patent for spreadsheets as an example, he explained that just about anyone with a ledger, a pencil, and some data would fill out the rows and columns in much the same way as they would with an electronic spreadsheet.  A ledger -- and a spreadsheet -- is obvious.  He therefore questions whether the spreadsheet patent should ever have been granted.  This question of &quot;obvious&quot; raises another important issue. What may be unobvious to those in the Patent Office may very well be obvious to technically sophisticated programmers like DDJ readers.<P>
What all this leads up to is a letter I received from Bob Bramson, the Unisys patent attorney Mark mentioned in his response.  I won't give a blow-by-blow account of the letter, you can read it for yourself on page 8, the first entry in this month's &quot;Letters&quot; section.<P>
I will say that the letter is a politely worded clarification of Unisys's patent on the LZW algorithm, with only a slight sense of the steel behind it, at least in reference to Unisys's intention of going after infringers.<P>
I'm sorry, but I still don't understand.  It seems that if, as I think the court ruled, you can use Sharp's algorithm to design a different voice-recognition circuit, you should be able to use Sharp's (or Unisys's or anyone else's) algorithm for an entirely different purpose than it is used in the original patent.  That is, you should be able to use the LZW algorithm in a program that has nothing to do with telecommunications or modems.  This assumes, of course, that Unisys's patent is for the modem and the algorithm as it helps define the modem.  I agree with Mark.  Unisys will indeed be very busy tracking down programmers who have implemented some form of the LZW algorithm.<P>
I'm all for any company, large or small, taking steps to protect R&amp;D investments that give it a competitive edge.  But it's distasteful for large companies to threaten smaller outfits with litigation that can't be won in the courts, but can be outlasted by a large company with the resources to do so.  Now I'm not in any way suggesting this is Unisys's ploy, nor does Mr. Bramson even hint at this, it's far too often the way the world works.<P>
In his response to the letter that started all of this, Mark suggested that software developers who intend on using patented algorithms (like LZW) in commercial products get some legal advice before proceeding.  Mr. Gorenstein seconded this, even to the point of suggesting that programmers do a patent search prior to implementation.  While this advice is sound and safe, it is also lengthy and expensive, luxuries that software developers usually can't enjoy.<P>
Today's mail didn't bring a letter from a lawyer, but it did include a letter from Dan Abelow, a Newton, Massachusetts reader who specializes in analyzing emerging technologies, and who, coincidentally, proposes to write an article on &quot;Enabling Patents.&quot;  He calls the topic a &quot;blossoming controversy [that] has failed to germinate positive suggestions&quot; and, from what I can tell, he's making a case that software patents may actually encourage innovation and invention.  I don't know that I agree with him, but I'm curious enough to give him a call and find out what he has in mind.<P>
<P>
<P>
</pre></BODY></HTML>
