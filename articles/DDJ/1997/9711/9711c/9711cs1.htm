<html>
<META NAME="year" CONTENT="1997">
<head>
<title>Dr. Dobb's Journal November 1997: Sheng's Optimization Trick</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<p><i>Dr. Dobb's Journal</i> November 1997 </p>

<h1>Sheng's Optimization Trick</h1>
</h1>

<HR>

<p>Accessing an object's field via the JNI typically requires a sequence of four API calls. In my first attempt to access the array of integers that hold the value of a <i>mInt</i>, the last call, <i>GetIntArrayElements()</i>, failed. After some debugging, I knew the first three calls were succeeding, so why was <i>GetIntArrayElements()</i> failing with a "JNI scalar array element type mismatch" error? Sun's Sheng Liang answered the question, showing me an error in the third call after all. That call, <i>GetObjectField()</i>, requires the object's handle as its second parameter, and I was accidentally passing a class handle. Instead of detecting that an incorrect type of handle was being passed, the JVM used it and returned a wildly wrong value, which I used as input to the fourth call, making it fail. </p>

<p>While JNI is an improvement over NMI, it still has some problems: It doesn't typecheck handles on JNI calls, so the JVM is prone to the same kind of API errors that plagued Windows programs in the past. </p>

<p>The performance trick Sheng showed me is simple: You can do the first two calls of this infamous four-call sequence once (when the native library is loaded), and cache the output of the second call, which is the <i>fieldID</i> of the field in question (see the <i>cacheFID()</i> call in <a href="9711c.htm#l1">Listing One</A>). Then, perform calls three and four of the sequence in each method. (You really only need one call in <i>cacheFID()</i>: A static code member gets the class's handle as a parameter, so you don't need an explicit call to retrieve it.) You can safely cache and reuse this value because the <i>fieldID</i> for a given class and field never changes for any instance of that class. The second call in the sequence, <i>GetFieldID()</i>, is expensive, so caching it more than doubles the performance of the <i>Add()</i> method from 25,000 to 55,555 operations per second on a 133-MHz Pentium under Windows 95 using the JVM from Sun's JDK 1.1.1. If you want to run your own tests, you can run AddTime.java (also available electronically), which compares calling the methods <i>Add()</i> and <i>testAdd()</i>. <i>testAdd()</i> is simply a noncached version of <i>Add()</i>.</p>

<p> -- L.G.</p>
<P>
<a href="9711c.htm#rs1">Back to Article</A>
</P>
<HR><I>Copyright &copy; 1997, Dr. Dobb's Journal</I><BR>

</BODY>
</html>
