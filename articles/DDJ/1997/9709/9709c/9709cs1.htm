<html>
<META NAME="year" CONTENT="1997">
<head>
<title>Dr. Dobb's Journal September 1997: Creating a Custom Tree Control Using the SDK</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<p><i>Dr. Dobb's Journal</i> September 1997 </p>

<h1>Creating a Custom Tree Control Using the SDK</h1>
</h1>
<HR>
<p>The techniques presented here can be applied to an SDK custom control as well. When using the SDK without MFC, however, some special considerations will apply.</p>

<p>Unlike the MFC approach, each SDK custom control will need to be explicitly subclassed from an existing tree-view control. An in-depth discussion on window subclassing is beyond the scope of this article. For more information on subclassing, however, see "Windows 95 Subclassing and Superclassing," by Jeffrey Richter and Jonathan Locke (<i>Dr. Dobb's Sourcebook</i>, March/April 1996).</p>

<p>Your subclassed window procedure will need to respond to the WM_ PAINT and WM_NOTIFY messages in much the same way that the <i>CCustomTreeCtrl </i>does. Much of the code will port fairly easily, but without MFC, you will not have a simple way of storing the strings for each item.</p>

<p>If you are not using C++, you will probably want to send a WM_DRAWITEM message to the window's parent for each item that needs to be drawn. This means that you need to include the information for redrawing the item in a DRAWITEMSTRUCT. This way, your subclassed control will behave like other owner-draw-capable controls.</p>

<p> -- J.C.</p>
<P>
<a href="9709c.htm#rs1">Back to Article</A>
</P>
<HR><I>Copyright &copy; 1997, Dr. Dobb's Journal</I><BR>

</BODY>
</html>
