<html>
<META NAME="year" CONTENT="1997">
<head>
<title>Dr. Dobb's Journal June 1997: Editorial</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<h1>Time Traveling</h1>

<p><i>Dr. Dobb's Journal</i> June 1997
</p>
<HR>
<p>At the very moment Novonyx became more than a gleam in someone's eye, the cry "Ahhh! Been there, done that!" probably echoed across the Wasatch Mountains. Novonyx, you recall, is the joint Novell/Netscape effort to port Netscape's server software to Novell's networking platform. What rings familiar about Novonyx is its similarity to an early '90s secret deal between Novell and Apple to port the Macintosh System 7 operating system to 80386-based PCs. </p>

<p>The timing was right for "Startrek," as the Novell/Apple deal was dubbed. Microsoft's Windows3 wasn't yet entrenched, and Apple couldn't crank out Macs fast enough. By "bolding going where no Macs have gone before," the duo hoped to cut Microsoft off at the pass (if not at the knees). Both companies fed the Startrek kitty, with Novell contributing its PC expertise and Apple ponying up the holiest of grails -- the source code to System 7. All in all, between 15 and 20 engineers were working on the project and, within a few months, System 7 was up and running "flawlessly" (in the words of one those engineers) on the 386. Then, just before the project was formally announced and product plans revealed, Apple exhibited the kind of farsightedness that has made it the company it is today -- it killed project Startrek. Why? Because Sculley and company were worried that porting the Macintosh OS/UI to the PC would hurt Apple hardware sales.</p>

<p>As with Startrek, the Novell half of Novonyx will provide platform expertise, while Netscape will deliver its source code. Unlike the Startrek project, however, Novonyx will be a privately held third-party company funded by Netscape/Novell, perhaps providing some shelter from capricious management whims. The end result, due out this fall, will be the "Netscape Enterprise Server and Netscape FastTrack Server for IntranetWare." (IntranetWare is Novell's NetWare 4 with TCP/IP and related support; FastTrack Server is Netscape's web server software.)</p>

<p>Novell's participation aside, the real similarity between the two projects is the shadow lurking in the wings -- Microsoft. Microsoft has proven it can capitalize on the misfortune or poor decisions of others. From CP/M to Startrek, the Redmond heavyweight can be counted on to come in with a flurry of shots to the chops when competitors drop their guard.</p>

<p>Novonyx will need a knockout punch to succeed. Since it will only get one shot at it, however, the company had better make every line of code count. </p>

<p>The shifting sands of software development were evident at this spring's Software Development '97 conference. Putting Java overkill aside, what was one of the biggest differences over past years? Women. Seriously.</p>

<p>Although final statistics weren't available at this writing, informal surveys indicated that more female developers than ever before attended this year's conference, leading you to think that more women view software development as a viable career choice. In one session, women made up approximately half of the attendees who raised their hands when asked if they were full-time coders.</p>

<p>From a nongender perspective, SD '97 brought other shifts to light as well. Every year, for instance, attendees who preregister are asked to rank in order of importance the topics they are most interested in learning about. The responses at SD '96 were generally in line with past years: 1. C++; 2. Windows; 3. User Interfaces; 4. Database Tools.</p>

<p>When asked the same question this year, however, SD '97 attendees broke the mold with: 1. C++; 2. Java; 3. ActiveX; 4. Windows. What's particularly interesting is that it took Windows four years to climb into the number two spot it briefly enjoyed in 1996. Java, however, jumped into the slot in its first year. </p>

<p>Even though Michael Swaine and his cousin Corbett mull over a mess of acronyms (MOA?) in this month's "Swaine's Flames," we're really not trying to confuse matters when it comes to CLiP (or is that "CLIPS"?). As outhouse luck would have it, two articles in this issue --"Literate Programming and Code Reuse," by Sverre Hendseth, and "Symbolic Integration using CLIPS," by John Swartz -- involve a system called CLIPS (or is that "CLiP"?). They're not the same. </p>

<p>The CLIPS John discusses in "Algorithm Alley" is a NASA-developed, C-based language that supports rules, object orientation, and procedural programming. CLiP as described by Sverre, on the other hand, is a literate-programming system (developed by E.W. van Ammers and M.R. Kramer) that generates "source" files from ASCII documents that contain program code and documentation.</p>

<p>Before confusion arises, we thought it prudent to clip it in the bud.</p>

<p>--Jonathan Erickson</p>


<HR><I>Copyright &copy; 1997, Dr. Dobb's Journal</I><BR>

</BODY>
</html>
