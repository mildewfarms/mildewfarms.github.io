<html>
<META NAME="year" CONTENT="1997">
<head>
<title>Dr. Dobb's Sourcebook July/August 1997: Software and the Law</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<h1>Copyrighting Software</h1>

<p><i>Dr. Dobb's Sourcebook</i> July/August 1997
</p>
<h3>By Marc E. Brown</h3>

<I>Marc is a patent attorney and partner  of the intellectual-property law firm of Oppenheimer, Poms, &amp; Smith in Los Angeles, CA. Marc specializes in computer law and can be contacted at MBrown@owdlaw.com.</I>

<hr>

<p>Copyright continues to be the most prevalent form of protection for software. It guards against the unauthorized duplication of any significant part of code. It also sometimes prohibits the unauthorized duplication of higher-level elements in the software, such as screens, interfaces, data structures, and algorithms.</p>

<p>The potential reach of copyright law is well-illustrated by Network Solutions Inc. (NSI) and its recent efforts to bar reform of the domain-name registration process. In response to a recommendation by the Internet Ad Hoc Committee to allow other companies to register domain names, NSI claimed that its registry database -- a database that the other companies would also have to utilize -- could not be copied because it was protected by copyright law.</p>

<h3>Register Promptly</h3>

<p>Technically, software is automatically protected by copyright law as soon as it is written. Registration is not required. On the other hand, there are significant benefits to promptly registering the copyright with the U.S. Copyright Office.</p>

<p>First, a claim for infringement cannot be pursued until the copyright is registered. A delay in registering can sometimes be crippling, because software knockoffs are often distributed quickly. To protect a business from infringement, the normal legal course is to immediately seek a temporary restraining order from a court. But such a restraining order cannot be obtained until the copyright is registered. Widespread distribution of the infringing software could occur before the registration is obtained.</p>

<p>Second, prompt registration of the copyright provides several important remedies in the event of a lawsuit. One is the right to recover your attorney fees if you win. Another is the right to "statutory damages" of up to $100,000, even without proving the actual loss of any sales as a consequence of the copyright infringement. To qualify for these additional remedies, the copyright must be registered within three months of the time the software is first distributed to the public.</p>

<h3>The Application Must be Completed Correctly</h3>

<p>To be effective, the application for registration must be completed properly. If significant errors are made, the court might not enforce the copyright.</p>

<p>A shockwave was sent throughout the software community last year when a district court refused to enforce a copyright simply because the application for registration contained errors that seemed technical at worst. The case was <i>Fonar Corp. v. Domenick</i> in the Southern District of New York. </p>

<p>Fonar produced and sold magnetic resonance imaging systems. Fonar claimed that the copyright on its maintenance software had been infringed by Domenick and others.</p>

<p>Fonar's case was thrown out of court because its application for copyright did not identify the software as a "collection," even though it contained several modules. Fonar had also failed to submit extracts of source code from each of the modules within its software. The district court was also troubled because the application failed to describe the software in a manner sufficient to identify its copyrightable elements.</p>

<p>The Second Circuit Court of Appeals reversed this dismissal in the beginning of 1997. The appellate court held that these were not deficiencies, nor did they render the copyright unenforceable. Although Fonar was then able to proceed with its case, the problems Fonar encountered demonstrate the importance of completing the copyright application form carefully.</p>

<p>Completing a copyright application is not a time-consuming task, nor one which is beyond the skill of most clerical staff. The key is to follow three basic steps. </p>

<h3>Step 1: Get the Correct Applications Form</h3>

<p>There are several forms for registering copyrights with the U.S. Copyright Office. For software, use "Form TX". The <a href="http://lcweb.loc.gov/copyright/">U.S. Copyright Office</a> provides this form as a .PDF file for free. You can also get it by writing to the Copyright Office.</p>

<h3>Step 2: Complete theForm -- Carefully</h3>

<p>This is the tricky part. Form TX was designed for books. It asks questions about "authors," "publication," and "compilations," -- language not commonly used when talking about software.</p>

<p>On the other hand, the form is broken down into separately numbered (and lettered) sections. Match the instructions below with the sections on Form TX and you should stay on course.</p>

<p><b>Section 1. Title of Work.</b> Write down the exact name you are using (or plan to use) in marketing the software.</p>

<p><b>Previous or Alternate Titles.</b> Again, put down the exact name (or names). This information is particularly important if an earlier version of the software was previously registered under a different name.</p>

<p><b>Publication as a Contribution.</b> Most software programs are not "published as a contribution." To fall within this class, the software for which registration is sought must be part of a larger copyrightable work. One example is when the source code is published in a magazine, the magazine being the larger work. Another is when the program is part of a collection sold as a set.</p>

<p><b>Section 2. Author Identification.</b> The "author" is usually the name of the individual(s) who wrote the software. If the software was a "work made for hire," on the other hand, the employer is considered the "author" and the employer's name should be listed instead. (If the software was a "work made for hire," the dates for birth and death should be left blank.)</p>

<p>Mistakes are often made in determining whether the software is a "work made for hire." Simply because you were paid for your effort does not make the software a "work made for hire." Rather, you must have written the software as an employee of a company as a normal part of your job. Software written by independent contractors or outside consultants is rarely a "work made for hire," no matter what it is called in the development contract.</p>

<p>Another portion of this section asks whether the author's contribution to the work was "pseudonymous." It means an author who is known by a fictitious name. </p>

<p><b>Section 3a. Year of Completion. </b>This is the year in which the coding of the program was completed, not the year in which it was conceived. Focus on the version for which registration is sought, not an earlier version.</p>

<p><b>3b. First Publication.</b> This is another one of the confusing questions on the form. People do not think of software as having been "published." Fill in the date your software was first distributed to the public. This is the same date which should be used in the copyright notice. It does not matter whether the distribution was because of a sale, license, or for any other reason. If the software was first distributed in the United States, fill in United States as the nation.</p>

<p><b>Section 4. Copyright Claimants.</b> The "copyright claimant" is the owner of the legal rights in the copyright. It usually will not be the same as the "author" if there has been a transfer of ownership or if the author was an independent contractor or consultant. Even when the "claimant" is the "author," the name and address should be provided. If there are several owners of the copyright (for example, when the software was written by several programmers and is owned by them as a group), each of their names and addresses should be included.</p>

<p><b>Section 5. Prior Registrations.</b> This section should be completed only if an earlier version of the work was registered. The same version of the work cannot be registered twice.</p>

<p><b>Section 6a. Pre-existing Material/ Compilation.</b> A variety of circumstances justify a statement in this section. Code segments that were written by another programmer should be identified, along with prior versions of the software. Other versions of the software written in other languages or for other platforms should also be listed.</p>

<p><b>6b. Added Material.</b> This section should be completed only when information under subsection 6a has been provided. Describe the changes and enhancements broadly so that no additional material is left out.</p>

<h3>Step 3: Filing and Deposit</h3>

<p>The completed application should be mailed to the Registrar of Copyrights, Library of Congress, Washington, DC 20559-6000, accompanied by a check or money order, made payable to the "Registrar of Copyrights," in the amount of $20.00, together with "deposit material." The tricky part is the "deposit material."</p>

<p>The easiest way to satisfy the deposit requirement is to include a print-out (or microfilm) of the first and last 25 pages of source code, together with the page containing the copyright notice. (If you don't have a notice, put one in! It is a "(c)," followed by the year of the first public distribution, followed by the name of the owner.) If the application is being filed for an upgraded version of previously registered software, and if the enhancements do not appear within the first and last 25 pages, send a copy of 50 pages of source code that are representative of the enhancements, together with a copy of the page bearing the copyright notice, and an explanatory letter. If the software is distributed with a manual, include a copy of the manual. Also include printouts of all significant screens.</p>

<p>These submissions are available to the public to inspect. In some cases, submitting this material could sacrifice the confidentiality of the software and cause the loss of valuable trade-secret rights to it. There are several options to minimize this potential problem.</p>

<p>The Copyright Office will allow up to half of the material to be blocked out from the first and last 25 pages. Or it will accept just the first and last 10 pages if there are no blackouts. Also permitted is the first and last 25 pages of object code, plus any 10 or more consecutive pages of source code, with no blackouts. If any of these approaches are followed, the application should be accompanied by a cover letter explaining that the software contains trade secrets and that one of these alternate forms of deposit is being provided to protect those secrets.</p>

<p>Most software is composed of several modules. This causes some confusion in connection with the requirement for depositing "the" first and last 25 pages of source code. I usually recommend that the deposit include a directory listing all of the files in the software package. If the software only contains a few modules, it would be safest to include the first and last 25 pages from each module. But if the software contains numerous modules, provide the first and last 25 pages from the most-primary module in the system, together with a letter explaining that only source code from the primary module is being submitted. </p>

<h3>Conclusion</h3>

<p>It is not necessary to register every upgrade. Invariably, each upgrade includes large portions of source code from the earlier-registered version. Hence, unauthorized copying of the upgrade will also constitute unauthorized copying of the earlier version.</p>

<p>When substantial enhancements are made, on the other hand, new copyright applications should be filed. Otherwise, the enhancements will not be protected.</p>

<p>The first application is usually the most difficult. Complete it with care, then make a member of your staff responsible for automatically registering all significant upgrades.</p>

<p><b>DDJ</b></p>


</body>
</html>
