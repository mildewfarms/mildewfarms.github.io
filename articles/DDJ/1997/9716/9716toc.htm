<html>
<META NAME="year" CONTENT="1997">
<head>
<title>Dr. Dobb's Sourcebook July/August 1997</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<h1><i>Dr. Dobb's Sourcebook</i> July/August 1997 -- Database Engines</h1>
<hr>
<h2>FEATURES</h2>

<h3><a href="9716a/9716a.htm">Java Native Methods and Legacy Databases </a></h3>

<p><i>by Yoshiki Sakai, Mark A. Schmidt, and Marco Balini</i></p>

<p>Native-method libraries extend Java into new areas of support not yet developed in pure Java. In this article, our authors use a native-method library with Java to access the FairCom database engine. </p>

<h3><a href="9716b/9716b.htm">Using Velocis Extension Modules</a></h3>

<p><i>by Walter Carlisle</i></p>

<p>When he was worried about database performance, Walter turned to Raima's Velocis Extension Module, which let him define custom APIs for interfacing to a database. Since the code in the Extension Module runs within the Velocis server process and has direct access to the database, he could move large blocks of records to and from the database in a single call. </p>

<h3><a href="9716c/9716c.htm">Titanium and the NTC Ship Manager Application</a></h3>

<p><i>by Evan Michaelides</i></p>

<p>NTC Ship Manager software, which Evan helped develop, is used by ship owners and managers to administer operations, improve communications, strengthen controls, and cut costs. And at the heart of the highly database-intensive transaction-processing application is MDBS's Titanium database engine.</p>

<h3><a href="9716d/9716d.htm">Portable Custom Time Structures</a></h3>

<p><i>by Donald Bryson </i></p>

<p>In developing the TimeClock time and attendance application, Don found that the "standard" time functions weren't so standard. His replacements were both portable and better suited to his needs.</p>

<h3><a href="9716e/9716e.htm">In-Memory Tables for Delphi</a></h3>

<p><i>by Alexandre M. Gimenez</i></p>

<p>In-Memory Tables are regions in memory that behave much like ordinary database tables. Alexandre presents a Delphi component  to create a bridge for Delphi and Borland Database Engine functions that access in-memory tables.</p>

<h3><a href="9716f/9716f.htm">The VSData Database Engine</a></h3>

<p><i>by Michiel de Bruijn</i></p>

<p>VideoSoft's VSData database engine is truly lightweight -- the entire engine is implemented as a single ActiveX control that doesn't rely on any proprietary support DLLs. Michiel uses the engine and Visual Basic to build a catalog application for his collection of MIDI files. </p>

<h2>COLUMNS</h2>

<h3><a href="9716g/9716g.htm">20/20 </a></h3>

<p><i>by Al Williams</i></p>

<p>Al creates a compressed database control that uses Visual Basic for ActiveX and database management, and a C++ DLL for data compression. </p>

<h3><a href="9716h/9716h.htm">DTACK Revisited</a></h3>

<p><i>by Hal W. Hardenbergh</i></p>

<p>If Intel is hitting a performance wall with its new Pentium designs, then competitors might be able to catch up. Hal examines what this means for users, programmers, and CPU fabricators.</p>

<h3><a href="9716i/9716i.htm">The Software Engineer</a></h3>

<p><i>by Allen Holub</i></p>

<p>Allen reviews some recommended reading.</p>

<h3><a href="9716j/9716j.htm">Software and the Law</a></h3>

<p><i>by Marc E. Brown</i></p>

<p>Step-by-step, Marc takes you through the process of copyrighting software.</p>

<h3><a href="9716k/9716k.htm">Database Developer</a></h3>

<p><i>by Ken North</i></p>

<p>Microsoft developed OLE DB to be a component-level data-access API that cooperates with transactions and other enterprise APIs built on the Component Object Model. </p>

<h3><a href="9716l/9716l.htm">Web Database Developer</a></h3>

<p><i>by William Robert Stanek</i></p>

<p>In the second installment of this two-part column examining Netscape's LiveWire web-based database management software, William focuses on the dynamic query engine.</p>

<h3><a href="9716m/9716m.htm">Editorial</a></h3>

<p><i>by Tim Kientzle</i></p>


</body>
</html>
