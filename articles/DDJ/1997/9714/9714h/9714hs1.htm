<html>
<META NAME="year" CONTENT="1997">
<head>
<title>Dr. Dobb's Sourcebook March/April 1997: About Mapped Files</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<p><i>Dr. Dobb's Sourcebook</i> March/April 1997 </p>

<h1>About Mapped Files</h1>
</h1>


<hr>
<p>Win32 systems support an unusual method for accessing files that works well for this program: memory-mapped files. The idea is simple: Place a file in memory so that you can access it with an ordinary pointer. So? Why not just allocate a buffer and read the file into it? Mapped files are better. Instead of reading the entire file, the operating system swaps portions of the files between memory and the disk as you access the memory. This can make the process more efficient.</p>

<p>To create a mapped file, you need to use three calls:</p>

<ul>
  <li><i>CreateFile</i>, which opens the file for access (this call should be named <i>CreateFileHandle</i> since it doesn't necessarily create a new file).
  <li><i>CreateFileMapping</i>, which creates a file-mapping object. It requires the file handle from <i>CreateFile</i>.
  <li><i>MapViewOfFile</i>, which returns a pointer where the file appears in your address space. It requires the file-mapping object from <i>CreateFileMapping</i>.
<p></p>
</ul>

<p>When you no longer need the file, you can call <i>UnmapViewOfFile</i> and use <i>CloseHandle</i> to close the file and file-mapping handles. In between the calls to <i>MapViewOfFile</i> and <i>UnmapViewOfFile,</i> you can access the file as though it were in memory. As a side effect, multiple processes can share file mappings, making them useful for creating shared memory.</p>

<p>
Since none of these calls are available directly in Optima, you'll need to apply the methods in the text to use them. See Listing One for an example of this.
</p>
<p>
 -- A.W.
</p>
<P>
<a href="9714h.htm#rs1">Back to Article</A>
</P>
</body>
</html>
