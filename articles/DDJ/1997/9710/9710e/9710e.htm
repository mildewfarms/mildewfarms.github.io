<html>
<META NAME="year" CONTENT="1997">
<head>
<title>Dr. Dobb's Journal October 1997: The Block Cipher Square Algorithm</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<h1>The Block Cipher Square Algorithm</h1>

<p><i>Dr. Dobb's Journal</i> October 1997
</p>
<h2>A fast block cipher that uses a 128-bit key </h2>

<h3>By Joan Daemen, Lars R. Knudsen, and Vincent Rijmen</h3>

<I>Joan is an employee of Banksys, Brussels. He can be contacted at Daemen.J@banksys.be. Lars and Vincent are with the COSIC research group of the Department of Electrical Engineering of the Katholieke Universiteit Leuven, Belgium. They can be contacted at lars.knudsen@esat.kuleuven.ac.be and vincent.rijmen@esat.kuleuven.ac.be, respectively. </I>

<hr>
Sidebar:<a name="rs1"></A> <a href="9710es1.htm"><I>The Galois Field GF(2<SUP>8</SUP>)</I></A>
<HR>
<p>Square is a new fast block cipher that encrypts data in blocks of 128 bits, using a 128-bit key. Most cipher designs are optimized for one specific implementation platform. Square's structure (that is, its building blocks and their interaction) has been carefully chosen to allow very efficient implementations on a wide range of processors. This versatility is achieved through the use of operations in the finite field GF(2<sup>8</sup>), which is a new approach in block cipher design. A reference implementation was written in C by Paulo Barreto (pbarreto@uninet.com.br) and runs at 2.63 MB on a 100 Mhz Pentium (available electronically; see "Availability," page 3). By optimizing in assembler, this speed was doubled.</p>

<h3>Structure</h3>

<p>Square is an iterated, but not a Feistel, cipher. Instead, every round acts upon all 16 bytes of its the input. One round of Square consists of four different operations. These operations can be efficiently combined in a single set of table lookups and XOR operations. The round operations are easiest to visualize if you think of the 16 bytes as being arranged in a 4&times;4 array; see <a name="rf1"><a href="9710ef1.htm">Figure 1</A>. An intermediate value <i>a </i>can then be represented by the 16 bytes <i>a<sub>i,j</i></sub>,0&lt;=<i>i,j</i>&lt; 4. The four operations are:</p>

<ul>
<li>A linear transformation that operates separately on the four rows of four bytes each. <img src="theta12.gif" alt="[theta]" width="4" height="9"> is determined by four coefficients <i>c<sub>j</i></sub>,0&lt;=<i>j</i>&lt;4. <i>b</i>=<img src="theta12.gif" alt="[theta]" width="4" height="9">(<i>a</i>) corresponds to 
<BLOCKQUOTE><img src="9710eq1.gif" alt="[equation]" width="231" height="46"></BLOCKQUOTE>

	In this formula, additions and multiplications are performed in the Galois field GF(2<sup>8</sup>); see the accompanying text box entitled "The Galois Field GF(2<sup>8</sup>)."



<li>A nonlinear transformation <img src="gamma12.gif" alt="[gamma]" width="5" height="9"> that uses one invertible 8-bit S-box. Each of the 16 bytes is transformed independently by the S-box.  
<li>A byte permutation <img src="pi12.gif" alt="[pi]" width="6" height="6"> that rearranges the bytes by interchanging rows and columns (that is, it transposes the array).
  <li>	Key addition. Exclusive-Or with the round key <i>k<sup>t</i></sup> is denoted <img src="sigma12.gif" alt="[sigma]" width="8" height="7">[<i>k<sup>t</i></sup>] (Exclusive-or corresponds to addition in the field GF(2<sup>8</sup>)). 
  <li>The round operation is denoted <img src="rho12.gif" alt="[rho]" width="6" height="9">[<i>k<sup>t</i></sup>] and defined as
<BLOCKQUOTE> <img src="9710eq2.gif" alt="[equation]" width="121" height="17">
</BLOCKQUOTE>  Square is defined as eight rounds preceded by an extra key addition and by <i>q</i><sup>-1</sup>: Square[<i>k</i>]=
<BLOCKQUOTE><img src="9710eq3.gif" alt="[equation]" width="354" height="16">
</BLOCKQUOTE></ul>

<h3>Cryptanalysis</h3>

</blockquote><p>Square was designed following the Wide Trail Design Strategy (see "Cipher and Hash Function Design Strategies based on Linear and Differential Cryptanalysis," by Joan Daemen, doctoral dissertation, March 1995, K.U. Leuven), which separates the functionality of the block cipher round operation in separate layers -- the nonlinear substitution, linear diffusion layer, and key addition. Strict criteria are imposed on each layer to build ciphers that resist linear and differential cryptanalysis.</p>

<p>For a description of the basic principles of linear and differential cryptanalysis, refer to "Differential and Linear Cryptanalysis," by Bruce Schneier (<i>DDJ</i>, January 1996). In short, differential cryptanalysis works by applying small changes to the input of the algorithm and predicting the resulting differences at various intermediate stages of the algorithm. Resistance against differential cryptanalysis can be improved by ensuring that small differences at the input cause large differences at the output (and intermediate) values. In Square, this diffusion of differences is ensured by the two linear transformations: <img src="theta12.gif" alt="[theta]" width="4" height="9"> and <img src="pi12.gif" alt="[pi]" width="6" height="6">.</p>

<p><i>q</i> takes care of the intrarow diffusion. If one byte of a row at the input is different, all four bytes of this row in the output are different. For example, if <i>n</i> bytes of a row at the input are different (1&lt;=<i>n</i>&lt;=4), at least 5-<i>n</i> output bytes of this row are different. </p>

<p><img src="pi12.gif" alt="[pi]" width="6" height="6"> produces interrow diffusion. After <img src="pi12.gif" alt="[pi]" width="6" height="6">, the four bytes of a row are spread over the four different rows.</p>

<p>Together, <img src="theta12.gif" alt="[theta]" width="4" height="9"> and <img src="pi12.gif" alt="[pi]" width="6" height="6"> cause a very quick spread of differences; see <a name="rf2"><a href="9710ef2.htm">Figure 2</A>. Suppose two bytes of the same row at the input of the first round are different, then after <img src="theta12.gif" alt="[theta]" width="4" height="9">, at least three bytes of this row are different. <img src="rho12.gif" alt="[rho]" width="6" height="9"> distributes these bytes to three different rows at the input of the next round. Then 3&times;4 of the output bytes of <img src="theta12.gif" alt="[theta]" width="4" height="9"> are different. The differences are distributed by <img src="rho12.gif" alt="[rho]" width="6" height="9"> over the four rows, and so on.</p>

<p>An immediate consequence of the mathematical structure of Square is that the resistance against linear cryptanalysis can be treated in an analogous way. Square is resistant to linear and differential cryptanalysis after six of its eight rounds.</p>

<p>There exists, however, a dedicated attack that breaks six rounds of Square (see our paper "The Block Cipher Square," in <i>Fast Software Encryption</i>, E. Biham, editor, Springer-Verlag 1995). Since Square has eight rounds, this dedicated attack poses no problems.</p>

<h3>Implementations</h3>

<p>To illustrate how Square can be used, we have written a smart card application for the Motorola M68HC05 microcontroller. (Smart cards are becoming important as a platform for implementing cryptography and security.) The machine code occupies 547 bytes of ROM and needs 36 bytes of RAM. One execution of Square (including the key schedule) takes about 7500 cycles. This corresponds to less than 2 milliseconds with a 4-MHz clock. In comparison, a typical DES implementation occupies about 1 KB of ROM. One DES operation encrypts only 64 bits and needs about 16,000 cycles.</p>

<p>Writing out the consecutive transformations of the cipher for 32-bit processors, the succession of steps 

<BLOCKQUOTE><img src="9710eq4.gif" alt="[equation]" width="237" height="14"> 
</BLOCKQUOTE>
occurs seven times. These transformations can be combined into a single set of table lookups. An intermediate value of the text can be represented by four 32-bit words, each containing a row [<i>a<sub>i</i></sub>]. Its transpose is denoted by [<i>a<sub>i</i></sub>]<sup><i>T</i></sup>. For 

<BLOCKQUOTE><img src="9710eq5.gif" alt="[equation]" width="111" height="19"> 
</BLOCKQUOTE>
we have <a name="rf3"><a href="9710ef3.htm">Figure 3</A>(a). We define the tables <i>M</i> and <i>T</i> as <a href="9710ef3.htm">Figure 3</A>(b). <i>T</i> and <i>M</i> have 256 entries of four bytes each. The table <i>M</i> implements the multiplications in GF(2<sup>8</sup>). <i>T</i> combines the nonlinear substitution with the multiplications. Define rotr<i>j</i>([<i>a<sub>i</i></sub>]) as the rotation of the row [<i>a<sub>i</i></sub>] with <i>j</i> bytes to the right. This yields <a href="9710ef3.htm">Figure 3</A>(c). We conclude that 

<BLOCKQUOTE><img src="9710eq6.gif" alt="[equation]" width="99" height="17"> 
</BLOCKQUOTE>
can be done with 16 table lookups, 12 rotations, and 16 XORs of 32-bit words. This implementation needs the table <i>T</i>, with 256 entries of four bytes -- 1 KB in total.</p>

<h3>Further Reading</h3>

<p>More details about Square are available in our paper "The Block Cipher Square," which has been published in <i>Fast Software Encryption </i>(E. Biham, editor, Springer-Verlag 1995) and at http://www .esat.kuleuven.ac.be/rijmen/square/.</p>

<p><b>DDJ</b></p>

<HR><I>Copyright &copy; 1997, Dr. Dobb's Journal</I><BR>

</BODY>
</html>
