<html>
<META NAME="year" CONTENT="1997">
<head>
<title>Dr. Dobb's Sourcebook May/June 1997: DataBlade Technology for Web Development</title>
</head>

<body bgcolor="FFFFFF">
<!--Copyright &#169; Dr. Dobb's Journal-->
<p><i>Dr. Dobb's Sourcebook</i> May/June 1997 </p>

<h1>D-tree Indexing</h1>
<hr>

<p>In a D-tree index, each entry points to multiple tuples in the table. For example, if an index is created like <a name="rf2"><a href="9715df2.htm">Figure 2</A>(a), and the table is populated as in <a href="9715df2.htm">Figure 2</A>(b), then the D-tree will contain the word list in <a href="9715df2.htm">Figure 2</A>(c) with the exception that case doesn't count.</p>

<p>The references from the index to the table tuples would, assuming the tuples are numbered 1 through 3, look like <a name="rf3"><a href="9715df3.htm">Figure 3</A>. This list is represented as an ordered list, but in reality, it would be implemented as a B-tree.</p>

<p>A multiword input search string requires an index scan for each word. Since this is a B-tree, we have a worst case performance of <i>m.log(n)</i>, where <i>m</i> is the number of words and <i>n</i> is the total number of words indexed. The value of <i>n</i> is greater than the tuple count but less than the number of words in all the documents. In the above example the tuple count is 3, there are 16 words in total and the index containing just 10 entries.</p>

<p>Thanks to Paul Brown for submitting the original tech note on D-trees to the Informix Knowledgebase.</p>

<p> -- C.T.</p>
<P>
<a href="9715d.htm#rs1">Back to Article</A>
</P>

</body>
</html>
