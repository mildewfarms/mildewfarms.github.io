<html><head><title>Jul02: Algorithm Alley</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h1>Prime Numbers</h1><p><i>Dr. Dobb's Journal</i> July 2002</p><h3>By Peter Smith</h3><I>Peter invented the LUC public-key cryptosystem. He can be contacted at <a href="mailto:lucent52@hotmail.com">lucent52@hotmail.com</a>.</I><hr><p>Some problems have been around for a while, and it seems their solutions have been as well &#151; waiting alongside in hiding. One of the oldest problems, for instance, is that of finding an efficient way of testing whether a whole number is a prime. </p><p>Prime numbers are those that can be divided only by themselves and 1. For example, 2003, next year's year number, is a prime number, since only 1 and 2003 go into it, while this year's (2002) is divisible by 2, 7, 11, and 13, since 2x7x11x13=2002.</p><DDJADVERTISEMENT INLINE><p>The solution to the problem has been tantalizingly close for many years. It requires no more theory than that developed two centuries ago, despite the heavy mathematical artillery that has been aimed at it in recent years. But first, some background to the problem.</p><h3>Background</h3><p>An intuitive way of testing whether a number is prime is to try to divide it by the numbers less than it. This can be made faster by dividing only those less than the square root of the number being tested, and even faster if you use only primes as divisors. So, for 2003, you need to try the first 13 primes to ensure you're dealing with a prime. Unfortunately, this method quickly runs out of steam once the numbers being tested get bigger. For instance, a 20-decimal digit prime needs about 10<sup>19</sup> divisions to be proved so by this method. A 200-digit prime requires 10<sup>98</sup> divisions.</p><p>Big primes are where these things find their most important current application, specifically in cryptography, although primes are involved in almost all areas of mathematical research. Public-key cryptography was first announced in 1976, and it was followed by a series of protocols and methods such as digital signatures, key distribution systems, and identification methods. For their security, all of these rely on difficult problems from the branch of mathematics known as "number theory," and all of them require prime numbers.</p><p>The Greek mathematician Euclid proved that there is an infinite number of primes. Then, nearly 1500 years later, Pierre de Fermat announced in 1640 a theorem known as his "little theorem," which states that if a number <i>p</i> is prime, then it divides all the numbers <i>a<sup>p</sup></i><sup>-1</sup>-1 whenever <i>a</i> is not divisible by <i>p</i>. At first sight, this appears to be a sure test for primes, but around the beginning of last century, R.D. Carmichael showed that there were numbers (since known as "Carmichael numbers") that pass Fermat's test and are composite.</p><p>One such composite is made up of 6<i>k</i>+1, 12<i>k</i>+1, and 18<i>k</i>+1, when all are primes. For example, 7x13x19=1729 is a Carmichael number, as is 37x73x109=294,409. In the 1990s, it was proven that there is an infinite number of Carmichael numbers.</p><p>Modifications of Fermat's theorem have been used for the best general-purpose prime testing algorithms. The method is to test a particular candidate with a number of <i>a</i> values, and if it passes for all of the <i>a</i> values, then there is a good chance that the number is prime. The Miller-Rabin Test (see "Riemann's Hypothesis and Tests for Primality," by G.L. Miller, <i>Journal of Computer and System Sciences</i>, Volume 13, 1978; and "Probabilistic Algorithm for Testing Primality," by M.O. Rabin, <i>Journal of Number Theory,</i> Volume 12, 1980) has until now been the fastest general-purpose method of finding primes. The odds that any particular <i>a</i> value will give a false reading &#151; that is, indicate that a composite number is prime &#151; are 1/4. So if the candidate passes <i>n</i> tests, then the chances of it being a composite are (1/4)<i><sup>n</sup></i>. Hence the more values of <i>a</i> that are used, the better the chance of producing a prime.</p><p>Once again, unfortunately for the Miller-Rabin Test, it has been proven that for any finite number of <i>a</i> values, there are composite numbers that pass all the tests (see "Primality Testing and Carmichael Numbers," by A. Granville, <i>Notices of the American Mathematical Society</i>, 1992). Because it is so efficient, the Miller-Rabin Test was used throughout the 1980s and early '90s in producing large cryptographic prime numbers. Despite the fact that a programming error is more likely than a false Miller-Rabin prime, a lingering doubt remains. Digital signatures are now used to seal important and valuable financial instruments, such as trusts and wills, far into the future. If some of the primes on which these signatures are based turn out to be phonies, the entire system is compromised.</p><p>There is a general-purpose method of proving a number is prime (see "On Distinguishing Prime Numbers From Composite Numbers," by L.M. Adleman, C. Pomerance, and R.S. Rumely, <i>Annals of Mathematics</i>, Volume 117, 1983), but it is much less efficient than Miller-Rabin and uses recondite entities from advanced number theory. A specialized method of finding provable primes was published in 1994 (see "Fast Generation of Prime Numbers and Secure Public-key Cryptographic Parameters," by U.E. Maurer, <i>Journal of Cryptology</i>, Volume 3, 1994), which is a little less efficient than a single pass of the Miller-Rabin Test. Maurer's method is the new de facto standard in the cryptography industry.</p><p>Maurer's method relies on predetermining some of the factors of <i>p</i>-1, where <i>p</i> is the test candidate for primality. It recursively builds up <i>p</i> from earlier passes that find factors of <i>p</i>-1. It gives prime numbers that are nearly randomly distributed; though this distribution is somewhat skewed by the use of a partially factored <i>p</i>-1. Being able to produce random prime numbers is important in cryptosystems such as LUC or RSA, as it is currently believed that these offer the best protection against factorization. Factorization of an LUC modulus breaks the cryptosystem, and is believed to be the only way of breaking the cipher.</p><p>There are other methods that produce provable primes, the most well known being the Lucas-Lehmer Test for Mersenne primes. These are primes of the form 2<i><sup>t</sup></i>-1, where <i>t</i> itself is also a prime, like 7(<i>t</i>=3), or 8191 (<i>t</i>=13), or the current world record, a Mersenne prime of over 4 million decimal digits, with <i>t</i>=13,466,917. This was found late last year in an ongoing collaborative effort over the Internet (<a href="http://www.mersenne.org/">http://www.mersenne.org/</a>). Having forked out $100,000 for that Mersenne prime, the Electronic Freedom Foundation (<a href="http://www.eff.org/">http://www.eff.org/</a>) is now offering an even larger cash prize for the first 10 million decimal-digit prime number.</p><p>The Mersenne-proving method was found by Edouard Lucas in the late 19th century, and it was proven to be correct by D.H. Lehmer early last century (see "An Extended Theory of Lucas' Functions," D.H. Lehmer, <i>Annals of Mathematics</i>, Volume 31, 1930; and "Th&eacute;ories des fonctions numeriques simplement p&eacute;riodiques," by F.E.A. Lucas, <i>American Journal of Mathematics</i>, Volume 1, 1878). Lehmer was able to generalize much of Lucas's work, and his theorem (see <A NAME="re1"><A HREF="0207ie1.htm">Example 1</A>) can be seen as analogous to Fermat's "little theorem." </p><p>An important difference between the two is that Lehmer's Theorem uses number theoretic parameters called "quadratic residues" (QRs), and "quadratic non-residues" (QNRs). A number, <i>b</i>, is a quadratic residue of another number, <i>c</i>, if there exists yet a third number, <i>d</i>, such that <i>d</i><sup>2</sup>-<i>b</i> is divisible by <i>c</i>. If no such number exists, then <i>b</i> is termed a quadratic nonresidue of <i>c</i>.</p><p>It has long been suspected that a combination of a Fermat and Lehmer Test produces numbers that are always prime, and small cash prizes are offered to people who can demonstrate a number that is simultaneously a Carmichael number and a constituent of the Fibonacci sequence (<a href="http://www.pseudoprime.com/">http://www.pseudoprime.com/</a>).</p><h3>Primality Proof and the CUL Algorithm</h3><p>Rather than a Fermat and Lehmer Test, the method I present here uses two Lehmers: One for a base that appears to be a quadratic residue of the test number, and the other with a base that appears to be a quadratic nonresidue. The method can be proven to give prime numbers. And since it makes no demands on the form of the candidate (as the Maurer method does), the primes found are as random as the seeding process, which inaugurates the search for them. In terms of efficiency, it takes about 2 log <i>p</i> modular multiplications, making it equivalent to two passes of Miller-Rabin. </p><p>There is a number theory function known as the "Jacobi algorithm" (<A NAME="re2"><A HREF="0207ie2.htm">Example 2</A>), which quickly lets you find such numbers. On average, one of every two numbers will be a quadratic residue of a candidate, and similarly for quadratic nonresidues. For instance, taking <i>p</i>=13, then 1, 3, 4, 9, 10, and 12 are quadratic residues of <i>p</i>; and 2, 5, 6, 7, 8, and 11 are quadratic nonresidues.</p><p>The proof applies Lehmer's Theorem (<A NAME="re1"><A HREF="0207ie1.htm">Example 1</A>) in two cases, and uses the Lehmer totient function (<A NAME="re3"><A HREF="0207ie3.htm">Example 3</A>). It relies on the mathematical proof method of contradiction. In other words, you assume that what you want to prove true is false, follow the implications of that assumption, and produce a contradiction of it.</p><p>The CUL algorithm proceeding from the proof (<A NAME="re4"><A HREF="0207ie4.htm">Example 4</A>) is named for the aspect of "culling" prime numbers from among the composite numbers. In structure, it follows the proof. <A NAME="re5"><A HREF="0207ie5.htm">Example 5</A> is the Lucas V algorithm, a fast method of calculating the Lucas V functions. The Lucas U function can be calculated from the V function through use of the formula:</p><blockquote><p>U<sub>k<sup>2</sub></sup>=(V<sub>k<sup>2</sub></sup>-4)/(P<sup>2</sup>-4)</p></blockquote><h3>Proof</h3><p>Two Lucas function tests are sufficient to prove whether a number is prime. Let <i>p</i> be the number to be tested for primality, and <i>p</i> has passed both the lambda tests. We show in a proof by contradiction that <i>p</i> is prime.</p><p>Assume that <i>p</i> is not prime and has the composition outlined in the following: With respect to a number, <img src="delta12.gif">, if the Jacobi (J) of <img src="delta12.gif"> with respect to <i>p</i> is -1, then <i>p</i> is composed of one or more primes such that <img src="delta12.gif"> is a Quadratic Nonresidue (QNR) of an odd number of them and <img src="delta12.gif"> is a Quadratic Residue (QR) of any number of them, whether an even or odd number or none. </p><p>When J=1, then <i>p</i> is composed of one or more primes such that <img src="delta12.gif"> is a QNR of an even number of them, and any number of primes such that <img src="delta12.gif"> is a QR of them, or <i>p</i> is such that <img src="delta12.gif"> is a QR of all the primes composing <i>p</i>.</p><p>The two lambda functions are: <IMG SRC="lambda.gif"><sub>1</sub>=(<i>p</i>-1) and <IMG SRC="lambda.gif"><sub>2</sub>=(<i>p</i>+1). These follow from Lehmer's Theorem (<A NAME="re1"><A HREF="0207ie1.htm">Example 1</A>), and are the two points at which the tests are made, with suitable <i>P</i> values such that <i>P</i><sup>2</sup>-4<i>Q</i>=<img src="delta12.gif">.</p><p>Specifically, these are whether <i>U</i><sub><img src="lambda.gif"></sub>(<i>P</i>,<i>Q</i>)=0 mod <i>p</i>; and whether <i>V</i><sub><IMG SRC="lambda.gif"></sub>(<i>P</i>,<i>Q</i>)=2 mod <i>p</i> for each of the lambdas, and <i>U</i> and <i>V </i>are the Lucas functions. The discriminant, <img src="delta12.gif">=<i>P</i><sup>2</sup>-4<i>Q</i>. </p><p>Let <i>Q</i>=1 to simplify the exposition. This does not affect the proof.</p><p>Choose <img src="delta12.gif"><sub>2</sub> such that J=-1 for <i>p</i>; and then choose <img src="delta12.gif"><sub>1</sub> such that J=1 for <i>p</i>. Clearly a different <i>P</i> value is required in each test. The first situation implies that there is at least one prime in the composition of <i>p,</i> such that <img src="delta12.gif"><sub>2</sub> is a QNR of it. The second situation implies that there are either no primes in the composition of <i>p</i>, such that <img src="delta12.gif"><sub>1</sub> is a QNR of them, or that there is an even number such that <img src="delta12.gif"><sub>1</sub> is a QNR of them. It follows that in moving from the first to the second situation, that at least one prime in <i>p</i> has changed (from <img src="delta12.gif"><sub>2</sub> being a QR of it to <img src="delta12.gif"><sub>1</sub> being a QNR of it [Case 1], or vice versa i.e. from <img src="delta12.gif"><sub>2</sub> being a QNR of <i>p</i> to <img src="delta12.gif"><sub>1</sub> being a QR of <i>p</i> [Case 2]). We nominate this prime as <i>r</i>. The remainder of the primes in <i>p</i>, whether single or multiple powers of distinct primes (or both) are lumped together as <IMG SRC="d07algo.gif">. Thus <i>p</i>=<i>r</i><IMG SRC="delta12.gif">.</p><p><b>Case 1.</b> Let <i>L</i><sub>1</sub>=(<i>r</i>-1)<i>S</i>, the Lehmer totient of <i>p</i>, where <i>S</i> is the Lehmer totient of <IMG SRC="d07algo.gif"> with respect to J=1, and <i>r</i>-1 is the Lehmer totient function with respect to <i>r</i>; and let <i>L</i><sub>2</sub>=(<i>r</i>+1)<i>T</i>, where T is the Lehmer totient of <IMG SRC="d07algo.gif"> with respect to J=-1, and <i>r</i>+1 is the Lehmer totient function with respect to <i>r</i>. The number <i>p</i> has passed both lambda tests, so <i>p</i>+1 is divisible by <i>L</i><sub>2</sub> by Lehmer's Theorem (<A NAME="re1"><A HREF="0207ie1.htm">Examples 1</A> and <A NAME="re2"><A HREF="0207ie2.htm">2</A>). </p><p>Say it goes in <i>A</i> times: <i>p</i><i>+</i>1<i>=</i><i>A</i>L<sub>2</sub><i>=</i><i>A(r</i><i>+</i>1<i>)</i><i></i><i>T=ATr+AT</i>, so <i>p=ATr+AT</i><i>-</i>1. Repeating this process with respect to <i>L</i><sub>1</sub>, which goes into <i>p</i>-1, say, <i>B</i> times, we get <i>p=BSr-BS+</i>1. </p><p>Comparing the coefficients of the two equations for <i>p</i> gives <i>AT=BS</i> for the coefficients of <i>r</i>; and -<i>BS</i>+1=<i>AT</i>-1 for the constant terms. From these we get 2<i>BS</i>=2, so <i> BS=AT</i>=1, which, when substituted back in the two equations for <i>p,</i> gives <i>p=r</i>.</p><p><b></p><p>Case 2.</b> The second case is similar. Reusing the aforementioned variables, we end up with <i>p=ATr-AT-</i>1 and <i>p=BSr+BS+</i>1. Again comparing coefficients, <i>AT</i>=<i>BS</i>, -<i>AT</i>-1= <i>BS</i>+1, so <i>AT</i>=-1. Substituted in <i>p=ATr-AT-</i>1 and <i>p=BSr+BS+</i>1, we get a value of <i>p,</i> which is negative: <i>p=-r</i>. Both cases let us conclude that <i>p</i> is prime.</p><p></p><p><b>DDJ</b></p></body></html>