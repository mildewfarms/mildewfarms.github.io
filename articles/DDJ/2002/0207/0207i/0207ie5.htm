<html><head><title>Jul02: Algorithm Alley</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><pre>The Lucas V algorithm calculates the V<sub>e</sub>(P,1) modulo N value<br>of the Lucas recursion; for instance, the eth value of the Lucas <br>function modulo N. The algorithm was independently proposed by Postl <br>(see "Fast Evaluation of Dickson Polynomials," by H. Postl, <br>Contributions to General Algebra, Volume 6, 1988) and later by Yen <br>and Laih "Fast Algorithms for the LUC Digital Signature <br>Computation," by S.M. Yen and C.S. Laih, IEEE Proceedings in <br>Computational Digital Technology, Volume 142, 1995). This C++ <br>implementation was written by Wei Dai (<a href="http://www.eskimo.co/~weidai/lucas.html">http://www.eskimo.co/~weidai/lucas.html</a>).Integer Lucas Integer Lucas (const Integer &amp;e,             const Integer &amp;P, const Integer &amp;N){    unsigned i = e.BitCount();    if (i==0)        return 2;    Integer v=P, v1=(P*P-2)%N;    i--;while (i--){        if (e(i))     //if ith bit of e is one        {            v = (v*v1-P)%N;            v1=(v1*v1-2)%N;        }        else        {            v1=(v*v1-P)%N;            v=(v*v-2)%N;        }}    return v;}</pre><h4>Example 5: Lucas V algorithm.</h4><a href="0207i.htm#re5">Back to Article</a></body></html>