<html><head><title>Jul99: Programming Paradigms</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h1>1984</h1><h3>By Michael Swaine</h3><I>Michael is editor-at-large for DDJ. He can be contacted at mswaine@swaine.com.</I><hr><p>This spring, as I was finishing the new edition of my computer history book <i>Fire in the Valley</i>, I got to thinking historically. The year that book was originally published, 1984, was historic, but not for Orwell's reasons and not just for the release of the Macintosh. Some of the events and some of the publications of that year are still influencing us today. Certain books, in particular, seem worth remembering, which may be why they still have honored places in my very crowded office. My bookshelves contain, along with the <i>Redhat Linux Installation Manual</i> and <i>Introducing XML</i>, a lot of computer history.</p><h3>What Was the Point?</h3><p>Here, for example, is a book that I keep purely for its historic value. <i>The Whole Earth Software Catalog 1.0</i> (<i>WESC</i>), edited by Stewart Brand (Doubleday, 1984). Obsolete before it was published (A book of software reviews? Ridiculous!), it still had a large influence in a curious way. Agent John Brockman (today he's my agent) secured Brand a huge advance for the book, setting a precedent that briefly made profitable careers for some writers. It wasn't just <i>WESC</i>: Computer books and magazines at the time were spinning out of control. In 1984, there were 450 different computer magazines, some looking like phone books for medium-sized towns. It was an inflection point; soon a shakeout decimated the ranks. As a writer, I remember those (predecimation) days fondly, even if I didn't get a seven-figure advance, as <i>WESC</i> reportedly did. (And Brockman isn't cutting that kind of deal any more, just in case you were wondering.)</p><p><i>WESC</i> was itself heavily influenced by the <i>Whole Earth Catalog</i> and its successors, also the brainchildren of Stewart Brand. My own 1984 work on <i>WESC</i> introduced me to Brand, and I was grateful for that. Brand keeps popping up in the most interesting places in high-tech development. He wrote an article about Xerox PARC for <i>Rolling Stone</i> magazine ages ago that was the first most of the world had ever heard of the place. It was Brand who was running the camera during that famous 1968 Joint Computer Conference presentation in which Douglas Engelbart demonstrated most of the technology behind the graphical user interface and the Internet. And, in 1984, he was the motive force behind the first Hacker's Conference, a truly legendary event. I was there, and I can confirm that Steve Wozniak washed dishes. As we sat in a circle telling who we were and why we were there, Brand's comment was telling: "I'm just here for the contact high," he said. On finishing <i>WESC</i>, he wrote to Nicholas Negroponte at MIT asking for a job. Negroponte invited him to come east to work in something he was going to call the "Media Lab." Brand's Point Foundation was somehow behind the People's Computer Company, or PCC (I'm not sure of the non-profit corporate links), and if you don't know what that was, maybe you've heard of its spin-off publication -- <i>Dr. Dobb's Journal</i>. By 1984 <i>DDJ</i> had all but cut its links with Brand, hooking up with a commercial publisher (M&amp;T Publishing, later acquired by Miller Freeman) and hiring an editor-in-chief (me), so when I contributed to <i>WESC</i> under the byline <i>Dr. Dobb's Journal</i>, it was strangely circular.</p><h3>Fool for Tools  and the Hacker Ethic</h3><p><i>WESC</i> influenced the world in other ways. Money from the book deal Brockman negotiated allowed Brand to push on into new areas, notably the WELL. The Whole Earth 'Lectronic Letter has been one of the most successful and long-lived online communities ever. It led to marriages and other connections, including the connection between Lotus Development founder Mitch Kapor and former Grateful Dead lyricist John Perry Barlow that resulted in the formation of the Electronic Frontier Foundation. Even if the EFF was subsequently co-opted and became less relevant than it might have been, it was badly needed in 1984. In 1983, the FBI had launched a theoretically commendable but in practice ill-informed campaign to crack down on computer crime. Heavy handed and mistargeted, the campaign put gun-brandishing FBI agents in children's bedrooms. The EFF stood up to the FBI and, more importantly, educated it.</p><p>One of the most influential people on the WELL was Howard Rheingold. I met Howard in 1983 while he was researching <i>Tools for Thought</i> (Simon and Schuster, 1985) and I was researching <i>Fire in the Valley</i>. Rheingold is responsible for popularizing and, in some cases, developing quite a number of good ideas. His thoughts on virtual communities have inspired many a community, and he was one of the early champions of Ted Nelson's visionary project Xanadu.</p><p>Xanadu is best described as the Web done right. Except, of course, that the Web has been done and Xanadu hasn't. Nevertheless, Xanadu is so rich and so right that it has influenced people who have never heard of it. In 1984, that was almost everybody, but after Rheingold described Xanadu in <i>Tools for Thought</i>, publications like <i>The Economist</i> were soon writing about it. Rheingold is also as responsible as anyone for promoting the idea that Ada Lovelace was the first programmer. Not everyone accepts that view; I presented a debunking argument here a couple of months ago. But I still like the idea, and am not ready to give it up entirely. Another book was in the works at the same time as <i>Fire in the Valley</i> and <i>Tools for Thought</i> -- well, I suppose a lot of books were, but I remember crossing paths with Rheingold and the author of this particular other book in the researching of my book. We were all interviewing the same people, it seemed.</p><p>The other book was <i>Hackers,</i> by Steven Levy (Anchor Press/Doubleday, 1984). Richard Stallman, founder and guiding light of the Free Software Foundation, is so dedicated that he would probably be doing just what he's doing today even if he hadn't been immortalized in <i>Hackers</i> as the last true hacker, but he would be much less well known. Levy really nailed the spirit of MIT's artificial intelligence lab in the 1950s and '60s, and in so doing, communicated the hacker ethic to vastly more people than would have heard of it otherwise. It's still alive, more vibrant than ever, in the free software and open source software movements, and Levy deserves some of the credit for that. Brand recognized right away the importance of Levy's book: The aforementioned Hacker's Conference was convened, in part, to celebrate the publication of <i>Hackers</i>.</p><h3>The Net meme  and the Little Red Book</h3><p>I wonder if any of you remember <i>The Netweaver's Sourcebook</i> (Addison Wesley, 1984)? If so, I'd be interested to hear from you at mswaine@swaine.com. The book was published in 1984 and I immediately commissioned an article for <i>DDJ </i>from its author, Dean Gengle. I knew then that there was a high idea density in the book, but I'm more impressed than ever, looking back on it with 15 years of perspective, to see how much it anticipated.</p><p>Gengle does a credible job of introducing null modem cables and ASCII, NAPLP, and LAN topologies, but the discussion is not deep. This is a broad book. The breadth is best suggested by running through the topics covered, although the risk is that it will sound like just a list of trendy buzzwords. It is that, too, I suppose, but if some of the words are trendy now, recall that the book was written 15 years ago. The trendy buzzword list: information economy, memes as metaphors, holons and hierarchy, noospherics, softspaces, the infosphere, filters, metaprograms, privacy, ethics and etiquette, computopia, the culture of the entrepreneur, transforming the Bill of Rights, the biz biz, politics and telepolis, new world information order, family networks, distributed network organization development, cellular mobility, planetary linkage. Some will be turned off by the language and judge it too hard to find any substance in this book, which spends much of its early chapters at an ethereal, general systems-like level. Alvin Toffler, R. Buckminster Fuller, and Richard Dawkins are all cited within a few pages of one another in the first chapter. The concepts of mode, metaphor, and meme are articulated and differentiated. "Who cares?" I can hear some readers asking.</p><p>But Gengle was sincerely -- and I think pretty successfully -- trying to articulate a difficult vision of net building, or net weaving, that goes beyond any particular job and examines its implications for building and facilitating real human community and communication. It's a world-builder's networking book. I've always been fond of it, even if I haven't ever actually <i>used</i> it for anything. And does anyone remember this one, published, I think, as a promotional novelty? <i>Quotations from Chairman Morrow</i>, by George Morrow, (Morrow Design Press, 1984). I still have it here on my shelf, all 60 tiny pages of it. George Morrow was one of the more entertaining computer company presidents of the early days, and this take-off on Chairman Mao's Little Red Book has some genuinely insightful bits.</p><blockquote><p>The only industrial costs software companies have is the printing of serial numbers.</p><p></p><p>Ninety percent of the software gets written in 10 percent of the time. The next 9.5 percent takes 90 percent of the time. The last one-half percent never gets done, but the software still gets sold.</p><p>A consultant is someone who's called in when someone has painted himself into a corner. He's expected to levitate his client out of that corner.</p><p>Short-sightedness is a virtue when it comes to choosing a computer system. Know what you need now -- not two years from now.</p><p>I believe in standards. Everyone should have one.</p></blockquote><p>If I quote any more from such a tiny book, it will be copyright infringement. By the way, I have lost touch with George Morrow. Does anyone know where he is?</p><h3>Why 1984 Wasn't Like <i>1984</i></h3><p>Books and magazines are convenient symptoms of what's really going on in the world or in whatever microworld they inhabit. But they don't tell the whole story. So here's what else was going on the microcomputer microworld in 1984:</p><p>HP introduced a portable computer running UNIX, Apple introduced the Macintosh, Compaq followed up its spectacular first year with four new models in 1984, and IBM fell on its face with the PCjr. Commodore founder Jack Tramiel took over troubled Atari. Osborne Computer Company threw in the towel. VisiCorp and Software Arts were in a death struggle over rights to VisiCalc. The Source was trying hard to convince Americans that they wanted to logon to an information utility, and Compuserve charged extra if you wanted to logon to its service with a 1200 baud modem; but, by year's end, 2400 baud models would be commonplace. Borland introduced the first PIM, called "Sidekick." Digital Research showed off its GEM graphical user interface (it was revived just this year as open-source software). IBM introduced TopView. And, to the delight of us computer history buffs, the Computer Museum opened in Boston.</p><p>But the big news of 1984 in hardware and system software and user experience, of course, was the Mac.</p><h3>Vibrations,  Grids, and Ducks</h3><p>It is historical fact that the Macintosh, pitched with that memorable superbowl commercial in January 1984, introduced the ubiquitous graphical user interface to the world. (A list of disclaimers is necessary here: Apple didn't invent the UGUI, it didn't make it ubiquitous, and, as Ted Nelson likes to point out, it's A graphical user interface, not THE graphical user interface.) But a lot of forces were impinging on that same idea space at that same time. People had been thinking about the ergonomics of human-computer interaction for years, and one of those people published an influential book in 1984. <i>The Elements of Friendly Software Design</i>, by Paul Heckel (Warner Books, 1984), presumably had an influence on the Mac user interface, since it was written at the encouragement of Larry Tesler, manager of user-interface design for Mac's older, duller sister, Lisa. Heckel had written a series of articles on software design for <i>InfoWorld</i> and Tesler urged Heckel to turn them into a book. Heckel lined up an agent (John Brockman, who else), and set to work turning a handful of articles into a book. Although next month I'll have something to say about a good, just-published book on software design by someone who has more or less created the profession of software designer, Heckel's 15-year-old work has some timeless virtues.</p><p>The principles he lays down are, like Dean Gengle's, often abstract. But he provides concrete examples for all his ideas, no matter how abstract they are. By writing at a high level, he produced a book that is still relevant today. The fact that the examples are all outdated doesn't make them any less useful. "Maintain the user's interest," he says, and exemplifies this rather vague idea with a highly concrete example of recalculation feedback in VisiCalc. He provides sufficient detail and context in screen shots so that we don't really have to have ever used VisiCalc to see the point he's making, or to see exactly what he means by keeping the user's interest. We know he's talking about movement, and that the movement must actually matter to the user, and that it must happen in a particular time frame. It's a very effective book. While I'm talking about the graphical display of information, I want to slip in a mention of a book that I probably first heard of in 1984, although it was actually published in 1983: Edward R. Tufte's <i>The Visual Display of Quantitative Information</i> (Graphics Press). Those who know the book need no reminder of its virtues and those who don't need more than I have room for here; suffice it to say that Tufte's beautiful, philosophical, entertaining, and eminently practical book deserves a place on your bookshelf if you ever create charts or graphs and if you care about how they look and communicate.</p><h3>Back in Action</h3><p>The publication dates are 1983, 1984, and 1985 for three related books that stand together on my bookshelves. The only programming books I seem to have saved from that era, these three books also document the only computer I still have that I was using in 1984 -- my TRS-80 Model 100. The books, just for the record, are: <i>The TRS-80 Model 100 Portable Computer</i>, by David A. Lien (Compusoft, 1983), <i>The TRS-80 Model 100 Computer</i>, by Kenniston W. Lord (Reston, 1984), and <i>Inside the Model 100</i>, by Carl Oppendahl, (Weber Systems, 1985). Also worth mention, although I regretfully don't have a copy on my shelf, is <i>The Model 100 Book</i>, by <i>DDJ</i> editor-in-chief Jon Erickson (Osborne/McGraw-Hill, 1984). The Model 100 computer (see <A NAME="rf1"><A HREF="9907if1.htm">Figure 1</A>), not just for the record, was one of the sweetest machines I have ever used. It was portable, remarkably small for the time, with full-sized, full-travel keys, plus a row of user-programmable function keys. It was, in fact, mostly keyboard. There was an 8-line 80-column display above the keys, but the whole thing was almost exactly the dimensions of a standard pad of writing paper. (Well, a two-inch-thick pad.) It had built-in programs for word processing, address management, scheduling, and communications (it had a built-in modem), and a Basic interpreter that supported bit-mapped graphics and simple music generation. It also proved surprisingly easy to code simple Z80 assembly routines for the thing to get around the limits of interpreted Basic. And the accessible ROM socket made it possible to add full-featured word processors and spreadsheet programs.</p><p>As a writer, I fell in love with it, and took it to conferences where I used it to take notes, annoying people with my clicking. It was more portable and even, in some sense, friendlier than any computer that I've used since. I recently put the Model 100 back in action as my workshop computer. In addition to my writing, I now seem to have acquired certain duties involved with my partner Nancy's new farm, and the Model 100, with its built-in schedule and word-processing programs and Basic interpreter, will serve very nicely for maintaining my workshop to-do list, scheduling equipment maintenance, and performing simple calculations. It's nice to have it back.</p><p><b>DDJ</b></p><HR><I>Copyright &copy; 1999, Dr. Dobb's Journal</I><BR>
</body></html>