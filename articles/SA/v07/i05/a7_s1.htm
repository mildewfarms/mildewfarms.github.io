<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v07, i05:  Sidebar : Looking at a CPU Hog</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a7.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a7_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a7_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink>Sidebar 1</span></td>
		<td><a href="../../../../source/SA/1998/may98.tar"><b class=codeListing>may98.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>



<H1>Sidebar : Looking at a CPU Hog</H1><p><p>
To demonstrate how the CPU% metrics appear in real life, I started a CPU-consuming program and monitored the <B>ps</B> command and the <B>top</B> program output. I performed this test on two systems: "somer" is a SparcServer 1000 with two CPUs running Solaris 2.5; "barnstable" is an AIX G30 with two CPUs running AIX 4.1.4.<p>
The program takes over one of the CPUs on each system. All measurements were done by hand; timings were begun from the moment the program started executing. In all cases, I monitored the CPU% utilization of the process as reported by the respective tool.<p>
Figure 1 shows the output from "somer". Note that it took over 60 seconds before the CPU% utilization showed 50% (one out of two CPUs being dedicated to this process). If we happened to have been looking at this process's CPU% utilization early in the life of the process (say between seconds 10 and 20), we might have erroneously concluded that the process was consuming about 20% of the CPU.<p>
Figure 2 presents the output from "barnstable". Here we see different behavior for our CPU% utilization metrics. The <B>ps</B> command says from the very beginning that 50% of the CPU is being consumed. But, this too is potentially misleading because the output from <B>ps</B> shows us the percent utilization since the process started running. Since the process was nothing other than a CPU hog, the 50% shown is valid. Imagine, however, a situation where the process has already been running for a total of 10 minutes (but not doing anything to consume the CPU) and only now in the last minute has it started being CPU intensive. For some period of time, we will see the CPU% utilization sitting at approximately 5% (1 minute divided by 10 minutes divided by 2 CPUs). After 5 minutes, we see 25%.<p>
Also note in Figure 2 that the <B>top</B> variable CPU% is simply wrong. This appears to be a <B>top</B> problem wherein the metric is not adjusted for the number of CPUs. The second metric, WCPU%, is properly adjusted. Other than that, <B>top</B>'s output is consistent with what we saw in Figure 1.

<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
