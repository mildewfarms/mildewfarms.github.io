<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v07, i12: Sidebar:  RCS vs. SCCS</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a1.htm">Article</a></span></td>
		<td><span class=navbarLink>Sidebar 1</span></td>
		<td><span class=navbarLink><a href="a1_s2.htm">Sidebar 2</a></span></td>
		<td><span class=navbarLink><a href="a1_t1.htm">Table 1</a></span></td>
		<td><a href="../../../../source/SA/1998/dec98.tar"><b class=codeListing>dec98.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>



<h1>Sidebar:  RCS vs. SCCS<h1><p>
As I recall, some time ago SCCS was more popular than RCS. Today, of the freely available revision systems, it seems RCS and CVS have the lead. (For the purposes of this discussion, CVS may be thought of as a more complex system layered atop RCS. Its additional features would most likely be of little use when maintaining UNIX system configuration files.) Years ago, I switched to RCS. There are two compelling reasons for my migration from SCCS to RCS:<p>
RCS' revision file is named with a suffix (<B>filename,v</B>) rather than a prefix (<B>s.filename</B>), such as SCCS uses. The preference for suffixes is more than cosmetic. Utilities such as <B>make(1)</B> can rely on filename suffixes to select appropriate build rules - so-called "default (suffix) rules". So, SCCS is not easily compatible with all <B>make(1)</B>-based projects - a significant caveat for those who maintain source code. Still, there are some <B>make(1)</B> implementations that have been enhanced to understand SCCS semantics.<p>
RCS stores lock information within the revision file (<B>filename,v</B>) rather than in a separate file (<B>p.filename</B>). RCS has an important advantage here in the UNIX envionment, where links (symbolic or real/"hard" links) are sometimes employed to make a file appear by multiple names or paths. When locking a file with SCCS, a "<B>p.</B>" file will be created in the working directory of the user that locked the file. This "<B>p.</B>" lock file is only visible within that directory - a major problem if the revision file ("<B>s.</B>") is also linked from another directory. A user in that other directory could also lock the file in question, and both users could edit the file and potentially clobber each other's changes upon "check-in".<p>
For administrative usage of a file revision system, this distinction is doubly important. Popular UNIX implementations, such as Solaris, make heavy use of links to make its configuration files appear in more than one directory (e.g., the file containing the host database is known as <B>/etc/hosts</B> and <B>/etc/inet/hosts</B>). With RCS, you can link the revision file (<B>hosts,v</B>) into both the <B>/etc</B> and <B>/etc/inet</B> directories to accomodate the preferences (and experiences) of the sys admins in your team.<p>
If you ever must convert from SCCS to RCS, there exists a freely available utility called <B>sccs2rcs</B>. It may require a specific minimum version of SCCS (that supplied with HP-UX is not sufficient, for instance), but otherwise it worked well for me.

<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
