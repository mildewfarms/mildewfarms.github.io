<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v07, i06: A Print Quota Scheme</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a5_f1.htm">Figure 1</a></span></td>
		<td><a href="../../../../source/SA/1998/jun98.tar"><b class=codeListing>jun98.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>A Print Quota Scheme<p>
</H1><p>Yao-Chiang Kan, Jackie Carlson, and Jen-Sheng Wang<p>
Reducing the cost of printer maintenance is usually an important issue for any organization, but is particularly so at a university. The cost of our printing supplies (paper and toner) reached a high last year of $40,000 at the College of Engineering at Michigan State University, and we were asked to implement print quotas for both UNIX and PC systems. This article explores that system and should provide techniques that can be applied to your environment, too.<p>
We needed to enforce print quotas without increasing costs and purchasing expensive software. With a few modifications to the interface files and a couple of scripts, we accomplished our goals. We implemented print quotas for our printers in public labs almost a year ago and have since reduced wear and tear on the printers and reduced toner, paper, and repair costs by 40%. The print quota scheme we designed is cost effective and simple to administer.<p>
In our computing environment, we deal with several different platforms: SUN Solaris, HP-UX 10.x, Windows NT, Windows 95, and Windows for Workgroup 3.11. We configured a SUN Sparc10 running Solaris 2.5.1 to be the print quota server for the UNIX labs and office printers. A SUN Sparc2 running Solaris 2.5.1 is the print quota server for four of our public PC labs. The Windows NT print clients talk to the print server using Microsoft's TCP/IP printing. PCs running Windows for Workgroups use the PCTCP <B>lpr</B> function to directly communicate with the Solaris print server. The UNIX print clients send print jobs to the print server by using SYS V printing.<p>
There are eight quota-enabled printers including six HP 4MV printers, one HP 5SI/MX printer, and one QMS color laser printer. All HP 4MV and 5SI/MX printers support a function called "True End of Job (TEOJ)" that causes the HP printers to return a page printed status message for a print job. The QMS printer has the "Background Channel (BC)" function, which is similar to HP's TEOJ. By using TEOJ and BC functions, our print quota system is established.<p>
<B>The Print Quota Scheme</b><p>Knowing how to set up a UNIX print server running Solaris is required, of course. A local printing process on Solaris is described in Figure 1. When a print job arrives on the print server, <B>lpsched</B> is evoked to handle that print job. <B>lpsched</B> is responsible for spooling the print request, filtering the job, and starting the interface program to actually print the job. Printer filters in Solaris are used to convert the content type of a file to a content type that is acceptable to the destination printer. The Solaris interface program does the final printing of the job and is the most important stage of the printing process. Our print quota scheme is implemented within the interface program.<p>
The print quota scheme requires four special files shown in Listing 1. (All listings for this article can be found at <B>ftp.mfi.com</B> in <B>/pub/sysadmin</B>.) The first file is a user print quota database (<B>UPQdB</B>), which has a file named the same as the user name. Every user has his or her own <B>UPQdB</B> file. The <B>UPQdB</B> contains several fields that are separated by colons. The first field in <B>UPQdB</B> is the user's print quota, the second one is total pages printed since the beginning of the semester, and the third field is pages printed in the current week. The rest of those fields are pages printed for each quota-enabled printer in the current week. The order of these printer fields is determined by the printer list file (<B>PLF</B>). The second file is the <B>PLF</B>, which stores a list of all quota-enabled printers. The third file stores the default quota (<B>DQF</B>) for all users. The last file is a user print-credit file (<B>UPCF</B>), which stores a user's purchased print quota left from the previous semester. Below is the process used to enforce user print quotas.<p>
<p>
Steps of the interface program:<p>
<p>
<ol>
<li>  Check the username against the NIS+ password table and filter out users who should not print, such as root.<p>
<li>  The user's <B>UPQdB</B> is created at the time the user first sends a print job to the printer. The print quota is the sum of the default quota and the purchased quota left from the previous semester.<p>
<li>  Check user's print quota and total pages printed from <B>UPQdB</B>.<p>
a. If a user is over quota, exit from the interface program and notify the user via email.<p>
b. If a user is not over quota, determine which printer is being used according to the <B>PLF</B> and enter (in the field assigned to this particular printer) the number of pages printed, then update the total pages printed in the <B>UPQdB</B>.<p>
</ol><p>
Steps of the <B>cron</B> job:<p>
<p>
<ol>
<li>  Report users' print usage weekly, re-initialize each printer's field to zero in the database, and reset the weekly pages printed to zero.<p>
<li>  If a user has purchased additional pages, then the UPCF is created, and the UPQdB is removed. If a user does not have any quota remaining, then the only step is to remove the UPQdB. This happens at the start of every new semester.<p>
</ol><p>
Steps to increase a user's quota:<p>
<p>
<ol>
<li>  Purchase a token from the MSU bookstore or provide a departmental account number to be charged for the quota increase.<p>
<li>  A single token is good for the additional printing of one hundred pages.<p>
<li>  Use the script <B>my_quota</B> to view disk and print quota usage information.<p>
<li>  A support consultant can also increase a user's print quota by multiple of 100.<p>
</ol><B>The Implementation<p>
Set Up a Print Quota Server</b><p>The JetAdmin software for Solaris provides an interface file that utilizes most of the HP printers' functions. The JetAdmin software can be downloaded from Hewlett Packard's Web site:<p>
<pre>
http://www.hp.com/cposupport/indexes1/a.html
</pre><p>
</b><p>You can obtain the QMS UNIX host software from the QMS Web site:<p>
<pre>
http://www.qms.com/support/drivers/ \<br>  drivers-list.html?platform=UNIX<p>
</pre><p>
<p>To install the JetAdmin software on a system running Sun's Solaris, use the command <B>pkgadd</B>. Qinstall, which is included with the QMS software, can be used to install QMS.<p>
After QMS and JetAdmin have been installed, a printer queue can be set up using the utilities bundled with these packages. To install HP printers run <B>jetadmin</B> and follow the menu to configure a printer queue. For QMS printers, run <B>addprt</B> to add a printer queue. Remember to enable TEOJ and status log in the HP printer queue configuration and enable the BC function as part of the QMS printer configuration. After the queue has been installed, we can get the desired interface file from <B>/etc/lp/interfaces/xxx</B>, where <B>xxx</B> is the name of the print queue. From here on, these queues will not be necessary. They can be left there or deleted.<p>
Since the interface files are written in Bourne and Korn shells, a Bourne shell library was created to accomplish the print quota scheme. Listing 2 shows the library, <B>PrnQt_lib.sh</B>, with the functions needed to use print quotas. In this library, the location of <B>UPQdB</B>, <B>PLF</B>, <B>DQF</B>, and <B>UPCF</B> are specified by variables, <B>UserPrnQtFile</B>, <B>PrnterListFile</B>, <B>GenPrnQtFile</B>, and <B>UserLeftQt</B>, respectively. The <B>Usermatch()</B> function is used to verify a user against the NIS+ password table. The <B>InitUserPrnQtFile()</B> function initializes a user's <B>UPQdB</B> and adds the user's page credit into the user's <B>UPQdB</B>. The <B>ChkPrnQt()</B> function first checks the <B>PLF</B> for a new printer and then determines whether a user is over quota. This function also allows administrators to add a new quota-enabled printer at any time without being concerned with any inconsistencies of the user's <B>UPQdB</B>. The <B>UpdatePrnQtFile()</B> updates <B>UPQdB</B>. This function takes two arguments. We like to map one color page printed to be equivalent to printing 20 black-and-white pages. Thus, the first argument is the number of physical page printed, and the second is the cost equivalent of single pages printed. A print server might be a machine in the lab and a user might log on at the console or even remotely; thus, the evoked interface program, which runs <B>UpdatePrnQt</B>, will be owned by the person logged onto the print server. Thus, a C wrapper is needed to update the user quota file, which is owned by <B>lp</B>. This C program is listed in Listing 3, <B>updatPrnQT.c</B>.<p>
The next step is to find a place in the interface program to put <B>PrnQt_lib.sh</B>. Listing 4, <B>model.QMS</B>, is an example of a modifed interface file for a QMS color printer. This modified interface file updates <B>UPQdB</B> after every page printed. The interface file for the HP printer has two parts, one is under <B>/etc/lp/interfaces</B>, and the other is under <B>/etc/lp/interface/model.orig</B>. The first part deals with some settings; the second is the core program, which deals with the print jobs and is invoked by the first part. The library and modification go into the first part of interface program, which is listed in Listing 5, <B>model.HP4MV</B>. Listing 5 shows only the modified or the important portions of the program; the complete program is too large to include entirely. This modified interface file updates <B>UPQdB</B> after a print job is finished. The modifications of these two interface files can be classified as follows:<p>
<p>
<ol>
<li>  Set variables and add <B>/etc/lp/interfaces</B> to PATH so that the library, <B>PrnQt_lib.sh</B> under <B>/etc/lp/interfaces</B>, can be found. <p>
<li>  Convert username to lowercase, since the username passed from Microsoft Windows systems is in uppercase.<p>
<li>  Include the <B>PrnQt_lib.sh</B>. <p>
<li>  Check user. <p>
<li>  Check user's print quota. <p>
<li>  Read pages printed. <p>
<li>  Update user's print quota file.<p>
</ol><p>
After modifying the interface program, we need to set up the print server with this modified interface program. The procedures for setting up a UNIX system running Sun's Solaris to be a print server are summarized below. (More details can be found in the System Administration Guide in Sun's Solaris Answerbook.)<p>
<p>
<ul>
<li>Initialize the Print Server.<br>
a. Configure the port monitor.<br>
b. Register the network listen service. <p>
<li>  Add print filters to the print server using the <B>lpfilter</B> command. <p>
<li>  Add print queues to the print server. The <B>-i</B> option is used to establish a new interface program. Two examples are provided below:<p>
<p>
For HP printers:<p>
<pre>
mknod $/dev/eb119_ps1 c 13 2
/usr/sbin/lpadmin -peb119_ps1 \<br>     -v/dev/eb119_ps1 -imodel.HP4MV
</pre><p>
<p>For the QMS printer:<P>
<pre>
/usr/sbin/lpadmin -peb120_colorps \<br>     -v/dev/null -imodel.QMS
</pre><p>    The <B>model.HP4MV</B> and <B>model.QMS</B> are the modified interface programs above. For HP printers, make sure that the second interface file is under <B>/etc/lp/interfaces/model.orig</B>. The filename should be named the same as the printer name.<p>
<p>
<li>  Configure that printer to accept print requests and enable the printer.<p>
</ol><p>
The last step in setting up the print quota server is to add the usage report script, shown in Listing 6, to the <B>cron</B> jobs. The command <B>crontab -e</B> is used to edit the <B>cron</B> table on that server. This script only needs to be added on the server that exports the <B>UPQdB</B> partition to other servers.<p>
<p>
<B>Set Up Printer Clients</b><p>For Solaris clients, use the following commands to set up the printer:<p>
<p>
<ul>
a.  <B>/usr/sbin/lpsystem -t s5 ${PrinterHost}</B><p>
b.  <B>/usr/sbin/lpadmin -p ${Printer} -s ${PrinterHost} -I any</B><p>
c.  <B>/usr/sbin/accept ${Printer}</B><p>
d.  <B>/usr/bin/enable ${Printer}<p>
</ul></B><p>
where <B>${Printer}</B> is the name of the printer to be set up, and <B>${PrinterHost}</B> is the name of print server.<p>
For HP client, use the following commands to set up the printer:<p>
<p>
<ul>
a.  <B>/usr/lib/lpadmin -p${Printer} -v/dev/null -mrmodel \<br>-ocmrcmodel  -osmrsmodel -ob3 -orm${PrinterHost} \<br>-orp${Printer}</B><p>
b.  <B>/usr/bin/enable ${Printer}</B><p>
c.  <B>/usr/lib/accept ${Printer}<p>
</ul></B><p>
For Microsoft Windows NT, follow the procedures below: <p>
<p>
<ul>
a.  Open 'Network' in 'Control Panel'. <p>
b.  Click on 'Service' tab and install 'Microsoft TCP/IP Printing'  service. <p>
c.  Reboot the machine. <p>
d.  Click 'Add New Printer in Printer' under 'My Computer'. <p>
e.  Choose 'My Computer' and click 'Next'. <p>
f. Click 'Add New Port', highlight 'LPR Port', and click 'Add New Port'.<p>
g.  Type the name of the print server in the 'lpd Server' field and type the name of the printer in the 'Printer Name' field. <p>
h.  Click 'OK' and then 'Close'. <p>
i.  Click 'Next' then follow the instructions on the screen.<p>
</ul><p>
For Windows 95, the program "Windows LPR Spooler" by Thomas Heil is used. Check <B>http://ich210.ich. \<br>kfa-juelich.de/wlprspl/</B> if you need to download that software. Summary setup procedures follow: <p>
<p>
<ul>
a.  Open the Windows LPR Spooler after that software is installed. <p>
b.  Go to 'Define new queue' under the 'Queue' submenu under the 'Setup' menu. <p>
c.  Type the spool file name in the 'LocalSpool File Name' field. If you do not change the default spool directory, this file will be created as <B>c:\Temp.SPL</B>. <p>
d.  Enter the quota-enabled printer name in the 'Remote Printer/Queue Name' field. <p>
e.  Type the name of the print server in the 'Remote Host Name or IP Address' field. <p>
f.  Type anything you want in the 'Queue description' field. <p>
g.  Choose 'BSD LPR/LPD Protocol' in the 'Protocol to be used' field. <p>
h.  Go to 'Printers' under 'My Computer' on the Windows 95 desktop. <p>
i.  Click 'Add Printer', choose 'Local Printer', and select the correct printer manufacturer and model. <p>
j.  Choose the port that will be the file name that you typed in Step c above.  <p>
k.    Follow the instructions on the screen and finish adding a printer.<p>
</ul><p>
For Windows for Workgroups with PCTCP installed: <p>
<p>
<ul>
a.  Install the PCTCP by running the install program. <p>
b.  You can set up the <B>lpr</B> printer by using 'PCTCP Network Control' in PCTCP group or edit the <B>pctcp.ini</B> directly. Open <B>pctcp.ini</B>, and add or modify the following in the <B>pctcp.ini</B> file.<p>
<pre>
[pctcp idrive-restore]
LPT1:=\\printer_server\printer_name lpr
</pre><p>
<p>c.  Users will need to log on with their username and password before printing a job, since our interface program will filter out non-authorized users. Use the <B>idnet</B> command under DOS to set the username and password or use 'Network' in the 'Control Panel' to log on.<p>
</ul><p>
<B>The Responsibilities<p>
User</b><p>Users need to be able to check their current pages printed. The script, <B>shprnqt</B>, in Listing 7, is used to show the current number of pages printed and print quota. In our current configuration, the partition, <B>/PrnQt</B>, is exported to every SUN and HP workstation. This configuration makes the script, <B>shprnqt</B>, very simple. Another reason to share <B>/PrnQt</B> is because this partition contains all installation scripts necessary to install both SUN and HP printer clients. At this point, users can only check their print quota from a UNIX system.<p>
<B>Consultant</b><p>Consultants need to be able to increase a user's print quota if a user purchased a token or provides a department account. Listing 8 shows that script. A wrapper program, Listing 9, is needed to allow consultants to change a user's quota. The permissions of that script should be set to 755. The permissions of the wrapper program should be set to 4750 and owned by <B>lp</B> and group by consultant.<p>
<B>Administrator</b><p>The administrator needs to edit the variable <B>$Rdate</B> in the usage report script, Listing 6, and modify it to be the date at the start of a new semester. The administrator must also maintain the quota-enabled printer list and default quota.<p>
<B>Conclusion</b><p>Although we consider this print quota scheme to be a work in progress, it works well and has saved us money. Print quotas have stopped the abuse of our printers. Users are paying more attention to both what and how much they print. The scheme itself can be refined and improved. Our future modifications will focus on the following:<p>
<p>
<ol>
<li>  Allow Microsoft Windows users to check their print quota without having to log on to a UNIX machine. This can be done by using ONC RPC for Windows NT ported by Martin F. Gergeleit.<p>
<li>  The script used by consultants to increase a user's quota should be able to be run on PC by using ONC RPC for Windows NT, so consultants don't need to log on to a UNIX machine first. <p>
<li>  The modified HP interface file in Listing 5 counts pages printed after a job is finished. The counting program can be moved to the second interface file in order to count page by page.</ol>




<h1>About the Author</h1><p>










Yao-Chiang Kan was a System/Network graduate assistant for the Division of Engineering Computing Services (DECS) at Michigan State University (MSU) for the past three and a half years. He works on Electromagnetics research now and can be reached at <B>kan@egr.msu.edu</B>.<p>

Jackie Carlson is the manager of the System/Network in DECS at MSU. You can contact her at <B>carlson@egr.msu.edu</B>.<p>

Jen-Sheng Wang is a System/Network graduate assistant for DECS at MSU, and his email address is <B>wangjins@egr.msu.edu</B>.

























<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>