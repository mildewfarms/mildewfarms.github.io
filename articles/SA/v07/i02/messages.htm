<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v07, i02: New Messages</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><a href="../../../../source/SA/1998/feb98.tar"><b class=codeListing>feb98.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>



<h1>New Messages</h1><p>
<p>
<I>Please send letters via email to saletter@mfi.com.<p>
</I><p>
Subject: Error - elaboration needed on 'dump' article<br>
Author: John B. Batzel<p>
In the article "The Other Backup: dump" (<I>Sys Admin</I> 6(11): 27-42), Mark L. Nassal writes of the <B>dump</B> level option:<p>
0 through 9 - Determines the dump level. Zero represents a full  backup. The entire file system or directory is archived regardless of  the last dump date. dump levels 1 through 9 are used for incremental  backups. Only new, or files changed since the last backup are copied  during an incremental.<p>
This doesn't adequately describe how the <B>dump</B> levels work. Not understanding the difference between "level" dumps and "incremental" dumps could be catastrophic for administrators. A level 0 dump means "everything." Any other dump level means everything new or changed since the last backup AT A LOWER DUMP LEVEL. This is very different from the concept in the PC world.<p>
Under DOS, files have an archive bit. This bit is set whenever the file is created or changed. When you back up your PC, the backup procedure turns the bit back off. This is an incremental backup. It backs up everything in a series of connected steps.<p>
If I run a full backup Monday, then incrementals on Tuesday and Wednesday, and on Thursday I need to restore a file, I don't know which tape(s) that file is on. It's on Monday's for sure, since that was a full backup. Did it change Tuesday? Did it change again Wednesday? If it changed Tuesday and was backed up on Tuesday's incremental, then Wednesday's incremental will think "Oh, that doesn't need to be backed up." I'd need the entire week's tapes to make sure I have the latest version of the file. I could start with Friday's and work my way back until I found it, but that could still mean sifting through the entire week's tapes.<p>
Under UNIX's <B>dump</B> system, I can run a full (level 0) dump Monday, then level 1 dumps Tuesday through Friday. Tuesday backs up files new or changed since Monday's backup. Wednesday backs up files new or changed since Monday's level 0 backup, not since Tuesday's level 1 backup. Thus, on Wednesday if I need to recreate a disk or directory, I need Monday's level 0 backup, and only the most recent level 1 backup. This is a level backup system. It backs up everything you need to bring you back up to this level from ground-level (level 0).<p>
Level dumps have their downside. If a file gets modified Tuesday, it will appear on each backup tape from Tuesday through Friday. This "wastes" space on the tapes, but makes it much easier to recover the correct version of the files in question. Still, it saves space compared to doing a full dump every day.<p>
At my workplace, we cannot afford to do full dumps of large filesystems every day. Our procedure, in short, is to do a full level 0 dump, once, and do level 1 dumps from then on, until the amount of information that has changed since the level 0 dump will no longer fit on one set of backup tapes. At that point, we do a new level 0, and do level 1s from there. To restore a file or filesystem to a particular date, we need the level 0 backup and that day's level 1 tape. Note that this works best for filesystems with some amount of data that doesn't change much. If everything changed every day, there would be no point to doing things this way.<p>
The dump levels available through the UNIX <B>dump/ufsdump</B> commands are very useful. In and of themselves, they form a powerful part of a powerful backup utility.<p>
John B. Batzel<br>
Systems Programmer<br>
University of Pennsylvania<br>
Computer and Information Science Department<br>
Philadelphia, PA 19104<br>
<p>
<I>Point well taken. Levels do indeed add considerable flexibility for the administrator.<p>
-REB<p>
<p>
</I>Subject: November: Backup or Die<br>
Author: Brad Knowles<p>
As usual, you've produced an excellent issue, but a couple of points bear augmenting. I note that Jonathan Feldman's article "Inexpensive Network Troubleshooting" points people to: <B>ftp://ftp.ee.lbl.gov/traceroute.tar.Z</B>, but that version is out of date. A more current version can be found at: <B>ftp://ftp.nikhef.nl/pub/network/traceroute.tar.Z</B>.<p>
In Bjorn Satdeva's "Questions and Answers" column, he points readers to a program called <B>nslint</B>, but does not provide an URL where that program can be found. May I also recommend another resource, the DNS Resources Directory maintained by Andras Salamon at: <B>http://www.dns.net/dnsrd/</B>? If you look on the "DNS Tools Page" at <B>http://www.dns.net/dnsrd/tools.html</B>, you'll find a link to where <B>nslint</B> can be found.<p>
In addition to <B>nslint</B>, another useful tool is <B>dnswalk</B> (by David Barr) and/or "doc" (originally written by Steve Hotz &amp; Paul Mockapetris, but which I now maintain). I plan to upgrade "doc" in the near future to work correctly with the version of <B>dig</B> found in BIND 8.1.<p>
Brad Knowles<br>
http://www.his.com/~brad/<br>
comp.mail.sendmail FAQ Maintainer Emeritus<br>
The comp.mail.sendmail FAQ is now at http://www.sendmail.org/faq/<br>
<p>
<I>Thank you for your helpful comments. -AA</I>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
