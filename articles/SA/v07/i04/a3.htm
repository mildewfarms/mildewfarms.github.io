<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v07, i04: Time Synchronization in a UNIX/NT Environment</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a3_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a3_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a3_l2.htm">Listing 2</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a3_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/1998/apr98.tar"><b class=codeListing>apr98.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>



<H1>Time Synchronization in a UNIX/NT Environment</H1><p>
<p>Nalneesh Gaur<p>
Heterogeneous environments are increasingly demanding better security measures. One such aspect of security is accurate time keeping. Any client/server operating system can expect to drift by several seconds each day depending on system activity and the platform. If unchecked, any system at a given time may be farther apart in time from another system in the same enterprise. The Network Time Protocol (NTP) provides a reliable and accurate time source. Both UNIX and Windows NT provide system administrators with software options to synchronize the time in these environments. Additionally, Windows NT 5.0 is expected to implement Kerberos authentication. Kerberos relies heavily on time synchronization to prevent replay attacks, thereby making time synchronization essential.<p>
This article stresses the necessity for accurate time keeping, discusses the implementation of time-synchronized UNIX/NT networks, and provides details on the different tools available for UNIX and Windows NT.<p>
<B>Time Keeping</b><p>In networking environments, resources are accessed by different client/server applications. Listed below are some of the items that emphasize the requirement for accurate time keeping.<p>
<ol>
1. Different users of the network resources modify files on fileservers. Irregular file creation and access times on the servers/clients may result in unexpected application behavior when files are accessed.<br>
<p>
2. System logs may reflect unreal values if time is inconsistent between servers.<br>
<p>
3. Excess system activity may cause the systems clock to lag behind the "real time."<br>
<p>
4. Kerberos is planned to be at the heart of Windows NT 5.0 authentication and is currently being used in many UNIX environments. The Kerberos authentication service protects against certain types of attacks by time stamping transactions.<br>
<p>
5. NIS+, secure shell, and secure RPC rely on time stamps to prevent replay attacks.<br>
<p>
6. Software builds can be unpredictable when the development-team platforms differ on system times.</ol>
<B>NTP</b><p>David Mills developed the Network Time Protocol (NTP) at the University of Delaware. The NTP is used to synchronize the time of a computer client or server to another server or reference time source, such as a radio or satellite receiver or modem. NTP is capable of maintaining time consistency within a millisecond on LANs and within a few tens of milliseconds across WANs. NTP is freely available and runs on all the variants of UNIX and Windows NT. NTP, currently at version 3, is capable of communicating with older versions of NTP servers. NTP provides a structured and accurate method for distribution of timestamps.<p>
NTP is built on top of the TCP/IP protocol. The protocol is capable of synchronizing multiple hosts over extended periods of time. Timeservers are organized as a series of stratums (see Figure 1). The stratum 0 consists of hardware clocks such as the radio and the atomic clocks. The devices in stratum 0 are connected to computers known as stratum 1 servers. Stratum 1 servers provide the most accurate times and thus serve as the primary network time standards. The stratum 1 servers can provide time service to multiple stratum 2 servers. It is desirable that the stratum 1 servers do not serve time directly to hosts since they may be overwhelmed with time stamp requests. The stratum 2 servers further distribute time to stratum 3 servers and so on. The number of strata is limited to 15, however. The lower strata are generally less accurate. NTP also adjusts time stamps for travel time due to network delays caused by network latencies inherent in various network components. NTP allows for encryption of time stamp packets to prevent an attack on NTP itself. However, it is important to note that the encryption may not be worthwhile if any of the servers in the chain of servers does not use encryption.<p>
The RFC 1305 (<B>http://ds.internic.net/rfc/rfc1305.txt</B>) describes the NTP protocol in detail. More information on the protocol, along with source code, can be obtained from <B>http://www.eecis.udel.edu/~ntp</B>.<p>
Most operating systems periodically check the hardware clock to adjust the OS time (software clock). Any drift in the OS clock is adjusted in gradual steps or "ticks" until the hardware time and the OS time are synchronized. This process of gradually adjusting the OS time is called the clock slew rate. Because NTP conflicts with the OS-based clock synchronization, it is recommended that the OS-based clock synchronization be turned off. On Solaris the software clock can be turned off by editing the <B>/etc/system</B> file and adding <B>set dosynctodr=0</B>. Please refer to the specific system documentation to turn off the softclock option.<p>
<B>NTP Servers</b><p>NTP operation imposes a small load on the server. Therefore, a departmental file server can be used to run the NTP server software. It is recommended that one NTP server be used for each subnet.<p>
<B>Installation</b><p>For UNIX-based systems, the distribution of the source code includes the <B>configure</B> command. This command will, by default, detect various options required for the successful compilation of the executables. By default the debugging option is turned on. The <B>-prefix</B> option can be used to specify a directory for the installation of the architecture specific files. By default, drivers for all reference clocks are included. The <B>-disable</B> option can be used to disable drivers that are not required. Upon completion of the <B>configure</B> command, <B>make</B> should be run to successfully compile the NTP programs. A successful compilation will result in the executables - <B>xntpd</B>, <B>xntpdc</B>, <B>ntpq</B>, <B>ntpdate</B>, <B>tickadj</B>, and <B>ntptrace</B>.<p>
The NTP server for NT has been successfully ported to Windows NT, however the server is unsupported. Commercial versions of the NTP server are available from sites such as Coetanian systems (<B>http://www.coetanian.com</B>). The NTP distribution contains the NTP port of NT. The NTP server for NT is supported for NT versions 3.5, 3.51, and 4.0. NTP for NT requires the latest InstallShield SDK for Windows NT 4.0, Perl5 for Win32 (available at <B>http://www.activestate.com/software</B>), and a C compiler. The <B>%PATH%</B> environmental variable must contain the path to the C compiler and the PERL 5 binaries. The NTP server, when installed properly, provides NT Event Logging. The NTP distribution contains a brief description of the installation procedure. Additionally, the documentation lists NTP server enhancements for NT, known bugs, and future plans. The distribution builds the installation files including the <B>setup.exe</B> file and the NTP executables prior to installation. Pre-built binaries for NTP server for Windows NT are currently unavailable.<p>
<B>Configuration</b><p>The configuration file utilized by <B>xntp</B> is located at <B>/etc/ntp.conf</B>. In its simplest form, the configuration file can contain the name of one or more servers to synchronize the time against. The client running <B>xntpd</B> can receive synchronization from any of the servers listed in the configuration file. Using the keyword "server" followed by the host name or the dotted IP address specifies servers. The NTP distribution documentation recommends that at least three servers be listed for redundancy. The keyword "peer" defines any host that is expected to both receive synchronization from another server, as well as to provide synchronization to it. The "peer" keyword can also have an authentication key associated with it.<p>
Normally the <B>xntp</B> daemon takes a day to compute the intrinsic clock frequency error. The value changes minimally after its initial computation. The frequency error can be stored in a file specified by the configuration file's "driftfile" keyword followed by the file name. Should <B>xntpd</B> have to be restarted, it will read the "driftfile" instead of re-computing the error.<p>
NTP will enable the authentication option when "authentication yes" is added to the configuration file. The authentication option will reject all packets that cannot be decrypted, unauthenticated packets, and packets encrypted with keys that are not trusted anymore. Every transmitted NTP packet will contain a 32-bit key ID and a 64/128-bit cryptographic checksum. The checksum is computed using either the Data Encryption Standard (DES) or the Message Digest (MD5) algorithms. This causes the receiving pair to re-compute the checksum and compare it to the checksum included with the packet. The shared and key IDs must be the same between the peers. The keyword "key" followed by the key ID after the peer host specifies the keys from the keys database. The keyword "keys" followed by the file name in the configuration file informs <B>xntpd</B> about the location of the authentication keys. The keys file consists of keys IDs and associated keys. NTP also uses a keyword called "trustedkeys" to invalidate any compromised keys.<p>
A sample <B>ntp.conf</B> file is provided in Listing 1. The configuration file lists stratum 1 servers for synchronization. Three peers are listed along with their key IDs. Note that the "trustedkeys" lists only two key IDs as one of the hosts key is probably compromised.<p>
The <B>/etc/services</B> file on the host machine must be configured to accept UDP packets on the NTP port 123. NTP is specifically designed to use connectionless UDP and will not respond to TCP.<p>
<B>Startup</b><p>The NTP distribution documentation recommends running <B>tickadj</B> and <B>ntpdate</B> prior to starting the NTP daemon. Running the following command can start the NTP daemon (<B>xntpd</B>)<p>
<pre>
brahe# xntpd -c /etc/ntp.conf -l /opt/ntp/logs/log.txt
</pre><p>
</b><p>The <B>-l</B> option specifies a log file. The NTP daemon should be added to the system startup files for the NTP daemon to start automatically upon bootup.<p>
<B>Time Service for Windows NT</b><p>Timeserv is part of the Windows NT resource kit for Windows NT versions 3.5 and above. Timeserv is a service for Windows NT that can set the server/workstation's time from a variety of resources. The Timeserv service runs in the background even when no one is logged on to the system. This service sets the Windows NT systems clock to within 10 milliseconds of the source. The Timeserv service implements a simple adaptation of NTP and as such may not compare well with the accuracy and reliability of NTP. Timeserv is capable of obtaining timestamps from NTP-based servers as well as from other Windows-based machines. The Timeserv service can be implemented as multi-tiered time synchronization architecture. Figure 2 shows such a Windows NT Time Service architecture. Server machines installed with the Timeserv software are considered to be either (a) master server, (b) primary time server, or (c) secondary timeserver. A master server is a machine that synchronizes its system clock by communicating with a reliable timeserver such as the timeserver at NIST or the USNO. The master timeserver thus becomes the timeserver for all internal hosts. A primary timeserver machine synchronizes its time with a master timeserver and is made available as the time source for a secondary timeserver. A secondary timeserver request synchronizes its time against another timeserver from a specific NT domain. The master Timeserv server itself may be adequate for most small LANs. The master server can also synchronize against an NTP server on the LAN.<p>
Installation of the Timeserv service is straightforward. The Microsoft Windows NT Resource Kit CD-ROM contains the <B>timeserv.exe</B>, <B>timeserv.dll</B>, and the <B>timeserv.ini</B> file. A <B>timeserv.wri</B> file on the CD-ROM provides details on the Time Service. The <B>timeserv.exe</B> and the <B>timeserv.dll</B> files must be copied to <B>%systemroot%\system32</B>. The <B>timeserv.ini</B> file must be copied to <B>%systemroot%</B> (on my system <B>%systemroot%</B> points to <B>c:\winnt</B>). After copying the files, <B>timeserv.exe</B> must be run with either a <B>-automatic</B> or <B>-manual</B> option. This option specifies whether Timeserv will be automatically started or will need to be started manually upon system bootup. The Timeserv service can be started from the Services utility in the control panel.<p>
The Timeserv program refers to the <B>timeserv.ini</B> file during initialization. After initialization, the entries from this file are copied into the system registry. Modifying the <B>timeserv.ini</B> file will require an update of the system registry for Timeserv service to absorb the changes. This can be done by stopping the Timeserv service followed by running <B>timeserv.exe -update</B> and then restarting the service. Time synchronization by Timeserv posts status messages to the NT event log. The default <B>timeserv.ini</B> file is set up to dial the United States atomic clock via a modem attached to COM1. The Timeserv initialization file is an ASCII file that contains parameters for the configuration and startup of the Timeserv service. Listing 2 displays settings in a <B>timeserv.ini</B> file for a server that will act as the master timeserver using an NTP server as its time source. Lines preceded by "REM" display comments in the <B>timeserv.ini</B> file.<p>
<B>Synchronization Utilities</b><p>On most UNIX systems, the Berkeley <B>rdate</B> commands synchronize the client's clock with that of a reference system timesource:<p>
<pre>
brahe% rdate timesource
</pre><p>
<p>rdate</B> can be inserted into the system cron file to automate the process. The <B>rdate</B> command sets the client machine's time to that of the timesource. The client machine's time will be inaccurate in the event that the timesource fails to set its time correctly. Thus, the <B>rdate</B> command may be suitable for the client system but is not recommended for use on timeservers themselves.<p>
NTP provides the <B>ntpdate</B> utility akin to the Berkeley <B>rdate</B> utility. The <B>ntpdate</B> utility adjusts the system clock in gradual steps. If the system clock is offset by more than half a second from the reference, then <B>ntpdate</B> synchronizes the system clock in gentle steps. The <B>ntpdate</B> utility can be used to update the timeserver just prior to running the timeserver software.<p>
The <B>net time</B> is a DOS command that can be used to synchronize the time against a reliable time source on the network. Computers running Windows NT, Windows 95, Windows for Workgroups, or DOS with Microsoft network client software can use this command. On Windows NT server/workstations, this command is ordinarily available only to systems and domain administrators. The <B>net time</B> command is akin to the Berkeley <B>rdate</B> command. The <B>net time</B> command can be written as part of an NT domain logon script for each user. This way, the user workstation/PC will synchronize its time with a more reliable time source on the network. Listing 3 provides a cook book approach to synchronizing client workstation in a Windows NT networked environment. The basic syntax of the command resulting from <B>net help time</B> is as follows.<p>
<pre>
NET TIME [\\computername | DOMAIN[:domainname]] [/SET]</pre><p>
<p><p>
NET TIME synchronizes the computer's clock with that of another computer or  domain, or displays the time for a<br>computer or domain. When used without options on a Windows NT Server domain, it displays the current date and time at the computer designated as the time server for the domain.<p>
<pre>
\\computername        Is the name of the computer you want to                      check or synchronize with.<p>

/DOMAIN[:domainname]  	Specifies the domain with which to
synchronize time.<p>

/SET                  	Synchronizes the computer's time with                     the time on the specified computer or<br>                      domain.<p>

/YES                  	Carries out the NET TIME command without
first prompting you to provide
information or confirm actions.</pre><p>
<p>Summary</b><p>In today's networked environments, time synchronization is vital. NTP provides a powerful yet flexible method to synchronize time in a UNIX/NT environment. The Microsoft NT resource kit provides the Timeserv utility that can be installed to run as a service on Windows NT platforms. Although Timeserv implements only a subset of NTP, it is a very useful utility to synchronize Windows NT clients. The Timeserv service may obtain accurate time from another UNIX or NT server running NTP or another NT server running Timeserv in master or primary mode. Both UNIX and NT provide native commands that can be used to synchronize time on a client workstation against a more reliable time source. The tools and utilities described in this article allow an enterprise consisting of UNIX and NT servers and workstations to stay time synchronized.<p>
<B>Resources</b><p>U.S. Naval Observatory Time Service Department: <B>http://tycho.usno.navy.mil/</B><p>
NTP Home page: <B>http://www.eecis.udel.edu/~ntp</B><p>
NIST Time and Frequency Division: <B>http://www.bldrdoc.gov/timefreq</B><p>
NTP News group:<p>
<B>nntp://comp.protocols.time.ntp</B><p>
Time Service for Windows NT 3.5 or Later: <B>http://home1.gte.net/dougho/Timeserv.htm</B><p>
NTP Version3 RFC: <B>http://ds. \<br>  internic.net/rfc/rfc1305.txt</B><p>
NTP download site: <B>ftp://ftp.udel.edu/pub/ntp</B><p>
Time Sync alternative to Timeserv:<br><B>http://intsoft.com/timsync.html</b><p>NTP Timeserver for windows NT: <B>http://www.coetanian.com</B><p>
Perl for Windows NT: <B>http://www.ActiveState.com/software</B>




<h1>About the Author</h1><p>










Nalneesh Gaur has been working with computers since the late 1980s and has spent the greater part of the past five years working with UNIX. He currently works for Dynatech Integrated Systems Corporation as a systems engineer. His work involves UNIX/Windows NT systems integration, Web design, and security aspects of the Internet and intranets.





















<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
