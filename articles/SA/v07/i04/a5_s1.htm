<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v07, i04:  Sidebar : Recipes for Web Servers</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a5.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a5_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a5_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a5_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink>Sidebar 1</span></td>
		<td><a href="../../../../source/SA/1998/apr98.tar"><b class=codeListing>apr98.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>


<H1>Sidebar : Recipes for Web Servers</H1><p><p>
There are some recipes for configuring Web servers. UNIX HTTP servers expecting a large connection rate can benefit from some kernel tuning. These adjustments prepare the UNIX kernel to support the kind of load generated by HTTP proccesses and its associated services [1, 4]. Other adjustments in addition to kernel tuning are also listed here:<p>
<ol>
<li>Listen queue. The size of the listen queue corresponds to the maximum number of connections pending in the kernel. If the queue is too small, clients will sometimes see "connection refused" or "connection timed out" messages. A value of 128 for the listen queue is recommended for Web servers. In Solaris, this parameter is called <B>tcp_conn_req_max</B> and can be read and written using the <B>ndd</B> command on the TCP device <B>/dev/tcp</B>). Be warned that Solaris versions earlier than 2.5 restrict the listen queue size to 32; upgrade is necessary.<p>
<li>Network buffers. The machine must have enough memory to buffer the data that is sent out. In some UNIX versions these buffers are referred to as <B>mbufs</B>. If <B>netstat -m</B> shows request for memory denied, try to increase <B>mbufs</B>.<p>
<li>Keepalive. A high traffic Web site can often be drowned with accumulated, dead, idle connections that have not properly closed. The default timeout value is 2 hours (7200000ms). If you have a high traffic Web site, you should lower this value to about 15 minutes.<p>
<li>Monitor the number of retransmits using the <B>netstat -s</B> command. Examine the following values: <B>tcpOutDataSegs,</B> <B>tcpRetransSegs</B>, <B>tcpOutDataBytes</B>, <B>tcpRetransBytes</B>; if the retransmission values are greater than 30 to 40% of the total, you should delay the retransmission to accommodate slower networks.<p>
<li>System memory. Try to get lots of system memory, especially if your server is doing some server-side processing. A maximum of 128 Mb per processor is recommended. If some of your server processing involves database searches (e.g., search engines) try to use the system memory to cache the database tables. While this can be very costly for large legacy databases, it can be practically used for Intranet search engines, because most of the search operations are done over preprocessed indexes.<p>
<li>Logging. Try to reduce logging to a minimum and avoid doing some log processing in the Web server (e.g., DNS lookups). Turning off the HTTP server logs can increase performance by 20%. If you need to do DNS lookups to produce access statistics, do it on a separate machine. Avoid using the UNIX system logger (<B>syslogd</B>) to log any HTTP server activity.<p>
<li>Web server configuration. Threaded Web servers can be configured to optimize the amount of Web server processes started and the number of threads to be serviced by each process. You may need to play with these parameters to obtain the best results. Some of these settings can be added at system boot, for example, by adding them to <B>/etc/init.d/inetinit</B> (values are in milliseconds):<p>
<pre>
/usr/sbin/ndd -set /dev/tcp tcp_keepalive_interval 900000
/usr/sbin/ndd -set /dev/tcp tcp_rexmit_interval_min 3000
/usr/sbin/ndd -set /dev/tcp tcp_rexmit_interval_initial 3000
/usr/sbin/ndd -set /dev/tcp tcp_rexmit_interval_max 10000
/usr/sbin/ndd -set /dev/tcp tcp_close_wait_interval 60000
/usr/sbin/ndd -set /dev/tcp tcp_ip_abort_interval 60000</pre><p>
<p>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
