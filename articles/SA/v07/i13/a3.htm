<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>Web Feature:  File Tamper Checking</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<table width=100% cellpadding=15 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>
<td>
<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a3_l.htm">Listing 1</a></span></td>
		<td></td>

	</tr>
</table>
</td>

</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top>

<h1>File Tamper Checking</h1><p>
James W. Meritt<p>
<p>A typical system administrator is responsible for dozens, perhaps hundreds of separate systems. On each of these systems there are dozens of files, the integrity of which must be maintained. Or, at least the administrator must know if they have been changed. This is too daunting a task to handle.<p>
My solution is a script, called <B>niswatch</B>, shown in Listing 1, that automatically checks the multitude of files then emails the results of that check to me. The program automatically, via cron, checks a nearly unlimited number of files and systems and reports the observed changes. This program, as well as the databases it maintains, runs on a system that is more closely monitored (i.e., mine).<p>
To use this script, you will need to perform some preliminary setup. You will need a list of programs used, along with the location of configuration/control files/tables and temporary files. You will also need to determine the best mail setup for the script's reports. These variables will all be used by <B>niswatch</B> and should be checked before use. The programs used (such as <B>awk</B> and <B>ls</B>) must be specified for the individual system. It is essential to set the "MAILTO" variable so that the results are mailed to the proper, valid address.<p>
The flow of the program (shown in bold) is:<p>
<B>Get the systems currently responding to RPC queries</b><p>This is necessary for large dynamic networks, though a simple list read in from a file or set as a variable may be used for a small number of systems. The latter setup would avoid the necessity of ensuring the correct RPC setups on all systems.<p>
For each of the systems responding,<p>
Check for the database of files for a particular system<p>
Determine the most recent and previous system files</b><p>If <B>niswatch</B> identifies a particular system as one previously scanned, it takes a long listing of the previously identified files and compares the two listings. Although this is less comprehensive than taking the checksum of the specified files (using MD5, for example), it is faster and less computationally intensive. If a change is evident, this method allows the determination of exactly what changed, instead of merely checking whether a change occurred.<p>
<B>If there is only one file, keep it</b><p>Otherwise, remove the previous file. This keeps the space requirements for the monitoring (secure) system within reasonable limits.<p>
If the system is not recorded as being previously scanned, the following is performed for the configuration/setup of that system for future comparison. This list is built by combining:<p>
<ul>
<li>A default list. This default list needs to be built by the sys admin and should contain a list of such files as the <B>passwd</B> file and whatever else the administrator thinks is vital. This list will vary with each organization and should be made using your favorite text editor. Give the full path description of the file (e.g., <B>/etc/passwd</B>), one entry per line.<p>
<li>A <B>find</B> on ".???*", which should locate all "dot" files on the system<p>
<li>Configuration files<p>
<li>Files ending with "rc"<p>
<li>Files ending with "tab"<p>
<li><B>profile</B><p>
<li><B>cshrc</B><p>
<li>Host files<p>
<li><B>crontab</B> entries<p>
<li><B>inetd</B> configuration file<p>
</ul>
<p>Please be aware that this list is built by examining the entire disk multiple times for files that are not in expected locations, thus, it is very intensive on disk I/O. It should not be done while someone else is planning to use the system. They will not be able to.<p>
The list is then cleaned up by making sure that no entry is duplicated and by removing files that have been identified as not needing to be monitored. There is a message identifying which file this configuration is in so that the operator can add or delete particular files for monitoring as s(he) wishes. The file can then be edited by any text editor to delete any file that is not desired. Any file that the sys admin wants "to keep an eye on" may also be included.<p>
<B>Create a directory</b><p>This directory will be used to hold the information for that particular system. The files that contain the long listing of the identified files are called "snapshots" and contain the <B>ls -l</B> information for each file specified - size, creation date, and permissions.<p>
<B>Take a snapshot</b><p>The system reads the file listing and then takes a snapshot of the files identified, which is placed into the snapshots directory.<p>
<B>Check for new executable items selected directories</b><p>These are: <B>/bin</B>, <B>/etc</B>, <B>/usr/ucb</B>, <B>/usr/local</B>, <B>/usr/bin</B>, <B>/usr/sbin</B>, and <B>/usr/ucb</B>.<p>
<B>Check the NIS plus database</b><p>I perform extracts of the NIS password file and host listing.<p>
<B>Perform check/retain on NIS information</b><p>This is essentially the same check that was done on the previous system configurations.<p>
<B>Email the file-check report</b><p>Email this report to the previously identified address and remove temporary files.<p>
I've used this program successfully. Although I have no proof that it has failed to identify files that were tampered with by a hacker, it has identified when upgrades were installed (changing configuration files), new software installed (directory names have their dates changed), and similar actions. In every case, it was a simple matter to call one or two people who might have been responsible for what I saw and confirm that it was an approved alteration. Of course, it would have been nice if I had been told about it first, but I did confirm that the system was working!<p>
It is possible to use system lists instead of the rup check. Another modification I haven't included is the use of checksums against the identified files. Of course, the program can be operated at any time and not just executed from <B>cron</B>, but remember that the first time a particular system is scanned, it will put a heavy load on the system. This should not be done when the system is in use. Other methods of identifying essential files could be added, and "common" essential files could be entered in the default setup file.

<h1>About the Author</h1><p>
Jim Meritt is currently working for Wang Global, Inc as a Senior Security Analyst, and has been involved with Unix systems and networking for more than a decade. His email address is: JWMeritt@AOL.com.
<br>&nbsp;<br>
<! -- End Content ------ >
</td>
</tr>

</table></center>
<! -- End MASTER TABLE -- >

</body></html>