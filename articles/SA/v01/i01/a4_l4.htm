<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v01, i01: Listing 4</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a4.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a4_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a4_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a4_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink>Listing 4</span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a4_l5.htm">Listing 5</a></span></td>
		<td><span class=navbarLink><a href="a4_l6.htm">Listing 6</a></span></td>
		<td><span class=navbarLink><a href="a4_l7.htm">Listing 7</a></span></td>
		<td><span class=navbarLink><a href="a4_l8.htm">Listing 8</a></span></td>
		<td><span class=navbarLink><a href="a4_l9.htm">Listing 9</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a4_l10.htm">Listing 10</a></span></td>
		<td><span class=navbarLink><a href="a4_l11.htm">Listing 11</a></span></td>
		<td><span class=navbarLink><a href="a4_l12.htm">Listing 12</a></span></td>
		<td><span class=navbarLink><a href="a4_l13.htm">Listing 13</a></span></td>
		<td><span class=navbarLink><a href="a4_l14.htm">Listing 14</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a4_l15.htm">Listing 15</a></span></td>
		<td><a href="../../../../source/SA/1992/may92.tar"><b class=codeListing>may92.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 4</H1><p>
<PRE>
1: #
2: # spoolonite.sh: Version 2.0  2/27/92  by Leor Zolman
3: # Submit a job to the overnight job spooler
4: #
5: # usage:
6: #       spoolonite.sh jobname [priority] &lt;jobfile
7: # (or)
8: #       spoolonite.sh jobname [priority] &lt;&lt;END
9: #       ...
10: #       END
11: #
12:
13: debug=N                     # if Y, use current directory for testing
14: SPOOLDIR=/usr/spool/onite   # Master Overnight Spooler Directory
15: NPRIORITIES=7               # Number of priority levels
16: DEFAULT_PRIORITY=4          # If no priority given, this used by default
17: LOCKFILE=$SPOOLDIR/Onite.LOCK
18:
19: USE_CUTOFF=N                # Y to use cutuff time, N for no restriction
20: CUTOFF_TIME=1955            # last call for jobs: hour and minute as hhmm
21:
22: CHECK_LOCK=Y                    # Y to reject requests while spooler is running
23:
24: #
25: # Make sure to list any environment variables that programs called by
26: # the user's script need to have defined, but that the user's environment
27: # itself may not have explicitly exported:
28: #
29: toexport=&quot;PATH DBDATE DBPATH DEPT DEPTO&quot;
30:
31: [ $# -lt 1 ] &amp;&amp; echo &quot;usage: $0&lt;jobname&gt;[priority]&lt;jobtext&quot;&gt;&amp;2
&amp;&amp; exit 1
32:
33: if [ $debug = Y ]; then
34:     JOBDIR=jobs
35: else
36:     JOBDIR=$SPOOLDIR/jobs
37: fi
38:
39: # Check for cutoff-time restriction:
40:
41: time=`date +%H%M`
42: if [ $USE_CUTOFF = Y -a $time -gt $CUTOFF_TIME ]; then
43:     echo &quot;Sorry, it is too late to spool a job tonight. Try again tomorrow.&quot; &gt;&amp;2
44:     echo &quot;(and please disregard any messages below about this job being queued!)&quot;&gt;&amp;2
45:     exit 1
46: fi
47:
48: # Check to make sure the spooler isn't currently running:
49: if [ $CHECK_LOCK = Y -a -f $LOCKFILE ]; then
50:     echo &quot;Sorry, it is too late to spool a job tonight. Try again tomorrow.&quot; &gt;&amp;2
51:     exit 1
52: fi
53:
54: # Make sure there is no similarly-named job already queued:
55:
56: tpr=1
57: while [ $tpr -le $NPRIORITIES ]
58: do
59:     if [ -r $JOBDIR/P$tpr/$1 ]; then
60:         echo &quot;$0: job $1 already exists (priority $tpr)&quot; &gt;&amp;2
61:         exit 1
62:     fi
63:     tpr=`expr $tpr + 1`
64: done
65:
66: # Spool the jobs at the default priority, unless explicity priority was given:
67:
68: pri=$DEFAULT_PRIORITY
69: if [ $# -eq 2 ]; then   # explicit priority level given; process it
70:     pri=`checknum $2`
71:     if [ $pri = &quot;ERROR&quot; -o $pri -lt 1 -o $pri -gt $NPRIORITIES ]; then
72:         echo &quot;$0: Bad priority \&quot;$2\&quot; (only 1-$NPRIORITIES allowed)&quot;&gt;&amp;2
73:         exit 1
74:     fi
75: fi
76:
77: JOBFILE=$JOBDIR/P$pri/$1
78: [ &quot;$PS1&quot; != &quot;&quot; ] &amp;&amp;  PS1=\&quot;$PS1\&quot;; export PS1   # fixes multiline
prompt bug
79: /bin/env &gt;$JOBFILE              # write environment into job file
80:
81: echo &quot;export $toexport&quot; &gt;&gt;$JOBFILE
82:
83: echo &quot;cd `pwd`\n&quot; &gt;&gt;$JOBFILE    # change to current directory in job file
84: cat &gt;&gt;$JOBFILE                  #  copy job text into job file
85:
86: exit 0</pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
