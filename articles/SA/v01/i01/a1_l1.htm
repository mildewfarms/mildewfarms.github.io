<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v01, i01: Listing 1</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a1.htm">Article</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><span class=navbarLink><a href="a1_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1992/may92.tar"><b class=codeListing>may92.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1</H1><p>
<PRE>
#!/bin/sh -

# dkmap queries hosts to get useful information about
# shared disks mounted in a local network.  Each host
# in the host list requires an entry in your trusted
# host lists (usually /etc/hosts.equiv).
# Copyright: Dorian Deane, 1992

trap 'echo Operation Interrupted; /bin/rm -f /tmp/*.$$; \
exit 1' 2 3 15
echo &quot;&quot;

# Remember, all hosts must be in hosts.equiv or /.rhosts
if [ $# -gt 1 ]; then   # if defined on command line
HOST_LIST=$*
else
HOST_LIST='host1 host2 host3 host4 hostn'
fi

# A pre-defined host list is not as elegant as
#
# HOST_LIST=`grep  nnn\.nnn\.\[0-99\]\[0-99\]  \
# /etc/hosts | /bin/sed 's/.* //' | /bin/sed 's/ .*//'
`
#
#  but works better in an imperfect world

# DISK_LIST is appropriate for &quot;off the rack&quot;

# Suns.  You'll need to modify yours appropriately.

# On Suns, use &quot;sr&quot; to see CD-ROM capacity.
DISK_LIST=&quot;sd xy&quot;

NL='
'
ARCH=/bin/arch       # These programs are
DF=/bin/df           # variously named on
DKINFO=/etc/dkinfo   # different machines.

DEVICE=
SUBTOTAL=0      # The script gets totals for
BIGTOTAL=0      # diskspace, but they're not necessary,
HOSTTOTAL=0     # merely a convenience.

# Some date programs have better syntax--this is more portable.
set `date`
OFS=$IFS    # A trick to reset IFS, later.

echo &quot;&quot;
echo &quot;&quot;
echo &quot;                     SYSTEM-WIDE DISK INFORMATION&quot;
echo &quot;                         &quot; $2 $3, $6
echo &quot;&quot;

for HOST in $HOST_LIST
do
echo &quot;&quot;
echo &quot;                      &quot;  ****$HOST****
# PART I -- a simple df:
echo &quot;&quot;
echo &quot;Locally Mounted Files Systems on $HOST&quot;
echo &quot;&quot;
rsh $HOST $DF -t 4.2  # The -t option is a Sun-ism.
echo &quot;&quot;               # For non-Suns, try
# &quot;rsh $HOST df | grep -v : &quot;

# PART II -- get import info. in a nice format
echo &quot;&quot;
echo $HOST Imports the Following Files:
echo &quot;&quot;
echo &quot;Source             Local Name on $HOST&quot; # 5 tabs
rsh $HOST cat /etc/mtab | grep : | \
/bin/sed 's/nfs.*//' | \
tr &quot; &quot; &quot;\011\011\011\011\011&quot;   # \011 = tab
echo &quot;&quot;

# PART III -- get disk labels
# The general idea is to copy a nested script to the
# remote machine, execute it, and save the output to
# a temporary file on the local machine.  This may
# seem strange, but it saves many rsh's.

rsh $HOST cat &lt;&lt;EOF  &quot;&gt;&quot; /tmp/dkfind.$$

#!/bin/sh -

case `$ARCH` in
sun*)  DKINFO=/etc/dkinfo ;;
gould) DKINFO=/etc/diskpart ;;
3b2)   DKINFO=/etc/devinfo ;;
# Insert your machine-type here!
*)     echo unknown machine type ;;
esac

echo &quot;             &quot; DISK LABELS for $HOST
echo &quot;&quot;

for DISK in $DISK_LIST
do
# This assumes no more than 10 disks per machine
set -- &quot;0&quot; &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot;
&quot;5&quot;&quot;6&quot; &quot;7&quot; &quot;8&quot; &quot;9&quot;

for NUMBER in \$*
do
$DKINFO \${DISK}\${1} 2&gt; /dev/null | grep -v &quot;no such disk&quot;
if [ \$? -eq 0 ]; then
echo &quot;&quot;
fi
shift
done
done
EOF

rsh $HOST sh /tmp/dkfind.$$ &gt; /tmp/dkfound.$$  # execute it.
rsh $HOST /bin/rm /tmp/dkfind.$$               # remove it.
cat /tmp/dkfound.$$

# set IFS to newline
IFS=$NL

# Look at c: partition--defined as entire disk in most Un*x.
for RECORD in `grep &quot;^c:&quot; /tmp/dkfound.$$`
do
# (Remember, two seds are better than one awk!)
SUBTOTAL=`echo $RECORD|/bin/sed 's/c: //'|/bin/sed 's/ .*//'`
HOSTTOTAL=`/usr/bin/expr ${HOSTTOTAL} + ${SUBTOTAL}`
done
IFS=$OFS
echo &quot;&quot;
# Assume sector size of 512 bytes.
echo TOTAL for $HOST is `/bin/expr $HOSTTOTAL / 2` Kb
echo &quot;&quot;
SUBTOTAL=0
BIGTOTAL=`/usr/bin/expr ${BIGTOTAL} + ${HOSTTOTAL}`
HOSTTOTAL=0
echo &quot;-------------------------------------------------------------------&quot;
done
echo &quot;&quot;
echo TOTAL CAPACITY OF ALL DISKS is `/usr/bin/expr $BIGTOTAL / 2` Kb
/bin/rm /tmp/*.$$   # clean up</pre><p><P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
