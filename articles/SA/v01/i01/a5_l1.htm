<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v01, i01: Listing 1</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a5.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a5_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><a href="../../../../source/SA/1992/may92.tar"><b class=codeListing>may92.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1</H1><p>
<PRE>
#include &lt;sys/types.h&gt;
#include &lt;sys/sysmacros.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;sys/signal.h&gt;
#include &lt;sys/dir.h&gt;
#include &lt;sys/file.h&gt;
#include &lt;sys/immu.h&gt;
#include &lt;sys/region.h&gt;
#include &lt;sys/proc.h&gt;
#include &lt;sys/lock.h&gt;
#include &lt;sys/user.h&gt;
#include &lt;stdio.h&gt;

/*
n * psc - print status from core file
*
*      This program was written by John F.
*      Haugh II, and is hereby placed in
*      the public domain.
*      Use at your own risk ...
*
*      Author:
*
*      John F. Haugh II        (jfh@rpp386.uucp)
*      19 July 1988
*
*      Synopsis:
*
*      psc [ corefile ]
*
*      Description:
*
*      psc reads the user page from the beginning of a core file and
*      outputs some statistics.  The format is fairly similiar to the
*      output produced by the `user' command in crash(1M).  Note that
*      the I/O information is generally worthless since Unix sets
*      up a write command to output the core file.
*
*      If corefile is omitted, psc defaults to the file named core in
*      the current directory.
*
*      To Port:
*
*      The u-page is the first structure starting at the beginning
*      of the core file.  This should be universally true for all AT&amp;T
*      Unixii and may be true for Berzerkeley Unix.  The only thing
*      which may need to be changed is the u_base member of the user
*      structure.  Look in /usr/include/sys/user.h for possible names
*      for the base address for I/O.
*
*      The other big change has to do with the appropriate collection
*      of include files.  There are dozens of possibilities.  But,
*      fortunately only a finite number of combinations.
*
*      To Compile:
*
*      cc -o psc psc.c
*/

struct  user    user;
char    *corefile = &quot;core&quot;;
char    *segments[] = { &quot;user&quot;, &quot;system&quot;, &quot;user i&quot; };

main (argc, argv)
int     argc;
char    **argv;
{
FILE    *cfp;

if (argc != 0)
corefile = argv[1];

if ((cfp = fopen (corefile, &quot;r&quot;)) == (FILE *) 0) {
perror (corefile);
exit (1);
}
if (fread ((char *) &amp;user, sizeof user, 1, cfp) != 1) {
perror (corefile);
exit (1);
}
printf (&quot;PER PROCESS USER AREA:\n&quot;);
printf (&quot;USER ID's:     uid: %d, gid: %d, real uid: %d, real gid: %d\n&quot;,
user.u_uid, user.u_gid, user.u_ruid, user.u_rgid);
printf (&quot;PROCESS TIMES: user: %d, sys: %d, child user: %d, child sys: %d\n&quot;,
user.u_utime, user.u_stime, user.u_cutime, user.u_cstime);
printf (&quot;PROCESS MISC:  proc slot: %lx, cntrl tty: maj(%d) min(%d)\n&quot;,
user.u_procp, major (user.u_ttyd), minor (user.u_ttyd));
printf (&quot;IPC:           locks:%s%s%s%s%s\n&quot;,
user.u_lock == UNLOCK ? &quot; unlocked&quot;:&quot;&quot;,
user.u_lock &amp; PROCLOCK ? &quot; proc&quot;:&quot;&quot;,
user.u_lock &amp; TXTLOCK ? &quot; text&quot;:&quot;&quot;,
user.u_lock &amp; DATLOCK ? &quot; data&quot;:&quot;&quot;);
printf (&quot;FILE I/O:      user addr: %ld, file offset: %ld, bytes: %ld,\n&quot;,
#if defined(M_XENIX)
user.u_baseu,
#else
user.u_base,
#endif
user.u_offset, user.u_count);
printf (&quot;               segment: %s, umask: %01o, ulimit: %ld\n&quot;,
segments[user.u_segflg], user.u_cmask, user.u_limit);
printf (&quot;ACCOUNTING:    command: %s, memory: %ld, type: %s\n&quot;,
user.u_comm, user.u_mem, user.u_acflag ? &quot;fork&quot;:&quot;exec&quot;);
printf (&quot;               start: %s&quot;,
ctime (&amp;user.u_start));
}

--
</pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
