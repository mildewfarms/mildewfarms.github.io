<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v01, i03:  Sidebar: Regular Expression Metacharacters</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a8.htm">Article</a></span></td>
		<td><span class=navbarLink>Sidebar 1</span></td>
		<td><span class=navbarLink><a href="a8_s2.htm">Sidebar 2</a></span></td>
		<td><a href="../../../../source/SA/1992/sep92.tar"><b class=codeListing>sep92.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Sidebar: Regular Expression Metacharacters</H1><p>
<P>
The following are the metacharacters used within regular
expressions 
by the editors ed, ex, and vi; the stream editor, 
sed; the search programs grep and egrep; and 
by the little language, awk. Some of the metacharacters
are used by 
all of these programs. Others are only used by a few
of the programs.<P>

<B>. (Period, used by all)</B> Matches any character 
except newline. Example: &quot;a.c&quot; matches &quot;abc,&quot;
&quot;a2c,&quot; 
or &quot;a c.&quot;<P>

<B>[] (Brackets, used by all)</B> Defines a set of 
characters from which any one may match. Example: &quot;a[bc]d&quot;

matches &quot;abd&quot; or &quot;acd.&quot; The following
are sub-metacharacters 
that can be used within the brackets.
<B>^ (Caret)</B> If used as the first character of the 
set, it excludes the set from matching. Everything except
what is 
in the set matches. Example: &quot;ab[^cd]e&quot; could
match &quot;abae&quot; 
or &quot;ab4e&quot; since neither of those have &quot;c&quot;
or &quot;d&quot; 
as the third character.
<B>- (Hyphen)</B> If used between two characters in a 
set, a range of ASCII characters is specified. It is
a regular hyphen 
character when it is the first character of the set
or the first character 
after the caret. Examples:
[0-9] Match any single digit.
[a-z] Match lower case only.
[A-Za-z] Match any alphabetic.
[^A-Za-z0-9] Match any non-alphanumeric.
<B>] (Close bracket)</B> If used as first character of 
set or first after a caret, it acts as the close bracket
character 
instead of the matching bracket for the set. Example:
&quot;[]ab]&quot; 
matches &quot;]&quot; or &quot;a&quot; or &quot;b.&quot;<P>

<B>* (Asterisk, or star, used by all)</B> Matches 
0 or more of the previous character or set. Example:
&quot;ab*c&quot; 
matches &quot;abc&quot; or &quot;abbbbbc,&quot; but
also matches &quot;ac&quot; 
because of the zero. It always matches the longest possible
string.<P>

<B>+ (Plus, used by egrep and awk)</B> Matches 
one or more of the previous character set. Example:
&quot;ab+c&quot; 
matches &quot;abc&quot; or &quot;abbbbbc,&quot; but
not &quot;ac&quot; since 
there must be at least one &quot;b.&quot;<P>

<B>? (Question, used by egrep and awk)</B> 
Matches zero or one of the previous character set (in
egrep 
only). Example: &quot;ab?c&quot; matches &quot;ac&quot;
or &quot;abc&quot; 
only.<P>

<B>\{min,max\}</B> (Escaped braces with a number min, 
or a number min and a comma, or a number min and a comma
and another 
number max, where 0 &lt;= min &lt;= max &lt;= 255; used
by ed, sed, 
and grep) Follows a character or set to specify a range
of 
match repetitions. With just \{min\} it matches exactly
min 
times. With \{min,\} it matches a minimum of min times.
With 
\{min,max\} it matches within the range of min to max
inclusive 
times. This sets up a repeat count for the number of
times to match. 
Examples: &quot;a\{5\}&quot; matches five &quot;a&quot;
characters, but 
&quot;a\{5,\}&quot; (notice the comma) must find a minimum
of five &quot;a&quot; 
characters, although more than five will also be a match.
&quot;a\{5,7\}&quot; 
must find at least five &quot;a&quot; characters, but
no more than seven 
will be a match.<P>

<B>^ (Caret, used by all)</B> When used as first metacharacter,

the expression matches only when at the beginning of
a line. Example: 
&quot;^abc&quot; matches if and only if &quot;abc&quot;
is at the beginning 
of a line.<P>

<B>$ (Dollar, used by all)</B> When used as last metacharacter,

the expression matches only when at the end of a line.
Example: &quot;abc$&quot; 
matches if and only if &quot;abc&quot; is at the end
of a line.<P>

<B>\ (Backslash, used by all)</B> &quot;Escapes&quot; 
the following metacharacter by turning it into a regular
character. 
Example: &quot;a\.b&quot; is &quot;a.b,&quot; not &quot;a&quot;,
then any 
character, then &quot;b.&quot;<P>

<B>() (Parentheses, used by egrep and awk)</B> 
Creates a subexpression to which any of the modifier
metacharacters 
may apply, such as *, +, or ?. Example: &quot;(abc)?&quot;
matches &quot;abc&quot; 
or &quot;abcabc&quot; since &quot;?&quot; matches 0
or 1 of the 
previous subexpression.<P>

<B>\(\) (Escaped parentheses, used by ed, 
ex, and sed)</B> Surrounds a subexpression, tagging it 
for subsequent reference. The subsequent reference uses
the notation 
&quot;\#&quot; where &quot;#&quot; represents any single
digit from 1 
to 9. For instance, &quot;\1&quot; refers to the first
tagged subexpression, 
and &quot;\2&quot; refers to the second. Example: &quot;abc\(def\)ghi&quot;

will match &quot;abcdefghi&quot;, but the &quot;def&quot;
subexpression 
can be referred to later as &quot;\1.&quot;<P>

<B>\&lt;\&gt; (Escaped angle brackets, used by ed, 
ex, and vi)</B> Used with a character or set to be matched

only at the beginning of a word (if \&lt;) or end of
a word (if \&gt;). 
Example: &quot;\&lt;abc&quot; matches &quot;abcde&quot;
but not &quot;123abc&quot;, 
while &quot;abc\&gt;&quot; matches &quot;123abc&quot;
but not &quot;abcde&quot;, 
presuming those are words in the midst of other text.
&quot;\&lt;abc\&gt;&quot; 
matches only if &quot;abc&quot; is a whole word.<P>

<B>| (Vertical bar, OR, used by egrep and 
awk)</B> Separates two regular expressions (in egrep only)
that 
are OR'd together, which means either or both may match.
Example: 
&quot;abc|def&quot; matches either &quot;abc&quot; or
&quot;def&quot; or 
both anywhere in the line.<P>

The following metacharacters can be used in ex (and
one also 
in sed) in the replacement expression of a search and
replace 
operation.<P>

<B>&amp; (Ampersand, used by ex and sed)</B> 
Repeat entire regular expression used by the search
in the replacement. 
Example, &quot;/[0-9]\{5\}/000&amp;/&quot; says search
for any five consecutive 
digits (the subexpression between the first and second
slashes), and 
replace them with three &quot;0&quot; characters followed
by the same 
five digits that matched, whatever they may be (represented
by the 
subexpression between the second and third slashes).
In other words, 
replace every five-digit number with an equivalent eight-digit
number.<P>

<B>~ (Tilde, used by ex)</B> Reuse the replacement 
expression from the previous replacement command. Example:
given the 
example shown for the ampersand metacharacter, following
it with a 
new replacement command (&quot;[0-9]\{10\}/~/&quot;)
will find any 10-digit 
number and replace it with an equivalent 13-digit number,
since the 
previous replacement prepended three &quot;0&quot; digits
to whatever 
matches. <P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
