<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v06, i03:  Big Brother: A Web-based UNIX System and Network Monitor</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a4_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a4_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a4_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a4_l2.htm">Listing 2</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a4_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/1997/mar97.tar"><b class=codeListing>mar97.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Big Brother: A Web-based UNIX System and Network Monitor</H1><p>
<P>
Sean MacGuire<P>

</H1><p>One of the major responsibilities of any UNIX systems administrator is to know what is happening on the network at any given time. Once the number of machines on the network exceeds about seven, this process becomes dramatically more difficult. Determining the state of a system, before being told by an irate user that it's down, is an art form that only the paranoid and masochistic could embrace.<p>
Having faced this situation too many times, I have written and rewritten innumerable little scripts to check on the health of a system. Reporting network information was always a problem. I would either send myself bits of mail (and hope I read them), or I would compromise security by automating direct connections between machines, generally using some form of remote shell. Nonetheless, I still spent a significant amount of time telnetting around the network, logging in and generally making sure that all was well, day and night.<p>
So, I began looking into products to perform UNIX systems monitoring and notification. The systems I investigated had several serious drawbacks; they were quite expensive, some even requiring their own replicated servers to run. They seemed very complicated, requiring a considerable amount of time to install and configure. Most consumed vast amounts of systems resources, because they were so powerful and were operated from a central console. I just wanted to know how my machines were doing, without having to go into the office.<p>
Fortunately, the past few years have seen an explosion in the Internet and the Web. One great function of HTML is its ability to create an attractive, portable, and remotely accessible graphical user interface (GUI) quickly and easily. So, I decided to build Big Brother, a Web-based UNIX systems and network monitor.<p>
<B>Objectives</b><p>I wanted to monitor the following areas:<p>
<li>Network connectivity<p>
<li>Disk usage<p>
<li>CPU usage and number of users<p>
<li>Ensure important processes are up and running<p>
<li>Web servers<p>
<li>Important messages in the system logs<p>
And, I wanted the program to be lightweight and efficient.<p>
I also wanted:<p>
<li>A color coded status display of all machines on the network<p>
<li>Access to the real data from the remote system<p>
<li>Notification by pager if something went wrong<p>
<li>The ability to access this information from anywhere<p>
<li>The ability to integrate information from other packages, like Legato Networker<p>
In short, I wanted a Big Brother to watch the entire network for me.<p>
<B>Design</b><p>The central problem was not so much what the scripts were to do, but how to transmit this information to a central location in a secure fashion. For that purpose, I wrote two simple programs, a client (<B>bb</B>) that sends single lines of data to a server (<B>bbd</B>) over TCP port 1984.<p>
Monitoring connectivity within the network proved straightforward. I used a Bourne shell script to <B>ping</B> every host I wanted monitored, and wrote <B>bbnet</B> to test any port on any server. If <B>bbnet</B> is given an HTTP address, it not only checks for the presence of a Web server, but also displays the output from the server. This network monitoring script is called <B>bb-network.sh</B> and is executed every 5 minutes.<p>
I decided that each machine on the network should have a small client that measured local information and sent it back to a central location, the display server. The local client script, named <B>bb-local.sh</B>, just measured disk usage (using <B>df</B>), CPU usage and number of users (using <B>uptime</B>), and whether certain important processes are running (with <B>ps</B> and <B>grep</B>) every 5 minutes. All this information is sent back to a central location, the display server, using <B>bb</B>.<p>
Finally, if any of these scripts notices trouble, they use <B>bb</B> to send a numeric message to the pager server. The pager server then calls the script <B>bb-page</B>, which is just a wrapper for <B>kermit</B> that dials the pager number and transmits the numeric message.  Figure 2 shows how these parts interconnect.<p>
<B>The Core of Big Brother: bb, bbd, and bbnet</b><p>Because all the elements of the system use <B>bb</B> to send messages and <B>bbd</B> to receive them, it is important to understand the format of the messages they send. Again, the emphasis was on simplicity, so single lines of data are sent and received. The format of the <B>bb</B> command is as follows:<p>
<pre>
bb [ip-address] "msg-type message"

ip-address	 the IP address of the machine running the <B>bbd</B> server
msg-type	either status or pager</pre><p>
<p><p>
For status messages, the message portion is in the following format:<p>
<pre>
hostname.area  color-code  date  explanation</pre><p>
<p></b><p>hostname	 the hostname where the report is from
area	 the type of report (i.e., conn, cpu, disk, msgs, etc.)
color-code	 green (OK), yellow (warning), or red (alert)
explanation	 a descriptive message like "/usr is 65% full"

For pager messages, the message portion is in the following format:<p>
<pre>
pager-number  error-code  ip-address</pre><p>
<p>
pager-number	the pager number to call
error-code	 a numeric error code from Big Brother indicating the problem:
100 -  Disk Error. The disk is over 95% full.
200 -  CPU Error. CPU load average is unacceptably high.<p>
300 -  Process Error. An important process has died.<p>
400 - The message file contains a serious error.<p>
500 - Ping connectivity error, can't connect.<p>
600 - Web server HTTP error - server is down.<p>
911 -  User Page. Message is phone number to call back.<p>
ip-address	The ip-address of the affected system.<p>
<p>
When <B>bbd</B> receives these messages, it determines what action to take based on whether it is a status message, or a pager message. If it is a status message, it creates a log file in the log directory called <B>hostname.area</B> (i.e., coffee.disk) that gets processed by the display server. If it's a pager message, it calls the shell script, <B>bb-page</B>, to issue the numeric message using <B>kermit</B>.<p>
Included in Big Brother is <B>bbnet</B>, a generic server testing program. The idea is simple; open a port on a machine and see what comes back. Currently <B>bbnet</B> tests Web servers, but it could also be used to test <B>ftp</B>, <B>telnet</B>, or any other servers. It will display the first 256 characters of the response from the server.<p>
<pre>
bbnet [URL | machine-name|ip-address:port]</pre><p>
<p>
Finally, for completeness, <B>touchtime</B> tells what time it was precisely 30 minutes ago. Its output is in a format compatible with the <B>touch</B> command. It is used with <B>touch</B> to create a file to which to compare data files on the display server to ensure that all reports are current.<p>
<B>The Web Display</b><p>When running, Big Brother will create lots of little status files in the log directory. These files are named using the hostname of the reporting machine and the area being reported on. So, for my machine named "coffee", the following files would be created in the log directory:<p>
<B>coffee.conn</B>	Network connectivity status<p>
<B>coffee.cpu</B>	CPU status<p>
<B>coffee.disk</B>	Disk space status<p>
<B>coffee.procs</B>	Running processes status<p>
<B>coffee.msgs</B>	System files status<p>
<B>coffee.http</B>	HTTP status<p>
The contents of these files will all resemble the following disk report:<p>
<pre>
green Mon Nov 18 14:04:53 EST 1996 /usr is 65% full</pre><p>
<p>
Because the files are named by machine and area, and given that the first word of each of these files tells us its color-coded status, this information can be displayed on a Web page as a matrix of machines and areas being monitored.  Figure 1 shows what the Big Brother web display looks like. Within the matrix, colored balls correspond to the status of any area at the time the report was issued. Clicking on the colored ball will display additional information. The scripts <B>mkbb.sh</B> and <B>mkbb2.sh</B> create the Big Brother Web pages.<p>
The only area that approaches cleverness in the Web display is checking that the reports in the log directory are fresh. If any report is over 30 minutes old, the corresponding dot in the display matrix is changed to purple. This means that reports from that host are not being received by <B>bbd</B>, usually because <B>bb</B> has stopped running on that host. As previously mentioned, <B>touchtime</B> creates a file exactly 30 minutes old, and all reports are measured against the timestamp on this file.<p>
Intuitive information is displayed by examining each of the log files in the directory to determine the most severe condition on the network at the time. The script <B>mkbb.bkg</B> generates the background color of the Big Brother Display page. In order of increasing severity, these background colors are:<p>
green	All is well on the network<p>
yellow	There is a warning somewhere on the network<p>
purple	Host is not reporting in for some reason<p>
red	Severe condition needs attention<p>
Thus, the network status is clearly visible from the background color of the screen. The downside of this simplicity is that absolutely anyone looking at a Big Brother display knows the status of the network. Everybody becomes an expert, and they'll want to know why that screen is red.<p>
<B>Downloading the Big Brother Source Code</b><p>The source code, demos, and additional information are available on the Big Brother home page: <B>http://www.iti.qc.ca/iti/users/sean/bb-dnld/</B> and via <B>ftp </B>from the Miller Freeman site: <B>ftp://ftp.mfi.com/pub/sysadmin/</B>.<p>
To install the archives, decide where you want Big Brother to live. The archive will create a new directory, <B>bb</B>, that will house the system. This directory, henceforth shall be forever known by the environment variable <B>BBHOME</B>. To extract Big Brother, issue the following commands:<p>
<pre>
gzip -d bb-src.tgz
tar xvf bb-src.tar</pre><p>
<p>
The Big Brother system is structured as follows:<p>
<B>doc/</B>	Documentation and configuration scripts<p>
<B>etc/</B>	Where all the configuration files live<p>
<B>src/</B>	<B>bbd.c</B>, <B>bb.c</B>, <B>bbnet.c</B>, and <B>touchtime.c</B> programs<p>
<B>bin/</B>	Where the ported binaries and shell scripts live<p>
<B>web/</B>	 Scripts that create the Big Brother web pages<B><p>
www/</B>	 The directory that should be linked into your Web site<p>
<B>www/logs</B>	 The directory where <B>bbd</B> writes status files<p>
<B>www/notes</B>	 A place to put information about monitored systems<p>
Environment variables important to Big Brother are:<p>
<B>BBHOME</B>	 The top level directory where Big Brother is installed<p>
<B>BBDISPLAY</B>	 The machine with the Web Server, a.k.a. the Display Server<p>
<B>BBNET</B>	 The machine that will run the network monitor<p>
<B>BBPAGER</B>	 The machine that will process pager requests; needs <B>kermit</B> and a modem.<p>
And finally, the whole package is completely dependent on the information you place in the file <B>etc/bb-hosts</B>.<p>
<B>Configuring Big Brother</b><p>Automatic configuration is supported for SCO, FreeBSD, Solaris, Linux, HPUX 10, and SunOS 4.1, NetBSD, OSF, Ultrix, and Irix. To run the automatic configuration program from the top level Big Brother directory, enter:<p>
<pre>
cd doc<p>
./bbconfig [OS-NAME]</pre><p>
</b><p>where <B>OS-NAME</B> is one of: <B>sco</B>, <B>freebsd</B>, <B>solaris</B>, <B>hpux</B>, <B>linux</B>, <B>sunos</B>, <B>netbsd</B>, <B>osf</B>, <B>ultrix</B>, or <B>irix</B>. This program just adjusts <B>src/Makefile</B> and copies the appropriate system definitions from <B>etc/bbsys.OS-NAME</B> to <B>etc/bbsys.local</B>.<p>
For security purposes, I isolated all commands used by Big Brother, and placed the full pathname of each command into its own environment variable. This file is named <B>etc/bbsys.sh</B>. These defaults can be overridden by redefining these variables in the file <B>etc/bbsys.local</B>.  Listing 1 shows a sample of this file for FreeBSD.<p>
If you are not running one of the automatically configured operating systems, you will have to edit the Makefile, create your own version of the <B>bbsys.local</B> file and define where these commands live on your system.<p>
Big Brother is highly configurable. You can tell Big Brother what constitutes a warning and what constitutes an urgent situation. For each area, you can also specify whether or not you want to be paged. The defaults are quite sensible, however you can adjust the pre-set values by editing the file <B>etc/bbdef.sh</B>; you will also have to tell Big Brother where to find <B>kermit</B> and the pager number to call. The standard version of <B>etc/bbdef.sh</B> is shown in  Listing 2.<p>
If you are able to autoconfigure, or once you've edited the Makefile, to compile the binaries all you have to do is issue the following commands:<p>
<pre>
cd ../src
make</pre><p>
<p>
If there are no problems, you can install the binaries:<p>
<pre>
make install</pre><p>
</b><p><p>
Next, edit the file <B>runbb.sh</B>. It needs to have the environment variable <B>BBHOME</B> set to the directory where Big Brother lives:<p>
<pre>
BBHOME="/home/sean/bb"</pre><p>
</b><p><p>
The entire system rests on the information you place in the <B>etc/bb-hosts</B> file. This file is really similar to your <B>/etc/hosts</B> file (in fact it used to be the same), but with additional information in what were the comment fields. Refer to  Listing 3 for an example of a very simple <B>bb-hosts</B> file.<p>
Big Brother consists of a network monitor script, which will run on the machine defined in the <B>etc/bb-hosts</B> file as <B>BBNET</B>. This script will check every host listed in the <B>etc/bb-hosts</B> file for connectivity via <B>ping</B>, and will also check for a Web server should the line contain a URL using <B>bbnet</B>.<p>
Pager alerts are sent to the machine defined as <B>BBPAGER</B> in the <B>etc/bb-hosts</B> file, which needs <B>kermit</B> and a modem installed to work correctly.<p>
Finally, the machine you define as <B>BBDISPLAY</B> in the <B>etc/bb-hosts</B> file is the Web server. All status reports are sent here, and <B>bbd</B> creates the files in the <B>www/logs</B> directory. This information becomes the basis for the Big Brother pages <B>bb.html</B> and <B>bb2.html</B> that live in the <B>www/</B> directory.<p>
The keywords required for configuration are:<p>
BBDISPLAY	machine for Web display<p>
BBPAGER	your pager server<p>
BBNET	network monitor machine<p>
http://	check this URL on this box<p>
Note that you can use one machine for all of the above servers or any combination of the above. It may seem a little confusing, but it makes things very flexible.<p>
<B>Running Big Brother</b><p>Now you're ready to test Big Brother for the first time. It helps to run the test on the <B>BBDISPLAY</B> machine, since you can check the results fairly easily by looking in the <B>www/logs</B> directory.<p>
Go to the directory you defined as <B>BBHOME</B> and issue the following command:<p>
<pre>
./runbb.sh &amp;</pre><p>
<p>
If there are files appearing in the <B>www/logs</B> directory, then things are looking good. The corresponding pages <B>www/bb.html </B>and <B>www/bb2.html</B> should also have been created, and all these files should get re-created every 5 minutes.<p>
If all of the above seems to be functioning, then it's time to view the pages. Since most Web servers isolate their data under DocumentRoot or the like, the easiest way to get these pages on-line is to choose where in your Web to install it, and create a symbolic link to the <B>BBHOME/www</B> directory. For example, if your Web Document Root directory is <B>/usr/www/docs</B>, and <B>BBHOME</B> is set to <B>/usr/acct/sean/bb</B> then issue the following command to make the pages accessible:<p>
<pre>
cd /usr/www/docs
ln -s /usr/acct/sean/bb/www bb</pre><p>
<p>
You should then be able to access the pages via your favorite browser using the URL:<p>
<pre>
http://your-machine-name-here/bb/bb.html</pre><p>
<p>
Password protecting this area is also highly recommended, just on principle.<p>
<B>Installing the Clients</b><p>The next thing to do is to put Big Brother on all the clients you want to monitor. You can simply replicate your Big Brother directory on the different clients and execute <B>runbb.sh</B>. However, if you're running in a heterogeneous environment, you'll have to port Big Brother again. Assuming the information in the <B>etc/bb-hosts</B> file is correct, you should see information about the clients you are monitoring begin to come into the <B>www/logs</B> directory on display server. You don't really need everything, it's just easier to install it this way.<p>
The alternative for those running in a homogeneous environment is to do the following:<p>
<pre>
cd BBHOME/docs
bbclient [client-hostname]</pre><p>
<p>
Assuming you've configured your <B>etc/bb-hosts</B> file correctly, this script will create a <B>tar</B> archive called <B>bb-client-hostname.tar</B> that you can install on the remote machine. Note that this archive is created above the <B>BBHOME</B> directory. Bring it across to the client, and execute <B>runbb.sh</B> as described earlier. Once you're really confident with it, have <B>runbb.sh</B> executed at system startup.<p>
<B>Debugging Big Brother</b><p>By far the most common problem is that the <B>etc/bb-hosts</B> file is incorrect. Machine names are case sensitive, and the <B>BBDISPLAY</B> and <B>BBNET</B> variables must be defined. Next, if no status reports are being created in the <B>www/logs</B> directory, you can test <B>bb</B> manually by setting <B>BBHOME</B> in your environment, then issuing the following commands:<p>
<pre>
./bbd
./bb ip-address "status test.test hello world"</pre><p>
<p>
This should create a file called <B>test.test</B> in the <B>www/logs</B> directory, containing the text, "hello world."<p>
If client data does not appear to be coming in, remember that <B>runbb.sh</B> must be running on each client that you want to completely monitor. The <B>bb-local.sh</B> script collects the local client data and uses <B>bb</B> to transmit it to <B>bbd</B> on the server you've defined as <B>BBDISPLAY</B> in <B>etc/bb-hosts</B>, in the <B>www/logs</B> directory.<p>
Syntax errors and complaints about incorrect formats for commands can usually be isolated to <B>etc/bbsys.local</B>, where all commands are defined. If you're not using a system that <B>bb</B> has been ported to, some adjustments to this file may be required.<p>
<B>Conclusion</b><p>Big Brother is a useful example of using a small client-server routine combined with HTML and a Web server to create a GUI front-end for otherwise ordinary shell scripts. It's not perfect, but it does demonstrate the flexibility of the Web to share and disseminate vital and useful information.<p>
Big Brother is not a replacement for a qualified systems administrator, but it is an excellent assistant. It's easy to set up and can be integrated with any tool that can execute a UNIX command. I can now go for coffee in peace, secure in the knowledge that if something goes awry, I will be paged with an error code and the IP address of the machine involved. Even if something goes wrong in the middle of the night, I can call in, check the Web page, and get concise information about the network.<p>
Since its creation, many people have helped in the porting and reporting of problems, too many to list here. I've received lots of email from happy users and have seen Big Brother propagate from Canada through the United States, Europe, Australia, Russia, Tahiti, and Namibia. Your feedback has been essential, exciting, and greatly appreciated.<p>
Big Brother has saved me lots of time and effort, and I hope it will do the same for any administrator who installs it. It's the only situation where I'm comfortable knowing that Big Brother is watching. 
<p>


<P>


<H1>About the Author</H1><p>  Sean MacGuire is a consultant who has spent almost 15 years in the company of UNIX systems.  He has a couple of patents pending and is publisher of the literary e-zine "It's a Bunny."  His email address is sean@iti.qc.ca.



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>