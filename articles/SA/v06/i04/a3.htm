<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v06, i04:  Integrating NT into aUNIX Environment</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a3_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a3_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a3_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a3_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a3_f5.htm">Figure 5</a></span></td>
		<td><span class=navbarLink><a href="a3_f6.htm">Figure 6</a></span></td>
		<td><span class=navbarLink><a href="a3_f7.htm">Figure 7</a></span></td>
		<td><span class=navbarLink><a href="a3_t1.htm">Table 1</a></span></td>
		<td><a href="../../../../source/SA/1997/apr97.tar"><b class=codeListing>apr97.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Integrating NT into a UNIX Environment</H1><p>
<P>
Gilbert Held<P>

</H1><p>Both UNIX and Windows NT are operating systems that users either swear by or swear at, depending upon what they want to accomplish and the hardware platform used. This means that any discussion concerning the integration of a Windows NT platform into a UNIX environment must include the intended use of the NT platform. Although Windows NT includes built-in support for the TCP/IP protocol and a few TCP/IP applications, you will more than likely have to turn to third-party vendors if you wish to use an NT platform for more than basic TCP/IP operations. Thus, some old timers may characterize the integration of NT into a UNIX environment by the World War II slogan: "Give us the tools to finish the job."<p>
<B>Overview</b><p>Windows NT is similar to UNIX in several areas. Both operating systems can be characterized as multiuser, multitasking systems and can function as a workstation or as a server. From personal observation, one of the major differences between the two results from the marketing of source code licenses by AT&amp;T to different computer manufacturers during the mid-1970s. This resulted in the development of a number of versions of UNIX, while Microsoft's exclusive control of NT (for better or worse) resulted in two versions of the operating system that can operate on a variety of hardware platforms. Thus, what you encounter on a DEC Alpha running NT Server, you will also encounter on a Dell Optiplex. This is not necessarily true as you move from one UNIX platform to another.<p>
<B>The Tie That Binds</b><p>The common thread that allows you to integrate a Windows NT platform into a UNIX environment is the built-in support of TCP/IP by both Windows NT Workstation and Windows NT Server. Because the integration of NT into a UNIX environment depends on configuring your NT platform to support the TCP/IP protocol, this topic represents a logical place to start.<p>
Both Windows NT Workstation and Windows NT Server are configured to support TCP/IP in a similar manner, so I will collectively reference both versions of this operating system as Windows NT unless a specific reference to one version is required. Once I've covered the method by which a Windows NT platform is added to a TCP/IP network, I will discuss the productive use of Windows NT in a UNIX environment.<p>
The configuration of a Windows NT platform to support TCP/IP requires you to use the Network Settings dialog box. That box is displayed by opening the Windows NT Control Panel window and double clicking on the Network Settings icon.  Figure 1 shows the Network Settings dialog box after I added the TCP/IP protocol and installed a Madge Smart Ringnode Token-Ring adapter card to connect the NT platform to a Token-Ring network. Under Windows NT, the use of the Network Settings dialog box is restricted to users that are members of the Administrator group for the computer being configured.<p>
Windows NT is similar to other operating systems in that it supports the use of multiple adapter cards. If circumstances warrant, you can set TCP/IP to operate on one or more adapters as long as each adapter has a distinct IP address. You can also bind one or more communications protocols to one or more adapter cards through a relatively simple series of point-and-click operations. For example, clicking the "Add Software" button results in the display of a dialog box in which you can scroll through a list of supported protocols.  Figure 2 illustrates the Add Network Software dialog box with the scrollable menu of supported network software shown. Simply scrolling the highlighted bar over a desired protocol and clicking the "Continue" button allows you to add the selected software. If you did not previously install TCP/IP, you would move the highlighted bar over that entry and click on the "Continue" button to select it. The addition of a network adapter card is similarly accomplished.  Figure 3 shows the "Add Network Adapter" dialog box with its pop-down menu of supported adapter cards partially displayed. To get to this dialog box, click on the button labeled "Add Adapter" in the Network Settings Window.<p>
Although Windows NT directly supports a number of commonly used Ethernet adapter cards, its built-in support of Token-Ring is rather limited. Thus, if you are using Token-Ring or a non-supported Ethernet card, you would select the entry labeled "Other." Most major manufacturers of network adapter cards either ship their products with a Windows NT support disk or operate Web sites or a BBS, enabling you to download the required software. Because you can set up an NT platform without configuring your network connection, you can always return to the Network Settings dialog box if necessary.<p>
<B>Configuring TCP</b><p>Once you select the TCP/IP protocol and an appropriate adapter, you must configure the protocol to correctly operate on your computer. To do so, you would select the "Configure" button in the Network Settings dialog box, resulting in the display of a new dialog box labeled TCP/IP Configuration.  Figure 4 illustrates a partially completed TCP/IP Configuration dialog box containing the necessary information for an adapter card using the TCP/IP protocol. That information includes the IP address of the computer used, the subnet mask, and the default gateway address. Concerning the latter, Microsoft, like many program developers, uses the original TCP/IP term "gateway" to represent the hardware device that is now almost universally referred to as a router. Thus, the default gateway represents your local IP router that will be used to access destinations beyond the network to which the computer is connected. If you have a dynamic Host Configuration Protocol (DHCP) server on your network, you can click on the Enable Automatic DHCP Configuration option, and the DHCP server will automatically assign the required addresses to your computer.<p>
Assuming you entered the appropriate IP address, subnet mask, and default gateway address, you must provide TCP/IP applications with a mechanism to convert computer names to IP addresses. Windows NT supports both the modern Domain Name system (DNS) and the older mechanism involving the use of a HOSTS file. To enter the appropriate DNS configuration, you would click on the button labeled "DNS" in the TCP/IP Configuration dialog box. To use the older method in which known IP addresses and their associated host names are stored on a local file, you would click on the button labeled "Advanced." Although a few readers may disagree with me, the vast majority of TCP/IP implementations use DNS, so I will next discuss the DNS Configuration dialog box which is illustrated in  Figure 5.<p>
Microsoft's implementation of TCP/IP allows users to enter multiple DNS addresses as well as to specify the order in which entries are searched. Up to three DNS IP addresses can be entered into the DNS Configuration screen illustrated in  Figure 5. In addition to specifying multiple DNS addresses, you can also specify multiple domain suffixes. The DNS configuration display enables you to enter up to six domain suffixes in the order you wish them to be searched. Thus, the DNS Configuration display provides the ability to customize the search effort that enables how the resolution of computer names into IP addresses is accomplished.<p>
Next, I'll discuss the the use of the Windows NT platform in a UNIX environment. Although NT has the built-in connectivity to enable its use, applications are the rest of the story.<p>
<B>Built-in Apps and Utilities</b><p>Both Windows NT Workstation and NT Server include a set of TCP/IP utilities that enable a basic level of connectivity between an NT platform and a UNIX computer system.  Table 1 summarizes the TCP/IP applications and utilities included within NT. Additionally, Windows NT includes <B>ftp</B> client and server applications enabling the platform to be used to support the distribution of files while performing other functions. Although Windows NT includes support for <B>telnet</B>, such support is limited to a client capability. Also, if you compare Microsoft's <B>telnet</B> implementation to other <B>telnet</B> clients readily available for UNIX, the terminal support, which is limited to VT-52 and VT-100, may put a damper on your ability to use that client.<p>
In examining the entries in  Table 1, there are several popular applications that are conspicuous by their absence. For example, the popular <B>telnet</B> application is limited to a client implementation. Also, Network File System (NFS), which allows you to share files and directories across TCP/IP-based networks, and the Simple Mail Transfer Protocol (SMTP) commonly used for email are also absent. If you use one or more of the TCP/IP utilities listed in  Table 1, you may note another limitation, which in this era of graphic user interfaces appears to be a carryover from the Stone Age. That is, each utility is included as a command-line program. For example, consider  Figure 6, which illustrates the resulting display obtained by the command-line entry of <B>ping</B> without any parameters. Although the Microsoft implementation of <B>ping</B> provides a comprehensive set of parameters for use, it does not allow you to create a list of addresses to <B>ping</B> and set up your options ahead of time. Thus, in some ways the utilities are a return to a prior age of computing. Fortunately, the installation and control of an NT <B>ftp</B> Server is accomplished through the use of a GUI interface that facilitates its use. It supports Anonymous <B>ftp</B> as well as predefined <B>ftp</B> accounts. Under NT, you can restrict <B>ftp</B> to a particular physical or logically created drive as well as control a variety of networking properties, such as the maximum number of <B>ftp</B> connections and the idle timeout period. Since the capability of NT's built-in TCP/IP utilities and applications provide a basic platform for integration into a UNIX environment, a logical question is why bother? Rather than argue the merits of NT versus UNIX, which could result in an endless debate, I'll examine a few of the bundled applications included with NT Workstation and NT Server. This should provide the rationale for their potential use in a UNIX environment and illustrate how you can easily integrate some NT applications into a UNIX environment.<p>
<B>Print Services</b><p>Persons familiar with Windows know that Microsoft gets a high grade when you consider the number of print drivers their operating systems support. Windows NT is no exception, and this platform can be used to receive print jobs generated by UNIX computers. To do so (after you have installed the TCP/IP protocol via the Network icon in the Control Panel window), you would select the entry "TCP/IP Protocol and Related Components" from the Add Network Software dialog box  (Figure 2). This would result in the display of the TCP/IP Installation Options window  (Figure 7), which indicates TCP/IP components not automatically installed when TCP/IP was initially installed. The connectivity utilities that I previously installed include <B>finger</B>, <B>ftp</B>, <B>rep</B>, <B>rexec</B>, <B>vsh</B>, <B>telnet</B>, and <B>tftp</B>. Although they are also considered TCP/IP connectivity utilities, <B>arp</B>, <B>hostname</B>, <B>ipconfig</B>, <B>nbtstat</B>, <B>netstat</B>, <B>ping</B>, and <B>route</B> are automatically installed when TCP/IP is first installed. Once you select the TCP/IP Network Printing Support option in  Figure 7, NT will install the equivalent to a UNIX daemon, which enables NT to receive print jobs generated by UNIX computers. However, a common problem is the failure to initiate the printing service. Once installed, the service must be started either by clicking on the Services icon in the Control Panel window or by typing the command-line entry <B>net start lpdsvc</B>.<p>
<B>Remote Access Service</b><p>Included in Windows NT is a network dial-in and dial-out capability referred to as Remote Access Service (RAS). RAS currently supports communications via modem, X.25 packet switching, and ISDN lines, enabling remote users to obtain access to such network services as file and printer sharing and email, as well as the ability to monitor and manage a distant computer. RAS is included with Windows NT, so you get this additional capability without additional cost or the necessity of establishing a separate communications server and incurring the expenses associated with additional hardware and software.<p>
<B>Web Server</b><p>Perhaps the most popular use for Windows NT, and most controversial one, is its use as a Web server. Although Microsoft bundles its Internet Information Server with its Windows NT Server, many organizations turned to the much less expensive Windows NT Workstation as a platform for third party software, such as Netscape's communications server or O'Reilly &amp; Associates' Web Site. It's difficult to say whether Microsoft will be able to force users to the more expensive Windows NT Server as a platform to support more than a handful of concurrent users or whether users will continue to use the less expensive Windows NT Workstation as a platform for constructing Internet and intranet sites. Nevertheless, Windows NT provides an easy to use platform for operating a Web server for Internet or intranet user access.<p>
There are a variety of browsers that operate on UNIX-based systems, so the use of NT as an Internet or intranet server integrates relatively easily into a UNIX environment. NT can also operate on hardware platforms costing approximately $2000 and up; thus, it provides network managers and administrators with a low-cost mechanism to add a variety of services to a network that might otherwise require a more expensive solution. Therefore, if you need a Web server platform, a remote access server capability, require the use of additional network-based printers, or need to set up an <B>ftp</B> server, you can accomplish it all through one Windows NT platform. Hence, the integration of Windows NT into a UNIX environment for many applications is relatively easy if you need those applications. Unfortunately, if you require other applications such as SMTP, a <B>telnet</B> server capability, or NFS compatibility, you will have to turn to a third party. 
<p>


<P>


<H1>About the Author</H1><p>
Gilbert Held is an author and lecturer on computer-related topics. Some of Gil's recent books include Ethernet Networks 2ed., LAN Performance: Issues and Answers, and Protecting LAN Resources, each published by John Wiley & Sons. Gil can be reached by email at 235-8068@mcimail.com.



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
