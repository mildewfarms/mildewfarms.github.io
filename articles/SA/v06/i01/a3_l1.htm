<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v06, i01: Listing 1:"dialer" shell script wrapper:  dialer.c</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a3.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a3_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a3_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a3_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a3_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a3_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/1997/jan97.tar"><b class=codeListing>jan97.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1:"dialer" shell script wrapper:  dialer.c</H1><p>

<pre>
#include &lt;stdio.h&gt;
#include &lt;signal.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;termio.h&gt;
#include &lt;string.h&gt;
#include &lt;errno.h&gt;

#define BADCALL         -1

char *WHATIS = "@(#) dials a modem, executes a modem-script. Original by Brad Fennel, hacked by Jonathan Feldmonster 1996";

void
yuck(msg)
char *msg;
{ perror (msg); exit (2); }

main(argc,argv)
int argc;
char *argv[];
{
struct termio term;
int fd;
int ret;
static char mybuf[128];

if (argc!=3)
{
printf("%s: &lt;port name&gt; &lt;modem-script&gt;\n",argv[0]);
exit(1);
}
if ((fd=open(argv[1],O_RDWR|O_NDELAY))==BADCALL)
yuck("initial open failure on requested port!");

if ((ret=ioctl(fd, TCGETA, &amp;term))==BADCALL)
yuck("Error getting ioctl port params!");

term.c_cflag &amp;= ~(CBAUD | HUPCL );
term.c_iflag &amp;= ~ICANON;
term.c_cflag |= CLOCAL|B9600|HUPCL;
term.c_lflag &amp;= ~ECHO;
if ((ret=ioctl(fd, TCSETA, &amp;term))==BADCALL)
yuck("Error setting ioctl port params!");

if ((fd=open(argv[1],O_RDWR))==BADCALL)
yuck ("Reopen of comm port failed!");


/* tie stdin and stdout to the device */
setpgrp();
if (close(0) == BADCALL) yuck ("Can't close stdin\n");
if (dup(fd)== BADCALL) yuck ("Can't dup fd to stdin\n");
if (close(1) == BADCALL) yuck ("Can't close stdout\n");
if (dup(fd)== BADCALL) yuck ("Can't dup fd to stdout\n");
/* we need to be suid to uucp-user to open port, */
/* go back to calling id for script */
setgid(getgid());
setuid(getuid());

if (execl("/bin/sh", "sh", "-c", argv[2], (char *) 0) == BADCALL )
yuck ("Can't call the script.");

}

/* End of File */</pre><p>
<p><br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
