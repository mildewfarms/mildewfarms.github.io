<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v06, i11: Listing 2:  	ForgetMeNot</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a4.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a4_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink>Listing 2</span></td>
		<td><span class=navbarLink><a href="a4_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/1997/nov97.tar"><b class=codeListing>nov97.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 2:  	<tt>ForgetMeNot</tt></H1><p>

<pre>
# ForgetMeNot -- test if autobackup was performed last night
# Author: Donald Bryson dbryson@tclock.com -- http://www.tclock.com
# For distribution by Sys Admin Magazine -- http://www.samag.com
# Last Revision Date: 7/31/97

# This script returns 4 valid exit values
#     1 -- Backup should not be checked today
#     2 -- Backup was scheduled but not complete and the system is
#          configured to allow the user to log into the system anyway
#     3 -- Backup was scheduled and performed.
#     4 -- Backup was scheduled but not complete and the system is
#           configured to disallow logging into the system.

# **************************************************************************
# Read the configuration file and chnage to the our work directory
# You can store the configuration file in /etc/default or any other directory
configdir=/etc/default/

if [ -f "$configdir"CheckNBack.cfg ]
then . "$configdir"CheckNBack.cfg
else
echo "warning: CheckNBack.cfg not found"
read Dummy
exit 1
fi

# ************************************************************************
# Check to see if the ForgetMeNot/CheckNBack system is disabled and exit
# if it is disabled.
if [ "$DISABLE" = "YES" ]
then echo "ForgetMeNot/CheckNBack is disabled."
exit 1
fi

# Change to the work directory of CheckNBack/ForgetMeNot
cd $CBDIR

# ************************************************************************
# Because the system is backing up via cron, the system having the
# correct date is very important.  This function gives the users the
# opportunity to detect an incorrect system date
VerifyDate() {
clear
echo Please advise support if the current date and time is not
echo "              " `date`
echo
echo "...Enter to continue"
read Dummy
}

if [ "$VERIFYDATE" = "YES" ]
then VerifyDate
fi

# ************************************************************************
# Calculate the date information and store into BackupTime and DayOfWeek
# BackupTime is used to compare the log entry in CheckNBack.log
BackupTime=`date +%y%d%m`

# The day of the week as a number -- this is used to compare with
# NOCHECK to disable checking on days that should not be checked
DayOfWeek=`date +%w`
# Check to see what days of the week to check the log
for nobd_day in $NOBACKUP
do
if [ $nobd_day -eq $DayOfWeek ]
then echo "Backup should not be checked today."
exit 1
fi
done

# ************************************************************************
# The functions for giving warning or explaining why they can't log into
# the system
GiveWarning() {
clear
echo
echo "     SCHEDULED BACKUP FAILED OR NOT ATTEMPTED!"
echo
echo "        CONTACT YOUR SUPPORT DEPARTMENT."
echo
echo "...Press ENTER to continue"
read Dummy
}

ExplainNologin() {
echo
echo
echo "You may not log into your system until problem is resolved."
echo
echo "...Press ENTER to continue"
read Dummy
}

# ************************************************************************
# if NOLOGIN is is set to YES and there is an errror then the script returns
# 4 which is interpreted by the .profile as no login allowed.  If NOLOGIN
# is not set to YES then warn the user and return 2
# if the backup occured, return 3 which is interpreted by the .profile as
# no problem with backup.
echo "Checking your backup log for last night"
BackupProb() {
GiveWarning
if [ "$NOLOGIN" = "YES" ]
then ExplainNologin
if [ ! "$LOGNAME" = "root" ]
then exit 4
else
echo "Allowing login anyway because you are root"
read Dummy
exit 2
fi

else
GiveWarning
exit 2
fi
}

WASDONE=`grep $BackupTime CheckNBack.log`

if [ ! "$WASDONE" ]
then BackupProb
else
echo "Backup looks OK."
exit 3
fi

# End of File</pre><p>
<p>

<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
