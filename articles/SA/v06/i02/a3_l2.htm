<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v06, i02: Listing 2:  mon_dsk</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a3.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink>Listing 2</span></td>
		<td><span class=navbarLink><a href="a3_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a3_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a3_l5.htm">Listing 5</a></span></td>
		<td><span class=navbarLink><a href="a3_l6.htm">Listing 6</a></span></td>
		<td><span class=navbarLink><a href="a3_l7.htm">Listing 7</a></span></td>
		<td><span class=navbarLink><a href="a3_l8.htm">Listing 8</a></span></td>
		<td><a href="../../../../source/SA/1997/feb97.tar"><b class=codeListing>feb97.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 2:  <tt>mon_dsk</tt></H1><p>

<pre>
#!/bin/sh
#
# mon_dsk
#
# Script to check the disk utilization of filesystems listed in the
# accompanying data file, "mon_dsk.dat"
#
#######################################

INSTALL_DIR="/tools"                 # Installation directory
INFILE="mon_dsk.dat"                 # Input data file
DFCMD="/bin/df -k"                   # OS-specific "df" command
PATH=$INSTALL_DIR:$PATH              # Search path, beginning with
# $INSTALL_DIR
STATFILE="$INSTALL_DIR/mon_stat"     # Status file

#
# This function removes an entry from the $STATFILE.
#

clear_statfile()
{
# If called without an argument, quietly exit
if [ $# = 0 ]; then
exit
# Assume that the argument is a filesystem and remove that line
# from the $STATFILE
else
echo 'g?^\&lt;.*\&gt; '$1'$?d\nwq' | ex $STATFILE &gt; /dev/null 2&gt;&amp;1
fi
}

# If the input data file exists, continue; otherwise exit with a
# message
if [ -f "$INFILE" ]; then
# Ignore lines in the input file beginning with "#".  From each
# other line, read the FS path and the severity levels
grep -v "^#" "$INFILE" | while read FS WARN SEV CRIT FAT; do
# As long as the listed FS exists, continue; otherwise display
# a warning message
if [ -d "$FS" ]; then
cd "$FS"
# Calculate the disk usage of the FS
CAP=`$DFCMD . | tail -1 | awk '{print $5}' | cut -f1 -d'%'`
echo "FS '$FS' is at $CAP%"
# Start comparing the current usage to the thresholds
if [ "$CAP" -ge "$FAT" ]; then
if grep "FATAL $FS\$" $STATFILE &gt; /dev/null 2&gt;&amp;1; then
break
else
mon_error FATAL "$FS is at $CAP%"
clear_statfile $FS
echo "FATAL $FS" &gt;&gt; $STATFILE
fi
elif [ "$CAP" -ge "$CRIT" ]; then
if grep "CRIT $FS\$" $STATFILE &gt; /dev/null 2&gt;&amp;1; then
break
else
mon_error CRITICAL "$FS is at $CAP%"
clear_statfile $FS
echo "CRIT $FS" &gt;&gt; $STATFILE
fi
elif [ "$CAP" -ge "$SEV" ]; then
if grep "SEVERE $FS\$" $STATFILE &gt; /dev/null 2&gt;&amp;1; then
break
else
mon_error SEVERE "$FS is at $CAP%"
clear_statfile $FS
echo "SEVERE $FS" &gt;&gt; $STATFILE
fi
elif [ "$CAP" -ge "$WARN" ]; then
if grep "WARN $FS\$" $STATFILE &gt; /dev/null 2&gt;&amp;1; then
break
else
mon_error WARN "$FS is at $CAP%"
clear_statfile $FS
echo "WARN $FS" &gt;&gt; $STATFILE
fi
else
clear_statfile $FS
fi
else
echo "Error: Attempt to monitor non-existant filesystem $FS"
fi
done
else
echo "Error: No input file '$INFILE' for tool '$0'"
fi

# End of File</pre><p>
<p>

<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
