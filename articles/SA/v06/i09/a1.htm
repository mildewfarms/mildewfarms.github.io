<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v06, i09:  Web-Based Network Management - A Free Add-On to HP Openview</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a1_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a1_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a1_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a1_l4.htm">Listing 4</a></span></td>
		<td><a href="../../../../source/SA/1997/sep97.tar"><b class=codeListing>sep97.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Web-Based Network Management - A Free Add-On to HP Openview</H1><p>
<P>
Steven Brown<P>

Many of today's Web-based system administration tools exhibit two characteristics. First, in some proprietary systems a system administrator must use the vendor's GUI and a manager must rely on the system administrator for notification of a problem. However, often a system administrator's large workload makes it difficult to constantly monitor the network, leaving problems undetected and unreported for too long. Second, many of the available tools are cumbersome to use and sometimes just too expensive. I decided to come up with a solution for system administrators and managers in my environment. There are a couple of commercial products that do exactly what this code does, but considering that I already had access to a MIB collecting station, I decided to write the code myself.<p>
<B>Criteria Guidelines</b><p>In the environment in which I work, there are several high-end, mission-critical Sun Microsystems UNIX servers, all running HP Openview 4.1 and monitoring over ten thousand network nodes. On the front-end, there are several types of clients, including Sun workstations, Macintosh, Windows 95, and Windows NT personal computers. Corporate wanted a way for any manager to look at a server and be able to tell if it has a problem or if a trend might develop into a problem. The only thing common to all client types was Netscape Navigator. My solution for corporate's objective had to satisfy four design criteria:<p>
<ul><li>All clients must be able to view summary detail (platform independence).<p>
<li>The interface must be intuitive and easy to use (no training).<p>
<li>A user should be able to generate their own queries.<p>
<li>There must be no capital outlay.</ul><p>
<B>The Solution</b><p>The program that satisfied these requirements appears at:<p>
<pre>

http://www.geocities.com/ResearchTriangle/4043</pre><p>
<p></b><p>This program satisfies the design criteria by including the functionality of HP Openview's SNMP collecting database, the easy interface of Netscape Navigator, and with no additional outlay of money, except for the time taken to write the code.<p>
The first step in this procedure was to decide which variables to monitor. We chose Disk Utilization , CPU Utilization, Swap Space, and SNMP Packets In. The SNMP Packets In gives us an indication of just how much SNMP traffic these servers were handling. With the large number of nodes being monitored, there is a substantial amount of SNMP traffic to these servers. In the HP Openview's SNMP configuration we set up monitoring of these four variables at 15-minute intervals.<p>
Now that HP Openview was collecting this information, we needed to convert the information from an <B>xwd</B>-formatted file (HP's default) to an image that could eventually be displayed on a Web page. We chose the GIF format. The script <B>SNMPtoweb.pl</B> takes care of this. The script converts the <B>xwd</B> data file to a GIF file, using the freeware PNG graphics utilities, and puts the GIF file in a directory where the http server can display it.<p>
The next step was writing a couple of html files that call and display the image. The image starts off as a thumbnail and then, if trouble is spotted, a user or manager can click on it to examine the larger image. The use of HTML files allow the system administrator to control both the information that is available and how it can be displayed.<p>
The last step was to put the image gathering and conversion script into root's <B>crontab</B>, so the information is periodically updated. We chose to run the <B>SNMPtoweb.pl</B> script every 15 minutes.<p>
<B>Program Mechanics</b><p>The Perl script, <B>SNMPtoweb.pl</B>, is shown in  Listing 1. It takes an <B>xwd</B> data file and produces a GIF format file for displaying on a Web page. Here is an overview of some of the key aspects of the script.<p>
Line 8 opens a log file to direct standard output and error.<p>
Line 14 takes the output of the <B>xnmgraph</B> utility supplied with HP Openview and redirects it to a file called <B>SNMPin.xwd</B>, which is in the <B>xnmgraph</B> output format. The <B>displayWidth</B> sets the data graphed to seven days.<p>
Lines 15 - 17 sets up the remaining three variables to be collected.<p>
Line 23 calls the utility <B>xwdtopnm</B>, a set of PNG graphics utilities that allows any graphic image to be converted to any graphic image. (For source code availability and additional information about PNG, look at <B>http://www.wco.com/~png/</B>.) This line takes in the <B>SNMPin.wxd</B> data file and outputs a <B>SNMPin.pnm</B> graphic file.<p>
Lines 24 - 26 continue with the remaining <B>xwd</B> data files.<p>
Line 33 gives the user the ability to look at several thumbnails at once. Without this step, a full-page GIF file would appear and the user would have to constantly move to different pages to look at other variables. In this way the user could call up the system page and take a quick look at several items at once. The output of this file is the icon image in <B>pnm</B> format. <B>pnmscale</B> is another PNG utility. In this line I am taking a full-size image and scaling it down on both the <I>x</I>-axis and the <I>y</I>-axis. The output is the file <B>SNMPin_icon.pnm</B>.<p>
Lines 34 - 36 complete this step.<p>
Line 42 is an important step. By iconizing these files, the lines that indicate potential problems blend in with the black background of the image, so it is sometimes difficult to read. <B>pnmgamma 35</B> is basically making these images brighter so you will easily be able to distinguish these spikes. These are output to a temp file <B>t_SNMPin_icon.pnm</B>.<p>
Lines 43 - 45 continue this process.<p>
Line 50 is needed because in the next step of converting these icon images to GIF files, the colors need to be re-synched. <B>ppmquant 256</B> is basically looking at the temp file to grab 256 colors and output this to another temp file.<p>
Lines 52 - 53 continue this process. This step is needed only for the icon images.<p>
Line 59 is where the conversion takes place, if everything to this point is done correctly. The output of the <B>pnm</B> files gets converted to GIF images.<p>
Lines 61 - 66 finish this procedure. Both the full-scale and icon files get converted to GIF images.<p>
The rest of this script changes ownership for the http server, moving images and cleaning up the directory. Once the images are placed in the proper html server directory, additional html files point to the correct image.<p>
<B>Index.html</B>, shown in  Listing 2, is a sample of html code that points to an image. Here are several important elements of the file.<p>
Line 10 is why I use html pages to call the GIF images. By having html pages I can then include SSI commands to produce time and date stamps and execute any other information I may need to pinpoint the source or active server.<p>
Lines 12 - 15 set up the links from the images to the full-scale GIF files, again using <B>SNMP.html</B> as the anchor for this thumbnail <B>SNMPin_icon.GIF</B>.<p>
Listing 3 shows a copy of <B>SNMP.html</B>. Line 3 of that file allows you to show the date and time the image was created. <B>xnmgraph</B> has no built-in function to show the date and time on the GIF file.<p>
The last line in <B>Index.html</B> gives the sys admin considerable flexibility in choosing what information is available for their network monitoring. The last line in <B>Index.html</B> calls up <B>Index2.html</B>   (Shown in Listing 4.). A manager may just want to see the last two days of data, data from a different server, or only a particular managed object. By adding the OID to the HP collection capabilities and editing the <B>Index2.html</B> file to add additional OIDs and servers, the sys admin can extend his network monitoring capability.<p>
I find that network management is a lot more than just SNMP. While the RFC says it is, I look at network management as a process that is continually defining its role, expanding its role, and encompassing all aspects of technical knowledge for the sake of the network. In this project, I used different applications - commercial, freeware, programs, scripts, and utilities - and I find that all components can effectively work together if used in their proper place. So instead of using one app to do everything, I used apps where they should be used and utilized them effectively. What I see as a future development to this project would be to use some freeware databases and SNMP collecting stations and make this a totally free product. The talent of the individuals in the freeware software arena is unsurpassed due to their committment to their trades. n
<p>


<P>


<H1>About the Author</H1><p>
Steven Brown is a Network Systems Administrato and has over 15 years of experience in integrating large-scale heterogeneous mixed networks. He currently works for Paranet, based in Houston, Texas, and is studying for his Doctoral Degree in Information Systems Management at NOVA Southeastern University in Ft. Lauderdale Florida. He can be reached at sabrown@paranet.com.



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
