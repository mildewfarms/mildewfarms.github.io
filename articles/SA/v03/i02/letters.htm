<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v03, i02:  New Messages</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><a href="../../../../source/SA/1994/mar94.tar"><b class=codeListing>mar94.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>New Messages</H1><p>
<P>
To: saletter@rdpub.com<br>

Subject: Not Finding What One is Looking For<P>

In his article &quot;checkcron: Checking for the Unexpected,&quot;
Steven G. 
Isaacson correctly mentions that when using 'grep' against
the output 
of 'ps', one must be careful to weed out the grep command
itself in 
the filtered output. His solution, however, is much
too large a hammer 
for such a small gnat.<P>

Mr. Isaacson suggests using:<P>
<PRE>
ps -furoot | sed '/grep/d' | grep cron</pre><p>
<p>
when all that is required is:<P>
<PRE>
ps -furoot | grep '[c]ron'</pre><p>
<p>
This method simply uses metacharacters to force an expression

to not match itself.<P>

T. Mike Howeth<br>
System Administrator<br>
CompuTrac, Inc.<br>
tmike@cmptrc.lonestar.org<P>

<I>Thanks for the fine-tuning.</I><P>



Dear Sirs and/or Madams:<br>

I tried the programs listed in &quot;Reading beyond
a Bad Header with tar,&quot; 
in the Nov/Dec '93 issue. I believe there may be a error
in lines 
29 and 34 of passPart.c. In both cases, the size variable
being passed 
to realloc() is (*Pn)+1. This is just the count of array
positions; 
to be the number of bytes required, this quantity must
be multiplied 
by sizeof(int), much like what is done in lines 24-25.
Until I made 
this change, the program core dumped at this point.<P>

Larry Hofmann<br>
NCR: San Diego Porting Center <br>
larry.hofmann@SanDiegoCA.NCR.COM<P>

<I>Ben Reaves replies: You mentioned an error in lines
29 and 
34 of passPart.c, from the article &quot;Reading beyond
a Bad Header with 
tar&quot; in the Nov/Dec 93 issue of Sys Admin magazine.
You are correct.<P>

When I in first used this method for the large tape
described 
in the introduction of the article, the function of
passPart.c was 
performed by a messy and slow shell script. I rewrote
it for the Sys 
Admin article and tested it on a smaller example, which
did not show 
any signs of trouble with the faulty realloc arguments.<P>

The corrected lines of passPart.c are:<P>
<PRE>
29   *PPstart = (int *) realloc (*PPstart, sizeof(int)*((*Pn)+1));
34   *PPend = (int *) realloc (*PPend, sizeof(int)*((*Pn)+1));</pre><p>
<p>
Thank you for bringing this to my attention.</I><P>



To: bjorn@sysadmin.com, saletter@rdpub.com<br>
Subject: Capturing Monitor Output to a Printer<P>

As a new subscriber to Sys Admin, I must tell you it
is an excellent 
journal with worthwhile contributors and information.<P>

I work for the Federal courts and we are in the process
of converting 
from a Unisys (95/5000) minicomputer to a high-end 80486
PC running 
Interactive Unix. On the Unisys, we had a dedicated
console port, 
to which we attached a dumb terminal (as you will read,
this &quot;dumb&quot; 
terminal was not so dumb after all). We set the console
to &quot;auto print&quot; 
and attached a simple dot matrix printer to the console's
printer 
port. This allowed us to capture on paper all of the
console messages, 
hardware panics, diagnostics, bootup and shutdown progress
and lots 
of other goodies (such as failed logins).<P>

The new PC is just that -- a PC with a VGA/monitor port
that drives 
a standard VGA monitor. My question is what do I need
to do to also 
capture the console messages onto a printer? We are
aware of the &quot;alternate 
console&quot; concept with UNIX, but there will still
be a plethora of 
messages that are not directed to /dev/console but will
only appear 
on the &quot;PC's monitor.&quot;<P>

Are there any hardware (or software) solutions that
will send the 
console monitor's signal to both the console monitor
AND a printer? 
I know devices exist to split the signal and send one
signal to LCD/Overhead 
Viewers or to convert the signal into video (for TVs),
but this doesn't 
solve our problem.<P>

Steve Kaplan, Systems Manager<br>
steve@cadc.uscourts.gov<br>
U.S. Court of Appeals for the D.C. Circuit<P>

<I>Thanks for the kind words about Sys Admin -- readers,any
pointers on
how to get this done?</I><P>




<P><br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
