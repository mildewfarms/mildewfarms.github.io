<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v03, i05:  File Version Numbering</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a5_l1.htm">Listing 1</a></span></td>
		<td><a href="../../../../source/SA/1994/sep94.tar"><b class=codeListing>sep94.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>File Version Numbering</H1><p>
<P>
Chris Hare<P>

Frequently I've wanted to have multiple copies of a
file as it went 
through various stages of rewriting and reworking. Havng
used a DEC 
VAX at various points in my career, I liked the version
numbering 
which VMS provides. <P>

To address this I wrote a program called vedit (Listing 1). 
vedit is a shell program which implements version numbering
using 
a similar scheme to VMS. For each file, vedit checks
the name 
to see if there is a file in the current directory which
has a version 
number. Version numbers are added to filenames by including
a semicolon 
and a number. <P>

For example, the file &quot;demo&quot; does not use
version numbering, 
while &quot;demo;2&quot; does. The number 2 indicates
that this is the 
second version of the file &quot;demo&quot;. The Bourne
Shell script 
in Listing 1 is simple enough, and is easy to use and
understand.<P>

However, there are some issues which should be mentioned
here. The 
seimcolon is a special character to the Bourne and Korn
shells. It 
is used as a command separator to allow the user to
enter mupltiple 
commands on the same line. For example, you can write<P>
<PRE>
$ who
chare      w1           Mar 23 21:40
$ date
Sat Mar 26 14:39:35 EST 1994
$ pwd
/u/chare/Filecabinet/publish/sysadmin/vi</pre><p>
<p>
or you can use the semicolon and write it as<P>
<PRE>
$ who; date; pwd
chare      w1           Mar 23 21:40
Sat Mar 26 14:40:52 EST 1994
/u/chare/Filecabinet/publish/sysadmin/vi</pre><p>
<p>
Consequently, the use of the semicolon in the file name

requires some special handling. To access a file under
version control 
without using the vedit command, you must use the backslash

to &quot;escape&quot; the meaning of the semicolon to
the shell, as, 
for example,<P>
<PRE>
$ cat demo\;2</pre><p>
<p>
To discuss the operation of the shell script in Listing 1,

I have numbered it using the UNIX pr command. Line
30 lists 
the files that contain a semicolon, and replaces all
of the text in 
the file name with blanks. The end result is a list
of numbers in 
reverse sorted order. The result of this list is the
last or highest 
number in the list. If the file is new, then the first
version number 
used is 1. <P>

Lines 36 to 58 determine what version number is to be
used, and set 
some variables which will be used later in the script.
Lines 63 to 
75 copy the original file to the new filenme for editing.
Should the 
copy fail, the user is informed with the error message.
The most likely 
causes of such a failure would be the permissions on
the directory 
involved, or an inability to read the source file. <P>

The file is loaded for editing in line 79; upon exit,
the script verifies 
that editing did in fact occur. The diff command in
line 85 
compares the two files. If no changes were made, then
execution jumps 
to line 117, where the user is told that no changes
were made and 
the newly created file is removed.<P>

If changes were made, then the lines and bytes in the
file are counted 
by the wc command in line 104, and the information on
the 
edit is recorded in an edit history file, the name of
which consists 
of the filename plus a .INDEX entension. The information
in 
the index file includes the file name and version, the
name of the 
person who edited it, the date and time, and the lines
and byte count 
of the new file.<P>

Line 116 connects the newly created file with the name
supplied by 
the user. This way, the user doesn't need to remember
the current 
version of the file, unless he or she chooses to return
to an earlier 
version.<P>

<B>Conclusions</B><P>

Source Code Control or Revision Control systems can
be used to accomplish 
a similar goal, but are not for the average user. System
administrators 
can use vedit to edit and manipulate system configuration

files and keep a log of those edits. <P>




<P>


<H1>About the Author</H1><p>
<P>
Chris Hare is Ottawa Technical Services Manager for
Choreo Systems, Inc.
He has worked in the UNIX environment since 1986 and
in 1988 became one of
the first SCO authorized instructors in Canada. He teaches
UNIX introductory, 
system administration, and programming classes. His
current focus is on 
networking, Perl, and X. Chris can be reached at chare@choreo.ca,
or 
chare@unilabs.org, which is his home.<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
