<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v03, i05:  Copying and Moving Directories</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a3_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1994/sep94.tar"><b class=codeListing>sep94.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Copying and Moving Directories</H1><p>
<P>
Ed Schaefer<P>

Perhaps the most basic of all system administration
tasks consists 
of copying and moving files and directories. This article
presents 
three ways of copying/moving directories. The first
two are basic 
&quot;one-liners&quot; using tar and cpio; the third

is a move directory shell script, mvdir, that uses the
UNIX 
move command, mv.<P>

<B>Using tar</B><P>

The tape archive command, tar, can be used to copy all
files 
and directories from one location to another. To copy
all files and 
directories from under /usr/ed to /usr/fred, type:<P>
<PRE>
cd /usr/ed; tar cf - .|(cd /usr/fred; tar xf - )</pre><p>
<p>
This command changes to the source directory and creates
a tar 
archive. The &quot;f&quot; option with a dash means
use standard output 
and the period includes the current directory in the
archive. Since 
this command is piped, the standard output of the archive
becomes 
the standard input of the tar extraction creating the
required 
copy. The parenthesis groups commands before the tar
extraction 
takes place.<P>

<B>Using cpio</B><P>

The copy input-output command, cpio, can also be used
to copy 
directories:<P>
<PRE>
cd /usr/ed; find . -depth -print|cpio -pd /usr/fred</pre><p>
<p>
The pass mode, &quot;-p,&quot; of cpio allows a list
of files 
piped from the standard input to be copied to the target
directory, 
/usr/fred. Be sure to change to the source directory
and then 
do a find. A find from root such as<P>
<PRE>
find /usr/ed -depth -print...</pre><p>
<p>
will create a directory structure under /usr/fred 
with the full path of the source directory. For example,
a file /usr/ed/sample 
would be moved as /usr/fred/usr/ed/sample.<P>

<B>The mvdir Script</B><P>

As useful as these one-liners are, they are strictly
a copy and not 
a true move. With the advent of SVID release 2, the
UNIX move command, 
mv, supports moving directories:<P>
<PRE>
mv srcdirectory destdirectory</pre><p>
<p>
where each argument is a directory and &quot;destdirectory&quot;

does not exist. The mvdir script takes advantage of
mv. 
The pseudo-code for mvdir is as follows:<P>

<I>1. If the destination directory exists, assume 
the source directory basename moves to the destination
directory, 
keeping the same name.<P>

2. If the destination directory does not exist, 
assume the source directory basename moves to the the
basename of 
the destination.<P>

3. If the source and destination directories do 
not exist on the same file system, perform a copy. If
the source and 
destination directories do not exist on the same file
system, inodes 
cannot be moved across file systems.</I><P>

<B>Source Code Explanation</B><P>

Lines 19 through 23 check if the source directory is
being moved to 
itself. For example, mv does not allow the following
syntax:<P>
<PRE>
mv   .   destdir</pre><p>
<p>
If the destination directory exists, the script appends

the basename directory to the destination directory
(lines 32 through 
34).<P>

If the destination directory does not exist, the awk
script 
(lines 36 through 60) returns either<P>

a) the string NO-PATH if no slashes are found, 
signifying a directory name with no path, or<P>

b) the full path of the directory name minus the basename.

For example, if the destination directory were /usr/eds/doc,

the string /usr/eds would be returned.<P>

The awk script splits the destination string into an
array 
and rebuilds the directory string up to the last directory
name (lines 
41 through 55). (Note: awk array usage is non-conventional;

see the sidebar &quot;Arrays in awk,&quot; for more
information.)<P>

If the full path string is neither a directory nor a
path (NO-PATH), 
an error returns (lines 61 through 65).<P>

If the destination directory is a file or a directory,
an error returns 
(lines 68 through 72).<P>

If the source directory shares a common path with the
destination 
directory, an error returns (lines 74 through 79).<P>

If the first character of the source and destination
directories is 
not a slash, the script assumes this is a valid move
(lines 81 through 
85).<P>

To check for a possible file system move, the code finds
the parent 
file systems of the source and destination directories,
if those are 
not provided (lines 97 through 101).<P>

The awk script (lines 102 through 112) returns a 1 if
the 
directories are on different file systems, else a zero.
This section 
of the code fails if there is a link between the file
system and another 
directory. For example, if /apps is linked to /jet 
and you attempt to mvdir /usr/eds/doc/some.dir to /apps/some.dir,

the awk script cannot determine that /apps and /usr

are separate file systems.<P>

If the file systems are different, the script changes
to the source 
directory, makes the destination directory, and then
copies the source 
directory to the destination directory (lines 116 through
124). If 
the file systems are the same, the script performs a
normal move.<P>

<B>Conclusion</B><P>

Copying files and directories is simplified by using
the tar 
or cpio one-liners. If a copy is not sufficient, use
the mvdir 
shell script.<P>

<B>References</B><P>

Prata, Stephen, and Donald Martin. <I>UNIX System 
V Bible: Commands and Utilities</I>. The Waite Group, 1987.<P>

Aho, Alfred, Brian Kernighan, and Peter Weinberger.

<I>The Awk Programming Language</I>. Addison-Wesley, 1988.
<P>




<P>


<H1>About the Author</H1><p>
<P>
Ed Schaefer is an Informix software developer and UNIX
system 
administrator at jeTECH Data Systems of Moorpark, CA,
where he develops 
Time and Attendance Software. He has been involved with
UNIX and Informix 
since 1987 and was previously head of software development
at Marie 
Callendar Pie Shops of Orange, CA.<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
