<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v03, i06: Listing 1: perl program for building a permutated index</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a12.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a12_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><a href="../../../../source/SA/1994/nov94.tar"><b class=codeListing>nov94.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1: perl program for building a permutated index</H1><p>
<PRE>
#! /usr/bin/perl

# Build a permutated index of already formatted and installed man pages

#-----------------------------------------------------------------------
# CHANGE THE FOLLOWING TO FIT LOCAL CUSTOM
#-----------------------------------------------------------------------

#
# Specify the page format
#
$Line = 80;                             # Total line length (incl. margins)
$LeftMargen = 5;                        # Size of Left Margin
$RightMargen = 3;                       # Size of Right Margin

#
# Where the formatted man pages are
#
$ManDir{ '/usr/share/man' }++;
$ManDir{ '/usr/share/man/old' }++;
$ManDir{ '/usr/X11/man' }++;
$ManDir{ '/usr/contrib/man' }++;
$ManDir{ '/usr/local/man' }++;
$ManDir{ '/usr/contrib/man' }++;
$ManDir{ '/usr/contrib/mh/man' }++;
$ManDir{ '/usr/contrib/isode/man' }++;

#
# Man Page Chapters Extention
#
@DirExt = ( 1, 2, 3, 4, 5, 6, 7, 8 );

#-----------------------------------------------------------------------
#     END OF CUSTOM CONFIG
#-----------------------------------------------------------------------

#
# Words not keywords in Permutated Index
#
$NoneWord{ '-' }++;
$NoneWord{ 'a' }++;
$NoneWord{ 'an' }++;
$NoneWord{ 'am' }++;
$NoneWord{ 'and' }++;
$NoneWord{ 'are' }++;
$NoneWord{ 'by' }++;
$NoneWord{ 'for' }++;
$NoneWord{ 'get' }++;
$NoneWord{ 'has' }++;
$NoneWord{ 'have' }++;
$NoneWord{ 'in' }++;
$NoneWord{ 'information' }++;
$NoneWord{ 'info' }++;
$NoneWord{ 'is' }++;
$NoneWord{ 'it' }++;
$NoneWord{ 'of' }++;
$NoneWord{ 'on' }++;
$NoneWord{ 'or' }++;
$NoneWord{ 'set' }++;
$NoneWord{ 'the' }++;
$NoneWord{ 'to' }++;
$NoneWord{ 'version' }++;
$NoneWord{ 'via' }++;
$NoneWord{ 'when' }++;
$NoneWord{ 'what' }++;
$NoneWord{ 'which' }++;
$NoneWord{ 'while' }++;
$NoneWord{ 'you' }++;
$NoneWord{ 'your' }++;
$NoneWord{ 'yours' }++;

#
# Make some reasonable size calculation, based on line format

$Name = int(($Line - $LeftMargen - $RightMargen) / 100 * 15);
$Name = 10 if $Name &lt; 10;
$Name = 20 if $Name &gt; 20;
$Size = int(($Line - $Name - 1)/2);

#
# The tmp file we are using
#
open( ERR, &quot;&gt;/tmp/xindex&quot; ) || die &quot;open /tmp/xindex&quot;;

#-----------------------------------------------------------------------
#
# Start of main program
#

foreach $Dir ( sort keys %ManDir ) {

Ext: foreach $Ext ( @DirExt ) {
$DirName = &quot;$Dir/cat$Ext&quot;;
printf ERR &quot;Now  trying $DirName\n&quot;;
unless ( opendir( DIR, $DirName )  ) {
print ERR &quot;cannot open $DirName\n&quot;;
next Ext;
}

@Files = readdir DIR;
foreach ( @Files ) {
next if /^\./;
&amp;Get( &quot;$DirName/$_&quot; );
}
close( DIR );
}
}
&amp;Print;

#-----------------------------------------------------------------------
#
# Get the information for permutated index from formatted man page file.
#

package Get;

sub main'Get {

local( $Path ) = @_;

unless( open( FILE, $Path ) ) {
print ERR &quot;cannot open file: $Path\n&quot;;
return;
}

$GotIt = 0;
$Count = 0;
$Line = &quot;&quot;;
$No = 'noonehome';

while( &lt;FILE&gt; ) {
$Count++;
chop;
print ERR (&quot;$Path: Unformatted source?  Ignored\n&quot;), return if /^\./;
s/.//g;
$No = $1 if /^(\w+\(\w+\))/;
$No =~ tr/A-Z/a-z/;
if ( $GotIt ) {
if ( $Line =~ /\w-$/ ) {
s/^\s+//;
s/\s+$//;
chop( $Line );
$Line = &quot;$Line$_&quot;;
}
else {
$Line = ($Line eq '' ) ? $_ : &quot;$Line $_&quot;;
}
last if $_ eq '';
}
$GotIt++ if /^name/i;
last if $Count &gt; 15;
}
close( FILE );

last if $No eq 'noonehome';

if ( $Line ne '' ) {
$Line =~ s/--*/-/;
$Line =~ s/\s+-\s+/: /;
@Line2 = split( ' ', $Line );
@Line1 = ();

while( $#Line2 &gt;= 0 ) {
$Line1 = join( ' ', @Line1);
$Line2 = join( ' ', @Line2);
if ( ! defined $main'NoneWord{ $Line2[0] } ) {
$Key = $Line2;
$Key =~ s/^\W+// if $Key =~/^\W+/;
$Key =~ tr/A-Z/a-z/;
$Out = sprintf( &quot;%s|%s|%s|%s&quot;,
$Key, $Line2, $Line1, $No );
$main'Out{$Out}++;
}
push( @Line1, shift( @Line2 ));
}
}
else {
if ( $Count == 0 ) {
print ERR &quot;FILE EMPTY FOR $Path\n&quot;;
}
else {
print ERR &quot;BAD FORMAT FOR $Path\n&quot;;
}
}
}

#-----------------------------------------------------------------------
#
#   Print the permutated index.
#

package Print;

sub main'Print {

foreach( sort keys %main'Out ) {
( $Key, $Line2, $Line1, $No ) = split( '\|', $_);
if ( length( $Line1 ) &gt; $main'Size ) {
$Line1 = substr($Line1, - ($main'Size - 2) );
$Line1 =~ s/^\w+/*/;
}
if ( length( $Line2 ) &gt; $main'Size ) {
$Line2 = substr($Line2, 0, $main'Size - 2 );
$Line2 =~ s/\w+$/*/;
}
if( length( $No ) &gt; $main'Name ) {
$No = substr( $No, 0, $main'Name - 1 );
$No = &quot;${No}*&quot;;
}
$Dots = $main'Size - length($Line2);
printf( &quot;%${main'Size}s   %s%s %s\n&quot;, $Line1, $Line2, '.' x $Dots,  $No );
}
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
