<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v03, i06: Listing 3: fwedit.sh--An example suFirewall utility</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a3.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a3_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a3_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink>Listing 3</span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a3_l4.htm">Listing 4</a></span></td>
		<td><span class=navbarLink><a href="a3_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1994/nov94.tar"><b class=codeListing>nov94.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 3: fwedit.sh--An example suFirewall utility</H1><p>
<PRE>
#***********************************
#  fwedit - Get an s-file file for edit.
#************************************

usage() {
(
echo &quot;usage: $FWPGM [ -r Rel ] File...&quot;
) &gt;&amp;2
exit 1
}

if [ $# = 0 ]; then
usage
fi

# Read in control file.
. ${FWSDIR}/.SCCSctl

# Save original and force umask to what we want.
oldmask=`umask`
umask 007

# Process command line switches.
getOpts=&quot;-e&quot;
while [ $# -gt 0 ]; do
case &quot;$1&quot; in
-D)
# Turn on debugging.
set -x
;;
-r?*)
# SID
rFOpt=`expr &quot;$1&quot; : '..\([0-9][0-9]*\)'`
if [ ! &quot;$rFOpt&quot; ]; then
echo &quot;$FWPGM: bad -r value, $1&quot; &gt;&amp;2
exit 2
fi
;;
-r)
# SID
rFOpt=`expr &quot;$2&quot; : '\([0-9][0-9]*\)'`
shift
if [ ! &quot;$rFOpt&quot; ]; then
echo &quot;$FWPGM: bad -r value, $1.&quot; &gt;&amp;2
exit 2
fi
;;
-*)
# Must be a bad flag.
echo &quot;${FWPGM}: bad flag, $1.&quot; &gt;&amp;2
usage
;;
*)
break
;;
esac
shift
done

count=0
if [ ! &quot;${SCCSBASE}&quot; ]; then
echo &quot;$FWPGM: SCCSBASE must be set.&quot; &gt;&amp;2
exit 4
fi
for file in $*;do
rc=0
File=`basename $file`

echo &quot;&quot; &gt;&amp;2

if [ ! -r ${SCCSBASE}/s.$File ]; then
echo &quot;$FWPGM($File): does not exist.&quot; &gt;&amp;2
rc=3
continue
fi

# If you are doing multiple SCCS commands within an
# suFirewall script, you will need to be able to lock
# the s-file until done with all operations.
# fwlock implements file locking via a lock file in the spirit
# of SCCS z-files. Its implementation is beyond the scope
# of this paper.
#
fwlock ${SCCSBASE}/Z.$File

# Get latest SID in s.File if rFOpt not provided.
if [ ! &quot;$rFOpt&quot; ]; then
rFOpt=`FWLatestTrunk $File`
fi

# Check to see if this release trunk is locked.
eval Locked=\$Locked_$rFOpt
if [ &quot;$Locked&quot; ]; then
echo &quot;$FWPGM($File): \c&quot; &gt;&amp;2
echo &quot;locked for edits on release trunk $rFOpt.&quot; &gt;&amp;2
rm -f ${SCCSBASE}/Z.$File
rc=5
continue
fi

# Check for edits on specified trunk.
edits=&quot;&quot;
edits=`FWEditsOnTrunk $rFOpt $File`
if [ &quot;$edits&quot; ]; then
echo &quot;$FWPGM($File): \c&quot; &gt;&amp;2
echo &quot;out for edit on release trunk $rFOpt.&quot; &gt;&amp;2
echo &quot;$edits&quot; &gt;&amp;2
rm -f ${SCCSBASE}/Z.$File
rc=6
continue
fi

# Set -r option for get.
getSid=&quot;-r${rFOpt}&quot;

# Check for writable file here
if realdo $FWREALUID &quot;test -w $File&quot;; then
if [ -t $FWSTDIN ]; then
echo &quot;$FWPGM($file): \c&quot; &gt;&amp;2
echo &quot;Writable file exists, remove it? \c&quot; &gt;&amp;2
read ans
case &quot;$ans&quot; in
Y|y|YES|yes)
realdo $FWREALUID &quot;rm $File&quot;
if [ $? != 0 ]; then
echo &quot;$FWPGM($file): \c&quot; &gt;&amp;2
echo &quot;Cannot remove (?), ignoring edit request.&quot; &gt;&amp;2
rm -f ${SCCSBASE}/Z.$File
rc=7
continue
fi
;;
*)
echo &quot;$FWPGM($file): \c&quot; &gt;&amp;2
echo &quot;Not removed, ignoring edit request.&quot; &gt;&amp;2
rm -f ${SCCSBASE}/Z.$File
rc=7
continue
;;
esac
else
echo &quot;$FWPGM($file): \c&quot; &gt;&amp;2
echo &quot;Writable file exists, ignoring edit request.&quot; &gt;&amp;2
rm -f ${SCCSBASE}/Z.$File
rc=7
continue
fi
fi

# Disable interrupts for critical portion.
trap &quot;&quot; 1 2 3 15

# Do the SCCS get for edit.
echo &quot;+ get ${getSid} ${getOpts} ${SCCSBASE}/s.$File&quot; &gt;&amp;2
eval get ${getSid} ${getOpts} ${SCCSBASE}/s.$File
rc=$?

# Remove the lock file.
rm -f ${SCCSBASE}/Z.$File
if [ $rc = 0 ]; then
count=`expr $count + 1`
fi
# Enable interrupts
trap 1 2 3 15
done
echo &quot;&quot; &gt;&amp;2
echo &quot;$FWPGM: $count file(s) successfully processed.&quot; &gt;&amp;2
exit $rc
# end
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
