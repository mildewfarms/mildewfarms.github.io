<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v03, i03: Listing 1: dnatRpt Perl script</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a1.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a1_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a1_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a1_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a1_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><span class=navbarLink><a href="a1_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a1_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a1_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1994/may94.tar"><b class=codeListing>may94.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1: dnatRpt Perl script</H1><p>
<PRE>
#!/usr/local/bin/perl
#=====================================================
# AUTHOR: Dave Brillhart
# FILE:   dnatRpt
#-----------------------------------------------------
# This PERL program checks every host listed in a
# selectable configuration file for connectivity.
# If reachable - it determines how long the host has
# been up. The program then generates and optionally
# mails a report based on its findings. UNIX (and
# optionally VMS via DECnet) hosts can be checked.
#
# Usage: dnatRpt [ -rpt -silent hostnameFile ]
#
# Rtn_Value: #_hosts_unavailable
#=====================================================

#-----------------------------------------------------
$rcPath   = &quot;/usr/local/etc/&quot;;
$rptFile  = &quot;/tmp/dnatRpt_$$&quot;;
$chkFile  = &quot;/tmp/dnat911&quot;;
$rID      = &quot;peru&quot;;
$rdclCmd  = &quot;/usr/local/bin/rdcl&quot;;
$pingCmd  = &quot;/usr/etc/ping&quot;;
$rshCmd   = &quot;/usr/ucb/rsh&quot;;
$rupCmd   = &quot;/usr/local/bin/rup&quot;;
$mailCmd  = &quot;/usr/ucb/mail&quot;;
$dow      = (Sunday,Monday,Tuesday,
Wednesday,Thursday,Friday,
Saturday,Sunday)[(localtime)[6]];
$sub      = &quot;Downtime Tracking Status Report - $dow&quot;;
#-----------------------------------------------------

$rpt = 0; $silent = 0; $rcFile = &quot;dnatHosts&quot;; $| = 1;
while ($ARGV[0]) {     # digest command line options #
if    ($ARGV[0] eq &quot;-rpt&quot;)   { $rpt   = 1; }
elsif ($ARGV[0] eq &quot;-silent&quot;) { $silent = 1; }
else  { $rcFile = $ARGV[0]; }
shift;
}

open(HOSTS,&quot;&lt;$rcPath$rcFile&quot;) ||
die &quot;Can't open $rcPath$rcFile file.\n&quot;;
open(RPT,&quot;&gt;$rptFile&quot;) ||
die &quot;Can't open $rptFile file.\n&quot;;
open(CHK,&quot;&gt;$chkFile&quot;) ||
die &quot;Can't open $rptFile file.\n&quot;;

if ($silent == 0 &amp;&amp; $rpt == 0)
{ print &quot;\n[ DNAT: Will NOT mail reports. ]\n&quot;; }
elsif ($silent == 0 &amp;&amp; $rpt == 1)
{ print &quot;\n[ DNAT: Will mail reports. ]\n&quot;; }

print RPT &quot;***************************************\n&quot;;
print RPT &quot;******   System Status Report    ******\n&quot;;
print RPT &quot;***************************************\n&quot;;

#----------------------------------------------------#
# Main loop - Check each host and generate report    #
#----------------------------------------------------#
$ucnt = $rcnt = 0;            # host status counters #
while ($host = &lt;HOSTS&gt;)  # process all hosts in file #
{
chop $host;                      # remove new line #
$host =~ y/ / /s;    # squeeze spaces into 1 space #
if (length($host) &lt; 2) { next; }     # skip blanks #
if ($host =~ m/^\#.*$/) { next; }  # skip comments #

#--------------------------------------------------#
# if the line is enclosed in double quotes, it is  #
# interpreted as a section header for the report.  #
#--------------------------------------------------#
if ($host =~ m/^\&quot;(.*)\&quot;$/) {
print RPT &quot;\n$1\n&quot;;
print RPT &quot;-----------------------------------\n&quot;;
next;             # get next line from host file #
}

$pos = index($host,&quot;#&quot;);  # parse in-line comments #
if ($pos &gt; -1) { $host = substr($host,0,$pos); }
if ($silent == 0) { print &quot;\n + processing $host&quot;; }
#--------------------------------------------------#
# if the hostname ends in &quot;::&quot; then use DECnet and #
# derive uptime from the top of &quot;show system&quot; cmd. #
#--------------------------------------------------#
if ($host =~  m/^([^:]+)::.*$/) {
$host = $1;         # strip off the double colon #
$cmd = &quot;$rdclCmd $host show system 2&gt;&amp;1 |&quot;;
open(CMD, $cmd) ||
die &quot;ERROR: Couldn't run $cmd: $!\n&quot;;
$available = 0; $uplong = 0;
while ($cmdLine = &lt;CMD&gt;) {
chop $cmdLine;
if ($cmdLine =~
m/^.*\s+Uptime\s+(\d+)\s+([\d:]+)/) {
$available = 1; $days = $1;
}
if ($available == 1 &amp;&amp; $days &gt; 0)
{ $uplong = 1; }
}
close(CMD);
}
#--------------------------------------------------#
# otherwise it must be UNIX, use TCP/IP, try 'rup' #
# first (faster), then 'rsh' if rup fails.         #
#--------------------------------------------------#
else {
# if string &quot;alive&quot; is missing, host unavailable #
$available = 0;
$ping = `$pingCmd $host 2&gt;&amp;1`;
if ($ping =~ m/^.*alive.*$/) { $available = 1; }

$uptime = $uplong = $rupOK = 0;
if ($available) {    # host alive, go get uptime #
$uptime = `$rupCmd $host 2&gt;&amp;1`;
if ($uptime =~ m/^.* up .*$/) { $rupOK = 1; }
if ($rupOK) {   # rup command appeared to work #
if ($uptime =~ m/^.*up (.*) day.*$/)
{ $uplong = 1; $days = $1; }
}
else {       # rup failed, try rsh'ing to host #
$uptime = `$rshCmd $host -l $rID uptime 2&gt;&amp;1`;
if ($uptime =~ m/^.*up (.*) day.*$/)
{ $uplong = 1; $days = $1; }
}
}
}

#--------------------------------------------------#
# append host status to the end of report file     #
#--------------------------------------------------#
if ($available == 0) {
printf(RPT &quot;%-15s %s\n&quot;,$host,
&quot;** HOST UNAVAILABLE **&quot;);
printf(CHK &quot;%-15s %s\n&quot;,$host,
&quot;** HOST UNAVAILABLE **&quot;);
if ($silent == 0) { print &quot;... ** UNAVAILABLE!&quot;; }
$ucnt++;
}
elsif ($uplong == 0) {
printf(RPT &quot;%-15s %s\n&quot;,$host,
&quot;** HOST RESTARTED **&quot;);
printf(CHK &quot;%-15s %s\n&quot;,$host,
&quot;** HOST RESTARTED **&quot;);
if ($silent == 0) { print &quot;... ** RESTARTED!&quot;; }
$rcnt++;
}
else {
if ($silent == 0) { print &quot;... OKAY!&quot;; }
printf(RPT &quot;%-15s [up %3s days]\n&quot;,$host,$days);
}
}

print RPT &quot;\nTOTAL UNAVAILABLE: $ucnt  &quot;;
print RPT &quot; RESTARTED:    $rcnt\n&quot;;
print RPT &quot;***************************************\n&quot;;
close(RPT); close(CHK);

if ($silent == 0)       # display report on /dev/tty #
{ print &quot;\n&quot;; system(&quot;cat $rptFile&quot;); }

if ($rpt == 0)                 # do not mail reports #
{ unlink $rptFile; exit $ucnt; }

#----------------------------------------------------#
# Mail the DNAT report to all appropriate aliases.   #
# 'dnatSunday', 'dnatAdmin', &amp; 'dnatAlert' are mail  #
# aliases defined in the /etc/aliases file.          #
#----------------------------------------------------#
if ($dow eq &quot;Sunday&quot;) {         # Send to dnatSunday #
$mc = &quot;$mailCmd -s '$sub' dnatSunday &lt; $rptFile&quot;;
system($mc);
}
if ($rcnt &gt; 0) { # Send to dnatAlert if any rebooted #
($sub1 = $sub) =~ s/Down/*ALERT* : Down/;
$mc = &quot;$mailCmd -s '$sub1' dnatAlert &lt; $rptFile&quot;;
system($mc);
}
else {             # Send to dnatAdmin every morning #
($sub1 = $sub) =~ s/Down/Daily Down/;
$mc = &quot;$mailCmd -s '$sub1' dnatAdmin &lt; $rptFile&quot;;
system($mc);
}

unlink $rptFile;
exit $ucnt;
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
