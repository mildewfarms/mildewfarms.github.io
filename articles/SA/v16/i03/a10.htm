<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v16, i03: Questions and Answers</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1"></HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><a href="../../../../source/SA/2007/mar2007.tar"><b class=codeListing>mar2007.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><img src="../../resource/1_questions.gif" width="245" height="130" align="right">Questions and Answers</h1>

Amy Rich
<p>

<font size='+4'>Q</font> I have a laptop running OS X 10.4.8 that's configured just the same as other laptops in the department. We connect through a wireless network, which hands out IP addresses via a DHCP server. If I look at the Network Configuration Page for the AirPort, it says that I'm configuring IPv4 Using DHCP. No other information, including DNS Servers or Search Domains, is filled in. If I open a Web browser, I can get to, say, <b>yahoo.com</b> just fine. I can <b>ping yahoo.com</b> just fine. When I try to run <b>nslookup</b> or <b>dig</b>, though, I get the following timeout error:<p>


<pre>
;; connection timed out; no servers could be reached
</pre>

Why do some of my services work fine while others fail? If I change networks, I have the same problem with a different set of nameservers, so I don't think it's the fault of DHCP. All of the other laptops here behave as normal.<p>

<font size='+4'>A</font> If the only things that fail to work are <b>nslookup</b> and <b>dig</b>, then most likely your link for <b>/etc/resolv.conf</b> is missing. If you do an <b>ls -al</b> on <b>/etc/resolv.conf</b>, you should see a symlink to <b>/var/run/resolv.conf</b>. If this symlink is missing, or the file has become otherwise modified, recreate the symlink properly by running the following as root:<p>


<pre>
rm -f /etc/resolv.conf
ln -s /var/run/resolv.conf /etc/resolv.conf
</pre>

The nameservers for <b>nslookup</b> and <b>dig</b> should now match those obtained from your DHCP configuration.<p>

<font size='+4'>Q</font> We're in the market to refresh our desktops where I work. We want to be able to boot Linux, Windows, or Solaris. Windows and Linux will run on almost anything, but Solaris is a bit more picky about things like network cards, DVD drives, etc. Is there any way I can tell whether or not the hardware I'm thinking of purchasing will support Solaris?<p>

<font size='+4'>A</font> There are a few resources that might help you out. I'm going to assume that you're going to be running Solaris 10 on these PCs, since that's probably your best bet for supportability. To begin, take a look at the Hardware Compatibility List at:<p>


<pre>
http://www.sun.com/bigadmin/hcl/
</pre>

This includes a list of hardware known to work with Solaris x86/x64 systems. The list is not comprehensive, so you might also want to look at the Third Party I/O Technologies and Solutions page at:<p>


<pre>
http://www.sun.com/io_technologies/S10List.html
</pre>

Lastly, if your system is not listed in the HCL, and you have access to the hardware you're considering purchasing (you might be able to get a demo system, especially if you're purchasing a large quantity), try using the Solaris Operating System for x86 Installation Check Tool:<p>


<pre>
http://www.sun.com/bigadmin/hcl/hcts/install_check.html
</pre>

The tool is a bootable CDROM image that probes the major PCI devices in your PC and tells you whether there are supported or third-party drivers that it knows about. The report it generates should give you a fairly solid idea of whether you can install Solaris 10 on your machine. If you have a device that claims not to have a driver, there is still some chance that your device might be supported by an existing driver and the check tool is unaware of it.<p>

<font size='+4'>Q</font> We're running a mix of Solaris 8, 9, and 10 machines at our site. I've just been informed that we'll need some patches to deal with the upcoming DST issue that's going to hit next year. Is there a definitive list of products and patches that I'm going to need to install anywhere?<p>

<font size='+4'>A</font> I don't know of a definitive list, but your best bet is probably to search sunsolve.sun.com for "U.S. Energy Policy Act of 2005." The OS patches you'll need are:<p>


<pre>
Solaris 8: 109809-03, 108993-53
http://sunsolve.sun.com/search/document.do?assetkey=1-21-109809-03
http://sunsolve.sun.com/search/document.do?assetkey=1-21-108993-53

Solaris 9: 113225-04, 112874-34
http://sunsolve.sun.com/search/document.do?assetkey=1-21-113225-04
http://sunsolve.sun.com/search/document.do?assetkey=1-21-112874-34

Solaris 10: 122032-02, 119254-06, 118833-17
http://sunsolve.sun.com/search/document.do?assetkey=1-21-122032-02
http://sunsolve.sun.com/search/document.do?assetkey=1-21-119254-06
http://sunsolve.sun.com/search/document.do?assetkey=1-21-118833-17
</pre>

You'll also want to upgrade Java to one of the following:<p>


,pre>
Java SE v1.3.1_18 (or later)
Java SE v1.4.2_11 (or later)
Java SE 5.0 u6 (or later)
</pre>

and apply the patch for the following firmware revisions on the specified platforms:<p>


<pre>
114527-03 for firmware rev 5.20.x on the E6900, E4900, E2900, 6800,
4800, 4810, 3800, V1280, Netra 1280, and Netra 1290 platforms.
http://sunsolve.sun.com/search/document.do?assetkey=1-21-114527-03

114526-07 for firmware rev 5.19.6 on the E6900, E4900, E2900, 6800,
4800, 4810, 3800, and V1280 platforms.
http://sunsolve.sun.com/search/document.do?assetkey=1-21-114526-07

114525-07 for firmware rev 5.18.6 on the E6900, E4900, E2900, 6800,
4800, 4810, 3800, and V1280 platforms.
http://sunsolve.sun.com/search/document.do?assetkey=1-21-114525-07
</pre>

You might also have other applications that will require updates or patching. Anything that uses the system time should be fine after patching the OS, but anything that calculates its own date on the fly will probably have issues.<p>

<font size='+4'>Q</font> We've decided to change the information for our DNS nameservers to machines that we have control over instead of relying on a third party to handle it for us. I logged into <b>domainsupport.register.com</b> to update the nameserver listings and clicked submit. I got the following error back:<p>


<pre>
Domain Name Maintenance For
your.domain

*Errors modifying nameservers: Nameserver [foo] cannot be registered*
</pre>

When I emailed tech support, they responded with what sounded to me like a bogus answer:<p>


<pre>
The reason that you are unable to point your domain name to 
[foo] is because this DNS is not registered at the registry 
level. In order to point your domain name to new DNS details, 
the DNS have to be registered with the registry.
</pre>

What does that mean? Are they giving me the runaround to try and get more money out of me (by hosting the nameservers for the domain there)?<p>

<font size='+4'>A</font> Most likely what they're trying to tell you is that you're missing what's called a <b>glue record</b> for the host you're attempting to list as your nameserver. To understand what a <b>glue record</b> is and why it's necessary, I'll provide a brief explanation of how a DNS query works.<p>

Say that you try to resolve <b>www.google.com</b>. from your desktop machine. First, the query goes to one of your local, recursive nameservers. Assuming that it doesn't have any data cached, the query will be passed onto one of the top level domain name servers, <b>a.root-servers.net</b> though <b>m.root-servers.net.</b>. These servers know about the top-level domains including <b>com</b>, <b>net</b>, <b>org</b>, country domains, etc.<p>

Since <b>www.google.com</b>. is in the <b>com</b> domain, the root nameserver passes a referral to the names and IP addresses of the <b>com</b> domain nameservers (<b>a.gtld-servers.net</b> through <b>m.gtld-servers.net</b>) back to your local recursive resolver. Your local resolver keeps following zone delegations until it finds information that's authoritative for <b>www.google.com.</b>. If you use the <b>trace</b> option to <b>dig</b>, you can view the path of the lookup transaction:<p>


<pre>
$dig @192.168.1.1 www.google.com +trace

; &lt;&lt;&gt;&gt; DiG 9.2.2 &lt;&lt;&gt;&gt; @192.168.1.1 www.google.com. +trace
;; global options:  printcmd
.                       146099  IN      NS      B.ROOT-SERVERS.NET.
.                       146099  IN      NS      C.ROOT-SERVERS.NET.
.                       146099  IN      NS      D.ROOT-SERVERS.NET.
.                       146099  IN      NS      E.ROOT-SERVERS.NET.
.                       146099  IN      NS      F.ROOT-SERVERS.NET.
.                       146099  IN      NS      G.ROOT-SERVERS.NET.
.                       146099  IN      NS      H.ROOT-SERVERS.NET.
.                       146099  IN      NS      I.ROOT-SERVERS.NET.
.                       146099  IN      NS      J.ROOT-SERVERS.NET.
.                       146099  IN      NS      K.ROOT-SERVERS.NET.
.                       146099  IN      NS      L.ROOT-SERVERS.NET.
.                       146099  IN      NS      M.ROOT-SERVERS.NET.
.                       146099  IN      NS      A.ROOT-SERVERS.NET.
;; Received 436 bytes from 192.168.1.1#53(192.168.1.1) in 2 ms

com.                    172800  IN      NS      C.GTLD-SERVERS.NET.
com.                    172800  IN      NS      D.GTLD-SERVERS.NET.
com.                    172800  IN      NS      E.GTLD-SERVERS.NET.
com.                    172800  IN      NS      F.GTLD-SERVERS.NET.
com.                    172800  IN      NS      G.GTLD-SERVERS.NET.
com.                    172800  IN      NS      H.GTLD-SERVERS.NET.
com.                    172800  IN      NS      I.GTLD-SERVERS.NET.
com.                    172800  IN      NS      J.GTLD-SERVERS.NET.
com.                    172800  IN      NS      K.GTLD-SERVERS.NET.
com.                    172800  IN      NS      L.GTLD-SERVERS.NET.
com.                    172800  IN      NS      M.GTLD-SERVERS.NET.
com.                    172800  IN      NS      A.GTLD-SERVERS.NET.
com.                    172800  IN      NS      B.GTLD-SERVERS.NET.
;; Received 504 bytes from 192.228.79.201#53(B.ROOT-SERVERS.NET) \
   in 86 ms

google.com.             172800  IN      NS      ns1.google.com.
google.com.             172800  IN      NS      ns2.google.com.
google.com.             172800  IN      NS      ns3.google.com.
google.com.             172800  IN      NS      ns4.google.com.
;; Received 168 bytes from 192.26.92.30#53(C.GTLD-SERVERS.NET) \
   in 10 ms

www.google.com.         604800  IN      CNAME   www.l.google.com.
l.google.com.           86400   IN      NS      a.l.google.com.
l.google.com.           86400   IN      NS      b.l.google.com.
l.google.com.           86400   IN      NS      c.l.google.com.
l.google.com.           86400   IN      NS      d.l.google.com.
l.google.com.           86400   IN      NS      e.l.google.com.
l.google.com.           86400   IN      NS      g.l.google.com.
;; Received 244 bytes from 216.239.32.10#53(ns1.google.com) in 88 ms
</pre>

As shown in the above, <b>google.com.</b>. has four nameservers listed, <b>ns1.google.com.</b>. through <b>ns4.google.com.</b>, which are each inside the <b>google.com.</b> domain. If your resolver is following references to determine which nameservers are authoritative, you can imagine having a chicken and egg problem when the authoritative nameservers for a domain are contained within the domain itself. To get around this, the nameservers have glue records in the parent zone.<p>

A <b>glue record</b> is an <b>A</b> record that is created as part of a zone delegation. If a zone is delegated to a name server whose hostname lies within that particular zone, then a <b>glue record</b> for that hostname must be included in the delegation. In the case of <b>google.com.</b>, the GTLD nameservers have <b>A</b> records, which map <b>ns1.google.com.</b> through <b>ns4.google.com.</b> to their appropriate IP addresses. You can also use dig to view the glue records as follows:<p>


<pre>
$dig +norec @a.gtld-servers.net. www.google.com. A

; &lt;&lt;&gt;&gt; DiG 9.2.2 &lt;&lt;&gt;&gt; +norec @a.gtld-servers.net. www.google.com. A
;; global options:  printcmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 50719
;; flags: qr; QUERY: 1, ANSWER: 0, AUTHORITY: 4, ADDITIONAL: 4

;; QUESTION SECTION:
;www.google.com.                        IN      A

;; AUTHORITY SECTION:
google.com.             172800  IN      NS      ns1.google.com.
google.com.             172800  IN      NS      ns2.google.com.
google.com.             172800  IN      NS      ns3.google.com.
google.com.             172800  IN      NS      ns4.google.com.

;; ADDITIONAL SECTION:
ns1.google.com.         172800  IN      A       216.239.32.10
ns2.google.com.         172800  IN      A       216.239.34.10
ns3.google.com.         172800  IN      A       216.239.36.10
ns4.google.com.         172800  IN      A       216.239.38.10
</pre>

The <b>A</b> records displayed in the <b>ADDITIONAL SECTION</b> are the glue records for <b>google.com.</b>.<p>

Glue records are generally created through your registrar, but it really depends on the policies of your TLD. Try looking for something like a <b>Register Name Server</b> or <b>Register Host</b> option at you registrar to create glue records for your nameservers.<p>

If you're delegating your own subdomains, you'll need to add glue records to your parent zone. Say you have <b>host.domain</b> and you want to create a subdomain called <b>my.host.domain</b>. The necessary configuration snippet from your BIND zone file for <b>host.domain</b> would look like:<p>


<pre>
$TTL 2d
$ORIGIN host.domain.
@       IN     SOA   ns1.host.domain. hostmaster.host.domain. (
        2006110100 ; serial number
        2h         ; refresh =  2 hours
        15M        ; update retry = 15 minutes
        3W12h      ; expiry = 3 weeks + 12 hours
        2h20M      ; minimum = 2 hours + 20 minutes
        )
; nameservers
       IN      NS     ns1.host.domain.
       IN      NS     ns2.host.domain.
; A records for nameservers
ns1    IN      A      192.168.1.1
ns2    IN      A      192.168.1.2

; my.host.domain subdomain definition
$ORIGIN my.host.domain.
; two nameservers for the subdomain that reside within the subdomain
@      IN      NS     ns1.my.host.domain.
       IN      NS     ns2.my.host.domain.
; A records for subdomain nameservers only, aka glue records
ns1    IN      A      10.1.1.1
ns2    IN      A      10.1.1.2
</pre>

If you're looking for further reading, the O'Reilly <i>DNS and BIND</i> book by Paul Albitz and Cricket Liu (<b>http://www.oreilly.com/catalog/dns5/</b>) is an excellent source of information on glue records as well as other general DNS topics.<p>

<i>Amy Rich has more than a decade of Unix systems administration experience in various types of environments. Her current roles include that of Senior Systems Administrator for the University Systems Group at Tufts University, Unix systems administration consultant, author, and charter member of LOPSA. She can be reached at: <b>qna@oceanwave.com</b>.</i><p>

</table></table> 

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
