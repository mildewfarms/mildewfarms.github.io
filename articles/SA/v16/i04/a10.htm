<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v16, i04: SortingHat -- Which Server Do You Belong In?</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a10_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a10_s1.htm">Sidebar
            </a></span></td>
		<td><a href="../../../../source/SA/2007/apr2007.tar"><b class=codeListing>apr2007.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><img src="../../resource/1_shell.gif" width="245" height="130" align="right">SortingHat -- Which Server Do You Belong In?</h1>

John Spurgeon and Ed Schaefer
<p>

We are responsible for administering several servers distributed around the world. Each server is configured more or less the same way. However, a variety of attributes are unique to a particular server: nodename, IP address, default router, etc.<p>

We developed a utility called changeident (Spurgeon & Schaefer, 2004) to facilitate the configuration of many server-specific parameters. The modules that comprise changeident typically update or replace existing files using variables and hard-coded logic. For example, changing the nodename of a server involves commands like "echo $new_nodename > /etc/nodename".<p>

Some files, such as users' crontab files, are too complex for this approach. Instead, we use a Korn Shell script called SortingHat (see the sidebar "What's in a Name?"). SortingHat replaces existing files with copies of files that are preconfigured for specific servers.<p>

<b>The Directory Structure</b><p>

The SortingHat script (Listing 1) makes use of several directories to manage and organize files:<p>

<pre>
SORTINGHAT_DIR=/opt/SortingHat
SERVERS_DIR=$SORTINGHAT_DIR/servers
DEFAULT_DIR=$SORTINGHAT_DIR/default
BACKUP_DIR=$SORTINGHAT_DIR/backup
CURRENT_DIR=$SORTINGHAT_DIR/current
</pre>

The "servers" directory contains several subdirectories. The name of a subdirectory is the hostname of a server. And each of these subdirectories may contain more subdirectories and files. For example, a copy of the hosts.equiv file for a server named pongo would be located at:<p>

<pre>
/opt/SortingHat/servers/pongo/etc/hosts.equiv
</pre>

The default directory may contain files to be installed if a file doesn't exist on a specific server in the "servers" directory.<p>

The backup directory is used to store backup copies of files that have been replaced. Multiple backup copies are maintained in the event a file is backed up more than once.<p>

The current directory is a holding area that contains a copy of the file that will be installed when the <b>-r</b> option is used.
<p>

<b>The Options</b><p>

The best way to explain SortingHat is to describe the script's options and then use them in an example. SortingHat expects one argument -- a full path to the file being acted upon -- which we call the current file. Nothing exciting happens unless the options are used:<p>

<ul>
  <b>-f</b> -- Simply find the file.
  <p>
<b>-l</b> -- List the contents of the file.
  <p>
<b>-b</b> -- Back up the file in the server's directory under the SortingHat directory. The backup option only works in conjunction with the find option
  <p>
<b>-r</b> -- Replace the current file with the file that exists in the server's directory in the SortingHat directory. If that file does not exist, use the file that exists in SortingHat's default directory.
  <p>
<b>-h</b> -- Override the current hostname. If the <b>-h</b> option isn't used, SortingHat uses the contents of the /etc/nodename file to set the hostname.
</ul><p>

We're concerned that in our Solaris environment, an external command might require a reboot to take effect. If you find this unacceptable, consider using the Unix hostname or <b>uname</b> command.
<p>

<b>The Example</b><p>

Assume that our test file is /tmp/testfile and our server is named pongo. Executing the command <b>SortingHat -fb /tmp/testfile</b> delivers this output:
<p>

<pre>
/opt/SortingHat/bin/SortingHat...
File: /tmp/testfile
Searching for /opt/SortingHat/servers/pongo/tmp/testfile
Found /opt/SortingHat/servers/pongo/tmp/testfile
Current copy: /opt/SortingHat/current/tmp/testfile
Backup copy: /opt/SortingHat/backup/tmp/testfile
</pre>

A copy of the current /tmp/testfile is created in SortingHat's current directory. The tmp directory is also created if it doesn't already exist.<p>

Also, a backup copy of the test file is also created in SortingHat's backup directory. The file name is actually a soft link:<p>

<pre>
testfile -> /opt/SortingHat/backup/tmp/testfile.070206.142827.19389
</pre>

The actual file name is a combination of file name, date, time, and process id.  The next time SortingHat backs up /tmp/testfile the soft link points to a new file leaving the older file alone.<p>

SortingHat isn't of much use unless you replace something. Executing the command <b>SortingHat -fbr /tmp/testfile</b> delivers this output:
<p>

<pre>
/opt/SortingHat/bin/SortingHat...
File: /tmp/testfile
Searching for /opt/SortingHat/servers/pongo/tmp/testfile
Found /opt/SortingHat/servers/pongo/tmp/testfile
Current copy: /opt/SortingHat/current/tmp/testfile
Backup copy: /opt/SortingHat/backup/tmp/testfile
Replaced /tmp/testfile
</pre>

Since the SortingHat directory contains a /tmp/testfile for pongo, this file replaces the original /tmp/testfile. If pongo doesn't have a tmp/testfile, the default is used, and the command's output looks like this:<p>

<pre>
File: /tmp/testfile
Searching for /opt/SortingHat/servers/pongo/tmp/testfile
Searching for /opt/SortingHat/default/tmp/testfile
Found /opt/SortingHat/default/tmp/testfile
Current copy: /opt/SortingHat/current/tmp/testfile
Backup copy: /opt/SortingHat/backup/tmp/testfile
Replaced /tmp/testfile
</pre>

Finally, if SortingHat tries to replace a file that has no object in the SortingHat's server directory or in the default directory, nothing happens.<p>

Also SortingHat doesn't check file permissions. In our environment, other maintenance scripts such as changeident use Sortinghat -- called almost exclusively by root or other maintenance accounts.<p>

<b>What's in the Tarball</b><p>

Extracting the tarball creates the Sortinghat directory structure including the testfile example. The tarball was created using relative pathnames. If you change SortingHat's location to something other than the opt directory, don't forget to change the script's SORTINGHAT_DIR shell variable. The tarball can be found on the <i>Sys Admin</i> Web site: 
<p>

<pre>
http://www.sysadminmag.com/code
</pre>

In our environment, the SortingHat script resides in the /opt/SortingHat/bin directory, and that path is included in our PATH variable.<p>

<b>References</b><p>

Spurgeon, John and Ed Schaefer. 2004. "Managing System Identity with changeident." <i>Sys Admin</i>. 13(1):22-29.
<p>

<i>John Spurgeon is a software developer and systems administrator for Intel's Factory Information Control Systems, IFICS, in Hillsboro, Oregon. He is currently preparing to ride a single-speed bicycle in Race Across America in 2007.</i><p>

<i>Ed Schaefer is a frequent contributor to </i>Sys Admin<i>. He is a software developer and DBA for Intel's Factory Information Control Systems, IFICS, in Hillsboro, Oregon. Ed also hosts the monthly Shell Corner column on UnixReview.com. He can be reached at: <b>shellcorner@comcast.net</b>.</i>
<p>

</table></table> 

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
