<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v16, i08: Questions and Answers</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><a href="../../../../source/SA/2007/aug2007.tar"><b class=codeListing>aug2007.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><img src="../../resource/1_questions.gif" width="245" height="130" align="right">Questions and Answers</h1>

<p>Amy Rich
<p><font size='+4'>Q</font> I've written a bunch of scripts in PHP that I recently tried to migrate from a machine running 4.2 to a machine running 5.2. When I run the scripts, I get all sorts of errors. A simple test script which illustrates the problems I'm having is:
<pre>
#!/usr/bin/php -q /* -*- c -*- */
&lt;?php
print("Hello, world.\n");
?&gt;
</pre>

<p>Under PHP 4.2, this told the interpreter to ignore everything after the <b>-q</b>, and the output was simply <b>Hello, world.</b>.
<p>Under PHP 5.2, I get the PHP usage statement:
<pre>
Usage: php [options] [-f] &lt;file&gt; [--] [args...]
       php [options] -r &lt;code&gt; [--] [args...]
       php [options] [-B &lt;begin_code&gt;] -R &lt;code&gt; [-E &lt;end_code&gt;] \
         [--] [args...]
       php [options] [-B &lt;begin_code&gt;] -F &lt;file&gt; [-E &lt;end_code&gt;] \
         [--] [args...]
       php [options] -- [args...]
       php [options] -a

  -a               Run interactively
  -c &lt;path&gt;|&lt;file&gt; Look for php.ini file in this directory
  -n               No php.ini file will be used
  -d foo[=bar]     Define INI entry foo with value 'bar'
  -e               Generate extended information for debugger/profiler
  -f &lt;file&gt;        Parse and execute &lt;file&gt;.
  -h               This help
  -i               PHP information
  -l               Syntax check only (lint)
  -m               Show compiled in modules
  -r &lt;code&gt;        Run PHP &lt;code&gt; without using script tags &lt;?..?&gt;
  -B &lt;begin_code&gt;  Run PHP &lt;begin_code&gt; before processing input lines
  -R &lt;code&gt;        Run PHP &lt;code&gt; for every input line
  -F &lt;file&gt;        Parse and execute &lt;file&gt; for every input line
  -E &lt;end_code&gt;    Run PHP &lt;end_code&gt; after processing all input lines
  -H               Hide any passed arguments from external tools.
  -s               Display colour syntax highlighted source.
  -v               Version number
  -w               Display source with stripped comments and whitespace.
  -z &lt;file&gt;        Load Zend extension &lt;file&gt;.

  args...          Arguments passed to script. Use -- args when first 
                     argument starts with - or script is read from stdin

  --rf &lt;name&gt;      Show information about function &lt;name&gt;.
  --rc &lt;name&gt;      Show information about class &lt;name&gt;.
  --re &lt;name&gt;      Show information about extension &lt;name&gt;.
</pre>

<p>There's obviously an issue with the syntax because there's no <b>-q</b> listed as a command-line argument anymore. I took out the <b>-q</b>, but running the script only resulted in the error:

<pre>
Could not open input file: /* -*- c -*- */
</pre>

<p>I'd really like to keep the <b>/* -*- c -*- */</b> part in the first line because that sets the mode to C for me in emacs. Is there any way around this?
<p><font size='+4'>A</font> Your problem is that the PHP interpreter is expanding your comment line as arguments to PHP itself. This is documented in the PHP manual at:
<pre>
http://us.php.net/features.commandline
</pre>

<blockquote>
<p>As long as the arguments you want to pass to your script do not start with the - character, there's nothing special to watch out for. Passing an argument to your script which starts with a - will cause trouble because PHP itself thinks it has to handle it. To prevent this, use the argument list separator --. After this separator has been parsed by PHP, every argument following it is passed untouched to your script.
  
</p>
</blockquote>
<p>So your shebang line for any scripts that you port to 5.2 should look like the following instead:
<pre>
#!/usr/bin/php -- /* -*- c -*- */
</pre>

<p><font size='+4'>Q</font> We're running Solaris 10 on a number of servers we'd like to decommission. To do so securely, we'd like to wipe the disks of any information. Is there something built into Solaris that will do this for us, or are there any good third-party tools that we could use? Also, how do you get around wiping the disk while it's still in the system? Do you run a utility from the OBP or from a CD-ROM? The latter would be an issue for us, because not all of our machines have CD-ROM drives. Thanks for any help you can provide.

<p><font size='+4'>A</font> The people who work on OpenSolaris have been discussing secure wipe, but as far as I know, nothing that completely wipes an entire disk has been implemented yet. My approach has always been to use the BCWipe tool from Jetico:

<pre>
http://www.jetico.com/index.htm#/bcwipe_unix.htm
</pre>

<p>This tool will completely wipe a disk on a Unix machine. It will securely delete files and directories as well.

<p>Instead of making a bootable CD (which you can certainly do), I've always patched my jumpstart boot server to include the bcwipe package. To do so:

<p>1. Download the latest source code tar ball of <b>BCWipe</b> from:

<pre>
http://www.jetico.com/index.htm#/linux/
</pre>

<p>2. Compile the software and turn it into a Solaris package that will install into <b>/sbin</b>.

<p>3. Patch the jumpstart boot environment with the new package. The example command below assumes that the package is called <b>bcwipe</b> and is in the current working directory in directory format. It also assumes that your jumpstart install image is located at <b>/inst/media/Solaris_10/Solaris_10/Tools/Boot</b>:

<pre>
pkgadd -R /inst/media/Solaris_10/Solaris_10/Tools/Boot -d `pwd` bcwipe
</pre>

<p>Then, when you need to wipe a boot disk, boot into single-user mode over the network from the image on the jumpstart server (generally with the command <b>boot net -s</b> or <b>boot net:dhcp -s </b>from the client machine's <b>ok</b> prompt) and run <b>bcwipe</b> from the network booted mini-root.

<p>You can choose how paranoid you'd like to be when you supply options to <b>bcwipe</b> because there are several wiping algorithms you can use. Wiping options include:

<pre>
-md -- U.S. DoD 5200.28 seven pass extended character rotation wiping. 
-m &lt;mode&gt; -- U.S. DoD 5200.28 n pass extended character rotation wiping.
-mg -- 35-pass Peter Gutmann's wiping.
-mz -- One pass zero wiping.
-mt -- One pass test mode. The first 4 bytes of every 512 bytes block 
      will contain block number.
</pre>

<p>In normal mode, 35 passes (8 random) are used to overwrite data per Peter Gutmann's article titled "Secure Deletion of Data from Magnetic and Solid-State Memory":
<pre>
http://www.cs.auckland.ac.nz/~pgut001/pubs/secure_del.html
</pre>

<p>This is generally overkill, so you might want to go with something lighter like the 7-pass rotation wiping, one-pass zeroing, or some custom number of passes.
<p>Additionally, if you are wiping a cache-backed storage array, use the <b>-n</b> flag to delay between wiping passes:
<pre>
-n &lt;delay&gt;
  Wait delay seconds between wiping passes. Modern enterprise level
  storage systems (NAS, disk arrays etc.) employ powerful caches. To
  avoid undesirable caching effects BCWipe allows user to insert
  adjustable delay between wiping passes. Please note that when wiping
  with delay between passes disk space is freed after the last pass.
</pre>

<p>To perform a one-pass zeroing of the slice <b>/dev/dsk/c0t0d0s0</b>, you'd run:
<pre>
/sbin/bcwipe -bmz /dev/rdsk/c0t0d0s0
</pre>

<p>If you have slice 2 set as the entire disk, you can instead wipe the whole disk at once by specifying <b>/dev/rdsk/c0t0d0s2</b> instead of <b>/dev/rdsk/c0t0d0s0</b>.

<p><font size='+4'>Q</font> I'm running FreeBSD 6.2, and I just upgraded sendmail to 8.14.1. After the upgrade I'm no longer seeing the envelope from in the <b>Received:</b> header. A bunch of stuff has changed, so there's a lot that I don't understand when diffing the config files. I didn't see anything obvious in the <b>FAQ</b>, <b>INSTALL</b>, <b>KNOWNBUGS</b>, <b>README</b>, or <b>RELEASE_NOTES</b> files that would explain the change in behavior. Do you know what I'm missing?

<p><font size='+4'>A</font> The sendmail that comes with FreeBSD 6.2 has been modified from the <b>sendmail.org</b> version to include this additional information. When you upgraded to the <b>sendmail.org</b> version, you lost this customization. Take a look at the CVS version of <b>src/contrib/sendmail/cf/m4/cfhead.m4</b> from the FreeBSD Web site:
<pre>
http://www.freebsd.org/cgi/cvsweb.cgi/src/contrib/sendmail/cf/ \
  m4/cfhead.m4?rev=1.3.6.11
</pre>

<p>Specifically, there's a block of define lines that deal with the <b>Received:</b> headers:
<pre>
define(`_REC_AUTH_`, `$.$?{auth_type}(authenticated')
define(`_REC_FULL_AUTH_', `$.$?{auth_type}(user=${auth_authen} 
  $?{auth_author}author=${auth_author} $.mech=${auth_type}')
define(`_REC_HDR_', `$?sfrom $s $.$?_($?s$|from $.$_)')
define(`_REC_END_', `for $u; $|;
  $.$b$?g
  (envelope-from $g)$.')
define(`_REC_TLS_', `(version=${tls_version} cipher=${cipher}
  bits=${cipher_bits} verify=${verify})$.$?u')
define(`_REC_BY_', `$.by $j ($v/$Z)$?r with $r$. id $i$?{tls_version}')
define(`confRECEIVED_HEADER', `_REC_HDR_
  _REC_AUTH_$?{auth_ssf} bits=${auth_ssf}$.)
  _REC_BY_
  _REC_TLS_
   _REC_END_') 
</pre>

<p>The envelope from is added as part of <b>_REC_END_</b> line above. You can always add this functionality back in by overriding the <b>_REC_END_</b> definition in your <b>devtools/Site/site.config.m4</b> file.

<p><font size='+4'>Q</font> I have six files that I need to merge together, interleaving the lines from each file. The files contain a date, number, first name, last name, number, and random string. The output must not be sorted, but must appear in the exact same order as the input files. Here are some sample input files and an output file to help illustrate my requirements:
<pre>
file 1:                             file 4:

12/01/2006                          Doe
11/02/2006                          Doe
01/03/2007                          Smith
09/13/2005                          Johnson

file 2:                             file 5:

230982                              1132
0985231                             1133
8134776                             1134
9561573                             1135

file 3:                             file 6:

John                                contacted
Jane                                new
Joe                                 closed
Sally                               stalled
</pre>

<p>What I need to wind up with is one file that looks like:
<pre>
12/01/2006
230982
John
Doe
1132
contacted
11/02/2006
0985231
Jane
Doe
1133
new
01/03/2007
8134776
Joe
Smith
1134
closed
09/13/2005
9561573
Sally
Johnson
1135
stalled
</pre>

<p>Most of the solutions I've thought of wind up sorting the data in some way and taking it out of order. Can you write a script that will do what I need?
<p><font size='+4'>A</font> Assuming that each of your six files has the same number of records, you can easily fold them together as you describe with the <b>paste</b> command:
<pre>
paste -d'\n' file1 file2 file3 file4 file5 file6 &gt; output
</pre>

<p>If you don't have the same number of records in every file, then you'll be left with blank lines in the output file, e.g.:
<pre>
file1:        file2:         output of paste -d'\n' file1 file2:
a             1              a
b             2              1
c             3              b
              4              2
                             c
                             3

                             4
</pre>

<p>You can remove these blank lines using your favorite utility (<b>sed</b>, <b>grep</b>, etc.) if they are undesirable:
<pre>
  paste -d'\n' file1 file2 |grep -v ^$ &gt; output
</pre>

<p>You will need to escape the <b>$</b> if you're not using a Bourne-derived shell to prevent attempted variable expansion.
<p><i>Amy Rich has more than a decade of Unix systems administration experience in various types of environments. Her current roles include that of Senior Systems Administrator for the University Systems Group at Tufts University, Unix systems administration consultant, author, and charter member of LOPSA. She can be reached at: <b>qna@oceanwave.com</b>.</i>
</table></table> 

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
