<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v16, i06: Listing 2  The populateNetData.pl Perl script</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a3.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink">Listing 2</span></td>
		<td><a href="../../../../source/SA/2007/jun2007.tar"><b class=codeListing>jun2007.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2>Listing 2  <i>The populateNetData.pl Perl script</i></h2>
<pre>
#!/usr/bin/perl -w
#
#
# Filename: populateNetData.pl
# Programmer: Mihalis Tsoukalos
#
# Date: Monday 18 December 2006
#
# Storing network data in a MySQL database article
# for Sys Admin
#
# This Perl script is for demonstration only
# Do not use it in a production system without changes
#

use strict;
use DBI;
use DBD::mysql;
use POSIX;

my $datasource = "DBI:mysql:database=SA;host=localhost";
my $user = "mtsouk";
my $password = "xxx";

my $SQLcommand = "";

# source Port
my $sourcePort="";
# destination Port
my $destPort="";
# time Difference
my $dt="";
# date and time
my $d="";
# The $line variable holds each input line
my $line="";

# Rows inserted
my $ROWS_INSERTED = 0;


#
# The format of the NetData table
#
# mysql&gt; desc NetData;
# +------------+-------------+------+-----+---------+-------+
# | Field      | Type        | Null | Key | Default | Extra |
# +------------+-------------+------+-----+---------+-------+
# | Date       | datetime    | NO   |     |         |       |
# | dt         | float       | YES  |     | NULL    |       |
# | sourcePort | varchar(12) | YES  |     | NULL    |       |
# | destPort   | varchar(12) | YES  |     | NULL    |       |
# +------------+-------------+------+-----+---------+-------+
# 4 rows in set (0.00 sec)
#

die &lt;&lt;Thanatos unless @ARGV;
    usage:
        $0 inputData
Thanatos

if ( @ARGV != 1 )
{
   die &lt;&lt;Thanatos
      usage info:
         Please use exactly 1 argument!
Thanatos
}

my $filename = shift @ARGV || "filename";

open (INPUT, "&lt; $filename")
                || die "Cannot open $filename: $!\n";

#
# Start reading the input file
#
while ( defined($line = &lt;INPUT&gt;) )
{
    chomp $line;
    my @fields = split (/ /, $line);
    
    #
    # Input file format
    #
    # 900.11856939 0.308413 1024 http
    # 900.11857575 0.000636 http 1024
    # 900.1485114 0.300888 http 1024
    #
    #
    # The date format is as follows:
    # YYYY-MM-DD HH:MINUTE:SECOND
    #
    #
    # * * * Get the time and the date.
    #
    # The time is in minutes and should be converted in
    # hours, minutes and seconds.
    #
    # For simplicity reasons, the date is the current date
    #

    my $time = $fields[0];
    $dt = $fields[1];
    $sourcePort = $fields[2];
    $destPort = $fields[3];

    my $hour = floor( $time / 60 );
    my $min = int ( $time % 60 );
    #
    # Calculating the seconds is a little tricky!
    #
    my $sec = int ( ( $time - $hour * 60 - $min ) * 60 );

    my ($day, $month, $year) = (localtime)[3, 4, 5];
    $year += 1900;
    $month += 1;
    $d = $year."-".$month."-".$day;
    $d .= " $hour:$min:$sec";

    # Used for debugging purposes
    # print $d."\n";

    $SQLcommand = "INSERT INTO NetData (Date, dt, sourcePort, destPort)";
    $SQLcommand .= " VALUES ( '$d', '$dt', '$sourcePort', '$destPort' )";

    #
    # Open the MySQL connection
    #
    # NOTE:
    #        For this particular script, every new MySQL record
    #        uses a new Perl-MySQL connection. This may not be
    #        a good practice for you.
    #
    # Database handler
    my $dbh = DBI -&gt; connect($datasource, $user, $password);

    # Execute the command
    $dbh-&gt;do( $SQLcommand );

    $ROWS_INSERTED++;

    # Close the MySQL connection.
    $dbh -&gt; disconnect();
}

print "Number of rows inserted: $ROWS_INSERTED\n";
#
# You can execute the following SQL command to make
# sure that the number of inserted rows is right.
#
# mysql&gt; select count(*) from NetData;
# +----------+
# | count(*) |
# +----------+
# |     4912 |
# +----------+
# 1 row in set (0.03 sec)
#
# mysql&gt;
#

# Close the input file
close ( INPUT ) 
    || die "Cannot close $filename: $!\n";

exit 0;
</pre>
            </table></table> 

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
