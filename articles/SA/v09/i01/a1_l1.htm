<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v09, i01: Listing 1</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a1.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a1_f1.htm">Figure 1</span></td>
		<td><span class=navbarLink>Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a1_s1.htm">Sidebar 1</a></span></td>
		<td><span class=navbarLink><a href="a1_s2.htm">Sidebar 2</a></span></td>
		<td><a href="../../../../source/SA/2000/jan2000.tar"><b class=codeListing>jan2000.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >



<H1>Listing 1:  telnet_plugin.c</H1><p>
<PRE>/* telnet_plugin.c 
   David Endler

Used to log the telnet/rlogin port for incoming connections */

#include    &lt;signal.h&gt;
#include    &lt;sys/types.h&gt;
#include    &lt;sys/resource.h&gt;
#include    &lt;sys/param.h&gt;
#include     &lt;sys/fcntl.h&gt;
#include    &lt;sys/termios.h&gt;
#include    &lt;netinet/in.h&gt;
#include    &lt;arpa/inet.h&gt;
#include    &lt;stdio.h&gt;
#include    &lt;varargs.h&gt;
#include    &lt;signal.h&gt;
#include    &lt;netdb.h&gt;
#include    &lt;syslog.h&gt;
#include    &lt;errno.h&gt;
#include    &lt;string.h&gt;
#include    &lt;stdlib.h&gt;
extern int    errno;

/* globals */

/*ARGSUSED*/
main(argc, argv)
int    argc;
char    **argv;        /* argv1 is the service name */
{
    int            i;
    char         tbuf[1500];
    char         username[1500];
    char*         password;
    int         char_val=-1;
    int        non_white_space_flag=0;    
    int        index=0;
    sigset_t    mask;
    struct         sigaction signal_vector;

    openlog(&#147;telnet_plugin&#148;, LOG_PID | LOG_ODELAY, LOG_DAEMON);

/* SIGNAL HANDLING */

    if (sigemptyset (&amp;mask) == -1) {
    perror (&#147;sigemptyset FAILED&#148;);
    exit (1);
    }
    if ((sigaddset (&amp;mask, SIGINT) == -1) ||
          (sigaddset (&amp;mask, SIGQUIT) == -1) ||
              (sigaddset (&amp;mask, SIGTSTP) == -1)) {
      perror (&#147;sigaddset FAILED&#148;);
      exit (1);
      }
    if (sighold (SIGINT) == -1) {
    perror (&#147;sigaction FAILED FOR SIGINT&#148;);
    exit (1);
    }
    if (sighold (SIGQUIT) == -1) {
    perror (&#147;sigaction FAILED FOR SIGQUIT&#148;);
    exit (1);
    }
    if (sighold (SIGTSTP) == -1) {
    perror (&#147;sigaction FAILED FOR SIGTSTP&#148;);
    exit (1);
    }

fprintf(stderr,&#148; UNIX(r) System V Release 4.0 (honeypot)&#148;);


/*
     * We assume we're invoked by inetd, so the socket that the 
     * connection is on, is open on descriptors 0, 1 and 2.
     *
     * First get the Internet address of the client process.
     * This is required for all the authentication we perform.
     */

    for (i=0;i&lt;5;i++) {
do {
    non_white_space_flag = 0;
    index = 0;    
    char_val=-1;

    fprintf(stderr,&#148;login: &#147;);
    while (char_val != 10) { 
        char_val = getc(stdin); 
        if ((char_val != 32) &amp;&amp; (char_val != 10))
            {non_white_space_flag=1;}    
        if (char_val != 10) {username[index++] = (char)char_val;}
    }
    username[index]='\0';
}
while (non_white_space_flag == 0);


    fprintf(stderr,&#148;Password: &#147;);
    password = getpass(&#147;&#148;);
    sleep(4);
    fprintf(stderr,&#148;Login incorrect&#148;);
    syslog(LOG_ALERT, &#147;Someone tried to access telnet port with \<BR>
           username:%s and password:%s&#148;,username, password);
    fprintf(stderr,&#148;\n&#148;);

        }
    }</PRE>



<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
