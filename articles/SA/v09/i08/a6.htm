<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v09, i08: Automating ftp with Expiring Passwords</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</a></span></td>
		<td><span class=navbarLink><a href="a6_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a6_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/2000/aug2000.tar"><b class=codeListing>aug2000.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >

<H1>Automating ftp with Expiring Passwords</H1><p>
<P>Russ Hill
<P>

Most networks require passwords that have a finite lifetime. By limiting the life of the password, you limit the time in which a stolen password can be exploited by an intruder. One disadvantage of expiring passwords, however, is that they make some tasks more difficult to automate. An automated process that requires a client computer to use a password will not connect if the client&#146;s password for the server has expired.<P>
For example, consider the case where a local Oracle database is deployed on a Web server computer. The local database requests and receives updates from a mainframe computer. The network segment connecting the Oracle computer with the mainframe is part of the corporate network and is protected by a firewall.<P>
The Oracle computer maintains an account on the mainframe in order to request and receive updates. If the Oracle computer&#146;s account on the mainframe periodically expires, the update request will fail until the password is manually reset. This article describes a program that automates the process of password assignment so that, even though the mainframe requires an expiring password, a user will never have to manually reset the password for the Oracle account.<P>
<B>netrc_check</b><p>The <B>netrc_check</B> script I provide here automates the use of <B>ftp </B>through <B>.netrc</B>. It uses a password generator and updates the <B>.netrc </B>file and changes the password on the mainframe. This script is placed in a cronjob and is usually run once about every 30-60 days, depending on your mainframe expiration policy. <B>netrc_check </B>(Listing 1) sends passwords in clear text and is therefore designed for use only in environments protected behind the firewall.<P>
<B>mpw<P>
mpw</B> is a C program (Listing 2). It is a password generator that is phonetic with English and works with most mainframes.<P>
<B>Conclusion</b><p>Mainframes are always going to be involved and there are many reasons to send files or get files from mainframes. Usually, they will require expiring passwords. The problem is that you will never use this account and it will expire. There are many times you will want to get files from a mainframe and load them into Oracle or a local database to increase the speed of the queries that are just a small subset of all the data on the mainframe. Your simple nightly update shell script to get your mainframe data will look something like this:<P>
<pre>
#!/bin/sh
&lt;setup here&gt;
ftp -i machinename &lt;&lt;!
get filename
quit
!
&lt;move files into other formats or  \
   other commands here&gt;
</pre>
I hope you find these scripts useful.<P>
<p>
<h1>About the Author</h1><p>
Russ is a UNIX consultant with nervewire.com. This is his sixth article for <I>Sys Admin</I>. He can be contacted at: rshill@swbell.net.

<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
