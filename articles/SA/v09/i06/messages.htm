<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v09, i06: New Messages</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>New Messages</a></span></td>
		<td><a href="../../../../source/SA/2000/jun2000.tar"><b class=codeListing>jun2000.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >

<H1>New Messages</H1><p>
<P>
From: Gene Wolski (gene.wolski@cskcorp.com)<br>
Subject: clarification to Gil Held's article in March<p>
Great article on router based network defenses by Gil Held in the March 2000 issue! Gil did leave one important item out of the access list: a <B>permit</B> entry to allow traffic in on that interface. I'm guessing that he covered the implicit <B>deny all</B> entry at the end of every access list in his Nov 99 article, but I can't locate my copy to confirm this. As listed on page 62, the access list will not allow any traffic in on the router's serial interface. Keep up the great work!<P>
Gene Wolski<P>
From: Chan Yen-Jet (YENJET@YAHOO.COM)<br>
Subject: Router-Based Network Defense<p>
I just read <I>Router-Based Network Defense</I> by Gil Held in the March 2000 issue. And I found that two configuration lines in the article are not correct:<P>
<pre>
access-list 101 deny ip 172.16.0.0 0.224.255.255 any
access-list 101 deny ip 172.16.0.0 0.31.255.255 any
</pre>
I think the correct one should be:<P>
<pre>
access-list 101 deny ip 172.16.0.0 0.15.255.255 any
</pre>
Correct me if I'm wrong. Thanks in advance.<P>
Regards,<br>
Chan Yen Jet<P>
<P>
<I>From: GHeld@compuserve.com<br>
Subject: Clarification to Article<p>
<I>Thanks for your comments concerning the article <I>Router-Based Network Defense</I> published in the March 2000 issue of </I>Sys Admin<I>.<P>
You are quite right in your comment that a </I><B>permit</B><I> entry is required at the end of the access list to allow anything other than what a person wants to explicitly block. In actuality, an organization will usually have a series of </I><B>permit</B><I> statements based upon the requirements for allowing access to certain networked devices and servies on those devices. In writing minor modules to illustrate concepts I overlooked this fact and appreciate your comments so we can set the record straight for readers.<P>
<I>The snippet of code was intended as an example to illustrate blocking certain potential spoofed addresses. As such it was correct except for a typo I will get to shortly, however, in the full context of a list it did not allow any packets to pass as there were no permit statements in the list. In retrospect I should have mentioned that a person would include one or more permit statements after the antispoofing statements. A second problem was a typo, where the statements:<P>
</I><pre>
access-list 101 deny ip 172.16.0.0 0.224.255.255 any
access-list 101 deny ip 172.16.0.0 0.31.255.255 any
</pre>
<I>should have been:<P>
</I><pre>
access-list 101 deny ip 172.16.0.0 0.15.255.255 any
</pre>
<I>For the life of me I can't figure out how the incorrect dotted decimal numbers got there, but their placement again reinforces the fact that one needs to double check each statement in a list. I appreciate the eagle eyes of readers who obviously checked the article in detail.<P>
<I>Regards,<br>
<I>Gil Held</I><P>
From: Greg Shebert (greg@archelon-us.com)<br>
Subject: feedback for samag.com (April 2000 issue)<p>
Hi there... I was just recently able to browse through the latest issue of your magazine and I have to mention that the Perl Advisor column this month (April 2000) is absolutely silly... I have been a subscriber to <I>Sys Admin</I> off and on for some time now and with as much respect as I have for your magazine and as much respect as I have for Mr. Schwartz, I am surprised to see an article that has so little to do with:<P>
<P>
a) Backup -- the subject matter of the April issue and<P>
b) Systems administration<P>
<P>
The silly Perl scripts presented in that article are nothing more than an example of text substitution via regular expression matching... Although this type of work with Perl can be used to do very useful things -- I'd like, in the future, to see it presented in a manner related to systems administration...<P>
just my two cents worth<br>
Greg Shebert<P>
<P><I>
Greg: I appreciate your comment. I agree, &#147;this type of work with Perl can be used to do very useful things&#148;, which is why I wrote that particular column. There are literally dozens of reimplementations of text templating in the CPAN, and countless reinventions of the same in small ad-hoc programs in daily use, so I know the value of such. As a UNIX system administrator for many years, I found the power of Perl to perform such mundane tasks saved me substantial work on more than one occasion. While the specific task of generating a fill-in-the-blank story was meant to be merely a humorous vehicle to keep your interest, I had intended to also show how easy these templating tasks are with Perl, perhaps for those that were stumped at even the first step. If you personally got nothing from the column, my apologies -- this one wasn't for you. Keep reading, you're bound to learn something. :-)<P>
<I>Randal Schwartz</I></BODY>

<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
