<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v09, i05: Sidebar 2</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a7.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a7_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a7_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a7_s1.htm">Sidebar 1</a></span></td>
		<td><span class=navbarLink>Sidebar 2</span></td>
		<td><a href="../../../../source/SA/2000/may2000.tar"><b class=codeListing>may2000.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >



<H1>Sidebar 2:  Build a Backdoor</H1><p>
What is recommended on the computers where you are &#147;in charge&#148; is to build a backdoor protected by a password. An executable file giving you the root privileges in case the root password is lost. The code below gives the root privileges to anybody, but asks for a password. To avoid this situation, the command <B>strings(1)</B> shows the password, some simple &#147;encryption&#148; can be implemented.<P>
Simply using the checksum of the passphrase is already good. If, for example, the passphrase is &#147;wait &amp; 123SEE&#148; (without the quotes), the sum of the ascii values is 920 (the final &lt;Enter&gt; included; otherwise end the passphrase with ctrl-D instead of &lt;Enter&gt; and the total will be then 910).<P>
Although not mandatory, it is better to call it from a script:<P>

<pre>
  stty -echo              # doesn't display the passphrase
  /usr/bin/.back
  stty echo

- back.c :

#include &lt;unistd.h&gt;
#include &lt;string.h&gt;

main()
{
char b[100];              /* to read the passphrase */
int  i,j=0,n;

n=read(0, b, sizeof(b));  /* read from stdin */

for (i=0; i&lt;n; i++)       /* password check : begin */
j+=b[i];
if (j!=920)
        exit(1);          /* password check : end, silently exit */

setuid(0);
execl("/usr/bin/sh","sh",(char*)0);
}

# cc -s -o back back.c
# chmod 4111 back
# cp back /usr/bin/.back  # so I can use it as regular user
# ll back
---s--x--x   1 root      sys          20645 Jan 2 15:20 back
</pre>

The source can be kept elsewhere or on a local disk, simply &#147;encrypted&#148; using for example (if you have nothing else). It is better than plain text (beware of the <B>.sh_history</B> or <B>$HISTFILE</B> file: disable it or drop it after).<P>

<pre>
dd if=source of=source.e conv=ebcdic,swab
</pre>

and to decrypt:<P>

<pre>
dd if=source.e of=source conv=ascii,swab
</pre>

Of course, if you create such a program without any password, you implement an easy backdoor. If somebody discovers it, you have a problem. Remember, any user can type:<P>

<pre>
find / -perm -4000 -print  2&gt;/dev/null
</pre>

to locate the SUID files in the directories readable by him/her (-2000 for SGID files).



<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>





