<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v09, i05: A Sys Admin's Toolkit</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</a></span></td>
		<td><a href="../../../../source/SA/2000/may2000.tar"><b class=codeListing>may2000.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >

<H1>A Sys Admin's Toolkit</H1><p>
<P>Joe Beck
<P>

Think back to the days when you were first given complete autonomy of a UNIX system. Now visualize the number of computers or networks you administered. Although everyone's experience is unique, many of us have struggled with the tasks of developing and implementing standards within our company's data center. The purpose of this article is to review one topic within the area of data center standards -- software utilities for systems administration. I'm not going to suggest that you run to a prompt and begin downloading all of the software mentioned in this article because everyone's needs are different. These are programs that I've used over the years on various projects, some sparingly, others daily. The article is organized into three parts: a list of software, suggestions for setting up a local software repository, and tips for downloading.<P>

<B>SA Tools -- The Administrator's Toolkit</B><P>

In an interview a few years back, someone asked me &#147;what's UNIX?&#148;. After an extended silence, I fumbled through a textbook answer, saying that UNIX is a scalable, multi-user operating system, etc. Even though this may have been a correct answer, it certainly was not what the person was after. In retrospect, I believe he wanted to hear what this operating system meant to me and about my various experiences that led to my definition of UNIX. What's this got to do with an administrator's toolkit?<P>
UNIX is basically an outgrowth of years worth of programmers enhancing their workbenches. There was even one UNIX release called PWB (Programmer's WorkBench). As these programs and utilities gained popularity over time, many have been incorporated into the standard OS. With all of the recent commercialization, this practice has decreased in breadth. However, the idea of a programmer's workbench and free (supported) software that is continuously developed globally still prevails in many areas. Given this, it is well worth any programmer's or administrator's time to be aware of what's out there. Not only can this software make your life easier and improve your performance, but it may someday become part of the standard operating system you support.<P>

<B>Part One: Software, Location, and Supporting Sites</B><P>

<B>gzip</B> -- Program for compressing and decompressing files. <B>ftp://gatekeeper.dec.com/pub/GNU/gzip/gzip-1.2.4.tar.gz</B> [<B>http://w3.gzip.org</B>/]<P>
<B>gcc</B> -- GNU compiler collection for C, C++, Objective C, and other languages. Refer to this site regarding platform-specific issues when building <B>gcc</B>:<BR>
<B>http://www.gnu.org/software/gcc/install/specific.html</B><P>
Pre-compiled versions of <B>gcc</B>:<BR>
<B>ftp://nce.sun.ca/pub/freeware/sparc/2.6/gcc-2.8.1 \<BR>
  -sol26-sparc-local.gz</B><BR>
<B>http://sunfreeware.com</B> (for any other versions) <B>http://www.rge.com/pub/systems/aix/bull/out/</B> <B>http://hpux.cae.wisc.edu/hppd/hpux/Gnu/gcc-2.95.2/</B> [<B>http://www.gnu.org/software/gcc/onlinedocs/</B>] <P>

<B>UNIX Administration</b><P>

<b>General</b><P>

<b>lynx</B> -- Text-based WWW browser. <BR>
<B>http://lynx.browser.org</B><P>
<B>make</B> -- Maintain, update, and regenerate related programs and files.<BR>
<B>ftp://sunsite.cnlab-switch.ch/mirror/gnu/make/ \<BR>
  make-3.78.1.tar.gz</B><BR>
[<B>http://www.gnu.org/manual/make-3.77/html_mono/make.html</B>]<P>
Perl -- Practical Extraction and Report Language.<BR>
<B>http://www.perl.com/CPAN/src/stable.tar.gz</B><BR>
[<B>www.perl.org</B> &amp; <B>www.cpan.org</B>] CPAN (Comprehensive Perl<BR>
   Archive Network)<P>
<B>lsof</B> -- Lists all open files for running UNIX processes.<BR>
<B>ftp://wuarchive.wustl.edu/packages/security/lsof/lsof.tar.gz</B><P>
Tcl &amp; Expect -- Tools for automating interactive applications.<BR>
<B>http://expect.nist.gov/expect.tar.Z</B><BR>
[<B>http://expect.nist.gov/</B>]<P>
Fastpatch, do-patch, and fix-modes -- Perl scripts that install Solaris patches faster than <B>patchadd</B> (also has an undo switch).<BR>
<B>ftp://www.wins.uva.nl/pub/solaris/auto-install/install.tar.gz</B><P>
PatchReport -- Perl script to assist in the automation of Solaris patch installation. Requires the addition of several Perl modules, <B>libnet</B>, Data-Dumper, MD5, and IO.<BR>
<B>ftp://x86.cs.duke.edu/pub/PatchReport</B>/<P>
[<B>ftp://ftp.cs.duke.edu/pub/PatchReport/index.html</B>]<P>
Shellutils -- Enhanced versions of standard OS programs as well as additional (handy) programs.<BR>
<B>ftp://gatekeeper.dec.com/pub/GNU/sh-utils/sh-utils-2.0.tar.gz</B><P>
<B>osh</B> (Operator Shell) -- Setuid root, security enhanced, restricted shell.<BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/osh</B><BR>
[<B>http://www.engarde.com/~mcn/osh.html</B>]<P>
<B>sudo</B> -- Restricted Root Access Utility. Allows a sys admin to give limited root privileges to users and log root activity. <BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/sudo/</B> <BR>
[<B>http://www.courtesan.com/sudo/</B>]<P>
<B>qterm</B> -- Utility to identify terminal types. <BR>
<B>http://www.magnicomp.com</B> ($2 per machine for commercial use)<P>
<B>rsync</B> -- Faster, flexible replacement for <B>rcp</B>. <BR>
<B>ftp://rsync.samba.org/pub/rsync/</B><BR>
[<B>http://rsync.samba.org/rsync/index.html</B>]<P>
<B>rdist</B> -- Remote file distribution program. <BR>
<B>http://www.magnicomp.com</B><P>
Glimpse -- Search quickly through entire file systems (includes <B>agrep</B>, which is an extended <B>grep</B> program). <BR>
<B>http://tucson.com</B><P>
<B>procmail</B> -- Sorts (and handles) your incoming mail to do just about anything you'd like. It also has numerous other capabilities (such as create mail-servers and mailing lists; can be individual or system-wide mailer). <BR>
<B>ftp://ftp.informatik.rwth-aachen.de/pub/packages/ \<br>
procmail/procmail.tar.gz</B><BR>
[<B>http://www.procmail.org</B>]<P>
<B>readline</B> -- Utility that offers a command-line editing interface with programs. (At one point <B>ncftp</B> required this library.)<BR>
<B>ftp://ftp.gnu.org/pub/gnu/readline-2.2.tar.gz</B><P>
Psutils -- Page imposition tools for PostScript files. <BR>
<B>ftp://ftp.dcs.ed.ac.uk/pub/ajcd/psutils.tar.gz</B> [<B>http://www.dcs.ed.ac.uk/home/ajcd/psutils/index.html</B>]<P>
<B>txt2pdf</B> -- Perl script that converts text files to PDF format. <B>http://www.sanface.com/txt2pdf-2.5.tar.gz</B> <BR>
[<B>http://www.linuxsoftware.org/</B>]<P>
Python -- An interpreted, interactive, object-oriented programming language (often compared to Perl). <BR>
<B>http://www.python.org/download/</B> <BR>
[<B>http://www.python.org</B>]<P>
<B>sysinfo*</B> -- Show system information and configuration. <BR>
<B>http://www.magnicomp.com/</B> ($10 per machine for commercial use) <BR>
[<B>http://www.magnicomp.com/sysinfo/sysinfo.shtml</B>]<P>
<B>memconf</B> -- Perl script that displays memory modules installed in a Sun system. <BR>
<B>http://netnow.micron.net/~tschmidt/memconf.html</B><P>

<B>Monitoring</b><P>

<b>[System]</b><P>

<b>top</B> -- Display processes having highest CPU usage. <BR>
<B>http://www.groupsys.com/top/dist/top-3.4.tar.gz</B> [<B>http://www.groupsys.com</B>]<P>
Big Brother -- Web-based UNIX system and network monitoring and notification system. <BR>
<B>http://maclawran.ca/bb-dnl/bb-1.3a.tar.gz</B> <BR>
<B>http://www.bb4.com</B><P>
RMCmem -- Loadable kernel module on Solaris that uses the <B>/proc</B> interface to look at the memory allocation of processes <BR>
  and the UFS buffer cache. <BR>
<B>ftp://playground.sun.com/pub/memtool</B><P>
<B>proctool</B> -- Performance monitoring for Solaris. <BR>
<B>http://sunfreeware.com</B><P>
SE Performance Toolkit (SymbEL Language) -- Performance monitoring/extendable tuning toolkit for Solaris (Virtual Adrian). <BR>
<B>http://www.sun.com/sun-on-net/performance/se3</B>/<P>

<B>[Network]</b><P>

<b>traceroute</B> -- Trace the route of IP packets. <BR>
<B>ftp://ftp.ee.lbl.gov/traceroute.tar.Z</B><P>
<B>ntop</B> -- Fairly new utility (based on <B>top</B> command output) to show (and capture) network utilization. Future objectives includes improved control over network services/programs. <BR>
<B>http://jake.unipi.it/~deri/ntop-1.2a9.tar.gz</B> <BR>
[<B>http://ntop.unipi.it/</B>]<P>
<B>libpcap</B> -- System-independent interface for user-level packet capture. Provides a portable framework for low-level network monitoring (applications such as <B>ntop</B> and Argus require it). <BR>
<B>ftp://ftp.ee.lbl.gov/libpcap.tar.Z</B><P>
<B>pping</B> -- A TCP port pinger. <BR>
<B>http://www.blazen.com/pping/pping-v1.37.tar.gz</B> <BR>
[<B>http://www.blazen.com/pping</B>]<P>
<B>mrtg</B> -- <B>snmp</B> agent written in Perl that runs from <B>cron</B>. <BR>
<B>http://www.boutell.com/gd</B>/ <BR>
[<B>http://mrtg.hdl.com/mrtg.html</B>]<P>
<B>netcat</B> -- Reads and writes data across network connections. <BR>
<B>ftp://ftp.avian.org/src/hacks/nc110.tgz</B><P>
<B>nfswatch</B> -- Monitors local network's NFS traffic. <BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/nfswatch/</B> <BR>
[<B>http://ciac.llnl.gov/ciac/ToolUNIXGeneral.html</B>]<P>
tcpdump -- Tool for network monitoring and data acquisition. <BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/tcpdump/</B><P>

<B>Network/Internet</b><P>

<b>sendmail</B> -- Send mail over the Internet. <BR>
<B>www.sendmail.org</B><P>
<B>wuftp</B> -- <B>ftpd</B> program from Washington University. <BR>
<B>ftp://wuarchive.wustl.edu/packages/wuarchive-ftpd/</B><P>
<B>ncftp</B> -- Browser (gui and text-based) program for the File Transfer Protocol, with added functionality. <BR>
<B>ftp://ftp.ncftp.com/ncftp/ncftp-2.4.3.tar.gz</B> <BR>
[<B>http://www.ncftpd.com/</B>]<P>
JetAdmin -- HP network printing software. <BR>
<B>ftp.hp.com/pub/networking/software</B><P>
Samba -- Provides file and print services to SMB/CIFS clients (such as Win95 &amp; NT machines). <BR>
<B>ftp://ftp.samba.org/pub/samba/samba-latest.tar.gz</B><BR>
<B>http://us2.samba.org/samba/ftp/samba-latest.tar.gz </B><BR>
[<B>http://www.samba.org/</B>]<P>
<B>zmodem(rz,sz)</B> -- Protocol/program that transfers files quickly and surely under real-world conditions. <BR>
<B>http://www.omen.com</B><P>
<B>netterm</B> -- Improved terminal emulator. Includes support of zmodem for transferring files. <BR>
<B>http://starbase.neosoft.com/~zkrr01/</B> <BR>
<B>http://www.shareware.com</B><P>
Apache -- <B>http</B>/Web server, open source product. <BR>
<B>http://www.apache.org</B><P>
Lily -- A readline-based user interface to the Lily conferencing system, which is a real-time chat room type of environment where various professionals exchange information. <BR>
<B>ftp://lily.acm.rpi.edu/pub/lily/lclient/lclient.tar.gz</B><P>
Webglimpse -- Index and search quickly through entire <B>www</B> sites. <BR>
<B>http://tucson.com</B><P>
<B>wget</B> -- Network utility to retrieve files from the World Wide Web, using the <B>http</B> and <B>ftp</B> protocols. <BR>
<B>ftp://www.gnu.org/pub/gnu/wget/wget-1.5.3.tar.gz</B> <BR>
[<B>http://www.gnu.org/manual/wget/html_mono/wget.html</B>]<P>

<B>Security</b><P>

TCP Wrappers -- TCP/IP daemon wrapper package. <BR>
<B>ftp://ftp.win.tue.nl/pub/security</B><P>
<B>logdaemon</B> -- Provides modified versions of <B>rshd</B>, <B>rlogind</B>, <B>ftpd</B>, <B>rexecd</B>, <B>login</B>, and <B>telnetd</B> that log significantly more information than the standard vendor versions. <BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/logdaemon</B> <BR>
[<B>http://ciac.llnl.gov/ciac/ToolsUNIXNetSec.html</B>]<P>
Titan -- System tightening/securing tool that is made up of scripts. <BR>
<B>http://www.fish.com/titan/</B><P>
Satan -- Security Administrator Tool for Analyzing Networks. <BR>
<B>http://www.fish.com/~zen/satan/satan-1.1.1.tar.gz</B><P>
Tiger -- Set of scripts that scan for security problems. <BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/tiger</B><P>
MD5 -- Message-Digest Algorithm. A highly reliable fingerprint that can be used to verify the integrity of the file's contents (used prevent Trojan horse attempts). <BR>
<B>ftp://info.cert.org/pub/tools/md5</B> <BR>
[<B>http://www.cert.org/security-improvement/implementations/i002.01.html</B>]<P>
Crack -- Password checking program for UNIX. 	<B>ftp://ftp.cert.org/pub/tools/crack/crack5.0.tar.gz</B> <BR>
[<B>http://www.users.dircon.co.uk/~crypto/download/c50-faq.html</B>]<P>
Tripwire -- UNIX file system integrity monitor. <BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/Tripwire</B><P>
Argus -- A generic IP network transaction auditing tool. <BR>
<B>ftp://ftp.sei.cmu.edu/pub/argus</B><P>
Cops -- Examines a system for a number of known weaknesses and alerts. <BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/cops</B> <BR>
[<B>http://ciac.llnl.gov/ciac/ToolsUNIXSysMon.html</B>]<P>
ISS -- A multi-level security scanner that checks for a number of known security holes. Originated as a free product, but it has evolved into a much more complex and capable commercial product. <BR>
<B>ftp://coast.cs.purdue.edu/pub/tools/UNIX/iss/iss121.shar.Z</B> (free version) <BR>
<B>http://iss.net/prod/isb.html</B> (commercial version)<P>
<B>ssh</B> (Secure Shell) -- Remote login program. 	<B>http://www.ssh.org</B><P>

<B>Misc/Software Management</b><P>

<b>autoconf</B> -- Tool for producing shell scripts to configure software source code packages to adapt to many kinds of UNIX-like systems. <BR>
<B>ftp://www.gnu.org/pub/gnu/autoconf/autoconf-2.13.tar.gz</B> <BR>
[<B>http://www.gnu.org/manual/autoconf-2.13/html_mono/autoconf.html</B>]<P>
<B>rc</B> -- Revision control, automates the SCCS, CVS, and  <BR>
RCS check-out/edit/check-in.
<B>http://www.cs.duke.edu/~des/scripts/rc</B><P>

<B>Part Two: Local Software Repository</B><P>

Let's face it, <B>ftp</B>ing does not take a genius. However, for an admin responsible for keeping dozens of servers and workstations loaded, upgraded, and running smoothly, this process can become wearisome. Therefore, I suggest implementing a local software repository, even if there are only a half a dozen systems for which you are responsible. The benefits far outweigh the cost. On my current assignment, there is one system (gadome) with a 600-MB filesystem holding all the required programs, utilities, and patches for more than 30 servers and numerous workstations. It took months of juggling and searching before realizing the need for a single software location. This organized approach for managing software led to a better process for developing and implementing standards. Now, when new systems come through the door, there is a form that is filled out which outlines the machine's purpose and provides a software/hardware profile.<P>
To set up this system, you must first decide on a machine that is on the appropriate network for access. Then set up a 500-MB filesystem (or whatever you can scrape together). Decide on a directory structure that is &#147;most&#148; agreeable to all those who will be accessing it. The top-level breakdown at our site is: env, printing, X11, gnu, patches, security, docs, network, pc-utils, tools. From there, it branches out in a similar fashion that many <B>ftp</B> sites implement. Next, download Apache and install. The only changes made outside of Server Name and Server Admin were to point the Document Root and &lt;Directory &#147;&#148;&gt; entries to the new filesystem in Apache's <B>httpd.conf</B> file. One additional suggestion is to put together a <B>cron</B> job to periodically update a <B>ls-lR</B> file in your Document Root directory. Here is a one-line script to accomplish this:<P>

<pre>
cd &lt;document-root&gt;; ls -lR &gt; ls-lR
</pre>

By doing this, you provide an up-to-date table of contents for all the software available on that server. It will save time in the long run and is quite convenient when there is haste to get and load software. Another consideration is access. There may be a section within your software repository that requires limited access. One way Apache can handle this is to place a <B>.htpasswd</B> file in the directory(s) where these sensitive programs reside. The following section includes real-life scenarios that take advantage of this server. When planning and implementing at your site, you should take the time to sit with co-workers and discuss their software needs if you are not already familiar with them. Unless your work in a shop with strict union guidelines, informing other appropriate parties of this repository and how to use it has its benefits: less network traffic, offload repetitive jobs from your workload, and make your users more self-sufficient. Use of this server, depending upon the amount of varied software packages at your company and the user community, will either take off company-wide or may just remain an addded convenience to yourself. Either way, it's a win situation. Currently, we have begun to implement images, which include all supplemental software for a given department, bundled into a single (compressed) file. We place this on a gadome (our repository server) under <B>/env/images/&lt;dept. name&gt;</B>. Benefits to approach over a typical file server include wider access and less overhead. The extent to which you can set up and utilize your software repository is unlimited; the significant factor here is that the model is open.<P>

<B>Part Three: Downloading</B><P>

There are numerous approaches when deciding how to download software. The most immediate decision is whether to download binary versions or the source code. With one exception, I recommend getting the source. The reasons reside in network traffic as well as security -- namely, Trojan horses that I discuss later in the article. The one exception is the compiler itself. Even though I suggest building it for the experience, it can take a fair amount of time depending on how often you download and build applications. The network traffic mentioned relates to not having to download the same software for each OS and version at your site. Instead, download the source once and build it on each machine where it's required.<P>
The how-to of downloading involves which protocol, interface, and program you prefer. The most convenient way to download programs, without question, is through a browser. However, this is only feasible when the <B>ftp</B> site is running an <B>http</B> daemon and has the software in an accessible area (the htdocs area or an entry in their <B>httpd</B>'s configuration file allowing it). I made the effort to list such sites when gathering software locations.<P>
Before beginning, there are two things to note. The first is related to organization, and I covered that in the previous section. The other has to do with how kind you are when considering bandwidth. There's no reason everyone else on the network should suffer when you need a bunch of patches or a larger application downloaded. Instead, use one of the various ways to schedule (after hours) and automate downloads -- shell scripts, expect scripts, or <B>ncftp</B> (which has built-in scheduling capabilities). Consider these various scenarios:<P>

<B>Scenario One</B><P>

New mail arrives, consisting of three different requests for small jobs on the mail server. Surprisingly, I find that Perl's yet to be loaded on that box. In the past, I'd scramble quite a bit on two or three servers where I know I loaded it. Often, depending on the program in question, I'd have to download fresh. However, I currently launch <B>lynx gadome/gnu/perl</B>, then arrow down to the latest Perl source file and hit &#147;d&#148; to download (&#147;enter&#148; may also work, depending on your version of <B>lynx</B>). From here, Perl's only four commands away from being on the box.<P>

<B>Scenario Two</B><P>

The operations manager calls and says that the folks on the help desk are having intermittent problems seeing their call tracking database. After getting more details, I begin troubleshooting. <B>traceroute</B> is not there. I launch <B>lynx gadome/ls-lR</B>, followed by a quick search (/) and type <B>traceroute</B>. Bang, a match. <B>traceroute</B> 's there less than a minute later.<P>

<B>Scenario Three</B><P>

An email arrived from someone in the Web group outlining the details of what they need for a project. Among the utilities that come to mind that will help them is <B>wget</B>. I'm not sure whether <B>wget</B> is under the gnu license or not, and I'm certain that it's not on gadome. So, I <B>telnet</B> there and <B>cd</B> to the network/misc directory. I then go to one of the following sites:<P>

<pre>
http://archie.rutgers.edu (165.230.4.73)
http://sunsite.cnlab-switch.ch:8000 (195.176.255.9)
http://www.lerc.nasa.gov/archieplex/doc/form.html \
  (139.88.112.202)
</pre>

and do a search for <B>wget</B>. Once I find out it's a gnu product, I decide not to follow the links returned. Instead, I note the latest release filename and use this one-liner:<P>

<pre>
lynx -source ftp.gnu.org/gnu/wget/wget-1.5.3.tar.gz &gt; \
  wget-1.5.3.tar.gz.
</pre>

After downloading, I create a link for the source into a <B>wget</B> directory.<P>
<P>
My aim here was to show how basic it is to set up and maintain such a resource, as well as demonstrate its usefulness. It was not to review the software that I listed. In preparing the list, I first went to my own well. Thereafter, I searched for sites aimed at offering information and resources to UNIX systems administrators. I came across a number of excellent sites. One of the main issues is weeding through outdated software that is no longer being maintained. This effort is a continuous one, and is best managed by keeping up with the latest periodicals, researching and evaluating software, and utilizing sites dedicated to this. The most comprehensive site I encountered was <B>http://www.stokely.com/UNIX.sysadm.resources/index.html</B>. I've also started to reorganize and weed through the multitude of information I've collected through the years and will display this (at least for starters) at: <B>http://www.geocities.com/jbeck695/unix-sysadmin</B>. The software listed above will also be updated to assure the reliability of sites and I will post new software when applicable.<P>

<B>Additional Noteworthy Tidbits</B><P>

For those who are unfamiliar with the term &#147;Trojan horses&#148; in the computer sense, it has to do with wily crackers placing their own version of a program readily accessible to those in need. This leads to the critical point of only downloading from sites that have been around for a long time and have established a reputation. Also note, just because you build an application does not assure that it is &#147;clean&#148;. CERT is one such organization that reports computer security issues, such as this. There was a widespread Trojan horse in the <B>traceroute</B> program sometime back. It seems that someone added a few pieces to the <B>makefile</B>. One of the things that happened upon building was that it allowed root privilege to a particular port then sent an external email informing of this. So, the point of downloading from reliable sources can not be overstated. Additionally, when possible, you should use the md5 program or some type of checksum to ensure the integrity of the files downloaded.<P>
Beyond physical connectivity issues, there are two common errors that can occur when connecting to <B>ftp</B> sites. Both are part of the <B>ftp</B> server package and its configuration. There is a passwd-check program that, for accountability purposes, enforces anonymous users to supply a valid (RFC822-compliant) email address. It can be set up to either warn or prohibit anonymous users from gaining access. The second error arises when the <B>ftpd</B> server attempts to convert (do a DNS reverse-lookup of) the Internet address of the host from which you are attempting to get the file. So, any sites without name servers or misconfigured ones, will be out of luck.<P>
Another hurdle in the task of downloading software is locating it. In the list above I included numerous <B>ftp</B> sites, most of which have been around for quite some time. The full <B>url</B> for one I frequently use is <B>http://www.ns.rutgers.edu/htbin/ \<BR>
archie</B> (165.230.4.74)<P>
At times, particularly during DNS outages or slow downs, the need for an IP address of a non-local server is necessary. I often use <B>samspade.org/206.117.161.81</B>.<P>
I'm currently on a project where the primary DNS server and wide area network are both changing frequently. And, as a result, I've utilized this server quite a bit; as well as a 56-k modem hanging off one of my systems. It's always nice to have reserves available when things aren't running smoothly.<P>
<P>
<ul><li>The <B>pping</B> program is a great utility to run prior to running network-related programs, such as <B>lynx</B>. For example, type <B>pping ftp.site 80</B> before using the <B>lynx-source</B> option.</li>
<li>A site dedicated to extracting individual files from <B>.tar</B> and <B>.gz</B> files, without downloading, is: <B>http://www.delorie.com/ \<BR>
gnu/dl/gnuindex.cgi/prep/</B>.</li></ul></p>
<p>
<h1>About the Author</h1><p>
Joe Beck has been doing systems administration for six years. He currently works as an independent contractor for Sun Microsystems, on a project for the State of New Jersey (Dept. of Labor, tax redesign) working with Sun Enterprise Cluster and Oracle Parallel Server. He can be reached at: jbeck@dolsun.dol.state.nj.us.


<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>





