<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v09, i10: Alias Defender</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
<style type="text/css">
        <!--
                pre { font-size: 75%; }
                
        -->
        </style>

</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</a></span></td>
		<td><span class=navbarLink><a href="a2_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a2_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a2_f3.htm">Figure 3</a></span></td>
		<td><a href="../../../../source/SA/2000/oct2000.tar"><b class=codeListing>oct2000.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >

<H1>Alias Defender</H1><p>
<P>Clark Cooper
<P>
Meeting the demands of 24x7 system availability can sometimes be difficult. This article presents a simple application, which ensures that, between two systems, an alias IP stays active on your network for Solaris and RedHat 6.x Linux Systems. By ensuring that an alias IP is active on the network, you can increase the availability of a network resource.<P>
The application is called Alias Defender and is a Perl script. The two systems that run Alias Defender have their own unique name and IP address. Clients wanting to access the network resource should connect to the alias IP. If the system running the alias IP goes down, Alias Defender will automatically configure the paired system with the alias IP. This ability to automatically transfer the alias IP during a downtime scenario will give the end user a perception that the network resource was only briefly down.<P>
The availability of the alias IP is monitored via the Perl <B>ping.pm</B> module every 20 seconds (see Figure 1). If the alias IP is found not responding, then the <B>ifconfig</B> command is used to add the alias (see Figure 2). There are also conditions that must be met before an alias IP will be added (see Figure 3).<P>
Given the limitations discussed below, Alias Defender will work best for network resources such as a proxy server where there is little or no local dynamic data. Though there are no physical equipment placement requirements, the two systems should reside on the same network.<P>
<B>What Is an Alias IP?</b><p>An alias IP is an additional IP address for which a system will answer. The following shows a system that will only answer for the single IP 172.16.1.1:<P>
<pre>
$ /usr/sbin/ifconfig -a
lo0: flags=1000849&lt;UP,LOOPBACK,RUNNING,MULTICAST,IPv4&gt; \
   mtu 8232 index 1
        inet 127.0.0.1 netmask ff000000
spwr0: flags=1000843&lt;UP,BROADCAST,RUNNING,MULTICAST,IPv4&gt; \
   mtu 1500 
  index 2
        inet 172.16.1.1 netmask ffffff00 broadcast \
   172.16.1.255
</pre>
Running <B>ifconfig</B> on a system configured with an alias IP will show a second interface. The following demonstrates this with an alias IP of 172.16.1.2. This system will answer for two IP addresses with one Ethernet card or interface installed. Note that because the alias IP resides on the primary interface sprw0, the interface name for the alias is sprw0:1:<P>
<pre><SMALL>
$ /usr/sbin/ifconfig -a
lo0: flags=1000849&lt;UP,LOOPBACK,RUNNING,MULTICAST,IPv4&gt; mtu 8232 index 1
        inet 127.0.0.1 netmask ff000000
spwr0: flags=1000843&lt;UP,BROADCAST,RUNNING,MULTICAST,IPv4&gt; mtu 1500 index 2
        inet 172.16.1.1 netmask ffffff00 broadcast 172.16.1.255
spwr0:1: flags=1000843&lt;UP,BROADCAST,RUNNING,MULTICAST,IPv4&gt; mtu 1500 index 2
        inet 172.16.1.2 netmask ffffff00 broadcast 172.16.1.255
</SMALL></pre>
<B>Requirements</b><p>Alias Defender has been tested on Solaris 2.6, Solaris 7, Solaris 8, and Red Hat 6.1. Perl 5.005_03 or higher (with the Net::Ping.pm module installed) is required. For Solaris systems, the best location to download Perl is: <B>http://www.sunfreeware.com</B>. The downloads there are built per-platform and appear to include the Net::Ping.pm module. The Red Hat Perl <B>rpm</B> also appears to include the Net::Ping.pm module.<P>
<B>Limitations</b><p>Alias Defender does not share or replicate data between the two systems. Thus, when the alias IP is transferred to the partner, data files are not transferred with the IP. The transfer may take up to 30 seconds to transfer. A default router setting on the system is required. This is used as a third-party check to ensure a false failover does not occur due to a network outage.<P>
<B>Installation and Configuration</b><p>Normal operation of Alias Defender should be handled with the <B>init</B> script (see &#147;Init Script&#148; section below). Both systems must have Alias Defender running. Use <B>ifconfig -a</B> to see the alias IP brought in or out of service. All Alias Defender operations are logged to the system log (<B>/var/adm/messages</B> or <B>/var/log/messages</B>).<P>
There are three files for installation: AliasDefender, AliasDefender.pl, and hostname.alias (Listings 1-3). After downloading these files, do the following while running as root. (Listings for this article are available from: <B>http://www.sysadminmag.com</B>.)<P>
<pre>
-Init Script
   Solaris:
      cp AliasDefender /etc/init.d
      chmod 744 /etc/init.d/AliasDefender
      ln -s /etc/init.d/AliasDefender /etc/rc0.d/K02AliasDefender
      ln -s /etc/init.d/AliasDefender /etc/rc1.d/K02AliasDefender
      ln -s /etc/init.d/AliasDefender /etc/rc3.d/S99AliasDefender

   Linux:
      cp AliasDefender /etc/rc.d/init.d
      chmod 744 /etc/rc.d/init.d/AliasDefender
      ln -s /etc/rc.d/init.d/AliasDefender /etc/rc.d/rc0.d/K02AliasDefender
      ln -s /etc/rc.d/init.d/AliasDefender /etc/rc.d/rc1.d/K02AliasDefender
      ln -s /etc/rc.d/init.d/AliasDefender /etc/rc.d/rc3.d/S99AliasDefender


    -Application Script

         cp AliasDefender.pl /usr/local/lbin
chmod 744 /usr/local/lbin/AliasDefender.pl
</pre>
If you do not want to install AliasDefender.pl to <B>/usr/local/lbin</B>, be sure to update the variable &#147;<B>ALIAS_DEFENDER</B>&#148; in the init script with the new path. Be sure that the path to Perl is correctly set at the top of <B>AliasDefender.pl</B>:<P>
<pre>
    -Configuration file
cp hostname.alias /etc
</pre>
You will need to modify <B>/etc/hostname.alias</B> for proper function. The heading of this file should provide explanation of the field definitions.<P>
<B>Init Script</b><p>The init shell script is provided for automating the start/stop of Alias Defender during the bootup/shutdown process. You can manually start with the following:<P>
Solaris:<P>
<pre>
# /etc/init.d/AliasDefender start
</pre>
Linux:<P>
<pre>
# /etc/rc.d/init.d/AliasDefender start
</pre>
Starting Alias Defender will create the following daemon:<P>
<pre>
  root  273  1  0 08:20:38 ?  0:00 /usr/bin/perl \
    /usr/local/lbin/AliasDefender.pl Monitor
</pre>
<B>Alias Defender Script</b><p>This Perl script should normally be called by the init script. This is the script that handles the monitoring, adding, and removing of the alias IP. For manual operation, the following parameters are allowed:<P>
<pre>
Usage: ./AliasDefender.pl { AddAlias [Alias IP] | Monitor | \
  RemoveAlias [Alias IP] }
</pre>
<B>AddAlias</B> -- This will add ALL defined aliases:<P>
<pre>
# ./AliasDefender.pl AddAlias
</pre>
This will add a single defined alias:<P>
<pre>
# ./AliasDefender.pl AddAlias 172.16.1.2
</pre>
<b>RemoveAlias</B> -- This will remove ALL defined aliases:<P>
<pre>
# ./AliasDefender.pl RemoveAlias
</pre>
This will remove a single defined alias:<P>
<pre>
# ./AliasDefender.pl RemoveAlias 172.16.1.2
</pre>
<B>Monitor</B> -- This will create the monitoring daemon for ensuring the alias IP is active on the network.  This is the parameter that is called by the init script:<P>
<pre>
# ./AliasDefender.pl Monitor
</pre>
<B>Configuration File</b><p>Alias Defender is configured with the file <B>/etc/hostname.alias</B>. Below is a sample configuration file:<P>
<pre>
#  Nic      The interface that is to be used as the alias.
#           This is determined by the interface to which
#           you want to bind the alias.  For instance, if the
#           primary interface is named "dnet0", then the interface
#           for the alias should be "dnet0:1".  Multiple alias
#           interfaces are supported and each should be unique.
#
#  Alias IP The alias IP to be defended between the two systems.
#
#  NetMask  The network mask of the Alias IP Address.
#
#  Partner  The opposite system in the pair.  Can be an IP or
#           host name that is defined in DNS or host file.    
#
#  Primary  Defines if this system is to act as the primary between
#           the two systems.  Only one system should be primary.  
#           By being primary, the system will activate the alias
#           even if the partner is active on the network.  A non-
#           primary system will not bring up the alias if the parter
#           is alive.  This is done to reduce any collisions during
#           the alias IP addition.
#
#     NOTE: Each field is separated by a "|".  This is required.
#
# Nic   | Alias IP   | NetMask       | Partner     | Primary
iprb1:1 | 172.16.1.2 | 255.255.255.0 | 172.16.1.5  | true
iprb1:2 | 172.16.1.3 | 255.255.255.0 | 172.16.1.5  | true
</pre>
<h1>About the Author</h1><p>
Clark has worked as Systems Administrator and/or client support for 9 years. He is currently employed by VC3 Inc. and can be reached at: Clark.Cooper@vc3.com.



<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
