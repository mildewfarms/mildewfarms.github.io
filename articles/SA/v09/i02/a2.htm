<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v09, i02: Deploying Microsoft FrontPage 2000 UNIX Web Services</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</a></span></td>
		<td><span class=navbarLink><a href="a2_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a2_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a2_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a2_l1.htm">Listing 1</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a2_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a2_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a2_l4.htm">Listing 4</a></span></td>
		<td><span class=navbarLink><a href="a2_l5.htm">Listing 5</a></span></td>
		<td><span class=navbarLink><a href="a2_t1.htm">Table 1</a></span></td>
		<td><a href="../../../../source/SA/2000/feb2000.tar"><b class=codeListing>feb2000.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >

<H1>Deploying Microsoft FrontPage 2000 UNIX Web Services</H1><p>
<P>Liam Widdowson
<P>
Microsoft FrontPage 2000 is a client/server application that simplifies authoring, management, and publishing of Web sites through a user-friendly GUI. It allows the implementation of seemingly complicated features, such as search engines, feedback forms, and discussion forums (that traditionally require CGI programming) with a few mouse clicks. Whether you're an enterprise rolling out FrontPage to manage your intranet content, or an ISP responding to customer demand, you can implement FrontPage-enabled Web services without Windows NT.<P>
The FrontPage client and Web server communicate with a proprietary protocol that is layered over HTTP with CGI. Files are uploaded using HTTP POST instead of <B>ftp</B> . User authentication is done with individual <B>.htaccess</B> files in each user's <B>public_html</B> directory. This allows multiple authors to have publishing rights to a single Web site. See Jimmy Ball's article (<I>Sys Admin</I>, February 1999) for detailed information on <B>.htaccess</B> files.<P>
Microsoft offers FrontPage extensions for a wide variety of UNIX platforms and Web servers (see Table 1). However, the UNIX version lacks comprehensive documentation, and if not properly implemented, can lead to frustration and serious security issues. In this article, I hope to provide the information you won't find in the documentation and lead you through what is required to get a FrontPage Web server configured securely.<P>
<B>Installing the Web Server</b><p>If you have Web servers in production, I suggest installing FrontPage on a separate server (significant configuration changes are required). Also, by isolating your FrontPage server, you can apply a specific security model.<P>
For this article, I use Slackware Linux v4.0 and Apache v1.3.9. You may use any flavor of UNIX/Web server you prefer, as long as it is supported (see Table 1). If your UNIX does not have a Web server installed, I recommend the Apache Web server. Binaries and source distributions are available from:<P>
<PRE>
http://www.apache.org/dist/
</PRE>
<P>You may prefer the precompiled packages available at:<P>
<PRE>
http://www.sunfreeware.com   (Solaris SPARC/Intel)
http://hpux.cs.utah.edu/     (HP-UX)
</PRE>
<P>Before beginning installation of Apache, create a user that will be responsible for running the <B>httpd</B> process. I usually create one named <B>www</B> and place it in the same group as the users on my system. Your <B>useradd</B> statement should look like:<P>
<PRE>
# useradd -d /usr/local/apache -g users -s /bin/false www
</PRE>
<P>By default, the Apache Web server installs into <B>/usr/local/apache</B>. You can alter this by specifying a different path at compile time with <B>configure</B>'s <B>prefix</B> option:<P>
<PRE>
./configure --prefix=/opt/apache
</PRE>
<P>More information on <B>configure</B> options can be found in the INSTALL file within the Apache distribution. If you experience problems compiling Apache, visit the FAQ at:<P>
<PRE>
http://www.apache.org/docs/misc/FAQ.html
</PRE>
<P>Once Apache is installed, you'll need to alter parts of the Apache configuration. Edit the <B>httpd.conf</B> (usually <B>/usr/local/apache/conf/httpd.conf</B>). Uncomment or add the following lines:<P>
<PRE>
ResourceConfig conf/srm.conf
</PRE>
<P>Microsoft's extensions add three lines of text per FrontPage Web to <B>srm.conf</B>. Since Apache v1.3.X ships with all configuration data stored in <B>httpd.conf</B>, this must be altered. You'll also need to change a few other parameters. The Apache <B>AllowOverride</B> directive allows you to globally control what security features users can specify in their <B>.htaccess</B> files. For FrontPage to work, you must set:<P>
<PRE>
AllowOverride All
</PRE>
<P>If this is not changed, users will be able to write to each other's Web space. You'll also want to change the <B>DirectoryIndex</B> directive to:<P>
<PRE>
Direc0toryIndex index.html index.htm default.htm default.html
</PRE>
<P>This will allow files named as above to be considered index or starting pages. You must also specify the user that runs Apache. This can be done with the following lines:<P>
<PRE>
User www
Group users
</PRE>
<P>See Listings 4 and 5 for example <B>httpd.conf</B> and <B>srm.conf</B> configuration files. Once you've made the relevant configuration changes, start up Apache:<P>
<PRE>
# /usr/local/apache/bin/apachectl start
</PRE>
<P>Test your Web server by <B>telnet</B>ing to port 80 and typing <B>GET / HTTP/1.0</B>. You should see something similar to the following:<P>
<PRE>
$ telnet localhost 80

Trying 127.0.0.1...
Connected to localhost.
Escape character is '^]'.
GET / HTTP/1.0

HTTP/1.1 200 OK
Date: Sat, 25 Sep 1999 08:45:36 GMT
Server: Apache/1.3.9 (Unix)
ETag: W/"7b6-90-37e3b144"
Accept-Ranges: bytes
Content-Length: 144
Connection: close
Content-Type: text/html

</PRE><P>Now that your Web server is working, it's time to install Microsoft's FrontPage Extensions.<P>
<B>Installing Microsoft FrontPage 2000 Server Extensions</b><p>Download a copy of Microsoft's FrontPage 2000 extensions for UNIX from:<P>
<PRE>
http://msdn.microsoft.com/workshop/languages/fp/2000/unixfpse.asp
</PRE>
<P>You must download the <B>fp_install.sh</B> script and the version of FrontPage to suit your platform, (e.g., <B>fp40.linux.tar.gz</B>). Once these files are downloaded, place them in a temporary directory, and as root run <B>fp_install.sh</B>. Answer the following prompts as shown:<P>
<PRE>
Are you satisfied with your backup of the system (y/n) [N]?

</PRE><P>Ensure there is a backup copy of your Web server's configuration files (<B>httpd.conf</B>, <B>srm.conf</B>, etc.). Answer &#147;yes&#148; when ready:<P>
<PRE>
FrontPage Extensions directory [/usr/local/frontpage/]:

</PRE><P>Choose the target installation path for the extensions:
<PRE>
Where is the zcat which can uncompress gz files?

</PRE><P>The script then prompts for the path of <B>zcat</B> (usually <B>/bin/zcat</B>, <B>/usr/bin/zcat</B> or <B>/usr/local/bin/zcat</B>, etc.). It will then begin decompressing and installing the extensions:<P>
<PRE>
Do you want to install a root web (y/n) [Y]?

</PRE><P>It then prompts you to install a root Web. The root Web is the FrontPage Web for the root content directory of your Web server, (e.g., <B>http://www.mycompany.com.au/</B>). You need to install this, so say &#147;yes&#148;:<P>
<PRE>
Server config filename:

</PRE><P>Enter the path to your server's config file (e.g., <B>/usr/local/apache/conf/httpd.conf</B>).<P>
<PRE>
FrontPage Administrator's user name:

</PRE><P>A prompt for the FrontPage Administrator's user name will appear. This username is used by the client to publish content into the root Web. While it does not necessarily need to align to a UNIX username, doing so eases administration. I prefer to choose the UNIX username that runs Apache (in this case, <B>www</B>).<P>
<PRE>
Unix user name of the owner of this new web:[www]
Unix group of this new web:[users]  

</PRE><P>A prompt for the UNIX UID and GID for the root Web administrator will appear. You should choose the UNIX userid and group with which you are running Apache (<B>www</B> and <B>users</B>):<P>
<PRE>
    1.  ncsa
    2.  apache
    3.  apache-fp
    4.  netscape-fasttrack
    5.  netscape-enterprise
    6.  stronghold

What type of Server is this:  

</PRE><P>You will then be prompted for the type of Web server you are running. Since I'm using Apache, I choose option 2. Do not choose <B>apache-fp</B>:<P>
<PRE>
Password for user "www":

</PRE><P>You will then be prompted for the password for your rootweb's administrator. Note this does not align with your UNIX password:<P>
<PRE>
1.  LATIN1 (ISO 8859-1)
2.  LATIN2 (ISO 8859-2)
3.  EUCJP  (Japanese EUC)
4.  EUCKR  (Korean EUC)

Which local character encoding does your system support: [1]

</PRE><P>Choose the correct local character encoding used on your system. This is usually <B>LATIN1</B> (for most English speaking countries):<P>
<PRE>
1.  English
2.  French
3.  German
4.  Italian
5.  Japanese
6.  Spanish

What should the default language be: [1]

</PRE><P>Choose the default language you want FrontPage to use:<P>
<PRE>
Install new sub/per-user webs now (y/n) [Y]?

</PRE><P>You will then be asked to install new sub/per-user Webs now. Choose &#147;no&#148; here, as this will be covered later:<P>
<PRE>
Do you want to install Virtual Webs (y/n) [Y]?  
</PRE>
<P>The same applies for Virtual Webs. Choose &#147;no&#148; here:<P>
<PRE>
Installation completed!  Exiting...

</PRE><P>A few additions should be made to the FrontPage configuration file that will be specific to each site. Edit the file <B>/usr/local/frontpage/version4.0/frontpage.cnf</B>.<P>
I suggest adding settings that specify SMTP details, security logging, and script language type. Add the following settings (customize for your site):<P>
<PRE>
SMTPHost:smtp-relay.mycompany.com.au
SendMailCommand:/usr/sbin/sendmail %r
MailSender:frontpage-formhandler@mycompany.com.au.
Logging:1
ScriptLanguage:JavaScript<
</PRE>
<P>A complete list of options is available at:<P>
<PRE>
http://officeupdate.microsoft.com/frontpage/wpp/serk/apndx03.htm

</PRE><P>Congratulations! You have now installed FrontPage extensions on your Web server. You can now publish and manage content in the root of your site. This may be enough for a corporate intranet, but if you want virtuals or per-user Web sites, keep reading.<P>
<B>Sub/Per-User Webs</b><p>A sub/per-user Web is the personal FrontPage Web space of a valid UNIX user (e.g., <B>http://www.mycompany.com.au/~user</B>). You must enable FrontPage authoring extensions for each individual user. Per-user Webs are designated by placing a tilde &#147;~&#148; in front of the Web name.<P>
This is a straightforward task that can be automated. You can even create a Web front-end, as I have done in the past. A simple shell script to add a sub/per-user Web is shown in Listing 1.<P>
Apache must be restarted after adding a per-user Web. The script does this by issuing the command /<B>usr/local/apache/bin/apachectl</B> <B>restart</B>.<P>
<B>Virtual Webs</b><p>Adding a virtual Web is a two-step process. You must first add the virtual to the Web server and then to FrontPage. Apache is capable of doing two types of virtual hosting. The first type of hosting uses a single IP address for all virtuals. DNS and HTTP/1.1 headers are used to distinguish each site.<P>
The second type of virtual hosting uses a single IP address for each virtual. This has the advantage of working with ancient browsers, but large sites could potentially waste significant chunks of IP space. I recommend using single IP, because as HTTP/1.1 is supported in all recent browsers.<P>
The virtual entry in <B>httpd.conf</B> should look similar to this:<P>
<PRE>
&lt;VirtualHost 192.168.18.215&gt;
    ServerAdmin webmaster@mycompany.com.au
    DocumentRoot /home/user/public_html
    ServerName www.inodes.org
    ErrorLog /home/user/logs/inodes.org/error_log
    CustomLog /home/user/logs/inodes.org/access_log common
&lt;/VirtualHost&gt;
</PRE>
<P>where the IP address in <B>&lt;VirtualHost&gt;</B> is the IP of your Web server (for single IP hosting) or the new IP assigned to your server.<P>
Restart Apache and check that the virtual is working correctly. Once this has been done, you must add the domain to FrontPage. I have written a shell script to automate this process (Listing 2). Now that the relevant virtuals and per-user Webs have been added to your server, you can start publishing content with the FrontPage client.<P>
<B>Using the FrontPage Client</b><p>The FrontPage 2000 server extensions are compatible with Microsoft FrontPage 98 and 2000 client. The client consists of two parts -- a WYSIWYG HTML editor/client, and the Microsoft Personal Web server. The user edits or designs sites with the client and publishes them to the local Microsoft Personal Web server. Once satisfied with the content, the site is then published to the remote FrontPage server.<P>
To test your FrontPage server, start up the FrontPage client. You will be presented with the &#147;Getting Started&#148; Wizard. Choose &#147;Create a New FrontPage Web&#148; and click &#147;OK&#148;.<P>
You will be then presented with the screen in  Figure 1. Choose the style of Web you wish to create and then click &#147;OK&#148;. The navigation overview then appears (see Figure 2). You can add and delete documents or links in this area. By clicking on each page, you will be able to edit it with the WYSIWYG HTML editor.<P>
Once you've finished editing your site, click the &#147;Publish&#148; button to upload it to the remote FrontPage Web server. You will then be prompted with a dialog box (see Figure 3). Enter the URL where you would like to publish the page. It may be <B>http://www.mycompany.com.au/~user/</B> for a per-user Web, or <B>http://www.inodes.org</B> for a virtual.<P>
Click &#147;OK&#148; when you've entered the correct URL. A dialog box will appear prompting for a username and password. Enter the username and password that you set up with the scripts in the previous section. Click &#147;OK&#148; and your site transfer will begin. Once the transfer has finished, start your favorite Web browser and point it to the URL in question. You should see your new site.<P>
<B>Installing ftp</b><p>Despite being able to publish sites with FrontPage, you may find yourself needing <B>ftp.</B> I suggest using ProFTPD. It is available from:<P>
<PRE>
http://www.proftpd.org
</PRE>
<P>Download the latest copy and compile it. ProFTPD has been designed to be similar to Apache in terms of configuration. Like Apache, the <B>configure</B> script also accepts a <B>prefix</B> option to specify the installation path. Check the INSTALL file in the distribution for more details.<P>
To ensure a high level of security, you'll need to make changes to the default ProFTPD configuration file (usually <B>/usr/local/etc/proftpd.conf</B>). I suggest adding two security measures. First, <B>chroot</B> the user's environment and second, disallow users from reading or writing to the FrontPage system directories <B>~/public_html/_vti_*/</B>. Your ProFTPD configuration should look like the one in Listing 3.<P>
Once you've customized the configuration file, start ProFTPD (usually <B>/usr/local/sbin/proftpd</B>). ProFTPD can also be run from <B>inetd</B>. See the ProFTPD documentation for further information.<P>
<B>Security</b><p>For your Microsoft FrontPage Web server to be secure, the OS and surrounding services must first be hardened. Ensure you are not running any services that are not required, and consider putting your host behind a firewall. See Patrick Lambert's &#147;Implementing Security on Linux&#148; article (<I>Sys Admin</I>, October 1999) for further information. Other excellent resources include Dave Zwieback's article, &#147;Hardening a Host&#148; (<I>Sys Admin</I>, September 1999) and O'Reilly's <I>Practical UNIX &amp; Internet Security, 2nd Edition</I>.<P>
When securing Microsoft FrontPage servers, the most important question is: Who are my authors? If you are in a friendly environment, you may be able to safely allow your users to use <B>ftp</B> and Microsoft FrontPage for publishing. You may also enable shell access for quick editing of pages, etc.<P>
However, in an open public environment, such an ISP or Web hosting firm, you must take a strong stance on security. Do not enable shell access. Users could possibly replace the various FrontPage executables in <B>~/public_html/_vti_*</B> with Trojans, etc. Only enable <B>ftp</B> services if they are sufficiently hardened (e.g., <B>chroot</B>ed and with measures in place to disallow alterations to the <B>_vti_*</B> service directories).<P>
<B>Conclusion</b><p>Implementing Microsoft FrontPage 2000 extensions under UNIX can be a complicated task. It does, however, have its rewards. You are able to rely on the stability and scalability of a UNIX based platform, while still supporting proprietary Microsoft extensions.<P>
There are many ways to implement FrontPage under UNIX and you may have already used a different method. Microsoft includes a patched version of Apache called <B>apache-fp</B> with the extensions. This special version of Apache offers better FrontPage integration, but I have elected not to use this for security reasons. There is also a freely available Apache module called <B>mod_frontpage</B> that can be downloaded at:<P>
<PRE>
http://www.darkorb.net/pub/frontpage/
</PRE>

<P>Note that it is possible to integrate ASP (Active Server Pages) with your FrontPage server. Your UNIX server will then become an almost complete Windows NT/IIS replacement. There are many products available. ChilliSoft has released UNIX ASP software that is compatible with Apache. Further information can be found at: <B>http://www.chillisoft.com/</B>.<P>
In this article, I have touched on all the elements you need to get your FrontPage server up and running. There are many other features and options available to administrators and users. See the SERK (server extensions resource kit) for further configuration options and features.<P>
<B>References</b><p>RFC1945 Hypertext Transfer Protocol -- HTTP/1.0:<P>
<B>http://www.cis.ohio-state.edu/htbin/rfc/rfc1945.html<P>
</b><p>RFC2616 Hypertext Transfer Protocol -- HTTP/1.1:<P>
<B>http://www.cis.ohio-state.edu/htbin/rfc/rfc2616.html<P>
</b><p>Microsoft FrontPage 2000:<P>
<B>http://www.microsoft.com/frontpage/<P>
</b><p>Microsoft FrontPage 2000 Download:<P>
<B>http://msdn.microsoft.com/workshop/languages/fp/2000/unixfpse.asp<P>
</b><p>Microsoft FrontPage 2000 Server Extensions Resorce Kit:<P>
<B>http://officeupdate.microsoft.com/frontpage/wpp/serk/ </B><P>

<h1>About the Author</h1><p>
Liam Widdowson is a UNIX systems administrator at Telstra Internet Data Operations. Liam is currently completing his Bachelor of Engineering degree at the University of Technology, Sydney, Australia. He can be reached at lbw@telstra.com.

<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
