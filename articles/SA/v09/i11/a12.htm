<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v09, i11: AIX Filesystem ReOrg Made Simple</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</a></span></td>
		<td><a href="../../../../source/SA/2000/nov2000.tar"><b class=codeListing>nov2000.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >

<H1>AIX Filesystem ReOrg Made Simple</H1><p>
<P>Bill Bollenbach
<P>
AIX utilizes the Journal File System (JFS) under Logical Volumes (LV) within the ODM (Object Data Manager). Using JFS makes additional space allocation a simple dynamic process, and there are few problems surrounding its use. One of these problems occurs when reducing the size of a filesystem.<P>
There is no painless way to reduce the size of a JFS filesystem on the fly. The typical recommendation is to backup the data, destroy the original JFS, then recreate it (at a smaller size), and rebuild it from backups. This works, but it can be a disruptive and time-consuming process. It can also require a temporary space allocation that may or may not be available.<P>
The following process was developed to allow the sys admin to clone the filesystem and rename it with the new (smaller) size criteria. It is not strictly dynamic, but careful planning and utilization can reduce the outage to under a minute or two in most cases. If you are dealing with large enabled JFS file systems of several GBs, it will obviously take a bit longer.<P>
The process assumes that you have a moderate size JFS filesystem on hdisk2, and a mirrored copy on hdisk3:<P>
<P>
1. Break mirrors:<P>
<pre>
rmlvcopy fslv.old 1 hdisk2
</pre>
2. Create new filesystem (<B>fs.new</B>) on free hdisk at a smaller size:<P>
<pre>
smitty lv
</pre>
Create the <B>fs.newlv</B>:<P>
<pre>
smitty fs
</pre>
Create the JFS <B>fs.new</B>:<P>
<pre>
mount fs.newlv
</pre>
3. <B>tar</B> <B>fs.old</B> to buffer, and un<B>tar</B> to target <B>fs.new</B> without <B>tmpfile</B>:<P>
<pre>
cd /fs.old
</pre>
The following <B>tar</B> command has the potential to destroy existing data in the event of typographical errors. Therefore, it is recommended to precede it with a <B>#</B> to comment it out, then recall and check for accuracy prior to actual execution:<P>
<pre>
#tar -cvf - .|(cd /fs.new;tar -xvpf -)

tar -cvf - .|(cd /fs.new;tar -xvpf -)
</pre>
4. Check the results to ensure the copy was correct:<P>
<pre>
ls -alR /fs.old &gt; fsold
ls -alR /fs.new &gt; fsnew
diff fsold fsnew (should be none of note)
</pre>
5. Reorg filesystem:<P>
<pre>
umount /fs.old
umount /fs.new

chfs -m fs.old.flag fs.old \
   (rename orig fs.old to fs.old.flag)
</pre>
This changes the mountpoint of the old filesystem freeing the original:<P>
 <pre>
chfs -m fs.old fs.new \
   (rename new fs to old fs name)
</pre>
This changes the mountpoint of the new filesystem to the original one:<P>
<pre>
mount /fs.old.flag
mount /fs.old \
   (The new smaller JFS is here now)
</pre>
6. Check the results to ensure correct copy:<P>
<pre>
ls -alR /fs.old fsold2
diff fsold fsold2 (should be none of note)
</pre>
7.  When assured that both filesystems are the same, remove original filesystem:<P>
<pre>
umount /fs.old.flag
rmfs -r fs.old.flag
</pre>
8. Remirror the new, smaller filesystem:<P>
<pre>
mklvcopy -k fs.oldlv 2 hdisk3
</pre>
9. End up with:<P>
<pre>
/dev/fs.newlv          /fs.old
</pre>
10.  Rename the <B>lv</B> and complete the switch:<P>
<pre>
umount fs.oldlv
chlv -n fs.oldlv fs.newlv

remount

mount /dev/fs.oldlv
</pre>
11.  The change is now complete, and you should see a smaller sized JFS with the old name and mount point:<P>
<pre>
/dev/fs.oldlv           /fs.old
</pre>
<p>
<h1>About the Author</h1><p>
Bill Bollenbach has been primary AIX administrator of numerous IBM machines in a shared environment for three years, and is now collaborating on a major ERP project for OneOK, INC, a regional integrated energy company. He can be contacted at: wrbolle@magicaldesk.com.



<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
