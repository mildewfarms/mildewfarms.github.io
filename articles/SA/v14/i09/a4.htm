<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v14, i09: Enhancing Kickstart</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a4_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a4_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a4_l3.htm">Listing 3</a></span></td>
		<td><span class="navbarLink"><a href="a4_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a4_l5.htm">Listing 5</a></span></td>
		<td><span class="navbarLink"><a href="a4_l6.htm">Listing 6</a></span></td>
		<td><span class="navbarLink"><a href="a4_l7.htm">Listing 7</a></span></td>
		<td><span class="navbarLink"><a href="a4_l8.htm">Listing 8</a></span></td>
		<td><a href="../../../../source/SA/2005/sep2005.tar"><b class=codeListing>sep2005.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><img src="a4.gif" width="200" height="167" align="right">Enhancing 
              Kickstart</h1>
            <P> Brian Boyd
            <P> As a systems administrator, imagine being assigned to install 
              30 Red Hat Linux servers, and at the same time, creating a method 
              for standardized installs. Some servers will be the same, but not 
              all. NTP may need to be configured on all systems, but some may 
              also need software RAID mirroring. All unnecessary services must 
              be disabled, but these will vary by server.
            <P> Recently in a similar scenario, I looked to Red Hat's Kickstart 
              for a solution. Kickstart provides a method for performing an automated 
              installation and configuration. Any option in the manual installation 
              process can be defined in a ks.cfg file, such as disk partitions, 
              network settings, and package selection. Additionally, Kickstart 
              allows scripts to be executed before and after the installation.
            <P> Perfect, right? Not quite. There were two problems with this solution. 
              First, 30 Kickstart configuration files would be generated, each 
              more than 100 lines long, and the content of which was generally 
              redundant. Creating and maintaining such files would be inefficient. 
              Second, the post-install process is Kickstart's greatest strength, 
              and I wanted to use it to configure those dozens of tedious tasks 
              that must be performed on a freshly installed system. However, there 
              was no easy way of accomplishing this aside from copying the necessary 
              scripts to each ks.cfg file. I was looking for a method of simply 
              choosing which post-install scripts to execute, with minimal redundancy 
              or effort.
            <P> My solution was to write a set of scripts that enhance Kickstart's 
              functionality. In this environment, HTTP was to be the method of 
              installation because of its simplicity. Additionally, the use of 
              a Web server would allow server-side scripts to automatically generate 
              host-specific ks.cfg files. PHP was the language of choice.
            <P> The default directory structure for these scripts is as follows:
            <P> <b>os/</B> -- The directory in which all OS configuration 
              files reside.
            <P> <B>group/</B> -- The directory in which all group configuration 
              files reside.
            <P> <B>host/</B> -- The directory in which all host configuration 
              files reside.
            <P> <B>main/</B> -- This directory contains several files, as 
              follows:
            <P> <B>kick.inc</B> -- Defines all public functions and is referenced 
              by all configuration files and scripts.
            <P> <B>kick.ini</B> -- Defines how Kickstart is configured, such 
              as the directory structure and URL path. It is read by kick.inc, 
              thus making it available to all configuration files and scripts.
            <P> <B>global.ini</B> -- Defines global variables that are non-OS, 
              group, or host specific. These settings are also available to all 
              configuration files and scripts.
            <P> <B>post/</B> -- The directory in which all post-install scripts 
              reside.
            <P> <B>pkgs/os/</B> -- The directory containing the contents of 
              the Red Hat installation CDs. Each version of Red Hat exists in 
              a different directory. For example, a Red Hat AS 3 directory would 
              be pkgs/os/rhas3/ with the following contents: base RPMS TRANS.TBL.
            <P> <B>pkgs/extra/</B> -- The directory containing RPMs not provided 
              by Red Hat, with a directory for each operating system, such as 
              pkgs/extra/rhas3/.
            <P> 
            <P> All configuration files are written in an INI file format. The 
              three main types of configuration files are OS, group, and host. 
              An OS file defines the default settings for that operating system; 
              each operating system has an OS file. A group file defines settings 
              for a group or cluster. And a host file defines settings specific 
              to each host. Host settings override group settings, and group settings 
              override OS settings. This tiered approach allows for maximal flexibility 
              and minimal redundancy.
            <P> The ks.cfg file, which is called by the system that is being Kickstarted, 
              expects to be passed the host name. This script is responsible for 
              generating the appropriate Kickstart commands specific to that host.
            <P> Now that I've described the big picture, let me illustrate 
              by example. There are two Web servers and one database server to 
              be installed with Red Hat AS 3. The Web servers will be configured 
              identically. Mirrored disks will be used, and because they reside 
              on the DMZ, extra security precautions will be taken. Tripwire will 
              be installed, the gcc compiler will not be installed, and certain 
              binaries will be set chmod 0700. The database server will use LVM 
              for the database partition. All servers need SSH and NTP configured.
            <P> <b>The Configuration Files</b>
            <P> The configuration files must first be created. Listing 1 shows 
              the operating system file, os/rhas3.ini, which defines the default 
              policies used for this operating system at this site. As you can 
              see, many of the options found in the [kickstart_command] section 
              closely resemble Kickstart comands.
            <P> In the [services] section, the ntpd service is enabled, while 
              cups, mdmonitor, and mdmpd are disabled from starting up. The following 
              scripts should be executed after the installation: network, services, 
              pkg-rpms, ssh, and ntp. The [kickstart_package_add] and [kickstart_package_remove] 
              sections define which packages to add or remove from the installation. 
              This makes it easy to remove packages installed as part of the base 
              OS that are not needed, thus saving precious backup resources. And 
              finally, the commands to be executed during the post-install process 
              are defined in the [kickstart_post] section. These commands download 
              the script getpostinstall, which will then download and execute 
              the post-install scripts defined for the given host.
            <P> Next, the group files must be created. Listings 2 and 3 show the 
              group/web.ini and group/database.ini files. The web.ini file states 
              that the Tripwire RPM package, which is not part of the OS distribution, 
              is to be installed. Both the mdmonitor and mdmpd services should 
              be enabled at startup, in addition to those services defined in 
              the OS file. Both the Tripwire and lockdown scripts should be executed 
              after the installation to configure Tripwire and to lockdown certain 
              binaries.
            <P> Listings 4, 5, and 6 show the host configuration files. Host-specific 
              settings are defined, such as host name and IP address. Note that 
              multiple interfaces may be configured.
            <P> To view the configuration file that Kickstart will see, point 
              a Web browser to:
            <P> 
            <pre>
http://&lt;kickstart_server&gt;/kickstart/ks.cfg?host=&lt;host_name&gt;
</pre>
            For example:
            <P> 
            <pre>
http://kick.mydomain.com/kickstart/ks.cfg?host=web1
</pre>
            This is helpful in troubleshooting configuration problems.
            <P> <b>Post-Install Scripts</b>
            <P> The post-install scripts must also be created if they do not already 
              exist. Listing 7 shows an example of the post/services script, which 
              enables or disables services from starting automatically at boot. 
              Note that it makes use of the global function <B>get_host_var()</B> 
              to obtain the list of services to enable or disable for the given 
              host. A possible post/ssh script is shown in Listing 8, showing 
              how easy it is to modify files with the <B>ed</B> command.
            <P> Additional sections and options can easily be added in any of 
              the configuration files and retrieved by functions, such as <B>get_kick_var(</B>) 
              and <B>get_host_var()</B>, which are defined in main/kick.inc, allowing 
              for maximum flexibility in the post-install scripts.
            <P> It would also be possible to automate the complete configuration 
              process of a Web server, for example. A post-install script could 
              be written to check out the appropriate httpd.conf file and applications 
              files from CVS. The CVS server name and CVS tags to check out could 
              be defined in a configuration file.
            <P> <b>Installation</b>
            <P> Now that everything has been configured, it's time to perform 
              an install. Starting with the system web1, insert the OS boot CD 
              in web1 and boot from it. At the boot prompt, type:
            <P> 
            <pre>
linux ks=http://10.0.5.3/kickstart/ks.cfg?host=web1
</pre>
            The IP address should be that of the Kickstart server; name resolution 
            is not yet enabled at this point in the installation. This will start 
            an install for the server web1.
            <P> Once the OS installation is complete, the post-installation process 
              begins. This process, which is driven by the getpostinstall script 
              defined in the [kickstart_post] section of the rhas3.ini file, is 
              responsible for downloading the post-install scripts configured 
              for the server web1 and then executing them. All output from the 
              post-install scripts is written to the /root/postinstall.log file 
              for later review.
            <P> After the system reboots and the root user logs in for the first 
              time, the following message is displayed:
            <P> 
            <pre>
*******************************************
Congratulations, the Kickstart installation has completed successfully!

Review /root/postinstall.log for any errors

Tasks to perform manually:
 - Change root password
*******************************************
</pre>
            You now have a Web server fully installed and configured. Installation 
            of web2 and database1 can be accomplished in the same way.
            <P> Note that, because this is a Web-based installation, information 
              requiring secrecy such as passwords and private keys should be applied 
              manually. Also, these scripts currently only work for new installs, 
              not upgrades, but they could be modified to support those as well.
            <P> <b>Conclusion</b>
            <P> By minimizing redundant configuration settings required for Kickstart, 
              these scripts allow new systems to be installed more quickly and 
              those configuration files to be more easily maintained. Additionally, 
              the post-install process has been greatly enhanced, encouraging 
              the administrator to further automate the configuration process 
              specific to the environment's needs. And, in the midst of this, 
              a well-defined and consistent installation and configuration process 
              is easily achieved.
            <P> <I>Brian Boyd has a B.S. in Computer Science from Biola University, 
              and has been working as a systems administrator for more than 4 
              years. When not at the computer, he enjoys spending time with his 
              wife and two dogs. Brian can be reached at: <B>bboyd@hotpop.com</B>.</I></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
