<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v14, i02: Listing 1 genpass</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a8.htm">Article</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a8_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/2005/feb2005.tar"><b class=codeListing>feb2005.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><B>Listing 1 </B><I>genpass</i></h2>
            <p> 
            <pre>
#!/bin/ksh
# Listing 1.
# genpass: This script creates a pseudo-random password.
# by randomly sampling arrays containing upper-case, lower-case,
# digits, and other characters.

LENGTH=$1
DEFAULT_LENGTH=8

upper_limit=0
for char in A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
do
   ((upper_limit = upper_limit + 1))
   upper_chars[$upper_limit]=$char
done

lower_limit=0
for char in a b c d e f g h i j k l m n o p q r s t u v w x y z
do
   ((lower_limit = lower_limit + 1))
   lower_chars[$lower_limit]=$char
done

digit_limit=0
for char in 0 1 2 3 4 5 6 7 8 9
do
   ((digit_limit = digit_limit + 1))
   digit_chars[$digit_limit]=$char
done

other_limit=0
# don't forget to escape the shell meta characters
for char in \~ ! @ \# $ % ^ \&amp; \( \) _ + { } \| : \" \&lt; \&gt; ? - = [ ] \; , . /
do
   ((other_limit = other_limit + 1))
   other_chars[$other_limit]=$char
done

password=""
i=0

while (( $i &lt; ${LENGTH:=$DEFAULT_LENGTH} ))
do
   s1=$(vmstat -s | cut -b1-9 | tr -d " \n")
   s2=$(/usr/bin/ps -elfy)
   s3=$(/usr/bin/cat -s /etc/shadow)

   RANDOM=$( echo $s1 $s2 $s3 | /usr/bin/cksum | /usr/bin/cut -b1-8)

   case $(( $RANDOM % 4 )) in
      0) next_char=${upper_chars[$(( $RANDOM % $upper_limit + 1 ))]} ;;
      1) next_char=${lower_chars[$(( $RANDOM % $lower_limit + 1 ))]} ;;
      2) next_char=${digit_chars[$(( $RANDOM % $digit_limit + 1 ))]} ;;
      3) next_char=${other_chars[$(( $RANDOM % $other_limit + 1 ))]} ;;
   esac

   password=${password}${next_char}

   (( i = i + 1 ))
done

/usr/bin/echo $password
# End Listing 1
</pre></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
