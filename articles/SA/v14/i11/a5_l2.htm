<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v14, i11: Listing 2 check-pppoe.sh shell procedure</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a5.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a5_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink">Listing 2</span></td>
		<td><span class="navbarLink"><a href="a5_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/2005/nov2005.tar"><b class=codeListing>nov2005.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><B>Listing 2 </B><I>check-pppoe.sh shell procedure</i></h2>
            <p> 
            <pre>
#!/bin/bash
#
# Copyright Dick Munroe, munroe@csworks.com, 2005 all rights reserved.
#
# Use of this program is granted under the Gnu Public LIcense provided 
# this copyright remains in place.
#

PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin

scriptName=${0##/*/}
scriptBaseName=${scriptName%%.*}

. /etc/$scriptBaseName/$scriptBaseName.conf

#
# Give the system some "time" to get ppp up.  It may take longer than 
# the default cycle and we don't want to get two ppp interface started.
#

sleep $SYSTEMSTARTUP

#
# Try a simple ppp restart.  Power cyclying and other things are external
# to this logic.  Call this only if the PPP interface really IS down.
#

function restartPPPoE()
{
    I=0

    while [ $I -lt $TRY ]
    do
    poff -r $DSL_PROVIDER 2&gt;/dev/null || pon $DSL_PROVIDER

        sleep $PPP_PAUSE

    ifconfig $PPP &gt;/dev/null 2&gt;&amp;1

    theStatus=$?

    #
    # Bail if the interface is there
    #

    if [ $theStatus -eq 0 ]
    then
        return 0
    fi

    I=$(($I + 1))
    done

    return 1
}

#
# Record the pid in the run file
#

echo $$ &gt;/var/run/$scriptBaseName.pid

powercycletime=$POWERCYCLETIME

while [ 1 -eq 1 ]
do
    sleep $CYCLETIME

    ifconfig $PPP &gt;/dev/null 2&gt;&amp;1
    theStatus=$?

    if [ $theStatus -ne 0 ]
    then
    logger -p local2.warn $PPP has dropped, attempting restart
    restartPPPoE 
    theStatus=$?
    if [ $theStatus -ne 0 ]
    then
        #
        # got here and the easy way didn't work, try cycling power, 
        # then restarting it.
        #

        logger -p local2.warn Cycling power on X10 interface $HOUSECODE.

        br $HOUSECODE off

        sleep $HOUSECODE_OFF_PAUSE

        br $HOUSECODE on

        sleep $HOUSECODE_ON_PAUSE

        logger -p local2.warn $PPP still down after power cycle, \
          attempting restart.

        restartPPPoE

        theStatus=$?
        if [ $theStatus -eq 0 ]
        then
        powercycletime=$POWERCYCLETIME
        logger -p local2.info $PPP is back up.
        else
        logger -p local2.emerg $PPP is not back up after $TRY, \
          powercycle, $TRY attempts.
        powercycletime=$(($powercycletime + $POWERCYCLETIMEINCREMENT))
        if [ $powercycletime -gt $POWERCYCLETIMEMAXIMUM ]
        then
            powercycletime=$POWERCYCLETIMEMAXIMUM
        fi

        sleep ${powercycletime}s
        fi
    else
        powercycletime=$POWERCYCLETIME
        logger -p local2.info $PPP is back up.
    fi
    fi
done</pre></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
