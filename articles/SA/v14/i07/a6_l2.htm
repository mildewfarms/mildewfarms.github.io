<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v14, i07: Listing 2 convert.pl</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a6.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a6_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a6_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a6_f3.htm">Figure 3</a></span></td>
		<td><span class="navbarLink"><a href="a6_l1.htm">Listing 1</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink">Listing 2</span></td>
		<td><span class="navbarLink"><a href="a6_l3.htm">Listing 3</a></span></td>
		<td><span class="navbarLink"><a href="a6_t1.htm">Table 1</a></span></td>
		<td><span class="navbarLink"><a href="a6_t2.htm">Table 2</a></span></td>
		<td><a href="../../../../source/SA/2005/jul2005.tar"><b class=codeListing>jul2005.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><B>Listing 2 </b><i>convert.pl</i></h2>
            <p> 
            <pre>
#!/usr/bin/perl -w

# $Id: convert.pl,v 1.5 2005/03/07 21:48:50 mtsouk Exp mtsouk $
#
use strict;

my $tablespace_found = 0;
my $line="";

# The following two hashes will hold the
# names of the tables and the tablespaces.
my %TABLE = ();
my %TABLESPACE = ();

my $firsttable = 1;

die &lt;&lt;Thanatos unless @ARGV;
usage:
         $0 inputfile.log outputfilename
         inputfile.log: The input filename
         outputfilename: The filename of the output
Thanatos

if ( @ARGV != 2 )
{
         die &lt;&lt;Thanatos
         usage info:
                  Please use exactly 2 arguments!
Thanatos
}

my $input = $ARGV[0];
open(INPUT, "&lt; $input " ) ||
         die "Cannot read $input: $!\n";

my $output = $ARGV[1].".dot";
open(OUTPUT, "&gt; $output " ) ||
         die "Cannot write $output: $!\n";

print OUTPUT "digraph G\n";
print OUTPUT "{\n";
print OUTPUT "\tgraph [rankdir = \"LR\" ]\;\n";
print OUTPUT "\tnode[fontsize = \"14\" style=bold]\;";
print OUTPUT "\n\n";
print OUTPUT "\# Table-field connection part.\n";

# Read the input file
while ($line = &lt;INPUT&gt;)
{
         chomp $line;
         # Drop empty lines.
         if ( $line =~ /^$/ )
         {
                  next;
         }
         if ( $line =~ /^TABLESPACE/ )
         {
                  # Close the previous table node.
                  print OUTPUT " \"\n\tshape = \"record\"\n\t]\;\n\n";
                  print OUTPUT "\n\# TABLESPACE-table connection part.\n";
                  $tablespace_found = 1;
                  next;
         }
         if ( $tablespace_found )
         {
                  my $tablespace = (split " ", $line)[1];
                  my $table = (split " ", $line)[0];
                  # Connect tables with their Tablespaces                  
                  print OUTPUT "\t$table:tb -&gt; TB_$tablespace:tb\;\n";
                  if ( !defined $TABLESPACE{$tablespace} )
                  {
                           $TABLESPACE{$tablespace} = 1;
                  }
         }
         else
         {
                  my $table = (split " ", $line)[0];
                  my $column = (split " ", $line)[1];
                  if ( defined $TABLE{$table} )
                  {
                           print OUTPUT " | ".lc($column);
                  }
                  else
                  {
                           # The very first table has to be treated differently.
                           if ( $firsttable )
                           {
                                    $firsttable = 0;
                           }
                           else
                           {
                                    print OUTPUT " \"\n\tshape = \"record\"\n\t]\;\n\n";
                           }
                           $TABLE{$table} = 1;
                           print OUTPUT "\t$table [label = \"&lt;tb&gt; $table";
                           print OUTPUT " | ".lc($column);
                  }
         }
}

print OUTPUT "\n\# Tablespace decoration part.\n";
my $tablespace = "";
foreach $tablespace ( keys %TABLESPACE )
{
         print OUTPUT "\tTB_".$tablespace;
         print OUTPUT '[label="&lt;tb&gt; '.$tablespace.'"';
         print OUTPUT ' shape = "record" style=filled color="red"];';
         print OUTPUT "\n";
}

my $first = 1;
my $tb_first = "";
foreach $tablespace ( keys %TABLESPACE )
{
         print OUTPUT "\tTB_$tablespace -&gt;";
         if ( $first )
         {
                  $tb_first = $tablespace;
                  $first = 0;
         }
}
         print OUTPUT "TB_$tb_first;\n";

print OUTPUT "}\n";

# Close INPUT and OUTPUT
close(INPUT) ||
         die "Cannot close $input: $!\n";
close(OUTPUT) ||
         die "Cannot close $output: $!\n";

exit 0;
</pre></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
