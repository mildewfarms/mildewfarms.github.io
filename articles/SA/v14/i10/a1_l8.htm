<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v14, i10: Listing 8 srm_apply_project - A perl script to dynamically apply project settings</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a1.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a1_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a1_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a1_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a1_l3.htm">Listing 3</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a1_l4.htm">Listing 4</a></span></td>
		<td><span class="navbarLink"><a href="a1_l5.htm">Listing 5</a></span></td>
		<td><span class="navbarLink"><a href="a1_l6.htm">Listing 6</a></span></td>
		<td><span class="navbarLink"><a href="a1_l7.htm">Listing 7</a></span></td>
		<td><span class="navbarLink">Listing 8</span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a1_l9.htm">Listing 9</a></span></td>
		<td><span class="navbarLink"><a href="a1_l10.htm">Listing 10</a></span></td>
		<td><a href="../../../../source/SA/2005/oct2005.tar"><b class=codeListing>oct2005.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><B>Listing 8 </B><I>srm_apply_project - A perl script to dynamically 
              apply project settings</I></h2>
            <p> 
            <pre>
#!/usr/perl5/5.6.1/bin/perl

use strict;
use warnings;
use Getopt::Long;

Getopt::Long::config(qw( auto_abbrev bundling bundling_override ));
use vars qw(%opt);
GetOptions(\%opt, qw( --yes2all|y --project|p=s));

my $doit=0;

open (PROJECT, "/etc/project" ) or die "\nERROR: Could not open /etc/project.\n";
while ( &lt;PROJECT&gt; ) {
                chomp;
        my ($project,$prid,$comment,$user,$group,$limits)= split(/:/);
                if ($opt{'project'}) {
                        if ($project ne $opt{'project'}) {
                                next;
                        }
                }
                if ($limits =~ /(project.cpu-shares=\(.*\))/) {
                        my @temp=split(/,/,$1);
                        my $shares=$temp[1];
                        if ($opt{'yes2all'}) {
                                $doit=1;
                        }else{
                                $doit=yon("Change $project cpu-shares to \
                                           $shares?");
                        }
                        if ($doit) {
                                print "Executing: prctl -r -n \
                                       project.cpu-shares -v $shares \
                                       -i project $project\n";
                                system("prctl -r -n project.cpu-shares \
                                        -v $shares -i project $project");
                        }
                }
                if (($limits =~ /(project.pool=\w*)$/) || \
                   ($limits =~ /(project.pool=\w*),/)) {
                        my @temp=split(/=/,$1);
                        my $pool=$temp[1];
                        if ($opt{'yes2all'}) {
                                $doit=1;
                        }else{
                                $doit=yon("Bind $project to $pool?");
                        }
                        if ($doit) {
                                print "Executing: poolbind -i projid \
                                       -p $pool $project\n";
                                system("poolbind -i projid -p $pool $project");
                        }
                }
}

sub yon {
        my $question = $_[0];
        my $answer="";
        print "\n$question (yes or no) : ";
        while ($answer eq "") {
                my $in=&lt;STDIN&gt;;
                chomp($in);
                $answer=lc($in);
                if ( ($answer eq "y") || ($answer eq "yes") )  {
                        return 1;
                }else{
                        if ( ($answer eq "n") || ($answer eq "no") ) {
                                return 0;
                        }else{
                                print "\nPlease answer yes or no: ";
                                $answer="";
                        }
                }
        }
}
</pre></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
