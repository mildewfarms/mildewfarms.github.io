<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v14, i10: Listing 1 assert_attributes_1</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a8.htm">Article</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a8_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/2005/oct2005.tar"><b class=codeListing>oct2005.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><B>Listing 1 </B><I>assert_attributes_1</i></h2>
            <p> 
            <pre>
# Listing 1: assert_attributes_1
#!/bin/ksh

function list_attributes
{
    if [[ -n $1 ]]
    then
        path=$1
        if (( $(file -h $path | grep -c directory) &gt; 0 ))
        then
            ls -ld $path | awk '{print $1" "$3":"$4}'
        else
            ls -l $path | awk '{print $1" "$3":"$4}'
        fi
    fi
}

function list_files
{
    packages=$@
    
    if [[ -z $packages ]]
    then
        while read package
        do
            packages="$packages $package"
        done
    fi

    for package in $packages
    do
        grep " ${package}$" /var/sadm/install/contents | \
        cut -d' ' -f1,2,4,5,6
    done
}

function assert_attributes
{
    local file=$1
    local perms=$2
    local owner=$3
    local group=$4

    local attributes_old=$(list_attributes $file)
    chown ${owner}:${group} $file
    chmod $perms $file
    local attributes_new=$(list_attributes $file)

    if [[ "$attributes_old" != "$attributes_new" ]]
    then
        sudo -u monitor /opt/monitor/bin/create_alert_file -p low \
        -c $(basename $0) -s "$(uname -n):$file has changed!" &lt;&lt; EOF
    Old: $attributes_old
    New: $attributes_new
EOF
        if [[ TRUE = $verbose ]]
        then
            echo "$file - CHANGED!"
        fi
    else
        if [[ TRUE = $verbose ]]
        then
            echo "$file - OK"
        fi
    fi
}

#
# MAIN PROGRAM
#

verbose=FALSE

while getopts v optarg
do
    case $optarg in
    v)
        verbose=TRUE
        ;;
    esac
done

shift $(($OPTIND-1))

list_files $@ | \
while read file_equals type perms owner group
do
    file=${file_equals%=*}
    case $type in
    f|v)
        if [[ -f $file ]]
        then
            assert_attributes $file $perms $owner $group
        fi
        ;;
    d)
        if [[ -d $file ]]
        then
            assert_attributes $file $perms $owner $group
        fi
        ;;
    esac
done
# End Listing 1
</pre></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
