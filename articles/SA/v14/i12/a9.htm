<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v14, i12: Questions and Answers</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><a href="../../../../source/SA/2005/dec2005.tar"><b class=codeListing>dec2005.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><img src="../../resource/1_questions.gif" width="245" height="130" align="right">Questions 
              and Answers</h1>
            <P> Amy Rich
            <P> Thanks to Ed Schaefer for pointing out a typographical error in 
              the answer regarding <B>csplit</B> in the October issue. In each 
              of the following lines, the backtics were converted to single quotes 
              when the issue went to print:
            <P> 
            <pre>
numrecs=`grep -c "^${recsep}" $1`
splitcount=`expr ${numrecs} - 2`
for ifile in `ls data*`; do
ofile=`head -1 ${ifile}`
</pre>
            Dennis Lang submitted a one-line awk solution to the same question. 
            I've slightly modified the code he submitted to remove an UUOC and 
            prevent the matching of false positives on the record separator:
            <P> 
            <pre>
awk '/^xxx[0-9].*$/{f=$1;next;}{print &gt;&gt;f;}' input-file
</pre> <b><font size="+2">Q</font></b> We're running 
            the stock Sun SSH that comes with Solaris 9, and we enabled <B>AllowTcpForwarding</B> 
            and <B>X11Forwarding</B> in <B>sshd_config</B>. After HUPing <B>sshd</B>, 
            new connection attempts authenticate and then fail. <B>/var/adm/messages</B> 
            includes lots of errors that say:
            <P> 
            <pre>
Sep 19 13:54:44 hostname sshd[6523]: [ID 800047 auth.error] \
  error: Failed to allocate internet-domain X11 display socket.
</pre>
            Commenting the two entries back out again fixes the issue but, unfortunately, 
            we can't really go without X11 forwarding. Is there a workaround to 
            this issue?
            <P> <b><font size="+2">A </font></b> You've run into another one of 
              Sun's SSH bugs, this time with <B>X11Forwarding</B>. In this case, 
              SPARC patch <B>118305-04</B> and x86 patch <B>117470-03</B> are 
              at fault. If you back out of whichever patch is installed on your 
              system and install SPARC patch <B>118335-04</B> or x86 patch <B>120463-01</B>, 
              it should fix your problem. Sun documented this issue in infodoc 
              101834:
            <P> 
            <pre>
http://sunsolve.sun.com/search/document.do?assetkey=1-26-101834-1
</pre>
            Other people have suggested starting <B>sshd</B> in IPv4 mode only 
            by editing the <B>sshd_config</B> file and specifying:
            <P> 
            <pre>
ListenAddress 0.0.0.0
</pre> <b><font size="+2">Q</font></b> We're getting a rash of 
            users who are reporting that they can no longer use POP to send and 
            receive their mail. The users report the following error from their 
            clients:
            <P> 
            <pre>
Your server has unexpectedly terminated the connection. Possible causes
for this include server problems, network problems, or a long period of
inactivity. Account: 'username@our.domain', Server: 'mail.our.domain',
Protocol: POP3, Server Response: '+OK 2019 octets', Port: 110,
Secure(SSL): No, Socket Error: 10053, Error Number: 0x800CCC0F
</pre>
            The common link with all these users seems to be that they're scanning 
            their messages with Norton AntiVirus. The only fix we've been able 
            to suggest so far has been to turn off input message scanning. We'd 
            like a better answer for our users so they can re-enable message scanning. 
            Any suggestions?
            <P> <b><font size="+2">A </font></b> The problem you're running into 
              is that Norton stealthily breaks TLS encryption between the client 
              and server so it can scan the now-non-encrypted messages. It should 
              be implemented to scan the messages before making an outgoing SMTP 
              connection instead of after the connection is made, but that's not 
              the way the software was designed. Your users can use POP over SSL 
              on port 995 to retrieve mail (or IMAP SSL on port 993 if they want 
              to switch to IMAP) and the submission port (587) to submit mail. 
              Norton only scans messages on ports 110 (pop3) and 25 (smtp). This 
              means, of course, that the messages are still not being scanned, 
              but Norton will not complain. For a real scanning solution, you'll 
              need to switch to another product.
            <P> <b><font size="+2">Q</font></b> I just started a new job where 
              I'm the only Unix systems administrator. I've been trying to gather 
              information about all of the new machines, and I'm running into 
              a problem with one specific host. Two of the file servers I've inherited 
              as part of my new position are identically configured E450s and 
              fully populated with disks. One of these machines shows all 20 disks 
              when I run <B>prtdiag -v</B>, but the other only shows disks 0 through 
              3. I know that the disks are functioning just fine because they're 
              in use on the fileserver. So, why can't I see them all?
            <P> <b><font size="+2">A </font></b> The default Ultra Enterprise 
              450 configuration only supports four disk drives connected to the 
              internal backplane. To support the 20 drives in your system, two 
              8-bay storage expansion kits were installed as an upgrade. As part 
              of the upgrade, you need to set a variable, <B>disk-led-assoc</B>, 
              in the OBP to set up the mapping between disk slots and the physical 
              and logical device names. This is covered as part of Sun infodoc 
              16735:
            <P> 
            <pre>
http://sunsolve.sun.com/search/document.do?assetkey=1-9-16735-1
</pre>
            From the OBP, you need to run:
            <P> 
            <pre>
setenv disk-led-assoc 0 x y
</pre>
            where <B>x</B> is an integer between 1 and 10 identifying the rear 
            panel PCI slot number where the lower UltraSCSI controller is installed, 
            and y is an integer between 1 and 10 identifying the rear panel PCI 
            slot number where the upper UltraSCSI controller is installed. Slot 
            0 is the internal controller. If the other controller cards are installed 
            in slots 5 and 7, the command would be:
            <P> 
            <pre>
setenv disk-led-assoc 0 5 7
</pre>
            Once you set this variable, reset the system and then do a reconfiguration 
            reboot with <B>boot -r</B>.
            <P> <b><font size="+2">Q</font></b> Our boot disks are encapsulated 
              using SVM under Solaris 9, and we have an external RAID 5 set attached. 
              We've somehow managed to hose things quite spectacularly, and we 
              need to boot from the JumpStart image on the network to try and 
              repair things. This would be easy if we just ripped out SVM and 
              booted off one of the unencapsulated drives, but we need to be able 
              to access the RAID 5 device. Unfortunately, the JumpStart image 
              doesn't recognize SVM devices. I'm sure there must be a way around 
              this, but I'm not sure how to make the JumpStart image read the 
              RAID 5 device. Can you offer any suggestions?
            <P> <b><font size="+2">A </font></b> Information on how to access 
              a RAID 5 stripe set while booting off the CD-ROM is covered in Sun 
              infodoc 75210:
            <P> 
            <pre>
http://sunsolve.sun.com/search/document.do?assetkey=1-25-75210-1
</pre>
            The procedure for accessing it from a network boot is pretty much 
            the same. To begin, boot single user mode off the network JumpStart 
            image (this assumes that <B>net</B> is the network where your JumpStart 
            image is located):
            <P> 
            <pre>
boot net -s
</pre>
            Determine the id of the the SVM metadevice driver:
            <P> 
            <pre>
# modinfo | grep md
17  11be592  2d1b3  85  1  md (Solaris Volume Manager base mod)
46 7824c000   d0c5   -  1  md_trans (Solaris Volume Manager trans mo)
47 7823c000   ed04   -  1  md_raid (Solaris Volume Manager raid mod)
48 7825a000   2a03   -  1  md_hotspares (Solaris Volume Manager hot spar)
49 78178000   4c3c   -  1  md_sp (Solaris Volume Manager soft par)
50  139f480   5498   -  1  md_stripe (Solaris Volume Manager stripes )
51  13a448c  12006   -  1  md_mirror (Solaris Volume Manager mirrors )
68  134adfd   107d   -  1  md5 (MD5 Message-Digest Algorithm)
246 7819f1d7  1004   -  1  md_notify (Solaris Volume Manager notifica)
</pre>
            Then unload the Solaris Volume Manager base module:
            <P> 
            <pre>
modunload -i 17
</pre>
            Once you've unloaded the module, mount one of the unencapsulated boot 
            devices (the directions below assume that your root filesystem is 
            on <B>c0t0d0s0</B>) and copy the metadevice driver configuration over 
            to the running OS:
            <P> 
            <pre>
mount -r /dev/dsk/c0t0d0s0 /a
cp /a/kernel/drv/md.conf /kernel/drv/md.conf
umount /a
</pre>
            Now reload the <B>md</B> driver. This time it will read the information 
            you copied from your boot disk:
            <P> 
            <pre>
modload /kernel/drv/md
metasync -r
</pre>
            All of your original metadevice information should be available to 
            commands like <B>metastat</B> and <B>metadb</B> now, and you should 
            be able to mount the RAID 5 filesystem under <B>/a</B>.
            <P> <b><font size="+2">Q</font></b> We're running a pretty vanilla 
              Apache 1.3.33 on a load-balanced set of FreeBSD 5.3 servers. We 
              need to schedule some site-wide downtime so we can shuffle a large 
              amount of data around behind the scenes. While we're down, we want 
              to leave one server up, but redirect all traffic to a "we're down 
              right now, please come back after 9:00AM" sort of page. I was going 
              to be clever about this and just set the <B>ErrorDocument</B> to 
              this page, but I realized that the page requires an image as well 
              as the text. This means I need to make allowances for more than 
              one URL that does not redirect. What's the best way to do this?
            <P> <b><font size="+2">A </font></b> Probably the easiest way is to 
              use the <B>RewriteEngine</B> instead of <B>Redirect</B> or <B>RedirectMatch</B>. 
              Say you've replaced <B>index.html</B> with the maintenance page 
              and that includes the image <B>maintenance.png</B>, you'd have a 
              set of rewrite rules like the following:
            <P> 
            <pre>
RewriteEngine   On
RewriteRule     ^/$ - [L]
RewriteRule     ^/index\.html$ - [L]
RewriteRule     ^/maintenance\.png$ - [L]
RewriteRule     ^/.*$ http://www.your.domain/ [R]
</pre>
            Be sure to comment out any other rewrite or redirect rules so you 
            don't have conflicts.
            <P> <b><font size="+2">Q</font></b> We're running a bunch of Solaris 
              9 machines that have interfaces on both a public and a private network. 
              For performance and security reasons, we're performing non-encrypted 
              file transfers using <B>rsync</B> over the protected network. When 
              we first started configuring this, we ran into an issue where we 
              didn't think things were working because we couldn't get <B>rsh</B> 
              to the machine to work. After a bunch of debugging, we discovered 
              that <B>rsh</B> with no arguments just hung, but if you gave the 
              <B>rsh</B> arguments, it worked fine (and subsequently we were able 
              to get <B>rsync</B> over <B>rsh</B> working fine, too). Even though 
              we got our immediate problem solved, I still want to know why <B>rsh</B> 
              with no arguments fails because we wasted so much time debugging 
              what turned out to be a non-issue.
            <P> <b><font size="+2">A </font></b> The <B>rsh</B> command is designed 
              to connect to a target machine and execute the specified command. 
              If you don't specify a command when you initiate the connection, 
              then you wind up exec'ing <B>rlogin</B> on the local machine instead 
              of <B>rsh</B>. If you'd run a <B>truss</B> of the <B>rsh</B> process, 
              you would have seen lines resembling the following, where <B>rlogin</B> 
              replaces the <B>rsh</B> process:
            <P> 
            <pre>
execve("/usr/bin/rlogin", 0xFFBFFB04, 0xFFBFFB10)  argc   = 2
resolvepath("/usr/bin/rlogin", "/usr/bin/rlogin", 1023)   = 15
resolvepath("/usr/lib/ld.so.1", "/usr/lib/ld.so.1", 1023) = 16
stat("/usr/bin/rlogin", 0xFFBFF8D0)                       = 0
</pre>
            If you're seeing the <B>rsh</B> session just hang, there's a good 
            possibility that you've commented out the <B>rlogin</B> entry from 
            <B>/etc/inetd.conf</B> and you've just left <B>rsh</B> enabled. Try 
            uncommenting the entry for <B>rlogin</B> and see whether this fixes 
            your problem:
            <P> 
            <pre>
login  stream  tcp6    nowait  root    /usr/sbin/in.rlogind in.rlogind
</pre> <b><font size="+2">Q</font></b> We're trying to install 
            Oracle 10g on Solaris 9, but we keep failing the section of the validate 
            test that deals with kernel parameters:
            <P> 
            <pre>
Rule [ 170 ]: Kernel params OK?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Description:
------------
This rule verifies if the kernel parameters have been set according to
the installation manual


Test [ FAILED ] :
-----------------
SHMMAXUndef
SHMMNIUndef
SEMMNIUndef
SEMMSLUndef
SEMMNSUndef
SEMVMXUndef =~ KernelOK|Obsoleted


Action:
-------
The kernel parameters have NOT been set according the installation
manual of 10g RDBMS. Please refer to the installation manual.

ReturnValue     Action
--------------------------------------------------------------------
SHMMAXTooSmall  Increase the kernel parameter SHMMAX to 4294967295
SHMMAXUndef     SHMMAX has not been defined and needs to be set
                to 4294967295
SHMMINTooSmall  Increase the kernel parameter SHMMIN to 1
                - ignore this message if your OS is Solaris 9
SHMMINUndef     SHMMIN has not been defined and needs to be set
                to 1 - ignore this message if your OS is Solaris 9
SHMMNITooSmall  Increase the kernel parameter SHMMNI to at least 100
SHMMNIUndef     SHMMNI has not been defined and needs to be set to 100
                or more
SHMSEGTooSmall  Increase the kernel parameter SHMSEG to 10
                - ignore this message if your OS is Solaris 9
SHMSEGUndef     SHMSEG has not been defined and needs to be set
                to 10 - ignore this message if your OS is Solaris 9
SEMMNITooSmall  Increase the kernel parameter SEMMNI to 100
SEMMNIUndef     SEMMNI has not been defined and needs to be set to 100
SEMMSLTooSmall  Increase the kernel parameter SEMMSL to at least 100
SEMMSLNotDef    SEMMSL has not been defined and needs to be set to 100
SEMMNSTooSmall  Increase the kernel parameter SEMMNS to at least 256
SEMMNSUndef     SEMMNS has not been defined and needs to be set to 256
SEMOPMTooSmall  Increase the kernel parameter SEMOPM to at least 100
SEMOPMUndef     SEMOPM has not been defined and needs to be set to 100
SEMVMXTooSmall  Increase the kernel parameter SEMVMX to 32767
SEMVMXUndef     SEMVMX has not been defined and needs to be set to 32767
NOEXEC_USER_STACKTooSmall  Increase the kernel parameter
                NOEXEC_USER_STACK to 1 - ignore this message if your OS
                is Solaris 9
NOEXEC_USER_STACKUndef     NOEXEC_USER_STACK has not been defined and
                needs to be set to 1 - ignore this message if your OS is
                Solaris 9
NoAccess        You do not have access to /etc/sysdef
Obsoleted       With Solaris 10 most shared memory and semaphore
                settings are now obsolete. Consult sunsolve.sun.com and
                documentation for System Admins on Solaris 10 for details.
</pre>
            It says we're missing settings for <B>shmmax</B>, <B>shmmni</B>, <B>semmni</B>, 
            <B>semmsl</B>, and <B>semmns</B>, but we have the following defined 
            in <B>/etc/system</B>:
            <P> 
            <pre>
* Settings for oracle
set noexec_user_stack=1
set semsys:seminfo_semmni=100
set semsys:seminfo_semmns=1024
set semsys:seminfo_semmsl=256
set semsys:seminfo_semvmx=32767
set shmsys:shminfo_shmmax=4294967295
set shmsys:shminfo_shmmin=1
set shmsys:shminfo_shmmni=100
set shmsys:shminfo_shmseg=10
* End settings for oracle
</pre>
            If these aren't the settings they want, what should we be using?
            <P> <b><font size="+2">A </font></b> You have the correct settings 
              in <B>/etc/system</B>, but I suspect you're attempting to validate 
              the installation before you actually start Oracle (as you should 
              be). The problem you're running into is the way kernel modules function. 
              Under Solaris, kernel modules are not loaded until they're actually 
              needed by an application. When you run the validation test before 
              starting Oracle itself, the <B>shmsys</B> and <B>semsys</B> modules 
              remain unloaded and the test fails. You can either let it fail during 
              the validation phase (and it will work after Oracle starts and the 
              modules are loaded), or you can be rid of the validation warnings 
              by forceloading the modules at boot time. If you'd rather perform 
              the latter, add the following two lines to <B>/etc/system</B> and 
              reboot:
            <P> 
            <pre>
forceload: sys/shmsys
forceload: sys/semsys
</pre> <I>Amy Rich has more than a decade of Unix systems administration 
            experience in various types of environments. Her current roles include 
            that of Senior Systems Administrator for the University Systems Group 
            at Tufts University, Unix systems administration consultant, and author. 
            She can be reached at: <B>qna@oceanwave.com</B>.</I></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
