<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v08, i04: Listing 1</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a3.htm">Article</a></span></td>
		<td><span class=navbarLink>Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a3_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/1999/apr99.tar"><b class=codeListing>apr99.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >



<H1>Listing 1:  PatchReporter</H1><p>
<pre>
#!/bin/ksh
# Patch Reporter

PATH="/usr/bin:/bin:/sbin" ; export PATH 

############## Config ######################

MAIL_LIST="joe@foobar.com"         

MACHINES="SUN_MACHINES" 
PATCHDATA="patch_data"  # Disposable Directory
INFO="patch_info"
TMPOUT="patchout"
TEMP1="patchtmp"
FINISH="patchout.fin"

############################################

clean_tmp()
{
if [ -s $TMPOUT ]
then
    rm $TMPOUT
fi

if [ -s $FINISH ]
then
    rm $FINISH
fi

if [ -s $TEMP1 ]
then
    rm $TEMP1
fi

if [ -d $PATCHDATA ]
then
    cd $PATCHDATA
    rm -f * 
fi
}

verify_config()
{
if [ ! -f $MACHINES ]
then
    print "Server listing(s) file cannot be found !!!"
exit
fi

if [ ! -f $INFO ]
then
    print "Patch descriptions cannot be found !!!"
exit
fi

if [ ! -d $PATCHDATA ]
then
    print "Creating patch data directory"
    mkdir -p $PATCHDATA
fi
}    

main()
{
for machines in $( &lt; $MACHINES ) ; do
    /bin/rsh -n $machines "showrev -p | awk '{print $2}'" &gt; \
    $PATCHDATA/$machines
done

for machines in `ls $PATCHDATA` ; do
   for patches in `/bin/cat $INFO | awk '{print $1}'` ; do
    for des in `/bin/cat $INFO | grep $patches | awk '{print $2'}` ; do
        PATCH=`/bin/grep $patches $PATCHDATA/$machines\
        | awk '{print $2}' | tail -1` &lt; /dev/null

        PATCH=${PATCH:="Not-Installed"}
    
        printf "%-10s\t %-15s\t %-21s\t %s \n" $machines $PATCH\
        $des $patches &gt;&gt; $TMPOUT

done;done;done 
}

send_report()
{
    printf "%-10s\t %-15s\t %-21s\t %s \n" Hostname Installed\
    Description Patch &gt; $TEMP1

    /bin/sort +3 $TMPOUT &gt;&gt; $TEMP1

cat  $TEMP1 | sed -e '/^$/d' | sed '/Patch/a\
' &gt; $FINISH 

cat $FINISH | mailx -s "Solaris Patch Report" $MAIL_LIST
}

#
# Function List
#

clean_tmp
verify_config
main
send_report
clean_tmp

# End of File</pre>




<! -- Begin Content ------ >
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>