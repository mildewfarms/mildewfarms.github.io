<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v08, i01:  Security Diagnostic Review for Solaris 2.X </TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><a href="../../../../source/SA/1999/jan99.tar"><b class=codeListing>jan99.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<! -- Insert Content ------ >

<H1>Security Diagnostic Review for Solaris 2.X</H1><P>
<P>Gary Bahadur and Dan Robertson
<p>
How do you know what is happening to your Solaris machine in a timely manner? One method is through regularly scheduled security diagnostic reviews. A review in this sense is a snapshot in time of the system. Continuous reviews are necessary to ensure that the system settings are correct and secure over time. A thorough review of the UNIX system, as well as the environment in which it operates, can identify many security weaknesses. In this article, we'll describe how to perform a basic diagnostic review of a Solaris machine. The basic concepts and script commands discussed can be applied to most UNIX environments.<p>
A diagnostic review covers user and system administration, network environmental controls, and administrative policies and procedures. There are a number of security issues related to each of these topics that can be fixed upon completion of the diagnostic review. The script we describe, <B>sec-check.csh</B>, will help determine a number of these security weaknesses and should be run periodically, such as every two months. The current and previous runs should then be compared to determine what changes have occurred on the system. This script is not all encompassing, however, so other tools or scripts available on the Internet or from commercial vendors should also be used to gain a complete understanding of your system.<p>
There are a number of commercial products available that perform diagnostic reviews. Our script performs many of the standard checks that a commercial product will do and can be used on systems where installing a commercial product is not feasible. In cases when a firewall needs to be reviewed or the commercial product takes up too much space or has installation or execution errors, it is a good idea to have a backup method of reviewing the system. If you are running a version of UNIX that is not covered by one of the main diagnostic tools, the <B>sec-check</B> script can be modified to meet many of your needs.<p>
<B>Methodology</b><p>To perform a thorough security diagnostic review of a UNIX system, several areas need to be covered. The system itself must be reviewed, including User Access, File Settings, System Settings, and Network Configuration. Each of these areas has potential security and administrative weaknesses that can be exploited by malicious users. Once the technical review of the system is completed, the administrative practices should be reviewed. In addition to reviewing the system and administrative practices, an external review of the system should be done by performing penetration tests to determine whether unauthorized remote access can be gained. (This area is not covered in detail in this article.)<p>
<B>Specific Solaris Commands</b><p>The checks mentioned in the following sections can be executed on most UNIX environments. The following items (listed in the script), which are specific to the Solaris environment, should also be checked:<p>
<ul>
  <li><B>/etc/passwd</B> file - The password file should be reviewed to ensure that only valid user names are in the file. A password guesser should be run against the encrypted shadowed password file to ensure that users have strong passwords that are not easily guessable. Use a program such as Crack 5.0 to check for weak passwords.<p>
  <li>Local accounts with blank passwords - Every account should have a strong password. Frequently, installed applications may have an account with a default blank password. An intruder could look at the password file to see whether any accounts have no password or if test accounts are present.<p>
  <li>Default password settings - When passwords are created, the default settings, such as password length, are applied. Verify that strong default settings are in place. Automated brute force password guessers can usually find weak passwords.<p>
  <li>Default login settings - Check the default login parameters, such as whether passwords are required or <B>syslog</B> is used. Ensure that secure settings are in place. These parameters should be set as securely as possible.<p>
  <li><B>logindevperm</B> - Check the controls on system devices and how system users can access them. This may be a concern if console login is available to multiple users.<p>
   <li>Solaris <B>loginlog</B> - Check users that have logged into the system. Search for users who do not belong on the system or that you know should not be logging in. These may indicate an intruder.<p>
   <li>Solaris eeprom - eeprom can allow a user with physical access to the machine to gain root privileges. Ensure that eeprom has a strong password.<p>
  <li><B>sulog</B> settings - Check the <B>sulog</B> file and the console settings. <B>su</B> should be forced. Direct root login should not be allowed. Review failed <B>su</B> attempts and look for any patterns or suspicious names.<p>
  <li><B>cron</B> usage - Only specific users should be allowed to use <B>cron</B>. Not all users require it. The <B>cron.allow</B> and <B>cron.deny</B> files determine which accounts can use <B>cron</B>. Intruders usually modify <B>cron</B> files to set up back doors on compromised systems.<p>
  <li>NIS - There are many potential weaknesses associated with the use of NIS. NIS+ should be used to increase security. The NIS checks listed in the script perform basic user, services, and password checking.<p>
</ul>	
<B>User Review</b><p>On any system and environment, user management is always a good place to start looking for weaknesses and misconfigurations. A thorough review of each user account should be conducted covering the user's last logon date, when passwords were last changed, inactive users, password strength, and file ownership. Compromising a user account is the first step for an intruder in compromising an entire system. The user configuration section of the <B>sec-check</B> script checks the following:<p>
<ul>
  <li><B>uid</B> 0 - Multiple uids of 0 may indicate that there was an incorrectly set user ID, that an application or program is running as a root ID, or that an intruder has modified the password file and added a superuser. Verify that all IDs are valid and have the correct uid. Remove any uid 0 users that are not necessary.<p>
  <li>Mail file ownership - Incorrect ownership setting of mail files may allow users on the system to read mail of other system users. Verify that ownership is correct.<p>
  <li><B>.netrc</B> files - These files store passwords and user names between systems and can be very dangerous if unauthorized individuals can read them. <B>.netrc</B> files are mainly for convenience and can usually be removed.<p>
  <li>.rhosts files - These files can allow unauthenticated access to the UNIX system. Most of the time, these are used as a matter of convenience rather than necessity. They should be removed. The <B>rlogin</B> capability should be disabled.<p>
  <li><B>.profile</B> files - User profiles should be searched for incorrect settings. The path or umask may be set incorrectly in the <B>.profile</B>.<p>
  <li>Last login sessions - Check the last login of users. Users who have not been on the system in the past 45-60 days may not be valid users anymore. All system users should be reviewed to determine whether they are valid. If inactive users or users who are no longer part of the company attempt to login, that could indicate an intruder.<p>
</ul>
<B>File Settings</b><p>File ownership and permissions should be reviewed for the entire system. The following file checks should be performed:<p>
<ul>
  <li>List suid/sgid files - suid/sgid files are executed with the privileges of the file owner/group, making them a favorite target for intruders. As an administrator, you should maintain a list of all suid/sgid files and note the creation of all new suid/sgid files.<p>
  <li>List files with the sticky bit - Files with the sticky bit set are used to prevent users from deleting files they do not own from places such as public directories.<p>
  <li>List world writable files - There are only a few instances when files need to be world writable. Some system files need this permission, and some applications may need this permission. In most cases, however, world writable permission is not necessary. Be wary of system files that are writable, such as <B>crontab</B> or configuration files such as the rc* files. An intruder will look for world writable files.<p>
  <li>List <B>/etc</B>, <B>/bin</B>, <B>/usr/bin</B>, <B>/sbin</B>, <B>/</B> directories - These are important system directories. The files and permissions should be reviewed for validity. If these system files have incorrectly set permissions, they may allow excessive access.<p>
</ul>
<B>System Configuration Review</b><p>Default UNIX settings are inherently weak. The following system configuration files should be reviewed:<p>
<ul>
  <li><B>/etc/inetd.conf</B> - A good policy to follow when enabling services is to deny all services not necessary to the functioning of the system. Review all running services and determine which ones are not needed, then turn them off. <B>tcpwrappers</B> would be helpful. Unnecessary services provide a prime target for intruders.<p>
  <li><B>/etc/exports</B> - Review all exported file systems and export permissions to determine whether excessive access, such as write access, is given. If exported directories have excessive permission, anyone may be able to read and modify the data, These directories should normally be read-only.<p>
  <li><B>/etc/profile</B> - The system profile is applied to all users and should be reviewed to determine that no incorrect settings have been applied for all users (i.e., a <B>umask</B> with excessive permissions).<p>
  <li><B>/etc/ftpusers</B> - In most systems, not all users need to use <B>ftp</B>. Users in this file are restricted from using this service. All system accounts, users who do not need <B>ftp</B>, and the "root" account should be in this file. Using the root password with <B>ftp</B> sends it in clear text on the network and allows potential sniffing by an intruder.<p>
  <li><B>cron</B> files - Reviewing the use of <B>cron</B> may show evidence that an intruder has gained access to your system. Many intruders will modify <B>cron</B> jobs to perform some specific activity once they have compromised a system.<p>
  <li><B>sendmail.cf</B> - Check the <B>sendmail.cf</B> file to determine your configuration. Commands such as <B>vrfy</B> and <B>expn</B> in Sendmail should be turned off. Sendmail is a major weakness in many UNIX environments.<p>
  <li><B>sulog</B> - Review usage of the <B>sulog</B> to determine that only valid users are using <B>su</B>. Users attempting to use <B>su</B> who are not authorized to do so indicate an intruder. You can remove most users access to the <B>su</B> command to further protect <B>su</B>. Direct login to the root account should be denied, and the usage of <B>su</B> forced. A program such as <B>sudo</B> could be used.<p>
</ul>
<B>Network Configuration Review</b><p>The network setting can be misconfigured to inadvertently allow access to your UNIX system. A review of which connections are configured/permitted and the monitoring of network connections is very important. Many systems fall to an intruder because of connections to unsecure or compromised machines. The following checks should be performed:<p>
<ul>
  <li>List <B>rpcinfo</B> - Checking the <B>rpcinfo</B> will tell you which RPC services are running. RPC services are known to have many weaknesses that can be compromised. Only necessary services should be used.<p>
  <li>Display <B>netstat -rn</B> - <B>netstat</B> will display network connections and routing tables. You should verify that these connections are all valid and correct. You may encounter routing problems if these are set up incorrectly.<p>
  <li>Check <B>tcpwrappers</B> - Check the restrictions on <B>tcpwrappers </B>if you are using it. It is easy to misconfigure <B>tcpwrappers</B> and allow unwanted access.<p>
  <li>Display <B>syslog.conf</B> - Review the <B>syslog.conf</B> file to determine how logging is taking place. If intruders compromise your system, they would normally review this file and change it to help hide their presence.<p>
</ul>
<B>Additional Requirements</b><p>The <B>sec-check</B> script included here is not intended to be all encompassing. Thus, several additional areas should be checked on a regular basis for a more complete view of the security status of your systems. We recommend the following as a minimal augmentation of the script.<p>
<B>Administration Review</b><p>Along with a review of the settings on the system, the administrative procedures need to be reviewed. The change control, system documentation, and maintenance procedures should be clearly defined and followed for the successful administration of the machine and the network. In a large environment with multiple administrators and systems, consistently documented administrative procedures and controls must be followed. Otherwise different administrative practices will be followed across systems, and weaknesses may be introduced into the environment.<p>
Corporate and system policies and procedures should also be reviewed. The system should adhere to defined policies and procedures, such as a written corporate security policy, an Internet security policy, or email policy. These policies should define usage of the system, services available, user training, user guidelines, and system configuration guidelines.<p>
<B>Penetration Testing</b><p>The script will perform an intrusive review of the internal setting of the system. Root access is required to run <B>sec-check</B>. To gain an understanding of how the machine looks to an outside intruder, a network scanning tool should be used against the system. There are several tools on the market that are considered scanning tools. These are executed against a given IP address without any special permission on the target device. Using available services on the machine and inherent weaknesses, these scanning tools attempt to determine if any available weaknesses exist on the target machine. These tools should be used as a part of a full diagnostic review of any UNIX system.<p>
<B>Solaris Tools</b><p>Solaris comes with several built-in options that can help with administration and security issues mentioned in the script, but beyond the script's functions. Using a combination of <B>sec-check</B> and these tools should greatly enhance the security and administration function of your system. These built-in options include:<p>
<ul>
  <li>PAM - The Pluggable Authentication module that allows you to plug in new authentication mechanisms, such as Kerberos.<p>
  <li>Admintool - This tool performs user, group, password, printers, serial ports, and software administration.<p>
  <li>ASET - Automated Security Enhanced Tool provides a mechanism for administration of security options. It does automated checks and can run in different levels (i.e., low, medium, and high).<p>
</ul>
<B>Next Steps</b><p>Once you have run the <B>sec-check</B> script and reviewed the output in detail, you need to fix any weaknesses found. It is very important to run a diagnostic tool on a periodic basis to ensure that your system weaknesses remain at a minimum over time.<p>
Real-time monitoring programs should be installed to continuously check your system for weaknesses and possible intrusion attempts. Commercial tools should be used if possible. There are a number of freeware utilities that can assist in monitoring the system as well.<p>
Most environments will have multiple UNIX operating systems running. This script can easily be enhanced to accommodate other operating system as well as adding more checks for system administration purposes. Most of the commands in the last four sections can be used on all UNIX environments. The first section can be replaced with checks specific to other operating systems such as AIX or HP-UX. <p>
<p>
<h1>About the Author</h1><p>
Gary and Dan are both managers in Ernst &amp; Young's Information Security Services group specializing in UNIX and Internet security attack and penetration testing. They can be reached at gary.bahadur@ey.com and daniel.robertson@ey.com.</BODY>

<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>