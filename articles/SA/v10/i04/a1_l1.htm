<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v10, i04: Listing 1 Monitor script</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a1.htm">Article</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a1_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/2001/apr2001.tar"><b class=codeListing>apr2001.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <H1><b>Listing 1 </b><i>Monitor script</i></h1>
            <p> 
            <pre>#!/bin/sh
#
# Name:         /usr/local/sbin/monitor
# Author:       Leo Liberti
# Purpose:      To monitor IP activity on another host and if
#               it crashes, to take its place
# Source:       bash
# History:      000821  work started
# Usage:        /usr/local/sbin/monitor A [yes|no]
#
# install directory of monitor
BINDIR=/usr/local/lib/monitor/bin
# logfile directory
LOGDIR=/usr/local/lib/monitor/log
# this controls whether monitor exits after a ping fails or reenters
# main loop
EXITAFTERFAILURE=yes
# interval in seconds between pings
PINGINTERVAL=30

function pinghost() {
  ping -c 1 $1 &gt; /dev/null 2&gt;&amp;1
}
# parse command line
if [ "$1" == "" ]; then
        echo "$0: error: syntax: $0 &lt;hostname|IPaddr&gt; [yes|no]"
        exit 1
fi
HOST=$1
if [ "$2" != "" ]; then
        EXITAFTERFAILURE=$2
fi
# main loop
LOGF=$LOGDIR/monitor-$HOST
while true; do
        while pinghost $HOST
        do
          echo "monitor: $HOST: alive at `date "+%y%m%d%H%M%S"`" &gt;&gt; $LOGF
          sleep $PINGINTERVAL
        done

        # if we're here it means that host has not responded - take action
        echo "monitor: $HOST: NOT RESPONDING at `date "+%y%m%d%H%M%S"`" \ 
          &gt;&gt;$LOGF
        # execute appropriate action script
        if [ -x $BINDIR/$HOST-noping ]; then
          echo "monitor: $HOST: spawning script $HOST-noping" &gt;&gt; $LOGF
          $BINDIR/$HOST-noping &amp;
        fi
        if [ EXITAFTERFAILURE==yes ]; then
          echo "monitor: $HOST: exiting monitor"
          exit 1
        else
          echo "monitor: $HOST: continuing the monitoring"
        fi
done
exit 0


------------------------------------------------------------------------


#!/bin/sh
# the ``take action'' part of the scheme
apachectl graceful
ifconfig eth0:0 192.168.31.1 up</pre>
          </table></table><br>&nbsp;<br>

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
