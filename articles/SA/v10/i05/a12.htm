<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v10, i05: A Look at ngrep</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><a href="../../../../source/SA/2001/may2001.tar"><b class=codeListing>may2001.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <H1><img src="../../resource/netadmin.gif" width="150" height="150" align="right">A 
              Look at ngrep</h1>
            <p> <i>Ron McCarty</i>
            <p> Network troubleshooting often requires the use of a sniffer, and 
              many network administrators automatically reach for <b>tcpdump</b> 
              (<b>http://www.tcpdump.org/</b>), which is useful across many platforms. 
              With the increasing number of protocols supported on IP, administrators 
              often need to look further into the payload of packets to ensure 
              that applications or users are providing information expected by 
              the receiving IP stack.
            <p> <b>ngrep</b> is a sniffer than can be used like <b>tcpdump</b>, 
              and it provides the additional capability of "grepping" 
              the packet's payload for particular matches. The regular express 
              support of <b>ngrep</b> tries to support resembles the GNU version 
              of <b>grep</b>, which gives many advanced feature such as printing 
              lines after the matched expression.
            <p> <b>ngrep</b> is available at:
            <p> 
            <pre>
http://ngrep.sourceforge.net/
</pre>
            and requires <b>libpcap</b>, which is available at the <b>tcpdump</b> 
            Web site:
            <p> 
            <pre>
http://www.tcpdump.org/
</pre>
            <b> libpcap</b> is already on systems that have <b>tcpdump</b> installed. 
            Installation of <b>ngrep</b> is straightforward -- typically a 
            configure, make, and make install will have it up and running. Because 
            it uses <b>libpcap</b>, a wide range of interfaces and operating systems 
            are supported.
            <p> <b>ngrep</b>, like <b>tcpdump</b>, can be used to print packets 
              matching a particular protocol. For example, you can use the following 
              to print all UDP packets:
            <p> 
            <pre>
ngrep '' udp
</pre>
            or ICMP packets with:
            <p> 
            <pre>
ngrep '' icmp
</pre>
            Specific ports can be used. For example, the domain name system (DNS) 
            uses TCP or UDP ports 53, so:
            <p> 
            <pre>
ngrep '' port 53
</pre>
            will show all DNS requests, such as this request for <b>www.sysadminmag.com</b>:
            <p> 
            <pre>
U 192.168.1.100:1034 -&gt; 4.2.2.1:53
  :............www.samag.com.....
#
U 4.2.2.1:53 -&gt; 192.168.1.100:1034
  :............www.samag.com................................!.%.........
  ....A.ROOT-SERVERS.NET..............E.GTLD-SERVERS.X.............F.k..
  ...........J.k.............K.k.............A.k.............M.k........
  .....G.k.............C.k.............I.k.............B.k.............D
  .k.I.......o...)...i......}.....QE...............C........'&gt;....de....
  ....f...............BY...).&amp;.........*....re........"....).e..........
  ...............Y...$..........07....j................. ;
</pre>
            whereas <b>grep '' tcp port 23</b> will print <b>telnet</b> packets. 
            (To determine the appropriate ports, check <b>/etc/services</b>, or 
            consult the Internet Assigned Numbers Authority at: <b>http://www.iana.org/numbers.htm</b>.)
            <p> To troubleshoot Microsoft browsing traffic for the NT Domain BIGWORLD, 
              you can use:
            <p> 
            <pre>
ngrep '' port 138

U 192.168.1.101:138 -&gt; 192.168.1.255:138
  .......e...... EOFFENECEFFCDJCACACACACACACACAAA. ABACFPFPENFDECFCEPFHF
  DEFFPFPACAB..SMB%..............................(...................(.V
  .........9.\MAILSLOT\BROWSE....'..BIGWORLD........... @.....NUMBER8.
</pre>
            But to really take advantage of <b>ngrep</b>, just pick up the LILWORLD 
            traffic: 
            <pre>
ngrep 'LILWORLD' port 138

###################################
U 192.168.1.101:138 -&gt; 192.168.1.255:138
  .......e...... EOFFENECEFFCDJCACACACACACACACAAA. ABACFPFPENFDECFCEPFHF
  DEFFPFPACAB..SMB%..............................(...................(.V
  .........9.\MAILSLOT\BROWSE....'..LILWORLD........... @.....NUMBER9.
</pre>
            This could be very difficult to troubleshoot with <b>tcpdump</b> in 
            a larger network.
            <p> <b>Email</b>
            <p> The simple mail transport protocol (SMTP) is an ASCII-based protocol, 
              so <b>ngrep</b> can be useful for troubleshooting SMTP email. For 
              example, to monitor current delivery and print sender and recipients, 
              use:
            <p> 
            <pre>
ngrep -iq 'rcpt to|mail from' tcp port 25

T 192.168.1.254:1043 -&gt; 206.46.170.36:25 [AP]
  MAIL From:&lt;mccarty@somedomain.com&gt; SIZE=42..

T +63.769851 192.168.1.254:1043 -&gt; 206.46.170.36:25 [AP]
  RCPT To:&lt;ronald.mccarty@gte.net&gt;..

T 192.168.1.254:1043 -&gt; 206.46.170.36:25 [AP]
  RCPT To:&lt;ronald.mccarty@gte.net&gt;..
</pre>
            This may come in handy to identify the sender of the recent popular 
            mail viruses that read Outlook address books and send the virus to 
            other users.
            <p> Version 3 of the post office protocol (POP3) can also be tested 
              in much the same way as SMTP. For example, if it is possible that 
              the user is misspelling the user name:
            <p> 
            <pre>
ngrep 'user' port 110
<p>
T 192.168.1.100:1889 -&gt; 192.168.1.1:110 [AP]
  user test..
</pre>
            <b>ICMP</b>
            <p> Most troubleshooting of ICMP can be achieved with the <b>ping</b> 
              commands, but there are different implementations of <b>ping</b>. 
              For example, Microsoft operating systems fill the ICMP payload with 
              the alphabet, so you can determine whether a host that is <b>ping</b>ing 
              is actually a Windows machine with:
            <p> 
            <pre>
ngrep -q 'abcd' icmp

I 192.168.1.100 -&gt; 192.168.1.254 8:0
  ....abcdefghijklmnopqrstuvwabcdefghi
</pre>
            <b>Web</b>
            <p> Hypertext transport protocol (HTTP) is text based and shares all 
              kinds of information between the server and client. For example, 
              to determine the client application that the client host is running, 
              use:
            <p> 
            <pre>
ngrep -iq 'user-agent' tcp port 80
</pre>
            (HTTP actually calls for a <b>udp</b> version as well, but it has 
            never caught on.)
            <p> This particular case shows that the user is using lynx:
            <p> 
            <pre>
T 192.168.1.254:1065 -&gt; 64.4.43.7:80 [AP]
  GET / HTTP/1.0..Host: www.hotmail.com..Accept: text/html, text/plain,
  audio/mod, image/*, video/*, video/mpeg, application/pgp, application/
  pgp, application/pdf, message/partial, message/external-body, applicat
  ion/postscript, x-be2, application/andrew-inset, text/richtext, text/e
  nriched..Accept: x-sun-attachment, audio-file, postscript-file, defaul
  t, mail-file, sun-deskset-message, application/x-metamail-patch, text/
  sgml, */*;q=0.01..Accept-Encoding: gzip, compress..Accept-Language: en
  ..User-Agent: Lynx/2.8.3dev.18 libwww-FM/2.14....
</pre>
            Of course, the version of HTTP that is being used can be determined 
            by using "HTTP" as the search expression, or the server 
            being run using "SERVER" as the expression. Some attacks 
            on Web servers try to request documents with periods as the file name, 
            such as <b>../</b>. <b>ngrep</b> can also check for these:
            <p> 
            <pre>
ngrep '../'

T 192.168.1.100:1103 -&gt; 10.1.1.1:80 [AP]
  GET /../ HTTP/1.0..Host: www.somedomain.to..Accept: text/html, text
  /plain, audio/mod, image/*, video/*, video/mpeg, application/pgp, appl
  ication/pgp, application/pdf, message/partial, message/external-body,
  application/postscript, x-be2, application/andrew-inset, text/richtext
  , text/enriched..Accept: x-sun-attachment, audio-file, postscript-file
  , default, mail-file, sun-deskset-message, application/x-metamail-patc
  h, text/sgml, video/mpeg, image/jpeg, image/tiff, image/x-rgb, image/p
  ng, image/x-xbitmap, image/x-xbm, image/gif..Accept: application/posts
  cript, */*;q=0.01..Accept-Encoding: gzip, compress..Accept-Language: e
  n..User-Agent: Lynx/2.8.4dev.7 libwww-FM/2.14....
</pre>
            This same technique can be used to determine what an <b>ftp</b> server 
            is reporting as its version:
            <p> 
            <pre>
ngrep '220' port 21

T 209.155.82.18:21 -&gt; 192.168.1.100:1105 [AP]
  220 wcarchive.cdrom.com FTP server (Version DG-4.0.62 974200128) ready
</pre>
            or to investigate Secure Shell, which can be tough to debug during 
            the first install:
            <p> 
            <pre>
ngrep 'SSH' port 22

T 192.168.1.1:22 -&gt; 192.168.1.100:1023 [AP]
  SSH-1.5-1.2.27.
##
T 192.168.1.100:1023 -&gt; 192.168.1.1:22 [AP]
  SSH-1.5-OpenSSH_2.1.1.
</pre>
            <b>Neat Features of ngrep</b>
            <p> Some of the nicer features of <b>ngrep</b> are obvious to systems 
              administrators, but may be less obvious to network administrators 
              with light sys admin duties. Let's look at some of them:
            <p> 
            <p> <b>-A n</b> -- The <b>-A</b> feature prints out "n" 
              packets after the match. This could be useful, for example, to print 
              out several lines after the "to:" in the address header 
              of <b>smtp</b> to get a more complete picture of the header.
            <p> <b>-l</b> -- Sometimes it is necessary to pipe the output 
              of <b>grep</b> to another program for more processing. However, 
              normal <b>ngrep</b> behavior will seem sporadic when piped to the 
              other program because it first fills its buffer before printing 
              matching packets. By using the <b>-l</b>, the output will be printed 
              immediately as opposed to waiting for <b>ngrep</b>'s buffer 
              to fill before printing.
            <p> <b>-v</b> -- The <b>-v</b> will print all lines not matching 
              the expression. This is useful during initial troubleshooting where 
              a cause is not yet known, but you can assume it is not generated 
              by the traffic you are sending to the host from your remote host 
              while accessing the host. For example, if you <b>telnet</b> to the 
              host to start troubleshooting, use:
            <p> 
            <pre>
ngrep -v '' port 23
</pre>
            to see all the traffic but <b>telnet</b>.
            <p> <b>-d</b> -- The <b>-d</b> allows you to specify the device 
              you want to monitor. The complete path to the device name is not 
              required. Thus:
            <p> 
            <pre>
ngrep -d le0 ''
</pre>
            will listen to <b>le0</b> on a Solaris box.
            <p> <b>Summary</b>
            <p><b> ngrep</b>, like its cousin <b>tcpdump</b>, is handy for network 
              troubleshooting. With the addition of being able to search with 
              regular expressions, <b>ngrep</b> is worth adding to your network 
              tool box. Weighing in at a little over 100 K, it is also worth considering 
              for your emergency and network floppy distributions.
            <p> <i>Ronald McCarty received his bachelor's degree in Computer 
              and Information Systems at the University of Maryland's international 
              campus at Schwaebisch Gmuend, Germany. After completing his degree, 
              Ronald McCarty started his network career as network administrator 
              at the Schwaebisch Gmuend campus. Ronald McCarty works for Lucent 
              Technologies as a senior systems engineer on a customer team responsible 
              for a major telecommunications carrier. He spends his free time 
              with his two best friends in the world: his daughter, Janice, and 
              his wife, Claudia. Ron can be reached at: <b>ronald.mccarty@gte.net</b>.</i>
          </table></table><br>&nbsp;<br>

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
