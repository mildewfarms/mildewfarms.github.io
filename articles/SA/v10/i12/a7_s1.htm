<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v10, i12: Security Measures and Resources</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a7.htm">Article</a></span></td>
		<td><span class="navbarLink">Sidebar </span></td>
		<td><a href="../../../../source/SA/2001/dec2001.tar"><b class=codeListing>dec2001.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <H1>Security Measures and Resources</h1>
            <p> <b>Linux Security</b>
            <p> Several of the daemons that provide Linux's NFS services provide 
              additional control lists through its internal inclusion of the tcp_wrapper 
              library, which uses the <b>/etc/hosts.allow</b> and <b>/etc/hosts.deny</b> 
              to create access control lists. A complete review of the tcp_wrapper 
              rules are beyond the scope of this article, but the basic rule is 
              a match is followed immediately with the <b>/etc/hosts.allow</b> 
              being checked first, and then <b>/etc/hosts.deny</b>. If no rule 
              is found, then the requested service will not be allowed. To get 
              around this last requirement and ensure very tight security, an:
            <p> 
            <pre>
ALL: All
</pre>
            can be added as the last entry in the <b>/etc/hosts.deny</b>. Then 
            the <b>/etc/hosts.allow</b> can be used to permit specific behavior. 
            For example, for this article, I used the following entries in <b>/etc/hosts.allow</b>:
            <p> 
            <pre>
lockd:192.168.1.0/255.255.255.0
mountd:192.168.1.0/255.255.255.0
portmap:192.168.1.0/255.255.255.0
rquotad:192.168.1.0/255.255.255.0
statd:192.168.1.0/255.255.255.0
</pre>
            This allows specific access to hosts before it provides application-level 
            access.
            <p> At the application level, the Linux <b>/etc/exports</b> file provides 
              control as well. The <b>/etc/exports</b> is made up of entries that 
              have the following format:
            <p> 
            <pre>
export directory {space} host|network(options)
</pre>
            The <b>export directory</b> is the directory that nfsd is allowed 
            to serve up when requested. The <b>host|network</b> is the host or 
            network that is allowed to access the exported file system, and the 
            options determine which limitations the nfsd applies to the share, 
            such as read only or user id mapping.
            <p> The following example is used to export <b>/home/mcwrite.net</b> 
              to the complete mcwrite.net domain in read-only mode:
            <p> 
            <pre>
/home/mcwrite.net    *.mcwrite.net(ro)
</pre>
            The <b>exports</b> man page gives some additional examples.
            <p> <b>Solaris NFS Security</b>
            <p> Solaris provides similar NFS security as Linux does with the parameters 
              identified as part of the <b>share</b> command with the <b>-o</b> 
              (for options) with the command.
            <p> For example, to allow <b>/export/mcwrite.net</b> to be mounted 
              read only by any host in the domain mcwrite.net, use:
            <p> 
            <pre>
#share -F nfs -o ro=.mcwrite.net /export/mcwrite.net
</pre>
            The man page for <b>share_nfs</b> gives a thorough overview of Solaris's 
            access control lists.
            <p> <b>Resources</b>
            <p> NFS and RPC has had their share of security holes. Generally, 
              NFS should not be used on the Internet, and holes should not be 
              poked through firewalls to all NFS access. Additionally, security 
              patches for RPC and NFS should be closely watched using multiple 
              sources of security information. Two popular sources are Bugtraq 
              and CERT. Bugtraq:
            <p> 
            <pre>
http://www.securityfocus.com
</pre>
            can be searched regularly or subscribed to. The CERT Coordination 
            Center:
            <p> 
            <pre>
http://www.cert.org/
</pre>
            is also a good source for security information. Although often not 
            as timely as other sources, the information provided is thorough and 
            avoids much of the sensational journalism of some security sites. 
        </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
