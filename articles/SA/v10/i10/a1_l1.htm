<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v10, i10: Listing 1 Sample implementation for the uptime utility (C)</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a1.htm">Article</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a1_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a1_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/2001/oct2001.tar"><b class=codeListing>oct2001.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <H1><b>Listing 1 </b><i>Sample implementation for the uptime utility 
              (C)</i></h1>
            <p> 
            <pre>
 1  #include &lt;stdio.h&gt;
 2  #include &lt;kstat.h&gt;
 3  #include &lt;unistd.h&gt;
 4  #include &lt;sys/param.h&gt;
 5   
 6  int
 7  main( int argc, char **argv ) {
 8     kstat_ctl_t   *pc;
 9     kstat_t       *pk;
10     kstat_named_t *pn;
11
12     long           hz;
13     ulong_t        clk_intr;
14     double         avenrun_1min;
15     double         avenrun_5min;
16     double         avenrun_15min;
17
18     ulong_t        dd;
19     ulong_t        hh;
20     ulong_t        mm;
21     ulong_t        ss;
22
23     hz = sysconf(_SC_CLK_TCK);
24     if ( !( pc = kstat_open() ) ) {
25        perror( "failed to open kstat" );
26        return -1;
27     }
28     if ( !( pk = kstat_lookup( pc, "unix", 0, "system_misc" ) ) ) {
29        perror( "failed to find system_misc" );
30        return -1;
31     }
32     if ( kstat_read( pc, pk, 0 ) &lt; 0 ) {
33        perror( "failed to read kstat" );
34        return -1;
35     }
36     pn = (kstat_named_t*)kstat_data_lookup( pk, "clk_intr" );
37     clk_intr      = pn-&gt;value.ul;
38     pn = (kstat_named_t*)kstat_data_lookup( pk, "avenrun_1min" );
39     avenrun_1min  = ( (double)pn-&gt;value.ul ) / FSCALE;
40     pn = (kstat_named_t*)kstat_data_lookup( pk, "avenrun_5min" );
41     avenrun_5min  = ( (double)pn-&gt;value.ul ) / FSCALE;
42     pn = (kstat_named_t*)kstat_data_lookup( pk, "avenrun_15min" );
43     avenrun_15min = ( (double)pn-&gt;value.ul ) / FSCALE;
44
45     dd = clk_intr / ( hz * 86400 ); clk_intr -= dd * hz * 86400;
46     hh = clk_intr / ( hz * 3600 );  clk_intr -= hh * hz * 3600;
47     mm = clk_intr / ( hz * 60 );    clk_intr -= mm * hz * 60;
48     ss = clk_intr / hz;
49
50     printf( "Up: %d day(s) %d hour(s) %d minute(s) %d second(s), ",
51        dd, hh, mm, ss );
52     printf( "load average: %.2f, %.2f, %.2f\n",
53        avenrun_1min, avenrun_5min, avenrun_15min );
54
55     kstat_close( pc );
56     return 0;
57  }</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
