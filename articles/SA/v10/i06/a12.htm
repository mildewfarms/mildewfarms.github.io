<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v10, i06: Tools Built to Sort Through Snort</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a12_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a12_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a12_f3.htm">Figure 3</a></span></td>
		<td><span class="navbarLink"><a href="a12_f4.htm">Figure 4</a></span></td>
		<td><a href="../../../../source/SA/2001/jun2001.tar"><b class=codeListing>jun2001.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <H1><img src="a12.gif" width="200" height="174" align="right">Tools 
              Built to Sort Through Snort</h1>
            <p> <i>Kristy Westphal</i>
            <p> Snort, the lightweight network intrusion detection system, is 
              already a great tool for any security-conscious network (see "Snort 
              -- A Look Inside," <i>Sys Admin</i>, September 2000). The 
              latest version of Snort, 1.7, has many new features above and beyond 
              1.6, including dynamic rules (rules that can turn on other rules), 
              statistical anomaly detection preprocessor, improved IP defragmentation 
              preprocessor, and a TCP stream reassembly preprocessor. New features 
              and functions are continuously added.
            <p> This article will examine four add-ons for Snort that assist the 
              Snort user in making logging and reading Snort data easier. The 
              add-ons include:
            <p> 
            <ul>
              <li> Logging alerts to a MySQL database 
              <li> Utilizing the Web GUI ACID as a live console for Snort data 
              <li> A Perl script that reports Snort data to Big Brother (a network 
                monitoring tool) 
              <li> SnortSnarf, another handy Perl script that converts your alerts 
                file to html pages. 
            </ul>
            Throughout the various tools mentioned, I am using the gcc as my compiler 
            on an HP-UX 10.20 server.
            <p> <b>Logging Snort to a MySQL Database</b>
            <p> The required ingredients for the MySQL/Snort recipe include the 
              latest version of MySQL (<b>http://www.mysql.com</b>), installed 
              before installing Snort. The version used in this article is 3.23.32. 
              There are security issues with versions of MySQL prior to 3.23.31. 
              If you have an older version, you may want to think about upgrading. 
              After I completed my installation, version 3.23.33 was released, 
              which fixed many of the security holes that existed in prior versions. 
              I recommend either upgrading or starting out with the latest version. 
              MySQL also has excellent documentation on their Web site that may 
              provide answers to issues not covered here.
            <p> You have a choice when installing MySQL -- either compile 
              it yourself or use a precompiled tarball available for various operating 
              systems. After much anguish of trying to compile on my HP-UX box, 
              I tried one of the binary tarballs for my OS. Before loading MySQL, 
              ensure that both a MySQL user and group exist on your system. Then, 
              install your MySQL distribution in your chosen method. In my case, 
              I took the precompiled binary and unzipped and untarred it into 
              a directory ($MYSQLDIR). Once complete, <b>cd</b> into the $MYSQLDIR/scripts 
              directory and run the <b>mysql_install_db</b> script. Run the following 
              commands to get MySQL owned by the proper person and running:
            <p> 
            <pre>
chown -R mysql $MYSQLDIR/mysql
chgrp -R mysql $MYSQLDIR/mysql
$MYSQLDIR/bin/safe_mysqld --user=mysql &amp;
</pre>
            To ensure that your database is running correctly, try the following 
            commands:
            <p> 
            <pre>
$MYSQLDIR/bin/mysqladmin version
$MYSQLDIR/bin/mysqladmin variables
</pre>
            These commands will tell you whether you can communicate with the 
            database. If you run into any problems here, I suggest consulting 
            the documentation at:
            <p> 
            <pre>
http://www.mysql.com
</pre>
            Please note that at this stage, your root user for the database has 
            no password. You can remedy this situation by issuing the following 
            command:
            <p> 
            <pre>
$MYSQLDIR/bin/mysqladmin -u root -p password 'new-password'
</pre>
            When it prompts you for a password, hit enter (because your original 
            password is blank), and then your password will be set. There are 
            other instructions to secure your database on the MySQL homepage, 
            and I recommend following them before proceeding. A final note on 
            MySQL initial installation -- don't forget to add it to your 
            startup scripts. The script you want to use is:
            <p> 
            <pre>
$MYSQLDIR/support-files/mysql.server
</pre>
            In my case, I copied it into the <b>/sbin/init.d</b> directory, then 
            made a link to it in the <b>/sbin/rc3.d</b> directory. (As always, 
            check your permissions to make sure the script is executable.)
            <p> Now that MySQL is running, you are ready to set up the database 
              to log Snort alerts. We will be using Snort 1.7 in order to be compatible 
              with ACID and MySQL. Snort 1.7 will log the full packet payload 
              in addition to the headers, which previously was not possible. There 
              are guidelines to using databases with Snort at:
            <p> 
            <pre>
http://www.incident.org/snortdb/
</pre>
            a site maintained by Jed Pickel, as well as in the README.database 
            file in the Snort distribution. These instructions cover how to log 
            to Oracle, unixodbc, and postgresql databases as well, so MySQL is 
            not your only choice. Per the <b>incident.org</b> site's excellent 
            instructions, the first step is to create the Snort database:
            <p> 
            <pre>
echo "CREATE DATABASE snort;" | mysql -u root -p
</pre>
            Then create a user with INSERT and SELECT privileges (other than root) 
            in the system's <b>/etc/passwd</b> file. Give them this privilege 
            once you have fired up the MySQL client:
            <p> 
            <pre>
$MYSQLDIR/bin/mysql
grant INSERT, SELECT on snort.* to kristyw@localhost;
</pre>
            In this case, my user's name is "kristyw".
            <p> At this point you need to create some tables for Snort to log 
              to. The collaborators of Snort have made this easy by providing 
              a script under their distribution's <b>contrib</b> directory 
              called <b>create_mysql</b>. You can run it from the Snort source 
              directory:
            <p> 
            <pre>
$MYSQLDIR/bin/mysql -D snort -u root -p &lt; ./contrib/create_mysql
</pre>
            We are ready to compile Snort! When you run the configure script, 
            in addition to any of the other options you want to use, make sure 
            you include <b>-with-mysql=$DBHOME</b>. Then the configure script 
            will know to test your installation and make sure that it works properly 
            with Snort, which you will see when it tests for the various databases, 
            and MySQL returns a "yes". Then proceed to <b>make</b> and 
            <b>make</b> <b>install</b> as normal.
            <p> Once this is done, you will need to configure your rules database 
              to include the database plugin. If you are upgrading, don't 
              forget to customize your ruleset to utilize your existing tweaks 
              and customizations. Download the latest ruleset from:
            <p> 
            <pre>
www.snort.org
</pre>
            If you are installing this for the first time, then you need to make 
            sure that you change the network options to fit your environment. 
            Specifically for this plugin, you will want to add an output rule 
            to your rules database. Generally, there are two ways to do this. 
            The first way is to update the <b>snort.conf</b> by unremarking and 
            customizing the output rule that specifies:
            <p> 
            <pre>
output database: log, mysql, user=kristyw dbname=snort host=localhost password=password encoding=hex detail=full
</pre>
            Where "log" is the type of output going to the database, 
            "Mysql" is the type of database, the "user" is 
            who will be inserting the data, name of the database, what host it 
            is on, password, "encoding" is what format to log in, and 
            "detail" is how much you would like to log.
            <p> The second way is to add this line to the single database file 
              that you have downloaded from the <b>snort.org</b> site. Then you 
              can start Snort and watch the logging take place! I started Snort 
              with the following options:
            <p> 
            <pre>
$SNORT_HOME/snort -D -c /$SNORT_HOME/rules.file -e -i /dev/diag/lan0
</pre>
            To check that data is actually getting into your database the way 
            you want it to, you can check the table contents with the following 
            MySQL commands. Enter the MySQL client:
            <p> 
            <pre>
$DBHOME/bin/mysql -u root -p -D snort
</pre>
            You will be prompted for a password.
            <p> Show the tables in the database:
            <p> 
            <pre>
mysql&gt; show tables;

+-----------------+
| Tables_in_snort |
+-----------------+
| data            |
| detail          |
| encoding        |
| event           |
| icmphdr         |
| iphdr           |
| opt             |
| sensor          |
| tcphdr          |
| udphdr          |
+-----------------+
10 rows in set (0.00 sec)
</pre>
            Show the data in the selected table:
            <p> 
            <pre>
mysql&gt; select * from event;

+-----+-----+-----------------------+---------------------+
| sid | cid | signature             | timestamp           |
+-----+-----+-----------------------+---------------------+
|   1 |   1 | IDS152 - Ping BSDtype | 2001-01-31 09:09:53 |
|   1 |   2 | IDS152 - Ping BSDtype | 2001-01-31 09:09:54 |
|   1 |   3 | IDS152 - Ping BSDtype | 2001-01-31 09:09:55 |
|   1 |   4 | IDS152 - Ping BSDtype | 2001-01-31 09:09:56 |
|   1 |   5 | IDS152 - Ping BSDtype | 2001-01-31 09:09:57 |

[snip]

|   1 |  30 | ICMP Unknown Type     | 2001-01-31 09:18:19 |
|   1 |  31 | ICMP Unknown Type     | 2001-01-31 09:28:19 |
|   1 |  32 | ICMP Unknown Type     | 2001-01-31 09:38:19 |
|   1 |  33 | ICMP Unknown Type     | 2001-01-31 09:48:19 |
</pre>
            Once you are satisfied with the setup of your database, you can either 
            leave it as is, or set up ACID, if you would like to have a front-end 
            console for Snort. You also have the option at this point to run the 
            <b>snortdb-extra</b> script, which adds some extra tables that the 
            original script does not include. The <b>snortdb-extra</b> script 
            can be found in the Snort <b>contrib</b> directory as a gzip file. 
            If you unzip the file and read it, it says to use it by running <b>zcat</b>. 
            This only works with compressed files, so you should first gunzip 
            it, then compress it, then run it by using the following:
            <p> 
            <pre>
zcat snortdb-extra | mysql -D snort -u root -p
</pre>
            I recommend adding these tables because they provide more depth in 
            the entries that you log to your database.
            <p> <b>ACID: Analysis Console for Intrusion Databases</b>
            <p> Now you have invested all this time and sweat into configuring 
              your Snort to log to a database, but without getting deeply imbedded 
              in SQL statements, how do you get any information out of it? That 
              is where ACID comes in. ACID is "a PHP-based analysis engine 
              to search and process a database of incidents generated by security-related 
              software such as IDSes and firewalls (e.g., Snort, ipchains -- 
              see Resources at end). ACID is also great for logging several disparate 
              sensors into one console. The extra ingredients needed for this 
              setup (in addition to Snort 1.7 and MySQL) are the Apache Web server 
              with PHP 4:
            <p> 
            <pre>
http://www.apache.org  
</pre>
            or:
            <p> 
            <pre>
http://www.php.net
</pre>
            ACID:
            <p> 
            <pre>
http://www.cert.org/acid/
</pre>
            or:
            <p> 
            <pre>
http://acidlab.sourceforge.net/
</pre>
            and ADODB v0.93+ if you are using ACID v.0.9.6b2+ (<b>php.weblogs.com/ADODB</b>). 
            For my installation, I am using Apache 1.3.17, php 4.0.4pl1, and ACID 
            0.9.6b1.
            <p> To get everything to work properly together, I found it best to 
              install these packages in the order suggested by the Apache README.configure 
              file (Apache, PHP, and ACID. You also need flex to complete this 
              install; it's also a requirement for Snort so if you are compiling 
              on the same server, then you should be set). There are other packages 
              required, depending on what you are doing overall with this distribution, 
              so be sure to read the README files closely. The steps to do this 
              are:
            <p> 
            <p> 1. Untar the Apache distribution (<b>$APACHEDIR</b>).
            <p> 2. <b>Cd</b> into this directory and run the configure script 
              (default installation goes to <b>/usr/local/apache</b>), using any 
              options you might need for your site, then <b>make</b> and <b>make 
              install</b>.
            <p> 3. Untar the PHP distribution in a separate directory (<b>$PHPDIR</b>).
            <p> 4. Configure PHP with <b>./configure -with-apache=path_to_apache 
              -with-mysql=/$MYSQLDIR</b>; <b>make</b>; and <b>make install</b>.
            <p> 5. For some reason, the correct <b>lib</b> file did not get copied 
              to my Apache directory during this process, so I manually copied 
              <b>/$PHPDIR/libs/libphp4.a</b> to <b>/$APACHEDIR/src/modules/php4</b>.
            <p> 6. Then, go back to the Apache directory and run <b>./configure 
              -activate-module=src/modules/php4/libphp4.a</b>.
            <p> 7. Fire up your Apache server with <b>/usr/local/apache/bin/ \<br>
              apachectl start</b> and make sure it starts up.
            <p> 
            <p> One hitch that I ran into on HP-UX was that Apache would not start 
              right away. After some digging through the Apache FAQ a bit, I discovered 
              that HP will not allow you to run a server like this with nobody/nogroup 
              as owner and group. I needed to create a WWW user (or whatever you 
              prefer), and a WWW group with WWW as a member. I changed my <b>httpd.conf</b> 
              file accordingly, and everything came up fine. Also, make sure that 
              the PHP plugins are unremarked in your <b>httpd.conf</b> file before 
              starting up the Apache server. The two lines to look for are:
            <p> 
            <pre>
AddType application/x-httpd-php  .php
AddType application/x-httpd-php-source  .phps
</pre>
            To set up ACID, untar the distribution in a designated place. I set 
            up a virtual host through Apache in order to reach the PHP files for 
            ACID. To do this, I turned once again to the <b>httpd.conf</b> file 
            and added near the end of the file:
            <p> 
            <pre>
&lt;VirtualHost Ipaddress&gt;
ServerAdmin mymail@mycompany.com
DocumentRoot $ACIDDIR
ServerName acid
ErrorLog /var/log/httpd/error-log
&lt;/VirtualHost&gt;
</pre>
            The ServerName can be whatever URL you would like to call it. I then 
            restarted the Apache server and went to my ACID URL, and up comes 
            the <b>acid_main.php</b> page. There is more configuration, however, 
            to properly point it to your database. Editing the <b>acid_conf.php</b> 
            file is in order, updating the following variables:
            <p> 
            <pre>
$alert_dbname: MySQL database name where the alerts are stored
$alert_host: host where the database is stored
$alert_port: port where the database is stored
$alert_user: username for the database
$alert_password: password for the username
</pre>
            See Figures 1 and 2 for snapshots of ACID.
            <p> After ACID is set up and running, you can use it for many things. 
              You can search for incidents based on specific criteria, or complex 
              combinations of criteria. ACID can also be used for alerting, statistical 
              analysis, and graphical reporting. Items like these (especially 
              reporting) help to show management why you have perimeter security 
              in place.
            <p> <b>Snort and Big Brother</b>
            <p> Say that you don't have the resources for the scenario that 
              we have just built utilizing a database, Snort, and an Apache/PHP 
              Web server. But you already have an Apache Web server running Big 
              Brother (a free, Web-based monitoring and reporting tool for networks 
              and servers) that runs all of your network monitoring. Snort to 
              Big Brother, written by Mattias Sandstrom, is the tool for you. 
              The Snort to Big Brother link is:
            <p> 
            <pre>
http://www.ffoff.org/~mattis/linux/snort2bb/
</pre>
            I am using <b>snort2bb-000831.tar.gz</b> for this article. Big Brother 
            can be found at:
            <p> 
            <pre>
http://bb4.com/
</pre>
            This section assumes that you already have Big Brother set up. (See 
            March 1997 and September 1998 issues of <i>Sys Admin</i> for articles 
            about Big Brother.)
            <p> Snort to Big Brother is a Perl script that parses your Snort log 
              and sends reports to Big Brother. Advantages to this include that 
              Big Brother can be set for a certain level of notifications and 
              then page you and update the central Big Brother console, which 
              gives a visual alert. The key ingredients to make this script work 
              include: your Snort machine, Perl v.500503 or later, and the Big 
              Brother client. For Perl, you will need the File::Tail module, which 
              needs the Time::HiRes module. Both modules can be downloaded at:
            <p> 
            <pre>
http://www.cpan.org/modules/index.html
</pre>
            The first issue to tackle is the Perl module installations. After 
            downloading the required modules (<b>Time-HiRes-01.20.tar.gz</b> and 
            <b>File-Tail-0.98.tar.gz</b>), gunzip and untar them in a secured 
            location:
            <p> 
            <pre>
Cd  /tmp
gunzip   Time-HiRes-01.20.tar.gz  ;   tar   xvf   ./Time-HiRes-01.20.tar
gunzip    File-Tail-0.98.tar.gz   ;   tar   xvf   ./File-Tail-0.98.tar

cd    Time-HiRes-01.20
perl   ./Makefile.pl
make
make test
make install
</pre>
            cd into the File-Tail-0.98 directory and repeat the same process.
            <p> Install the Big Brother client next to get your Snort box to talk 
              to the Big Brother server. First, add a <b>bb</b> user to your Snort 
              server. To do the client installation, there are two possibilities. 
              If your Big Brother server is running on the same platform as your 
              Snort box, then you can go into the Big Brother install directory 
              and run the bbclient script with the host name of your Snort server 
              -- <b>bbclient snortserver</b>. This will create a <b>tar</b> 
              file of the files that you will need to run the Big Brother client 
              on your Snort server. If, however, your Snort server runs on a separate 
              platform, then you will need to compile the Big Brother code on 
              this platform. To do so, download the latest code from <b>bb4.com</b>, 
              untar the distribution, <b>cd</b> into the install directory and 
              run <b>bbconfig $OSNAME</b> (where <b>$OSNAME</b> is the name of 
              the OS on which you are installing).
            <p> After a running through a brief and intuitive installation script, 
              you will need to <b>cd</b> into the <b>src</b> directory:
            <p> 
            <pre>
cd ../src
make; make install
</pre>
            Then, change the ownership of the Big Brother directory to be owned 
            by the <b>bb</b> user. Double check that the <b>bb-hosts</b> file 
            in your <b>etc</b> directory has the correct BBDISPLAY variable for 
            your Big Brother server.
            <p> Now we are ready to fix up the <b>snort2bb.pl</b> file to read 
              Snort alert files and to send reports to the Big Brother server. 
              Untar the <b>snort2bb-version.tar</b> in a directory, then <b>cd</b> 
              into the <b>snort2bb</b> directory. You need to edit the <b>snort2bb.pl</b> 
              script, specifically the <b>$bbhost</b> and <b>$localhost</b> variables 
              to point to the Big Brother server and the hostname of your Snort 
              server. You also need to make sure you change the <b>$snort_file</b> 
              and <b>$snort_file_type</b> variables. The former is the name of 
              the file to which Snort is logging alerts, and the latter is either 
              the default (which looks to <b>/var/log/secure</b>) or you can change 
              it to a 1 to indicate that the log is in the "-A" fast 
              option for Snort, you need to log Snort this way or <b>snort2bb</b> 
              will not work! I also had to modify the path for Perl as I had it 
              installed in <b>/opt/perl5/bin</b>, not <b>/usr/bin</b> as the script 
              mentions.
            <p> There are other options that you may want to tweak, specifically 
              the <b>$WARN</b> and <b>$PANIC</b> variables, which will tell Big 
              Brother when to notify you (either by pager or to the console). 
              After tweaking, you are ready to run the <b>snort2bb.pl</b> script. 
              If you experience problems, there is a verbose mode (using <b>-v</b>) 
              so that you can see what is beginning.
            <p> <b>Snortsnarf</b>
            <p> There is also a tool called Snortsnarf written by Jim Hoagland 
              and Stuart Staniford of Silicon Defense that helps sort through 
              Snort logs with relative ease. You can find Snortsnarf at:
            <p> 
            <pre>
http://www.silicondefense.com/snortsnarf/
</pre>
            Snortsnarf is essentially a Perl script that parses through your Snort 
            alert file and creates a clean set of html files that you can review 
            to see what is going on with your Snort sensor. It also includes links 
            to look-up hosts that cause source traffic through ARIN, RIPE, APNIC, 
            or Geektools, as well as links to the <b>whitehats.com</b> signature 
            database to obtain more information on the type of alert you are seeing. 
            See Figures 3 and 4 for a more detailed look at Snortsnarf.
            <p> Another great feature of Snortsnarf is that it is easy and quick 
              to set up. You will need Perl on your system, then download the 
              latest version (which was <b>SnortSnarf-011601.1.tar.gz</b> when 
              I wrote this). Gunzip and untar the distribution:
            <p> 
            <pre>
gunzip  SnortSnarf-011601.1.tar.gz;   tar  xvf   SnortSnarf-011601.1.tar
</pre>
            then grab your <b>snort.alert</b> file (put it wherever you would 
            like to keep a sizable amount of data) and run:
            <p> 
            <pre>
$PATHTOSNARF/snortsnarf.pl snort.alert
</pre>
            This will generate the necessary html files. Depending on how fancy 
            you want to get, you can open a browser local to the snortserver and 
            then open up the <b>index.html</b> file and be on your way. I set 
            up a virtual server on an existing Apache Web server on the network. 
            I wrote a script to grab the previous day's alert file, delete 
            the old html files, run Snortsnarf, and then check my Web site. This 
            approach has made it easier to read the Snort alerts and understand 
            exactly what I am being hit with. It also helps weed out rules that 
            may be causing a lot of false positives, or that you don't necessarily 
            want to track, so you can remove them.
            <p> To summarize, the Snort project has really grown. Not only in 
              having more rich features itself, but also in additional projects 
              that can assist you in making sense of your data. There are numerous 
              tools that were not mentioned here, and the best source to find 
              something that would work for you is the <b>snort.org</b> site. 
              It is updated constantly with the latest accompaniments for Snort. 
              The other key source of information is the Snort users mailing list, 
              which can be joined on the <b>snort.org</b> site. This list is maintained 
              by Martin Roesch and the key Snort developers. The information gained 
              through this list is invaluable and often not documented anywhere 
              else.
            <p> <b>Resources</b>
            <p> <b>http://acidlab.sourceforge.net/</b> -- ACID readme and 
              homepage
            <p> <b>http://www.snort.org</b>
            <p> <b>http://www.incident.org/snortdb/</b>
            <p> <b>http://www.bb4.com</b>
            <p> <b>http://www.ffoff.org/~mattis/linux/snort2bb/</b>
            <p> <b>http://www.silicondefense.com/snortsnarf/</b>
            <p> <i>Kristy Westphal is a versatile network administrator, skilled 
              in troubleshooting and process analysis. She is knowledgeable in 
              UNIX and NT, as well as project management and security/disaster 
              recovery planning with more than 7 years of experience in the IS 
              field. She can be reached at: <b>ckwestphal@home.com</b>.</i>
          </table></table><br>&nbsp;<br>

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
