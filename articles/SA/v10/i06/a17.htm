<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v10, i06: Automatic UNIX Documentation with unixdoc</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a17_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a17_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a17_f3.htm">Figure 3</a></span></td>
		<td><a href="../../../../source/SA/2001/jun2001.tar"><b class=codeListing>jun2001.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <H1>Automatic UNIX Documentation with unixdoc</h1>
            <p> Roman Marxer
            <p> There's no need to spend days documenting your servers. I've 
              written a program that can help. unixdoc collects all the configuration 
              files and other information about your computers into an HTML file 
              and sends it to a display server where it can be viewed with a browser. 
              It works on Solaris 2.6/7/8 and on HP-UX 10.20. On the display server, 
              you can see an overview page with all your systems as shown in Figure 
              1. By selecting a computer, the unixdoc HTML page of this computer 
              will be displayed as shown in Figure 2.
            <p> The unixdoc HTML file of a Solaris computer consists of the following 
              18 sections:
            <p> 
            <p> 1. Hardware<br>
              2. Eeprom<br>
              3. Kernel<br>
              4. Networking<br>

              5. Software<br>
              6. Nameservices<br>
              7. Bootup<br>
              8. Disk<br>
              9. Disk Hardware<br>
              10. Users<br>
              11. dmesg<br>
              12. Printers<br>
              13. Cron<br>
              14. Rhosts<br>
              15. Quota<br>
              16. Syslog<br>
              17. Xntpd<br>
              18. Sendmail
            <p> The information in these sections consists of either <b>config</b> 
              files or the output of a command. With unixdoc, it is easy to compare 
              the configuration of two servers. You just have to open the two 
              unixdoc HTML pages of the servers and compare the content, section 
              after section. You don't have to do a login on the two servers, 
              or to remember all those commands to display the configuration. 
              I find subsection 4.1.1 <b>ifinfo</b> helpful, because it provides 
              a good overview of all the network interfaces (speed, mode, etc.). 
              (Subsection 4.1.1 is shown in Figure 3.) The information in this 
              subsection is very useful when verifying the speed/mode settings 
              between your switches and servers. An example of the entire unixdoc 
              HTML page can be found at:
            <p> 
            <pre>
http://www.net.li/article
</pre>
            <b>Installation and Configuration</b>
            <p> unixdoc consists of two parts -- the client part and the server 
              part. The client part is responsible for creating the documentation 
              and sending it to the display server by email. The server part is 
              installed on the display server. The display server is responsible 
              for collecting the emails and putting them on the Web. I will first 
              describe the client software and its configuration, and then the 
              server software and its configuration.
            <p> <b>Client Software</b>
            <p> The client software is in package format and is available for 
              Solaris 2.6/7/8 and HP-UX 10.20. The package is called <b>RTCdoc.pkg</b> 
              for the Solaris version, and <b>RTCDOC.DEPOT</b> for the HP-UX version. 
              It installs in <b>/opt/RTCdoc</b> on Solaris, and in <b>/opt/rtcdoc</b> 
              on HP-UX. In this article, I will describe the Solaris version; 
              the HP-UX version is similar. To install the software, do:
            <p> 
            <pre>
pkgadd -d RTCdoc.pkg (on solaris)
swinstall -s /tmp/RTCDOC.DEPOT (on hpux)
</pre>
            Remember to use absolute pathnames with <b>swinstall</b>. This installs 
            the necessary software and a crontab entry, which will launch the 
            documentation script. To establish the client configuration, you must 
            perform two steps. First, you must put the email address of the Web 
            server into the configuration file <b>/opt/RTCdoc/etc/makesuninfo.conf</b>:
            <p> 
            <pre>
SERVERMAIL=suninfohtml@put.your.webserver.name.here
</pre>
            The email is described later in the display server section. The second 
            step is to put the following lines at the beginning of the <b>/etc/hosts</b> 
            file:
            <p> 
            <pre>
#Beschreibung: the description of the server
#Seriennummer: 3MX86
#
# internet host table
</pre>
            The first line is the description of the computer, and the second 
            line is the serial number of the computer. The description will be 
            displayed at the overview page of the display server. The serial number 
            is useful if you have to call the support line.
            <p> What does the software do? The documentation script is started 
              by <b>cron</b> at 3 a.m. on all computers where you have it installed. 
              The documentation script creates the documentation in two files 
              -- one in ASCII format and the other in HTML format. The ASCII 
              file is saved on the local computer in <b>/opt/RTCdoc/log/&lt;hostname&gt;.log</b>. 
              The last 30 copies are kept there. The HTML file is also saved on 
              the local computer in <b>/opt/RTCdoc/log/index.html</b>. The HTML 
              file is then sent to the central display server, where it is put 
              in the Web space.
            <p> <b>Server Part</b>
            <p> In this section, I will describe the software for the display 
              server, how it works, and the configuration of the software. The 
              software for the display server is in <b>tar</b> format and is called 
              <b>server.tar</b>. It consists of two parts -- the first part 
              is the script that takes the email and puts it into the Web space, 
              and the second part displays the overview on the Web server. For 
              the display server, you need a computer with Sendmail, Perl, and 
              a Web server software with php3 support (see <b>http://www.php.net</b>). 
              I use a Solaris 2.6 with Apache.
            <p> <b>How It Works</b>
            <p> The first script takes the file from the email and saves it in 
              the documentation directory. The name of the file is the hostname 
              of the documented computer, which was sent in the subject of the 
              email messages. Now, if you point your browser to the php3 HTML 
              file on the display server, it reads all the descriptions in the 
              directory and displays an overview of all computers with their descriptons. 
              On this page, you can click on a computer to see its documentation.
            <p> Three steps have to be performed for the display server:
            <p> 
            <p> 1. Untar the <b>server.tar</b> in <b>/export</b> on your display 
              server.
            <p> 2. Put the following entries in the <b>/etc/aliases</b> file and 
              launch the <b>newaliases</b> command:
            <p> 
            <pre>
suninfohtml: "|/export/infosrv/bin/sunmailhtml"
hpinfohtml:  "|/export/infosrv/bin/hpmailhtml"
</pre>
            3. Web server <b>documentroot = /export/infosrv/http</b>.
            <p> 4. Make sure the directory <b>/export/infosrv/http/sunbeschreibung</b> 
              and <b>hpbeschreibung</b> are writeable to the mail user (<b>chown 
              mail *beschreibung</b>).
            <p> <b>Advanced Configuration of the Display Server</b>
            <p> If you have more information for each computer in HTML format, 
              or figures of the computers in image format, you can put these documents 
              on the display server. If you put the HTML documents in <b>/export/infosrv/http/sunspcl/&lt;computer 
              name&gt;/index.html</b> on the display server, a link will appear 
              on the overview page pointing to the document.
            <p> Create a directory for each computer on the display server as 
              following:
            <p> 
            <pre>
/export/infosrv/http/images/&lt;computer name&gt;
</pre>
            You must replace the "&lt;computer name&gt;" expression 
            with the name of your computers. The directories and filenames have 
            to be written in small letters.
            <p> <b>Security Concerns</b>
            <p> The documentation of your servers is now on the Web. From a security 
              point of view, you must protect this information. You can do this 
              by configuring the use of a username/password for the page access. 
              Add the following lines in the <b>httpd.conf</b> file of your Apache 
              Web server. This allows only the unixdoc user to access the unixdoc 
              Web pages.
            <p> 
            <pre>
&lt;Directory /export/infosrv/http&gt;
AuthType Basic
AuthName admin
AuthUserFile /etc/httpd/users
require user unixdoc
&lt;/Directory&gt;
</pre>
            To set up the unixdoc user, enter the following command, which will 
            prompt you for a password:
            <p> 
            <pre>
# htpasswd -c /etc/httpd/users unixdoc
New password:
Re-type new password:
Adding password for user unixdoc
</pre>
            After restarting your Web server, you can only access the page by 
            providing the username and password.Other security concerns focus 
            on the unixdoc HTML file transmission from the client to the display 
            server. For the transmission, you don't need any <b>rhosts</b> 
            entry on either side. You don't even need a direct connection 
            between the client and the display server. As long as the client reaches 
            the display server by email, everything is fine because the client 
            sends the unixdoc HTML file by email. For example, if you have a computer 
            in a DMZ and if you don't allow any direct connection to your 
            display server, just configure your Internet mailserver as the default 
            mail relay on your DMZ computer. The DMZ computer will send the email 
            to the gateway, which will send it to the display server. As explained 
            previously, the way the client sends the unixdoc HTML files to the 
            display server is very flexible and opens no security hole.
            <p> It is important to remember that the information displayed by 
              the unixdoc display server is exactly the kind of detailed system 
              data that an Internet intruder may be looking for. You must take 
              every precaution to ensure that the display server and any related 
              unixdoc files are well protected from attack. Password protection 
              is only part of that security. The display server should not be 
              accessible from the Internet and should only be used behind a secure 
              firewall. Also, make sure the display server is configured securely 
              and contains the latest Apache patches. unixdoc HTML files and other 
              related files on the clients should also receive appropriate protections.
            <p> <b>Conclusion</b>
            <p> I wrote unixdoc a year ago at my job as UNIX systems administrator. 
              We have more than 150 UNIX servers, and unixdoc was very useful 
              for debugging. A future release will incorporate the following improvements:
            <p> 
            <ul>
              <li> View of the last 30 versions on the Web page 
              <li> Linux support 
              <li> Rearrangements of the index
            </ul>
            The software can be found at:
            <p> 
            <pre>
http://www.net.li/article
</pre>
            <i>Roman Marxer lives in Bern, Switzerland. He received a computer 
            science degree from the University of Fribourg, Switzerland, in 1996. 
            When not climbing the mountains, he is working as a UNIX systems administrator 
            at Real-Time Center Bern. He can be reached at: <b>roman@net.li</b>.</i>
        </table></table><br>&nbsp;<br>

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
