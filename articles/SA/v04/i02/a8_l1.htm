<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v04, i02: Listing 1: lptek, a frontend to the lp or lpr spooler command</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a8.htm">Article</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><span class=navbarLink><a href="a8_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a8_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a8_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a8_s1.htm">Sidebar 1</a></span></td>
		<td><span class=navbarLink><a href="a8_t1.htm">Table 1</a></span></td>
		<td><a href="../../../../source/SA/1995/mar95.tar"><b class=codeListing>mar95.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1: lptek, a frontend to the lp or lpr spooler command</H1><p>
<PRE>
#!/opt/bin/perl
#
# Example 1 (lptek)
#
# This is a frontend to the lp or lpr spooler command.
# Depending on the command line options, various small
# PostScript files are spooled ahead of the actual
# print job to set options on the printer itself. This
# script was written for use with a Tektronix Phaser III
# PXi color printer, but can be modified to work with
# any PostScript printer.
#
# See the info file for documentation. (Available on
# ftp.cps.msu.edu:/pub/prip/lees/sysadmin/printing.)
#
#-----------------------------------------------------
# John Lees, Systems Analyst, Lab Manager
# Pattern Recognition and Image Processing Laboratory
# Department of Computer Science, A714 Wells Hall,
# East Lansing, Michigan 48824-1027  USA
# lees@cps.msu.edu, http://web.cps.msu.edu/prip
#  M i c h i g a n   S t a t e   U n i v e r s i t y
#-----------------------------------------------------
# Copyright 1994 by the Board of Trustees of Michigan
# State University and made available according to the
# provisions of the Free Software Foundation's GNU
# General Public License. The GPL is available by
# anonymous ftp from prep.ai.mit.edu in the file
# /pub/gnu/COPYING-2.0, or from ftp.cps.msu.edu in
# the file /pub/prip/lees/sysadmin/GPL.
#-----------------------------------------------------
chop($date = `date`);
chop($host = `uname -n`);
$user = getlogin;
# ostype is a local script, available on ftp.cps.msu.edu
chop($os = `/bin/ostype`);
# Software supplied with printer.
$P = '/opt/tektronix/PS';

require &quot;getopts.pl&quot;;
Getopts('P:bc:ehq:s:');

# We must have access to the PostScript files to prepend
# to set printer options.
if (! -d $P ) {
die &quot;Cannot access $P. Send mail to manager.\n&quot;;
}

# Help message:
if ($opt_h) {
print 'Version 22 Sep 1994. Usage: lptek [OPTIONS]
[FILES]
Options for Tektronix Phaser III PXi color PostScript
printer:
-P&lt;P&gt; send to printer &lt;P&gt; (to stdout by default).
Overrides the TEKPS environment variable.
-c&lt;C&gt; where &lt;C&gt; is one of:
b   adjust blue
c   CMYK2CMY adjustment to dark colors
d   simulate display (RGB) colors (default)
n   no adjustment to bitmaps
-q&lt;Q&gt; where &lt;Q&gt; is one of:
s   standard quality color
e   enhanced quality color
p   premium quality color (default)
-s&lt;S&gt; where &lt;S&gt; is one of:
50   50 line 45 degree halftone screen
60   60 line 54 degree halftone screen
80   80 line 33 degree halftone screen
f    Finepoint sharpening halftone (default)
Use &quot;info printing m printers&quot; for complete information.
exit;
}

# Figure out whether we are sending this to the printer or
# to stdout and set up accordingly. If there is no -P option,
# check for TEKPS environment variable.
if (! $opt_P) {
if ($ENV{'TEKPS'}) {
# Sending to a printer.
$opt_P = $ENV{'TEKPS'};
} }
if ($opt_P) {
if ($os eq 'SunOS-4') {
open(LP, &quot;| lpr -P$opt_P&quot;) ||
die &quot;Cannot open pipe to printer \&quot;$opt_P\&quot;.\n&quot;;
}
else {
open(LP, &quot;| lp -d$opt_P&quot;) ||
die &quot;Cannot open pipe to printer \&quot;$opt_P\&quot;.\n&quot;;
} }
else {
# Make stdout unbuffered.
$opt_P = 'stdout';
select((select(STDOUT), $| = 1)[0]);
open(LP, '&gt;-');
}

# For the accounting record:
$options = &quot;$opt_P,&quot;;
$options .= $opt_b ? ' -b' : '';
$options .= $opt_c ? &quot; -c$opt_c&quot; : '';
$options .= $opt_e ? ' -e' : '';
$options .= $opt_q ? &quot; -q$opt_q&quot; : '';
$options .= $opt_s ? &quot; -s$opt_s&quot; : '';

#--- Color adjustment.
# b   adjust blue
# c   CMYK2CMY adjustment to dark colors
# d   simulate display colors
# n   no adjustment to bitmaps
if ($opt_c) {
if (index(&quot;bcdn&quot;, $opt_c) &lt; 0) {
print STDERR &quot;\&quot;-c$opt_c\&quot; is invalid, ignoring.\n&quot;;
}
else {
$C = substr($opt_c,0,1);
} }

$F = &quot;$P/display.ps&quot;;
COLOR: {
($C eq &quot;b&quot;) &amp;&amp; ($F = &quot;$P/blueadj.ps&quot;, last COLOR);
($C eq &quot;c&quot;) &amp;&amp; ($F = &quot;$P/cmyk2cmy.ps&quot;, last COLOR);
($C eq &quot;d&quot;) &amp;&amp; ($F = &quot;$P/display.ps&quot;, last COLOR);
($C eq &quot;n&quot;) &amp;&amp; ($F = &quot;$P/noimage.ps&quot;, last COLOR);
}
open(F, &quot;$F&quot;) ||
die &quot;Could not open $F\n&quot;;
while (&lt;F&gt;) {
print LP;
}

#--- Disable black substitution.
$F = &quot;$P/blacksub.ps&quot;;
if ($opt_b) {
$F = &quot;$P/noblksub.ps&quot;;
}
open(F, &quot;$F&quot;) ||
die &quot;Could not open $F\n&quot;;
while (&lt;F&gt;) {
print LP;
}

#--- Install extended error handler.
if ($opt_e) {
$F = &quot;$P/tekehand.ps&quot;;
open(F, &quot;$F&quot;) ||

die &quot;Could not open $F\n&quot;;
while (&lt;F&gt;) {
print LP;
} }

#--- Quality.
# d   draft quality black &amp; white
# s   standard quality color (default)
# e   enhanced quality color
# p   premium quality color
if ($opt_q) {
if (index(&quot;dsep&quot;, $opt_q) &lt; 0) {
print STDERR &quot;\&quot;-q$opt_c\&quot; is invalid, ignoring.\n&quot;;
}
else {
$Q = substr($opt_q,0,1);
} }

$F = &quot;$P/premium.ps&quot;;
QUALITY: {
($Q eq &quot;d&quot;) &amp;&amp; ($F = &quot;$P/draft.ps&quot;, last QUALITY);
($Q eq &quot;s&quot;) &amp;&amp; ($F = &quot;$P/standard.ps&quot;, last QUALITY);
($Q eq &quot;e&quot;) &amp;&amp; ($F = &quot;$P/enhanced.ps&quot;, last QUALITY);
($Q eq &quot;p&quot;) &amp;&amp; ($F = &quot;$P/premium.ps&quot;, last QUALITY);
}
open(F, &quot;$F&quot;) ||
die &quot;Could not open $F\n&quot;;
while (&lt;F&gt;) {
print LP;
}

#--- Halftone screen.
#  50   50 line 45 degree halftone screen
#  60   60 line 54 degree halftone screen
#  80   80 line 33 degree halftone screen
#  f    Finepoint sharpening halftone
if ($opt_s) {
if (index(&quot;506080f&quot;, $opt_s) &lt; 0) {
print STDERR &quot;\&quot;-s$opt_s\&quot; is invalid, ignoring.\n&quot;;
}
else {
$S = substr($opt_s,0,2);
} }

$F = &quot;$P/finepnt.ps&quot;;
SCREEN: {
($S eq &quot;50&quot;) &amp;&amp; ($F = &quot;$P/adobescr.ps&quot;, last SCREEN);
($S eq &quot;60&quot;) &amp;&amp; ($F = &quot;$P/screen60.ps&quot;, last SCREEN);
($S eq &quot;80&quot;) &amp;&amp; ($F = &quot;$P/screen80.ps&quot;, last SCREEN);
($S eq &quot;f&quot;) &amp;&amp; ($F = &quot;$P/finepnt.ps&quot;, last SCREEN);
}
open(F, &quot;$F&quot;) ||
die &quot;Could not open $F\n&quot;;
while (&lt;F&gt;) {
print LP;
}

#----------
# At this point we are done prepending PostScript code
# and are ready to tack on the file (or stdin).
#----------
$first = 1;
$pages = 1;

# Files or stdin?
if (@ARGV &gt; 0) { # file(s)
-f $ARGV[0]
|| die &quot;Cannot open input file \&quot;$ARGV[0]\&quot;.\n&quot;;
$files = join(' ', @ARGV);
open(INPUT, &quot;cat $files |&quot;);
}
else { # stdin
open(INPUT, '-');
}

# Now read the print job.
while (&lt;INPUT&gt;) {
if ($first) {
/^%!/
|| die &quot;Not PostScript!\n&quot;;
$first = 0;
}
/^%%Pages:\s([0-9]*)$/ &amp;&amp; do {
$pages = $1;
};
print LP;
}
close INPUT;
close LP;

#----------
# Try to do accounting.
#----------
open(ACC,
&quot;&gt;&gt;/home/pixel/u40/lees/Cron/Pac/Acct/pripTekPS&quot;)
&amp;&amp; do {
printf(ACC &quot;%7.2f %s:%s - %s  %s\n&quot;,
$pages, $host, $user, $date, $options);
};
close ACC;

#----------
# Done.
exit 0;
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
