<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v04, i06: Listing 3: dskmon.ksh--Script for filesystem space monitoring</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a2.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a2_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a2_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a2_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a2_l1.htm">Listing 1</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a2_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink>Listing 3</span></td>
		<td><span class=navbarLink><a href="a2_l4.htm">Listing 4</a></span></td>
		<td><span class=navbarLink><a href="a2_l5.htm">Listing 5</a></span></td>
		<td><span class=navbarLink><a href="a2_l6.htm">Listing 6</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a2_l7.htm">Listing 7</a></span></td>
		<td><span class=navbarLink><a href="a2_l8.htm">Listing 8</a></span></td>
		<td><span class=navbarLink><a href="a2_l9.htm">Listing 9</a></span></td>
		<td><span class=navbarLink><a href="a2_l10.htm">Listing 10</a></span></td>
		<td><a href="../../../../source/SA/1995/nov95.tar"><b class=codeListing>nov95.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 3: dskmon.ksh--Script for filesystem space monitoring</H1><p>
<PRE>
#!/bin/ksh
#===================================================
# &quot;@(#)dskmon.ksh&quot;
#
# Checks filesystems and logs any that exceed the
# specified percentage used. There are 2 limits
# provided, the low file limit and the high file
# limit.
# Separate configuration parameters can be set for
# each of the limits.
#
# Author :
#       Ravindra Nemlekar and Jeffrey Soto
#
#===================================================

BINDIR=/usr/local/admin/sysmon
BASEDIR=/usr/local/admin/sysmon
CONDITION_NAME=Condition.FILE_SYSTEM_FULL
CONDITIONDIR=$BASEDIR/Condition.FILE_SYSTEM_FULL
# Pick up the Condition specific data
if [ -d $BASEDIR/config.$CONDITION_NAME ] ; then
CONFIGDIR=$BASEDIR/config.$CONDITION_NAME
else
CONFIGDIR=$BASEDIR
fi
SERVER_LIST=$CONFIGDIR/monlist
tempfile=/tmp/dskmon.$$
umask 0

touch $tempfile

cd $BASEDIR/hosts
for server in `cat &quot;$SERVER_LIST&quot; | grep -v \#`
do
# Process machine only if it is present in
# the master list.
$BASEDIR/check_in_master_list.ksh $server \
$BASEDIR/MASTER_LIST
if [ 0 -ne $? ] ; then
continue # Ignore this host
fi
# Check if the server is reachable
$BINDIR/check_alive.ksh $server
if [ &quot;$?&quot; != 0 ]
then
# Server cannot be rsh'ed. Don't proceed !!
continue
fi  # Check the filesystems
if [ 4 = &quot;$(uname -r | cut -c1)&quot; ] ; then
# SunOS 4.x
rsh -n $server df -t 4.2 | awk '{ \
printf(&quot;%s:%s:%s:%d\n&quot;, $1, $5, $6, NR) }' &gt; $tempfile
else
# Solaris
rsh -n $server df -k | awk \
'{ printf(&quot;%s:%s:%s:%d\n&quot;, $1, $5, $6, NR) }' \
&gt; $tempfile
fi
CONFIGS=/dev/null
# Read this for each host so that each
# one gets the initialized parameters
if [ -f $BASEDIR/config.generic ] ; then
# Read the global file first
. $BASEDIR/config.generic
fi
if [ -f $BASEDIR/config.Condition.\
FILE_SYSTEM_FULL/config.generic ] ; then
# read the condition specific global file
. $BASEDIR/config.Condition.\
FILE_SYSTEM_FULL/config.generic
fi
# Global level Configuration for each filesystem
if [ -f $BASEDIR/config.Condition.\
FILE_SYSTEM_FULL/config.filesystems ] ; then
CONFIGS=&quot;$BASEDIR/config.Condition.\
FILE_SYSTEM_FULL/config.filesystems $CONFIGS&quot;
fi
# Low water mark for filesystem full
if [ -f $BASEDIR/config.Condition.\
LOW_FILE_LIMIT/config.generic ] ; then
. $BASEDIR/config.Condition.\
LOW_FILE_LIMIT/config.generic
fi
# High water mark for filesystem full
if [ -f $BASEDIR/config.Condition.\
HIGH_FILE_LIMIT/config.generic ] ; then
. $BASEDIR/config.Condition.\
HIGH_FILE_LIMIT/config.generic
fi
# Read the condition specific host specific files
if [ -f $server/config.Condition.\
LOW_FILE_LIMIT ] ; then
. $server/config.Condition.LOW_FILE_LIMIT
fi
if [ -f $server/config.Condition.\
HIGH_FILE_LIMIT ] ; then
. $server/config.Condition.HIGH_FILE_LIMIT
fi
# Configuration for each filesystem for host
if [ -f $server/config.filesystems ] ; then
CONFIGS=&quot;$server/config.filesystems $CONFIGS&quot;
fi
LOW_FILE_LIMIT=${LOW_FILE_LIMIT:-80}
HIGH_FILE_LIMIT=${HIGH_FILE_LIMIT:-95}
# Store these two values since they will be
# reset for each Filesystem.
LOW=$LOW_FILE_LIMIT
HIGH=$HIGH_FILE_LIMIT
# Process the output of &quot;df&quot;.
# Check the usage of each filesystem and
# check whether it exceeds the low or high
# limit.
for filesystem in $(cat $tempfile | \
grep -v Filesystem)
do
LOW_FILE_LIMIT=$LOW
HIGH_FILE_LIMIT=$HIGH
filesys=`echo $filesystem | awk -F: \
'{print $1}'`
pct_dsk_used=`echo $filesystem |awk -F:\
'{print $2}' | awk -F% '{print $1}'`
mount_point=`echo $filesystem | awk -F:\
'{ print $3}'`

LOW_LIMIT=$($BINDIR/check_filesystem_limit.\
ksh &quot;LOW&quot; $mount_point $CONFIGS)
if [ &quot;$LOW_LIMIT&quot; ] ; then
LOW_FILE_LIMIT=$LOW_LIMIT
fi

HIGH_LIMIT=$($BINDIR/check_filesystem_limit.\
ksh &quot;HIGH&quot; $mount_point $CONFIGS)
if [ &quot;$HIGH_LIMIT&quot; ] ; then
HIGH_FILE_LIMIT=$HIGH_LIMIT
fi
low_dsk_stat=`expr $pct_dsk_used -\
$LOW_FILE_LIMIT`
high_dsk_stat=`expr $pct_dsk_used - \
$HIGH_FILE_LIMIT`
file_id=`echo $filesystem | awk -F: \
'{ print $4}'`
if [ &quot;$high_dsk_stat&quot; -gt  0  ] ; then
echo &quot;$(date &quot;+ %H:%M&quot;) $server
$filesys\
$mount_point $pct_dsk_used% full&quot; \
&gt; $BASEDIR/hosts/$server/Condition.HIGH_FILE_LIMIT
elif [ &quot;$low_dsk_stat&quot; -gt  0  ] ; then
echo &quot;$(date &quot;+ %H:%M&quot;) $server \
$filesys $mount_point $pct_dsk_used% full&quot; \
&gt; $BASEDIR/hosts/$server/Condition.LOW_FILE_LIMIT
if [ -f $BASEDIR/hosts/$server/\
Condition.HIGH_FILE_LIMIT ] ; then
fgrep &quot;$filesys&quot; $BASEDIR/hosts/\
$server/Condition.HIGH_FILE_LIMIT &gt;/dev/null
if [ $? -eq 0 ] ; then
echo &quot;$server: $mount_point under \
${HIGH_FILE_LIMIT}%&quot; &gt; $BASEDIR/hosts/$server/\
End.Condition.HIGH_FILE_LIMIT
fi
fi
else	# Filesystem within limit
if [ -f $BASEDIR/hosts/$server/\
Condition.HIGH_FILE_LIMIT ] ; then
fgrep &quot;$filesys&quot; $BASEDIR/hosts/\
$server/Condition.HIGH_FILE_LIMIT &gt;/dev/null
if [ $? -eq 0 ] ; then
echo &quot;$server: $mount_point under \

${HIGH_FILE_LIMIT}%&quot; &gt; $BASEDIR/hosts/$server/\
End.Condition.HIGH_FILE_LIMIT
fi
fi
if [ -f $BASEDIR/hosts/$server/\
Condition.LOW_FILE_LIMIT ] ; then
fgrep &quot;$filesys&quot; $BASEDIR/hosts/\
$server/Condition.LOW_FILE_LIMIT &gt;/dev/null
if [ $? -eq 0 ] ; then
echo &quot;$server: $mount_point under\
${LOW_FILE_LIMIT}%&quot; &gt; $BASEDIR/hosts/$server/\
End.Condition.LOW_FILE_LIMIT
fi
fi
fi
done # End of processing of server's filesystems

/bin/rm -f $tempfile  # Clean up
done             # End of processing this server

# End of File
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
