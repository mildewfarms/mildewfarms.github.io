<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v04, i06:  Creating Online Help for vi</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a5_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a5_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a5_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a5_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a5_l5.htm">Listing 5</a></span></td>
		<td><a href="../../../../source/SA/1995/nov95.tar"><b class=codeListing>nov95.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Creating Online Help for vi</H1><p>
<P>
Michael Harold<P>

<B>Introduction</B><P>

vi is the text editor users love to hate. In spite of
the bad press  it
receives, however, vi offers several distinct advantages.
One: it is
free and comes with every copy of UNIX. Two: it can
give you access to
sophisticated editing functions once you understand
its command set. In
fact, though, vi remains largely unused precisely because
of the cryptic
nature of the vi commands. This online help for vi can
provide a
powerful editing tool for users and developers (and,
since
administrators often have responsibility for introducing
users to vi,
make the system administrator's job a little easier).<P>

The software tools described in this article were used
to create online
help for vi. The same programs which provide online
help for vi can be
used to provide online help for menus and procedures
such as shell
scripts and C programs. In addition to creating online
help, this simple
toolset can be used to generate complex menus and procedures.
This
article describes this toolset and provides examples
of help files,
menus, and procedures that were created with it. (An
excellent guide to
the vi editor, Learning the vi Editor, is available
from O'Reilly and
Associates.)<P>

<B>The .exrc File</B><P>

The .exrc file allows a vi user to customize the editor
environment to
support user-defined commands. When a user executes
vi, the user's home
directory is checked for an occurrence of the .exrc
file. In the
following example, the set and map commands are used
to custom configure
the vi session. An example .exrc file would look like
this:<P>
<PRE>
set wrapmargin=10
set aw
set ic
map q :x
map v :!vh main vitxt^M
map V :!forms mainmenu mantxt^M
map M :!forms mainmenu menutxt^M</pre><p>
<p>
In this example the set commands set the right margin
to 10 characters
and autowrap each line as it is entered. The set ic
command tells vi to
ignore the case of any text strings entered in search
commands.<P>

Mapping allows the user to substitute a command string
for a vi command
character. When the character is pressed in command
mode, the character
string is substituted and the command is executed. For
these purposes,
remember to use characters such as &quot;v,&quot; &quot;V,&quot;
&quot;q,&quot; or &quot;Q&quot; that are not
already defined as vi commands.<P>

The ^M character at the end of each map command is a
newline character.
To insert a control character in a vi text file, press
Ctrl-v followed
by the control character you wish to insert. A carriage
return is
inserted with the sequence Ctrl-v Ctrl-m.<P>

<B>The vh Help Script</B><P>

The .exrc file maps the character &quot;v&quot; to the
command:<P>
<PRE>
:!vh main vitxt</pre><p>
<p>
The &quot;:&quot; character makes a call to the ex editor
(which is contained
within the vi editor). The &quot;!&quot; character tell
vi to spawn a new shell.
The shell command following the &quot;!&quot; is optional.<P>

The vh shell script is shown in Listing 1. The first
argument is a
keyword within the help file which identifies the menu
or text to be
displayed. The second argument is the file name of the
help file. An
abbreviated example of a help file is shown in Listing
2. In this
example the keyword is main and the help file is vitxt.<P>

Once the vi &quot;menu&quot; is displayed, the user
is asked to enter the vi
command for which help is needed. The user enters a
command and the vh
script displays the online help associated with that
command. Upon
exiting the help screen, the user is returned to the
vi editor.<P>

<B>Online man Pages</B><P>

The .exrc file maps the character &quot;V&quot; to the
command:<P>
<PRE>
:!forms mainmenu mantxt</pre><p>
<p>
The forms shell script is shown in Listing 3 and is
an expanded form of
the vh shell script. The first argument, mainmenu, specifies
a label in
the command file which is identified by the second argument.
Any lines
preceeded by the label are sent to standard output.<P>

The program also allows the association of procedures
with displayed
text. For any given label (mainmenu), procedures associated
with that
label may be identified with a special procedure label
(mainmenu p).
Those lines labeled as procedures are written to a file
which is then
executed.<P>

A special file named formkey is used to contain the
next label to be
processed. This allows the creation of decision procedures
within the
help file.<P>

An example of an online help menu for commonly used
UNIX commands is
provided in Listing 4. The combination of online help
for vi and the man
pages within the vi editor can be very useful to developers
new to the
UNIX environment.<P>

<B>Menus and Procedures</B><P>

The forms program can also be used to create menus and
online help for
menus and procedures. An example of a &quot;desktop&quot;
menu system is provided
in Listing 5. This menu contains examples of user-defined
online help as
well as help from the man pages.<P>

The .exrc file maps the character &quot;M&quot; to the
command:<P>
<PRE>
:!forms mainmenu menutxt</pre><p>
<p>
The forms command used to execute the menu from the
shell command line is:<P>
<PRE>
$ forms mainmenu menutxt</pre><p>
<p>
Menus created in this manner can access other help files
and can contain
complex procedures. Programmers and analysts will find
this feature very
useful. For example, a programmer can edit a source
file, save it,
recompile it, display the error listing, and make corrections
in the
program source without ever leaving the vi editor. <P>




<P>


<H1>About the Author</H1><p>
<P>
Michael Harold is a systems analyst/programmer currently
employed by
Willis-Knighton Medical Center in Shreveport, Louisiana.
He has worked
with UNIXsystems for thirteen years as an educator,
systems
administrator, database administrator, and application
developer.<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
