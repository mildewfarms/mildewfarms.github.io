<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v04, i03: Listing 1: Boot-up check disk script</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a8.htm">Article</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><span class=navbarLink><a href="a8_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a8_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/1995/may95.tar"><b class=codeListing>may95.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1: Boot-up check disk script</H1><p>
<PRE>
#
# Copyright 1994, Lehman Brothers, Inc.
#
# Check all 4.2 devices and swap devices in /etc/fstab, and all Sybase devices.
# Notes: tell is a local utility that sends alphanumeric pages
#        sysdoc is the alias for the SAs for the domain
#
# Lehman Fixed Income Research naming conventions for Sybase partition search:
#   There is a start script ~sybase/install/RUN_&lt;Servername&gt; for each
#   dataserver on the host.
#
#   There is a device list ${DbaHome}/files/&lt;Servername&gt;.device_list for
#   each dataserver on the host.
#
#   You will need to modify the script if your conventions differ.

#
# notify - function to tell only at civilized times
#
notify()
{
if [ -f /usr/local/bin/tell ]; then
Now=`date +%H`
if [ $Now -lt 23 -a $Now -ge 6 ];then
/usr/local/bin/tell ${sysDoc} ${msg} &gt;/dev/null 2&gt;&amp;1 &amp;
else
at 6:00 &lt;&lt;!EOF!
/usr/local/bin/tell &quot;${sysDoc}&quot; &quot;${msg}&quot; &gt;/dev/null 2&gt;&amp;1
!EOF!
fi
fi

echo $msg | /usr/ucb/mail -s &quot;`hostname` rebooted&quot; ${sysDoc}
}

#
# notify_stat - function to tell immediately
#
notify_stat()
{
if [ -f /usr/local/bin/tell ]; then
/usr/local/bin/tell ${sysDoc} ${msg} &gt;/dev/null 2&gt;&amp;1 &amp;
fi

echo $msg | /usr/ucb/mail -s &quot;`hostname` rebooted&quot; ${sysDoc}
}

diskStat=&quot;&quot;
sysDoc=`ypmatch sysdoc aliases | sed -e &quot;s/, /,/&quot;``
#
#Locate all file system and swap partitions
#
fsPart=`grep -v &quot;^#&quot; /etc/fstab | awk `$3==&quot;4.2&quot; || $2==&quot;swap&quot; {print $1}' `
#
# Locate all sybase servers, and follow local conventions to identify
# their partitions
#

if [ -d /usr/local/sybase/install ]; then
sybServers=`cd /usr/local/sybase/install; ls RUN_* 2&gt;/dev/null|fgrep -v
startup|sed -e &quot;s/RUN_//&quot;`

for serv in ${sybServers} ; do
if [ -f /export/home/dba/files/${serv}.device_list ]; then
sybPart=&quot;$sybPart `cat /export/home/dba/files/${serv}.device_list`&quot;

fi
done
else
sybPart=&quot;&quot;
fi
#
# Check all partitions
#
for devPart in ${fsPart} ${sybPart}; do
/bin/dd if=${devPart} of=/dev/null count=1 2&gt; /dev/null
if [ $? -ne 0 ] ; then
/usr/ucb/logger -t chkdisk -p user.err &quot;Error reading ${devPart}&quot;
diskStat=&quot;${diskStat}${devPart} &quot;
fi
done

bootTime=`date +%T`
if [ -z &quot;$diskStat&quot; ]; then
#
# No error, do civilized notification
#
/usr/ucb/logger -t chkdisk -p user.err &quot;Disk check passed.&quot;
msg=&quot;`hostname` rebooted at ${bootTime}, all disks ok.&quot;
notify
else
#
# Disk not spinning, notify at any hour
#
/usr/ucb/logger -t chkdisk -p user.err &quot;Disk check failed: ${diskStat}.&quot;
msg=&quot;`hostname` rebooted at ${bootTime}, disk failures: $diskStat.&quot;
notify_stat
fi

exit 0
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
