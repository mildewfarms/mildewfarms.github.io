<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v02, i04: Listing 6: piocrypt.c</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a7.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a7_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a7_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a7_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a7_l3.htm">Listing 3</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a7_l4.htm">Listing 4</a></span></td>
		<td><span class=navbarLink><a href="a7_l5.htm">Listing 5</a></span></td>
		<td><span class=navbarLink>Listing 6</span></td>
		<td><a href="../../../../source/SA/1993/jul93.tar"><b class=codeListing>jul93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 6: piocrypt.c</H1><p>
<PRE>
/* program piocrypt.c */

#include &lt;stdio.h&gt;
#include &lt;ctype.h&gt;
#include &lt;piostruct.h&gt;

/* STRING CONSTANTS */
/* Initialize Printer, Restore Printer, Form Feed */
#define INIT_CMD    &quot;ci&quot;
#define REST_CMD    &quot;cr&quot;
#define FF_CMD      &quot;af&quot;

/* INTEGER and STRING VARIABLES */
/* page length, page width, top margin, bottom margin */
#define Pglen          (*(_Pglen + piomode))
#define Pgwidth        (*(_Pgwidth + piomode))
#define Tmarg          (*(_Tmarg + piomode))
#define Bmarg          (*(_Bmarg + piomode))

/* indentation, begin page, form feed?, pass-through? */
#define Indent         (*(_Indent + piomode))
#define Beginpg        (*(_Beginpg + piomode))
#define Do_formfeed    (*(_Do_formfeed + piomode))
#define Passthru       (*(_Passthru + piomode))

/* initialize printer?, restore printer? */
#define Init_printer    (*(_Init_printer + piomode))
#define Restoreprinter  (*(_Restoreprinter + piomode))

/* Command names: form feed, vertical increment and decrement */
#define Ff_cmd         (*(_Ff_cmd + piomode))
#define Vincr_cmd      (*(_Vincr_cmd + piomode))
#define Vdecr_cmd      (*(_Vdecr_cmd + piomode))

/* Work variables for vertical increment and decrement */
#define Vincr          (*(_Vincr + piomode))
#define Vdecr          (*(_Vdecr + piomode))

/* Variables referenced by above #defines */
int *_Pglen, *_Pgwidth, *_Tmarg, *_Bmarg, *_Indent, *_Beginpg,
*_Do_formfeed, *_Passthru, *_Init_printer, *_Restoreprinter, *_Vincr,
*_Vdecr;

struct str_info *_Ff_cmd, *_Vincr_cmd, *_Vdecr_cmd;

/* TABLE OF ATTRIBUTE VALUES */
struct attrparms attrtable[] = { /*
name  data type  lookup  address of pointer */
&quot;_b&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Bmarg,
&quot;_g&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Beginpg,
&quot;_i&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Indent,
&quot;_j&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Init_printer,
&quot;_l&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Pglen,
&quot;_t&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Tmarg,
&quot;_w&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Pgwidth,
&quot;_J&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Restoreprinter,
&quot;_Z&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Do_formfeed,
&quot;wp&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Passthru,
&quot;wf&quot;,  VAR_STR,   NULL,   (union dtypes *) &amp;_Ff_cmd,
&quot;wi&quot;,  VAR_STR,   NULL,   (union dtypes *) &amp;_Vincr_cmd,
&quot;wy&quot;,  VAR_STR,   NULL,   (union dtypes *) &amp;_Vdecr_cmd,
&quot;wV&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Vincr,
&quot;wD&quot;,  VAR_INT,   NULL,   (union dtypes *) &amp;_Vdecr,
NULL,  0     ,   NULL,    NULL };

int pglen, tmarg, bmarg, vpos, vtab_base;
struct shar_vars sharevars;

struct shar_vars *setup(unsigned int argc, char *argv[], int passthru)

{

(void) piogetvals(attrtable, NULL);
(void) piogetopt(argc, argv, NULL, NULL);
pglen = Pglen * Vincr;
tmarg = Tmarg * Vincr;
bmarg = Bmarg * Vincr;
piopgskip = Beginpg - 1;

if (Passthru = passthru)
return(NULL);

sharevars._pl            = &amp;pglen;
sharevars._tmarg         = &amp;tmarg;
sharevars._bmarg         = &amp;bmarg;
sharevars._vpos          = &amp;vpos;
sharevars._vtab_base     = &amp;vtab_base;
sharevars._vincr         = &amp;Vincr;
sharevars._vincr_cmd     = (&amp;Vincr_cmd)-&gt;ptr;
sharevars._vdecr         = &amp;Vdecr;
sharevars._vdecr_cmd     = (&amp;Vdecr_cmd)-&gt;ptr;
sharevars._ff_cmd        = (&amp;Ff_cmd)-&gt;ptr;
sharevars._ff_at_eof     = &amp;Do_formfeed;

return(&amp;sharevars);

} /* end setup */

initialize() /*** Initialize the Printer ***/

{

if (Init_printer)
(void) piocmdout(INIT_CMD, NULL, 0, NULL);
return(0);

} /* end initialize */

lineout(FILE *fileptr)  /***  Format a Line  ***/

{

int ch,
offset,
charcount = 0;

for (ch = 0; ch &lt; Indent; ch++)
pioputchar(' ');
while ((ch=piogetc(fileptr)) != '\n' &amp;&amp; ch != EOF
&amp;&amp; charcount &lt; Pgwidth) {
if (ch &lt;= 79 &amp;&amp; ch &gt;= 33) {
offset = 79 - ch + 1;
ch = 79 + offset;
} /* end then */
else {
if (ch &gt;= 80 &amp;&amp; ch &lt;= 126) {
offset = ch - 80 + 1;
ch = 80 - offset;
} /* end then */
} /* end else */
if (isupper(ch))
ch = tolower(ch);
else {
if (islower(ch))
ch = toupper(ch);
} /* end else */
pioputchar(ch);
charcount++;
} /* end while */
vpos += Vincr;
return(charcount);

} /* end lineout */

passthru()  /*** Pass-through Option ***/

{

int ch;

while ((ch = piogetc(stdin)) != EOF)
pioputchar(ch);
if (piodatasent &amp;&amp; Do_formfeed)
(void) piocmdout(FF_CMD, NULL, 0, NULL);
return(0);

} /* end passthru */

restore() /*** Restore the Printer ***/

{

if (Restoreprinter)
(void) piocmdout(REST_CMD, NULL, 0, NULL);
return(0);

} /* end restore */

/* end program piocrypt.c */</pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
