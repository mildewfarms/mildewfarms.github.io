<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v02, i04: Listing 2: read pipe() example</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a6.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a6_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink>Listing 2</span></td>
		<td><span class=navbarLink><a href="a6_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a6_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1993/jul93.tar"><b class=codeListing>jul93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 2: read pipe() example</H1><p>
<PRE>
1  /* Listing 2
2   * read pipe() example
3   */
4  #include &lt;stdio.h&gt;
5  #define MAX_LINES   99
6  #define MAX_CHARS   4000
7  #define MAX_TXT 256
8
9  main()
10  {
11  char *slines[MAX_LINES];
12  char sbuf[MAX_CHARS];
13  char *com_str=&quot;who|sort|pr -n -t|grep -v '^[ \\t]*$'&quot;;
14  int count,i;
15
16  count=run_rpipe(slines, sbuf, com_str);
17  printf(&quot;count is %d\n&quot;, count);
18  for(i=0; i&lt;count;   i++)
19       printf(&quot;%s\n&quot;, slines[i]);
20  }
21  /*
22  *   This function:
23  *   1) creates a pipe with pipe().
24  *   2) creates another process with fork().
25  *   3) couples standard output to the writing end of the pipe
26  *      using the dup() call.
27  *   4) closes file descriptors.
28  *   5) executes the child process.
29  *   6) closes the write side of the pipe.
30  *   7) opens the read side of the pipe using fdopen().
31  *   8) reads to the end of the pipe.
32  *   9) closes the file pointer.
33  *
34  *   buffer is the array where each line is stored.
35  *   lineptr is an array-of-pointers where each element of the
36  *   array points to the beginning of each line stored in buffer.
37  *
38  *   returns the number of lines read into buffer, cnt.
39  */
40  int run_rpipe(lineptr, buffer, exe_str)
41  char *lineptr[]; /*array-of-pointers to store addresses */
42  char buffer[];   /*buffer to store strings */
43  char *exe_str;   /*pipe command */
44  {
45  int i, p[2], pid,   cnt=0;
46  FILE *ptr, *fdopen();
47  char *bufstart, *bufend, line[MAX_TXT], *fgets();
48
49  bufstart = buffer;
50  bufend = buffer +   MAX_CHARS;
51
52  if(pipe(p) &lt; 0)
53       fatal(&quot;pipe call&quot;);
54
55  switch(pid=fork())
56       {
57       case -1:
58          fatal(&quot;fork call in run_rpipe&quot;);
59       case 0:
60          close(1);    /*close the standard output */
61          dup(p[1]);   /*write side of the pipe*/
62          close(p[0]); /*save the file descriptors*/
63          close(p[1]);
64          execlp(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-c&quot;, exe_str, NULL);
65          fatal(&quot;exec call in run_rpipe&quot;);
66        }
67  close(p[1]);       /*close the write side of the parent*/
68  if((ptr=fdopen(p[0],&quot;r&quot;)), ptr ==   NULL)
69       fatal(&quot;fdopen call in run_rpipe&quot;);
70
71  for(i = 0; i &lt; MAX_LINES;   i++)
72       {
73       if(fgets(line, MAX_TXT, ptr) == NULL)
74          break;
75       line[strlen(line)-1] = '\0';
76       if((bufstart + strlen(line) + 1) &gt;= bufend)
77          fatal(&quot;Line too long&quot;);
78       lineptr[i]=bufstart;
79       strcpy(bufstart,line);
80       bufstart += strlen(line)+1;
81       cnt++;
82       }
83  fclose(ptr);
84  /*wait for child process to finish*/
85  while(wait((int *)0) != pid)
86       ;
87  return cnt;
88  }
/* End of File */ </pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
