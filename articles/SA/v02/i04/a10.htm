<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v02, i04:  A Disk Usage Report Generator</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a10_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a10_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a10_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a10_l3.htm">Listing 3</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a10_l4.htm">Listing 4</a></span></td>
		<td><a href="../../../../source/SA/1993/jul93.tar"><b class=codeListing>jul93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>A Disk Usage Report Generator</H1><p>
<P>
Leo Willems<P>

<B>Introduction</B><P>

Disks are by definition too small: this is a law of
nature. Monitoring 
your filesystems to keep disks from getting full is
the best remedy, 
but this is easier said than done. Potential disk-burners
include:<P>

<li>Files that have been removed but are still open (these

won't be dealt with in this article).<P>

<li>Files that grow extremely quickly (these can be located

with a find command).<P>

<li>Files that only grow a little each day and are not deleted

by some cron activity.<P>

The slower growing files (and sometimes the rapidly
growing 
ones as well) pose a problem: where is the guilty file?<P>

As a system administrator I used to spend several hours
per month 
trying to find out where the diskspace was being used.
Of course, 
every day I studied the output of df, but that told
me only 
what I already knew: diskspace was shrinking every day.
When the 90 
percent limit was exceeded or when I saw a jump of 10
percent or more 
downwards in the output of df I had to search the directory

(and then find the person) who had abused my disks.<P>

This article discusses a tool that can give you a quick
overview of 
how diskspace is being used and which directories are
changing.<P>

<B>A Disk Usage Report Generator</B><P>

The shell tool that I created does the following:<P>

<li>Every night, runs a du on every mounted filesystem.<P>

<li>Compares this night's data with yesterday's data with

awk.<P>

<li>Reports differences.<P>

<li>Mails the report to me.<P>

<li>Occasionally, runs today's data on last month's data

to select the slow-growing directories.<P>

I use four scripts: du_daily (Listing 2), a script 
executed by cron every night to run du on filesystems

under examination; fss_daily (Listing 3), a script that
starts 
the comparison and mails the result; fss.sh (Listing
1), the 
script that actually does the comparison; and du_clean
(Listing 4),
a cleanup script to prevent my scripts from being
blamed for using 
diskspace.<P>

The first lines in the du_daily script are dependent
on your 
installation.  All of these lines are marked with the
text DEP. Configuration 
should not be difficult.<P>

<B>How the Scripts Work</B><P>

The fss.sh script, which compares the output of two
du 
sessions, is run by the following command:<P>
<PRE>
fss.sh -'+&gt;' -o olddu -n newdu</pre><p>
<p>
where &quot;=&quot; represents equal, &quot;-&quot;
represents 
removed, &quot;&gt;&quot; represents larger, &quot;&lt;&quot;
represents smaller, 
and &quot;+&quot; represents removed.<P>

The du_daily script runs every night. As part of its
work, 
it calls fss_daily and, when fss_daily is finished,

du_clean. du_clean keeps every report of the first day

of the month. It also keeps the recently produced reports.
You can 
configure in du_daily how many reportdays must be kept.<P>

<B>Calling du_daily</B><P>

The cron command line to run du_daily is as follows:<P>
<PRE>
30 2 * * * (cd /home3/leo/fss; du_daily)</pre><p>
<p>
The scripts are supposed to be executed in the same
directory where 
datafiles and scripts are placed (i.e., /home3/leo/fss).
On 
the first night fss.sh will fail but the datafiles will
still 
be created, so the run on the second night will succeed.
Figure 1 
shows sample output. <P>




<P>


<H1>About the Author</H1><p>
<P>
Leo Willems is a UNIX systems programmer and consultant.
For the
last six years he has conducted and developed UNIX-related
courses for AT
Computing. At the present time, he is working for TUNIX
Open System
Consultants. He can be reached at tunix.kun.nl.<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
