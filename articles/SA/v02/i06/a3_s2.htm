<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v02, i06:  Sidebar: Shell Variable Substitution</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a3.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a3_s1.htm">Sidebar 1</a></span></td>
		<td><span class=navbarLink>Sidebar 2</span></td>
		<td><span class=navbarLink><a href="a3_t1.htm">Table 1</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a3_t2.htm">Table 2</a></span></td>
		<td><span class=navbarLink><a href="a3_t3.htm">Table 3</a></span></td>
		<td><a href="../../../../source/SA/1993/nov93.tar"><b class=codeListing>nov93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Sidebar: Shell Variable Substitution</H1><p>
<P>
You can test and change the shell variables in a variety
of ways without 
using the shell's if command or the test(1) command.

I show only the Bourne Shell's methods here, because
it is the shell 
used most portably for programming. However, the csh
and ksh's 
substitution abilities are richer than sh's abilities.
If you're 
programming with either of the other shells, spend time
investigating 
their substitution features. They're worth it. sh surrounds

the variable name with braces, putting the $ outside
of the 
braces, when referring to a variable substitution operation.<P>

<B>${var}</B> -- Use this format when embedding 
the value of a variable inside another value, such as
a prefix or 
suffix. If the other value won't confuse the shell about
the name 
of the variable, you don't need the braces. For example,
given<P>
<PRE>
things=more
want=${things}stuff</pre><p>
<p>
the variable $want gets the value morestuff. 
Without the braces, the shell might think the variable
name is $thingsstuff. 
However, in the directory setting,<P>
<PRE>
newdir=$MAINDIR/new</pre><p>
<p>
the braces aren't needed because the slash is a sufficient

separator.<P>

<B>${var:-value}</B> -- If the variable exists 
in the environment and has a value, yield its value.
Otherwise, use 
the value named after the :- characters. This is the
simplest 
form of substitution, yielding up the named value only
if the variable 
doesn't already have one.<P>

<B>${var:=value}</B> -- If the variable exists 
in the environment and has a value, yield its value.
Otherwise, assign 
the value named after the := characters to the variable
and 
yield the new value.<P>


<B>${var:?value}</B> -- If the variable exists 
in the environment and has a value, yield its value
and do nothing 
else. Otherwise, print the value named after the :?
characters 
and exit the shell.<P>

<B>${var:+value}</B> -- If the variable exists 
in the environment and has a value replace it with the
value named 
after the :+ characters. Leave the variable alone otherwise.
<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
