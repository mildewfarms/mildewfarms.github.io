<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v02, i03: Listing 1</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a10.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a10_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a10_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a10_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a10_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><span class=navbarLink><a href="a10_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/1993/may93.tar"><b class=codeListing>may93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1</H1><p>
<PRE>
1  |#include &lt;sys/types.h&gt;
2  |#include &lt;time.h&gt;
3  |#include &lt;utmp.h&gt;
4  |#include &lt;stdio.h&gt;
5  |
6  |#define FAILEDLOGIN_FILENAME &quot;/etc/security/failedlogin&quot;
7  |
8  |char usage[][25] = { &quot;flogin\n&quot;,
9  |                     &quot;flogin -h\n&quot;,
10  |                     &quot;flogin -u &lt;user_name&gt;\n&quot; };
11  |char FF = '\014';
12  |
13  |/* ********************************************************************* *
14  | *                                                                       *
15  | * Procedure : main                                                      *
16  | * Purpose   : Top loop for utmp print function                          *
17  | *                                                                       *
18  | * ********************************************************************* */
19  |
20  |int main(int argc,char *argv[])
21  |
22  |{
23  |
24  |  int nusers,
25  |      counter;
26  |
27  |  if (!strcmp(argv[1],&quot;-h&quot;)) {
28  |   for (counter = 0;counter &lt;= 3; counter++)
29  |    printf(&quot;%s&quot;,usage[counter]);
30  |  } /* end then */
31  |  else {
32  |   if (!strcmp(argv[1],&quot;-u&quot;))
33  |    nusers = print_users(argv[2]);
34  |   else
35  |    nusers = print_users(&quot;NOBODY&quot;);
36  |  } /* end else */
37  |  exit(0);
38  |
39  |} /* end main */
40  |
41  |/* ********************************************************************* *
42  | *                                                                       *
43  | * Procedure : print_users                                               *
44  | * Purpose   : The procedure print_users reads the failedlogin file and  *
45  | *             prints the failed login for the specified user or all     *
46  | *             failed logins in chronological order.                     *
47  | * Example   : The following examples runs the failedlogin report for    *
48  | *             each user with headings and totals.                       *
49  | *             Add pipe to printer for hard copy (ie. |lp -dljet         *
50  | *             lsuser -a ALL|cut -f1 -d&quot; &quot;|xargs -i% flogin -u %         *
51  | *                                                                       *
52  | * ********************************************************************* */
53  |
54  |int print_users(char *user_name)
55  |
56  |{
57  |
58  |  FILE *utmpf;
59  |  int nusers,
60  |      failed=0;
61  |  struct utmp utmp;
62  |
63  |
64  |  nusers=0;
65  |  if (!(utmpf = fopen(FAILEDLOGIN_FILENAME, &quot;r&quot;))) {
66  |    perror(FAILEDLOGIN_FILENAME);
67  |    exit(1);
68  |  } /* end then */
69  |  if (strcmp(user_name,&quot;NOBODY&quot;))
70  |   printf(&quot;LOGIN REPORT FOR : [ %s ]\n&quot;,user_name);
71  |  while (fread((char *)&amp;utmp,sizeof(utmp),1,utmpf) == 1) {
72  |   if (*utmp.ut_name &amp;&amp; utmp.ut_type == USER_PROCESS)
73  |    nusers++;
74  |   if (!strcmp(user_name,&quot;NOBODY&quot;)) {
75  |    printf(&quot;USER [%10s]  TERMINAL [%12s]  TIME : %s&quot;,
76  |            utmp.ut_user,utmp.ut_line,asctime(localtime(&amp;utmp.ut_time)));
77  |   } /* end then */
78  |   else
79  |    if (!strcmp(user_name,utmp.ut_user)) {
80  |     printf(&quot;USER [%10s]  TERMINAL [%12s]  TIME : %s&quot;,
81  |             utmp.ut_user,utmp.ut_line,asctime(localtime(&amp;utmp.ut_time)));
82  |     failed++;
83  |    } /* end then */
84  |  } /* end while */
85  |  printf(&quot;NUMBER OF FAILED LOGINS : [ %i ]\n&quot;,failed);
86  |  printf(&quot;%c&quot;,FF);
87  |  return (nusers);
88  |
89  |} /* end print_user */</pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
