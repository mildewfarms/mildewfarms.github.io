<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v02, i03:  Sidebar: Memory Utilization and X</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a2.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a2_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a2_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a2_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a2_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a2_f5.htm">Figure 5</a></span></td>
		<td><span class=navbarLink><a href="a2_f6.htm">Figure 6</a></span></td>
		<td><span class=navbarLink><a href="a2_s1.htm">Sidebar 1</a></span></td>
		<td><span class=navbarLink>Sidebar 2</span></td>
		<td><a href="../../../../source/SA/1993/may93.tar"><b class=codeListing>may93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Sidebar: Memory Utilization and X</H1><p>
<P>
X applications are rarely less than 1 megabyte (MB),
so the enemy 
of X Windows is low memory. When UNIX runs out of memory
it begins 
to swap. Performance hits rock bottom and can even lead
to a disaster 
such as broken pipes, or other system problems related
to swapping 
portions of memory to disk. To reduce memory &quot;paging,&quot;
the 
system must be reconfigured to provide additional memory
to X applications. 
To achieve this, you can simply increase the amount
of physical memory 
installed in the computer. If the system is at its maximum
installable 
memory, or if you can't spend the money on more memory,
the sizes 
of the filesystems' buffers and other kernel data structures
can be 
reduced. Remember, though, that reducing the buffers
may also reduce 
disk performance. Another option is to alter the paging
algorithm 
so that the system begins paging earlier. However, this
alternative 
is only useful when the shortage of memory is relatively
small.<P>

It's generally a good idea to install maximum RAM on
the workstation 
where X will be operating. Intel workstations require
at least 16 
megabytes, but 32 megabytes is much better, and 64 megabytes
is best. 
X Terminals require at least 4 megabytes of memory to
process a reasonable 
number of X or Motif applications at a respectable speed.<P>

The only sure way to increase performance and cut memory
consumption 
is to monitor the number of X applications that are
executed by the 
users. Users may not need xclock, xeyes, or xload.<P>

The X Window system makes heavy use of buffers, generally
opting for 
smaller (usually 128 bytes or less) rather than larger
buffers. Most 
systems with X installed need to increase the value
of NBLKn, 
as noted in the article.<P>

<B>Running the Buffer Cache Subsystem</B><P>

Although disk I/O is not a primary concern with X Window
performance, 
it does affect the performance of some X applications
and is certainly 
a factor if the system is paging. When an I/O device
request is made 
to a disk drive, the buffer cache system provides intermediate
storage 
for information moving back and forth from the tracks
of the disk. 
The buffer cache subsystem improves performance, which
allows the 
I/O to make sizable ordered transfers, thereby minimizing
seek time 
on the physical disk drive. It also allows programs
to, whenever possible, 
read and write from cache memory instead of going to
disk.<P>

The type of buffer cache subsystem differs among UNIX
systems, but 
the basic concept is similar. The buffering cache subsystem
is handled 
by the kernel, which allocates a portion of memory for
buffer cache 
space. This portion of memory is configurable (see the
NBUF parameter). 
The kernel then writes to memory as if writing to a
file. At some 
point, the modified information is written to disk.
The interval at 
which the information is written from memory to disk
is configurable 
(see NAUTOUP).<P>

The size of the buffer cache is configurable in most
UNIX operating 
systems. This is the major tuning parameter NBUF, and
is the 
cause or cure for most system and disk I/O performance
problems. A 
system with a lot of memory may have a large buffer
cache system because 
the buffer cache may be a greater memory consumer than
the kernel 
itself.<P>

So what is optimal buffer cache size for X Windows?
You must compromise. 
The more memory you allocate to the buffer cache, the
less you have 
for user programs and processes, and vice-versa. When
buffer cache 
memory is reduced to make room for more or larger processes,
disk 
I/O performance suffers.  <P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>