<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v02, i03: Listing 1: fchange.sh</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a1.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a1_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a1_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a1_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a1_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/1993/may93.tar"><b class=codeListing>may93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1: fchange.sh</H1><p>
<PRE>
:
#######################################################
# fchange.sh: log and report upon files that have
# changed.  requires fchangedir control directory, logs
# subdirectory, and fchange.files control file.
# Copyright (C) 1993 Steven G. Isaacson
#######################################################

test &quot;$debugxv&quot; &amp;&amp; set -xv # primitive debugger

tmpfile=/tmp/fch.$$
: ${HOME:=/usr/stevei}
fchangedir=$HOME/cron/fchange
logdir=$fchangedir/logs
parm_file=${fchangedir}/fchange.files
def_mail_to=stevei ; export def_mail_to
mailer=/bin/mail ; export mailer
subject=&quot;On `uname -n` this file was changed recently&quot;
eqsn=&quot;======&quot;

PATH=/bin:/usr/bin:/usr/ucb:.:$PATH
export PATH

cd $fchangedir

# use awk to skip comments, blank lines, null lines, and
# colons

awk '/^#|^ |^:|^$/ { next }
{ print }' $parm_file |
while read unique fname mail_to
do
# stop if there is a problem
set -e

logname=${logdir}/${unique}.log

# if the log file isn't there, create it
test -f &quot;$logname&quot; || &gt; $logname

# set tracking flag.  default is no
track=no

case &quot;$mail_to&quot; in
*track) track=yes
mail_to=`echo $mail_to | sed 's,track,,'` ;;
esac

# save original number of lines in log file
oldlen=`cat $logname | wc -l`

# those particularly concerned about security may
# also want to add the output from sum (1-SysV) to
# the line.  that way, even if the size and time
# stamps are rigged, you'll still see that a change
# was made.

test -f &quot;$fname&quot; &amp;&amp; /bin/ls -l $fname &gt;&gt; $logname

# sort the log file uniquely.  if the file in
# question hasn't changed, then the line we just
# added with ls is a duplicate and will be removed.

sort -u $logname -o $logname

# get new number of lines in log file
newlen=`cat $logname | wc -l`

# if there is a difference, send mail
test &quot;$oldlen&quot; -eq &quot;$newlen&quot; || {

echo &quot;Subject: $subject ($unique)&quot; &gt; $tmpfile
tail $logname &gt;&gt; $tmpfile
test &quot;$mail_to&quot; || mail_to=$def_mail_to
cat $tmpfile | $mailer &quot;$mail_to&quot;

test &quot;$track&quot; = &quot;yes&quot; &amp;&amp; {
echo &quot;#_change $eqsn `date` $eqsn&quot; \
&gt;&gt; ${logname}.track
cat $fname &gt;&gt; ${logname}.track
}
}
done
exit 0</pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
