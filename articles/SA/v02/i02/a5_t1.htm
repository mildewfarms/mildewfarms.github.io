<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v02, i02:  Table 1: C Utility Function Summary</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a5.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a5_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a5_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink>Table 1</span></td>
		<td><a href="../../../../source/SA/1993/mar93.tar"><b class=codeListing>mar93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Table 1: C Utility Function Summary</H1><p>

<TABLE BORDER=1>
<TR>
<TH WIDTH=275 ALIGN=LEFT></TH>
<TH WIDTH=125 ALIGN=LEFT></TH>
</TR>
<TR>
<TD>ListPtr make_filelist(const char *dirname);</TD>
<TD>Constructs a linked list containing names of the
entries in the specified directory. Returns a pointer to
the first element of the list. Returns NULL if dirname
couldn't be opened as a directory.</TD>
</TR>
<TR>
<TD>void free_filelist(ListPtr p);</TD>
<TD>Frees a linked list constructed by make_filelist.</TD>
</TR>
<TR>
<TD>void *emalloc(size_t nbytes);</TD>
<TD>Allocates the specified amount of memory, prints
error message and exits program if allocation fails.</TD>
</TR>
<TR>
<TD>char *savestr(char *s);</TD>
<TD>Saves a copy of string pointed to by s, returns pointer
to the saved copy.</TD>
</TR>
<TR>
<TD>void die(int syserr, const char *fmt, ...);</TD>
<TD>Exits program with a specified error 	message;
parameters following syserr are the same as printf. If syserr
is non-zero, prints a system error message as well.</TD>
</TR>
<TR>
<TD>void warn(int syserr, const char *fmt, ...);</TD>
<TD>Prints the specified error message; parameters
following syserr are the same as printf. If syserr is non-zero,
prints a system error message as well.</TD>
</TR>
<TR>
<TD>void errmesg(int syserr, const char *fmt,, va_list ap);</TD>
<TD>Prints error message to stderr; called by both die() and
warn().</TD>
</TR>
</TABLE>
<P>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
