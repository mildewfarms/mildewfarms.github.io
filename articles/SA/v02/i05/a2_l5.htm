<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v02, i05: Listing 5: restore.bu v2.0--Fast restore utility</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a2.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a2_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a2_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a2_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a2_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a2_f5.htm">Figure 5</a></span></td>
		<td><span class=navbarLink><a href="a2_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a2_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a2_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a2_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink>Listing 5</span></td>
		<td><span class=navbarLink><a href="a2_l6.htm">Listing 6</a></span></td>
		<td><a href="../../../../source/SA/1993/sep93.tar"><b class=codeListing>sep93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 5: restore.bu v2.0--Fast restore utility</H1><p>
<PRE>
1   # @(#) Listing 5 restore.bu v2.0    Fast Restore Utility
2   # Authors: Jon Alder/Ed Schaefer
3   ########################################################################
4   # This program is used to manipulate a backup tape created by fast backup.
5   # This script reads in the file with the tape directory and prepares a menu
6   # for the user.
7
8   # set video variables
9   HI=`tput smso`
10  LO=`tput rmso`
11  CLS=`tput clear`
12  BLINK=`tput blink`
13  TFS=''
14  CDIR=''
15
16  umask 000
17  # Usage Help
18  if [ $1 = &quot;-z&quot; ]; then
19     echo &quot;usage: restore.bu -c [config file]&quot; &gt;&amp;2
20     exit 1
21  fi
22
23
24  ########################################################################
25  # Set variables
26  ########################################################################
27  trap 'echo &quot;Returning tape to the directory.\c&quot;;restart' 1 2
28
29  # The program requires the existence of a configuration file that tells
30  # it what commands to use for your version of UNIX as well as where to
31  # put work files.
32
33  if [ $# -lt 1 ] &gt; /dev/null 1&gt;&amp;2
34  then
35     CONFIG=$PWD/config
36     echo &quot;\nSetting CONFIG to $CONFIG and continuing.&quot;
37     echo &quot;Hope this is ok.&quot;;echo &quot;Type restore.bu -z for help.&quot;;sleep 2
38  else
39     while [ $# -gt 0 ]
40     do
41       case $1 in
42          -c)     shift;CONFIG=$1
43                  shift
44                  ;;
45
46          -c*)    CONFIG=`echo $1|cut -c3-`
47                  shift
48                   ;;
49
50          -*)     echo &quot;Usage error&quot;
51                  echo &quot;Usage: restore.bu  -c [config file]&quot; &gt;&amp;2
52                  exit
53                  shift
54                  ;;
55          *)      echo &quot;Usage error&quot;
56                  echo &quot;Usage: restore.bu  -c [config file]&quot; &gt;&amp;2
57                  exit
58                  shift
59                  ;;
60          esac
61     done
62  fi                                                     ;export CONFIG
63
64  if [ -r &quot;$CONFIG&quot; ]; then
65     continue
66  else
67     echo &quot;The config file \&quot;$CONFIG\&quot; was not found. &quot;
68     echo &quot;Check to make sure that the path is correct and re-start.&quot;
69     echo &quot;Exiting Restore.bu.&quot;;sleep 1;exit 1
70  fi
71
72  ########################################################################
73  # Set variables
74  ########################################################################
75  CURSOR=`grep cursor $CONFIG|cut -d : -f2`            ;export CURSOR
76  FORWARD=`grep forward $CONFIG|cut -d : -f2`          ;export FORWARD
77  NICE=`grep nice $CONFIG|cut -d : -f2`                ;export NICE
78  CPIO_IN=`grep cpio_in $CONFIG|cut -d : -f2`          ;export CPIO_IN
79  CPIO_INL=`grep cpio_inl $CONFIG|cut -d : -f2`        ;export CPIO_INL
80  CPIO_INU=`grep cpio_inu $CONFIG|cut -d : -f2`        ;export CPIO_INU
81  CPIO_OUT=`grep cpio_out $CONFIG|cut -d : -f2`        ;export CPIO_OUT
82  REVERSE=`grep reverse $CONFIG|cut -d : -f2`          ;export REVERSE
83  REWIND=`grep rewind $CONFIG|cut -d : -f2`            ;export REWIND
84  TAPE_CTRL=`grep tapecntrl $CONFIG|cut -d : -f2`      ;export TAPE_CTRL
85  TAPE_DRIVE=`grep tapedevr $CONFIG|cut -d : -f2`      ;export TAPE_DRIVE
86  TAPE_DRIVEN=`grep tapedevn $CONFIG|cut -d : -f2`     ;export TAPE_DRIVEN
87  WORKING_DIR=`grep working_dir $CONFIG|cut -d : -f2`  ;export WORKING_DIR
88
89  ########################################################################
90  # Prepare system and files
91  ########################################################################
92  echo &quot;$CLS$HI...........................Reading in tape directory............................$LO&quot;
93
94  $TAPE_CTRL $TAPE_DRIVE $REWIND 2&gt;/dev/null
95  cd $WORKING_DIR
96  $CPIO_INU&lt;$TAPE_DRIVEN &quot;tape.directory&quot; 2&gt;/dev/null
97
98  pr -3 -a -t -n $WORKING_DIR/tape.directory&gt;$WORKING_DIR/tape.rchoices
99  pr -t -n $WORKING_DIR/tape.directory&gt;$WORKING_DIR/tape.choices
100
101 ########################################################################
102 # This function displays the tape directory
103 ########################################################################
104 DIS_dir() {
105 CDAY=`ls -l $WORKING_DIR/tape.directory|cut -c42-48`
106 CTIME=`ls -l $WORKING_DIR/tape.directory|cut -c49-53`
107
108 echo &quot;$CLS$HI...............Current Tape Directory Created on $CDAY at $CTIME...............$LO&quot;
109 cat $WORKING_DIR/tape.rchoices
110 }
111
112 ########################################################################
113 # This function asks which Tape File System is wanted
114 ########################################################################
115 FTS_dir() {
116 # valid choice loop.
117 while true
118 do
119    $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
120         {
121         printf &quot;%d&quot;, $1 + 2
122         } '` 0
123
124    echo &quot;$HI Choose the $BLINK NUMBER $LO$HI of a Tape File System to access or X to exit:
$LO\c&quot;
125    $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
126         {
127         printf &quot;%d&quot;, $1 + 2
128         } '` 66
129    read TFS;export TFS
130
131    $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
132         {
133         printf &quot;%d&quot;, $1 + 1
134         } '` 69
135    echo &quot;\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b&quot;
136
137    # Check to make see if they want to quit.
138    if [ &quot;$TFS&quot; = &quot;X&quot; -o &quot;$TFS&quot; = &quot;x&quot; ]; then
139       clear_bottom;$CURSOR 16 0;echo &quot;Quiting now.&quot;;rewind 2&gt;/dev/null;exit
140     fi
141
142     # find the highest available choice.
143     for i in `cat $WORKING_DIR/tape.choices| awk '{ print $1 }'`
144     do
145        echo $i&gt;$WORKING_DIR/HIGH_CHOICE
146     done
147
148     HC=`cat $WORKING_DIR/HIGH_CHOICE`;export HC
149     # check to make sure their choice is either &gt;=1 or &lt;= $HC
150     if [ &quot;$TFS&quot; -lt 1 -o &quot;$TFS&quot; -gt &quot;$HC&quot; ]; then
151        clear_bottom;$CURSOR 16 0
152        echo &quot;Please choose the $HI$BLINK NUMBER $LO representing your choice.&quot;
153        sleep 2
154      else
155        break
156      fi
157 done
158
159 CDIR=`awk '
160    {
161    if ($1 == x)
162       printf &quot;%s\n&quot;, $2
163    }
164    ' x=$TFS tape.choices `
165
166 SFB_NUM=`echo $TFS|awk '{ print x-1 }' x=&quot;$TFS&quot;`
167 echo &quot;Fast Forwarding $SFB_NUM Tape Sections&quot;&gt;$WORKING_DIR/tape.sfb_num
168
169 echo &quot;\n&quot;
170 echo &quot;`cat $WORKING_DIR/tape.sfb_num`\c&quot;
171 echo &quot; to: $CDIR\c&quot;
172 echo &quot;\n&quot;
173
174 $TAPE_CTRL $TAPE_DRIVEN $FORWARD $SFB_NUM 2&gt;/dev/null
175 }
176
177 ########################################################################
178 # This function is the main menu for nrestore
179 ########################################################################
180 nrestore_menu() {
181 while true
182 do
183    $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
184         {
185         printf &quot;%d&quot;, $1 + 2
186         } '` 0
187    echo &quot;$HI...........................Tape Management Main Menu............................$LO\n&quot;
188    clear_bottom
189    $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
190         {
191         printf &quot;%d&quot;, $1 + 3
192         } '` 29
193    echo &quot;$HI Working on TFS No.$TFS $LO&quot;
194    $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
195         {
196         printf &quot;%d&quot;, $1 + 4
197         } '` 35
198    echo &quot;$HI$BLINK $CDIR $LO&quot;
199    echo &quot;$HI 1 $LO View file system files                                 &quot;
200    echo &quot;                                                                 &quot;
201    echo &quot;$HI 2 $LO Restore a file                                         &quot;
202    echo &quot;                                                                 &quot;
203    echo &quot;$HI 3 $LO Rewind Tape Drive and Exit                             &quot;
204    echo &quot;                                                                 &quot;
205    echo &quot;$HI 4 $LO Choose another Tape File System                        &quot;
206    echo &quot;                                                                 &quot;
207    echo &quot;$HI 5 $LO Exit (Leaving tape at current position)                &quot;
208    echo &quot;                                                                 &quot;
209    $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
210         {
211         printf &quot;%d&quot;, $1 + 7
212         } '` 51
213    echo &quot;$HI Your Choice? $LO\c&quot;
214   read RESP
215   case $RESP in
216     1) clear_bottom;$CURSOR 16 0;echo &quot;Viewing files&quot;;sleep 1;echo &quot;$CLS&quot;
217        echo &quot;A list of the files in TFS $CDIR will be saved in $WORKING_DIR/tfs_list&quot;
218        sleep 2
219     $CPIO_INL&lt;$TAPE_DRIVEN|tee $WORKING_DIR/tfs_list|pg -nsp &quot;Pg %d&gt; Type q to
quit:&quot;
220     restart
221     ;;
222     2) clear_bottom;$CURSOR 16 0;echo &quot;Going to Restoring Files Menu&quot;
223     sleep 1;RF_menu;;
224     3) clear_bottom;$CURSOR 16 0;echo &quot;Rewinding tape&quot;;rewind 2&gt;/dev/null
225     echo &quot;Done!&quot;;exit;;
226     4) clear_bottom;$CURSOR 16 0;echo &quot;Going to the Top&quot;;sleep 1
227     restart
228     ;;
229     5) clear_bottom;$CURSOR 16 0;echo &quot;Leaving&quot;;exit;;
230     *)$CURSOR 20 30;echo &quot;$HI Invalid Choice.$LO&quot;
231     sleep 1;$CURSOR 20 30;echo &quot;                        &quot;;;
232   esac
233 done
234 }
235
236 ########################################################################
237 # This function displays the file restore menu
238 ########################################################################
239 RF_menu() {
240 $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
241         {
242         printf &quot;%d&quot;, $1 + 2
243         } '` 0
244 echo &quot;$HI..........................Tape Management Restore Menu..........................$LO\n&quot;
245 clear_bottom
246 $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
247         {
248         printf &quot;%d&quot;, $1 + 3
249         } '` 29
250 echo &quot;$HI$BLINK Working on TFS No.$TFS $LO&quot;
251 echo &quot;                                                                 \n&quot;
252 echo &quot;$HI Please enter the complete restore path:$LO  \c&quot;
253 read REST
254 echo &quot;\n$HI Do you want to overwrite existing files if found?$LO \c&quot;
255 read OV
256 case $OV in
257    [Yy]*) SW=&quot;-icavBmud&quot;;;
258    [Nn]*) SW=&quot;-icavBmd&quot;;;
259 esac
260 echo &quot;\n$HI Is this a high priority restore?$LO \c&quot;
261 read HP
262 case $HP in
263   [Yy]*) CPIO=&quot;$NICE cpio&quot;;;
264   [Nn]*) CPIO=&quot;cpio&quot;;;
265 esac
266 cd /
267 echo &quot;$CLS&quot;
268 echo &quot;$HI..........................Restoring files. Please wait..........................$LO\n&quot;
269 echo &quot;\n$HI$BLINK Starting restore on $REST. Press Break to abort.$LO&quot;
270 sleep 3
271 $CPIO $SW &lt; $TAPE_DRIVEN &quot;$REST&quot;
272 cd $WORKING_DIR
273 restart
274 }
275
276 ########################################################################
277 # This function clears to the bottom of screen
278 ########################################################################
279 clear_bottom() {
280 $CURSOR `wc $WORKING_DIR/tape.rchoices|awk '
281         {
282         printf &quot;%d&quot;, $1 + 3
283         } '` 0
284
285 CROW=`wc $WORKING_DIR/tape.rchoices|awk '
286         {
287         printf &quot;%d&quot;, 20 - $1
288         } '`
289
290 while [ &quot;$CROW&quot; -gt 0 ]
291 do
292   echo &quot;                                                                              &quot;
293   CROW=`expr $CROW - 1`
294 done&gt;$WORKING_DIR/tape.clear_bot
295 cat $WORKING_DIR/tape.clear_bot
296 }
297
298 ########################################################################
299 # This function rewinds the tape to physical beginning and then forwards to volume
300 # one skipping volume 0
301 ########################################################################
302 restart() {
303 echo &quot;$HI Rewinding tape.$LO&quot;
304 $TAPE_CTRL $TAPE_DRIVE $REWIND 2&gt;/dev/null
305 $TAPE_CTRL $TAPE_DRIVEN $FORWARD 1 2&gt;/dev/null
306 DIS_dir
307 FTS_dir
308 }
309
310 ########################################################################
311 # This function rewinds the tape to the physcial beginning
312 ########################################################################
313 rewind() {
314 $TAPE_CTRL $TAPE_DRIVE $REWIND 2&gt;/dev/null
315 }
316
317 #######################################################################
318 # The main program...
319 #######################################################################
320 DIS_dir
321 FTS_dir
322 nrestore_menu</pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
