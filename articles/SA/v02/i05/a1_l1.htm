<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v02, i05: Listing 1: cbackup</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a1.htm">Article</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><span class=navbarLink><a href="a1_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a1_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/1993/sep93.tar"><b class=codeListing>sep93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1: cbackup</H1><p>
<PRE>
#!/bin/sh
#
# cbackup
#
# Backup files in a filesystem, simulating Berkeley-style
# dump levels but using find(1) and cpio(1).  Allow backup
# to be written to a tape drive on a remote host.
#
# usage:
#       cbackup level filesystem tape_device
#
# where:
#       level           incremental backup level (e.g.,
#                       0-9 where 0 is a full backup)
#       filesystem      name of the filesystem to be
#                       backed up (e.g., / or /usr)
#       tape_device     name of tape drive, prepended by
#                       hostname and a colon if on a
#                       remote host (e.g., /dev/rst0 or
#                       batman:/dev/rst0)

if [ $# -ne 3 ]; then
echo &quot;usage: $0 level filesystem tape-device&quot;
exit
fi

#
# get the name of the filesystem to backup
#
x=`echo $2 | cut -c1`
#
# if absolute path, make relative
#
if [ &quot;$x&quot; = &quot;/&quot; ]; then
FS=.$2
else
FS=$2
fi
#
# bookmark file, will have level number appeneded to it.
# We keep the bookmark file in the top of the filesystem
# being backed up so multiple filesystems can be backed
# up at different levels and different times.
#
BOOKMARK=$2/level

#
# get specified level and verify
#
LEVEL=$1
if [ $LEVEL -lt 0 ]; then
echo &quot;level must be 0-9&quot;
exit 1
elif [ $LEVEL -gt 9 ]; then
echo &quot;level must be 0-9&quot;
exit 1
fi
if [ $LEVEL = 0 ]; then
LEVELARGS=&quot;&quot;
else
#
# get all files back to previous level
#
LOWERLEVEL=`expr $LEVEL - 1`
LEVELARGS=&quot;-newer $BOOKMARK.$LOWERLEVEL&quot;
fi

if [ ! -f $BOOKMARK.$LOWERLEVEL ]; then
#
# no previous bookmark, so do a full backup
#
LEVELARGS=&quot;&quot;
fi

#
# verify that specified directory exists
#
cd /
if [ ! -d $FS ]; then
echo &quot;No such directory $2&quot;
exit 1
fi

#
# find the tape device and hostname if remote
#
TAPE=`echo $3 | awk -F: '{print $2}'`
#
#
if [ &quot;$TAPE&quot; = &quot;&quot; ]; then
TAPE=$3
HOST=&quot;&quot;
else
#
# get remote hostname
#
HOST=`echo $3 | awk -F: '{print $1}'`
fi

if [ &quot;$HOST&quot; = &quot;&quot; ]; then
#
# backup to local tape drive
#
echo &quot;Local backup to $TAPE&quot;
find $FS -xdev $LEVELARGS -print | cpio -ovB &gt;$TAPE
else
#
# backup to remote tape drive
#
echo &quot;Remote backup to $TAPE on $HOST&quot;
find $FS -xdev $LEVELARGS -print | cpio -ov | \
rsh $HOST dd of=$TAPE obs=5120
fi

#
# update modification time of bookmark file
#
touch $BOOKMARK.$LEVEL</pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
