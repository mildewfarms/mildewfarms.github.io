<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v02, i05:  How to Login to Any UNIX System and Get Your E-Mail</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><span class=navbarLink><a href="a7_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a7_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1993/sep93.tar"><b class=codeListing>sep93.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>How to Login to Any UNIX System and Get Your E-Mail</H1><p>
<P>
Russ Hill<P>

<B>Introduction</B><P>

If you work for a company with a large number of UNIX
workstations 
or UNIX systems, you probably depend on e-mail and would
find it useful 
to be able to log on to any workstation, not just your
own, to read 
your mail. Then if you were in a meeting in the next
building, or 
if your system went down, you could just borrow another
workstation 
or terminal for a while and handle your mail. At a large
site, it's 
always easy to find another workstation to use temporarily:
the point 
is, e-mail service does not need to be interrupted.<P>

This article presents one method of providing e-mail
services throughout 
your network. The method uses a central e-mail hub to
hold the mail 
and NFS to deliver the e-mail on demand.<P>

<B>The Central E-Mail Hub</B><P>

I have a Sun workstation, named &quot;central.mycompany.com,&quot;
which 
is dedicated as a network services system. This system
provides many 
central services, including serving as the central e-mail
hub. The 
system receives all e-mail because it is the only system
that has 
a sendmail daemon running (this not only allows for
centralized mail 
management, but also frees up valuable system resources
on the network). 
To make sure that central's is the only sendmail daemon
running, I 
enable site hiding in every system's sendmail configuration
file -- 
on any system not configured for site hiding, the local
copy of sendmail 
would be executed when mail was sent. This site hiding
provides central's 
address in each outgoing message so that replies and
returned messages 
are automatically routed back to central. Central accepts
mail for 
every user, and, additionally, each user is told that
his e-mail address 
is now &quot;user@central.mycompany.com&quot;.<P>

<B>Configuring Site Hiding</B><P>

To enable site hiding, you must change the sendmail
config file, /usr/lib/sendmail.cf, 
by uncommenting the DH configuration line and putting
in the 
fully qualified domain name of the central site:<P>
<PRE>
DHcentral.mycompany.com</pre><p>
<p>
You then re-freeze the configuration by executing sendmail

with the &quot;-bz&quot; option. This will create a
file called /usr/lib/sendmail.fc. 
(For a complete descripton of how to set up sendmail,
see your system's 
documentation. sendmail-5.65c+IDA-1.4.4.1 on UUNET also
has 
good documentation on sendmail.) All of this allows
central to accept 
any e-mail that is addressed to &quot;mycompany&quot;
and puts that 
e-mail into the central e-mail spool directory: /usr/spool/mail.<P>

The central machine must also receive mail for every
user. You can 
accomplish this by standardizing passwd information
among central 
and all the centralized mail clients of central. With
passwd 
information standard on all of these systems, each user
can log on 
and receive mail at any station. To standardize passwd
use 
NIS (see sidebar) or copy the same /etc/passwd file
around 
to all systems and always keep it consistent.<P>

<B>Exporting</B><P>

Once sendmail is configured, you'll use NFS to export
the e-mail spool 
directory. On central, I export the directory to every
other system 
by including it in central's /etc/exports file:<P>
<PRE>
/usr/spool/mail -root
/usr/spool/mqueue -root</pre><p>
<p>
One very important note: the spool directory must 
be exported allowing root access because the mail delivery
programs 
run as root when delivering e-mail. E-mail gets delivered
by the local 
system into central's e-mail spool directory using NFS.<P>

<B>Clients</B><P>

Each client must be able to accept mail for all users
who want their 
mail centrally located. Again, you ensure this by standardizing
passwd 
information between central and all the central mail
clients.<P>

The central server is NFS-mounted on each client system;
I NFS mount 
each system's /usr/spool/mqueue and /usr/spool/mail

directories through the /network/central directory to
a centrally 
located /usr/spool/mail. To do this, I first remove
the local 
client's /usr/spool/mail and /usr/spool/mqueue directories,

then add the following mount points to the central server:<P>
<PRE>
rm -rf /usr/spool/mail /usr/spool/mqueue</pre><p>
<p>
On each system I have a directory named &quot;/network&quot;

that has central's filesystem NFS mounted. I mount the
exported filesystems 
by including them in the client's /etc/fstab file:<P>
<PRE>
central:/usr/spool/mail  /network/central/usr/spool/mail nfs rw,bg,intr,retry=10 0 0 0


central:/usr/spool/mqueue  /network/central/usr/spool/mqueue nfs rw,bg,intr,retry=10 0 0 0</pre><p>
<p>

You must kill the sendmail daemon and comment out the

sendmail daemon's startup from the /etc/rc file on each
client 
so that there is only one sendmail daemon using the
central /usr/spool/mqueue 
directory. Find a line in /etc/rc similar to:<P>
<PRE>
# /usr/lib/sendmail -bd -q15m &amp;</pre><p>
<p>
and be sure it is commented out. Then save the new /etc/rc.<P>

The next step is to remove and link the directories
to the central 
location:<P>
<PRE>
rmdir /usr/spool/mail /usr/spool/mqueue
ln -s /network/central/usr/spool/mail \
/usr/spool/mail
ln -s /network/central/usr/spool/ \
mqueue /usr/spool/mqueue</pre><p>
<p>
<B>Enabling Site Hiding</B><P>

To enable site hiding, uncomment the DH line in each
system's 
sendmail configuration file, /usr/lib/sendmail.cf, and
re-freeze 
it. When you're finished, all mail is sent out and received
as if 
it were local.<P>

<B>Patching Mail</B><P>

You need to modify the local mailer, /bin/mail, to retry
if 
the /usr/spool/mail/${USER} file is locked at the same
time 
due to another /bin/mail process appending a message
(you can 
find source for /bin/mail several places on the Internet).
Just add 
a for loop to try a few retries before failing. This
will cut 
down on &quot;unknown mail error 1 -- unable to append&quot;
messages. 
Listing 1 is an excerpt from /bin/mail. The added code
is noted 
by the define RETRY. You can take out the #ifdef RETRY

-- this was included only to show the code added to
the function 
sendmail, which is only a portion of /bin/mail.c.<P>

<B>System V Machines</B><P>

If you are linking System V machines be sure to link
/usr/mail 
instead of /usr/spool/mail, and make a directory name
&quot;:saved&quot; 
in central's mail spool directory (the one linked to
/usr/mail). 
You can link BSD and System V machines to the same central
e-mail 
hub. Just symbolically link /usr/mail and /usr/spool/mail

on the individual client systems to the centrally located
mail spool 
directory through an NFS mount point. I have linked
a network of over 
300 machines to the same mail spool directories. They
are all linked 
to the same mail and mqueue directories. The number
of systems does 
not seem to have much effect.<P>

<B>Potential Problems of the Full NFS Method</B><P>

Sendmail usually uses the current process ID as part
of the filename 
in /usr/spool/mqueue. This can be a potential problem
with 
a large number of systems linked to the same directory
-- process 
IDs can conflict. This is rare as there are approximately
65,000 unique 
process IDs. It is usually a problem only when something
else goes 
wrong and causes a very large number of files to be
in /usr/spool/mqueue 
at the same time. With over 300 systems linked to the
same mail and 
mqueue directories for well over a year, I have had
great success 
and a great reduction in the number of day-to-day mail
problems.<P>

<B>Security</B><P>

I have not discussed security. If you want tight security,
turn off 
e-mail completely. The method discussed in this article
is secure 
if you do not give out root access to your client machines.
Since 
root access across NFS is necessary for this central
mail method to 
work, any root user on any client machine can read anyone
else's mail. 
Mail is owned by the user with read-write permissions,
it has the 
group &quot;daemon&quot; with read-write permissions,
and world permissions 
are closed with no access.<P>

<B>Conclusions</B><P>

This type of centralizing mail works very well. I suggest
only centralizing 
similar machines. All SunOS systems are centralized
with a Sun server, 
Ultrix systems are centralized with an Ultrix server,
and so on. This 
helps keep things straightforward if you ever have problems
and need 
a vendor's technical support. With all of these &quot;pockets&quot;

of mail hubs you can create a heirarchy of mail hubs.
<P>




<P>


<H1>About the Author</H1><p>
<P>
Russ Hill graduated from the University of Florida
in Computer 
Engineering in August 1990 and has been working for
Harris Space Systems 
Corporation as a UNIX Sysadm since September 1990. He
works with Irix, 
Ultrix, ISC, SunOS, Domain/OS, CX/UX, HP-UX, and AIX
UNIX systems. 
He is currently enrolled in the Master's degree program
in Computer 
Science at the University of Central Florida.<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
