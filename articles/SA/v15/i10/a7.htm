<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v15, i10: OpenBSD and TACACS+</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a7_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a7_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/2006/oct2006.tar"><b class=codeListing>oct2006.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><img src="a7.gif" width="200" height="167" align="right">OpenBSD and TACACS+</h1>
            <p> Eric Taylor 
          <p> When working at a site with multiple network 
            administrators and a required level of accountability, using a centralized 
            database of user accounts and audit logs is one of the best practices. On 
            routers and switches, it is helpful to use a centralized server to allow 
            administrative control of access, privilege levels, and accountability for 
            changes made to the devices. In my experience, the TACACS+ protocol along 
            with OpenBSD makes a good combination for completing this task. TACACS+ is 
            primarily a Cisco-specific authentication protocol, and not many other 
            vendors have adopted support for it. 
          <p> In this article, I'll show how to install and 
            configure TACACS+ as well as how to make changes necessary to the operating 
            system for adding the service, starting the daemon upon booting, turning 
            over the TACACS+ log files, and sending daily changes of the log file via 
            email. I'll also provide a sample TACACS+ client configuration on a 
            Cisco Catalyst switch. I will assume that you already have a system loaded 
            with OpenBSD 3.9 connected to the network. 
          <p>

            <b>TACACS+ Installation </b>
          <p> The installation is pretty easy. A pre-packaged TACACS+ can be found on the OpenBSD package 
            page or the source code can be found at the maintainer's Web site at:
          <p>

          <pre>
http://www.gazi.edu.tr/tacacs/
            </pre>
For the purpose of this article, grab the pre-package TACACS+ by issuing the following command.
<p>

<pre>
Tac# pkg_add -v ftp://ftp.openbsd.org/pub/OpenBSD/3.9/ \
  packages/i386/tacacs+-4.0.4ap1.tgz 
</pre>
Once the package is installed successfully, you can 
    now edit the operating system to allow the TCP socket as a service. You 
    will need to add the following line to the /etc/services file:
<p>

<pre>
tacacs+         49/tcp 
</pre>
If you want the TACACS+ to start every time the 
    operating system starts, you'll need to edit the /etc/rc.local file. 
    Add the following at the end of the file:
<p>

<pre>
if [ "X${tac_flags}" != X"NO" ]; then 
      echo -n ' TACACS+ Started...'; \
        /usr/local/sbin/tac_plus ${tac_flags}; 
fi 
</pre>
The above addition will allow you to use the 
    combination of the /etc/rc and the /etc/rc.conf.local files to start and 
    control configuration flags. Next, you'll need to create the 
    /etc/rc.conf.local and the following line:
<p>

<pre>
tac_flags="-C /etc/tac.conf"
</pre>
The TACACS+ daemon will start upon boot and look for a 
    configuration file in the /etc directory named tac.conf.
<p>

<b>TACACS+ Configuration </b>
<p> There are many options for configuring the tacacs+ 
  daemon. The package used here includes a user guide that can be found in 
  the /usr/local/share/doc/tacacs+/ directory. In Listing 1, I use some basic 
  options to allow us to authenticate against the BSD passwd file, use a 
  template group for users and write accounting logs to /var/logs/tac.log. 
<p> The first line configures a key for TACACS+ to 
  encrypt its packets across the network. This key is optional, but without 
  it, usernames and passwords will be sent over the network in plain text. 
  The identical key must also be configured on any network device that will 
  communicate with TACACS+ daemon: 
<p>

<pre>
Key = "SecureTacKey"
</pre>
The second line specifies the path to the accounting 
    file. This file will contain commands written while in the enable mode of 
    the network device. We can use this information for auditing and 
    troubleshooting purposes:
<p>

<pre>
accounting file = /var/log/tac.log 
</pre>
In the next section, I use a group to specify the 
    options that admins will receive as they authenticate against our TACACS+ 
    server:
<p>

<pre>
# Group for admins 
group = admins { 
      default service = permit 
      service = exec { 
      priv-lvl = 15 
      } 
      cmd = configure { 
      permit .* 
      } 
} 
</pre>
This configuration will allow anyone in the admins 
    group to use the exec service at level 15. Level 15 will allow full 
    permissions on the network device.
<p> The last section specifies the user name and states 
  where to find the password to use during authentication: 
  
<pre>
user = eric { 
      member = admins 
      login = file /etc/passwd  

} 
</pre>
This basic configuration file will authenticate user 
    eric via the operating systems password file, with full configuration 
    permissions to the device, and will send account data to the 
    /var/log/tac.log. If you do not want to give your TACACS+ user the ability 
    to log into the TACACS+ server, change the login line to read <b>login = cleartext "userspassword"</b>. Please make sure you set the proper permissions on the 
    tac.conf file if you use cleartext passwords.
    <p>

    <b>Managing the TAC Log </b>
  <p> Depending on your network environment, you might find 
    you need to turn over the log from time to time. The default installation 
    of the OpenBSD operating system executes a cron job that rotates system log 
    files, the /usr/bin/newsyslog. We can edit the configuration file, 
    /etc/newsyslog.conf, to add the tac.log file. We can also specify that the 
    log be turned over at our leisure. Something similar to the following will 
    turn over the log file and keep the last 52 files: 
  <p>

  <pre>
/var/log/tac.log   root:wheel  600  52 
     *  168  ZB /var/run/tac_plus.pid 
    </pre>
I also use the scripts included with OpenBSD to send 
    the daily changes of the tac.log file to the roots mail account. The 
    default installation of OpenBSD includes a script that checks the security 
    of the operating system. If we add the log file to the end of the 
    /etc/changelist, when the /etc/daily runs, the file will be checked for 
    differences in the previous day's log file.
<p> There is one caveat with this configuration. When we 
  use the newsyslog to turn over the log file, the /etc/daily will show all 
  differences as removed entries from our files. To get around this issue, we 
  need to delete the current difference file, 
  /var/backups/var_log_tac.log.current. If we schedule this deletion after we 
  run the newsyslog and before we run the /etc/daily, we will still receive 
  all the changes in our tac.log from the daily security script. 
<p>

<b>TACACS+ Client Configuration </b>
<p> Listing 2 shows a sample configuration from a Cisco 
  Catalyst 3550 switch. The configuration specifies the tac server for 
  authentication, authorization, and accounting (AAA). The sample 
  configuration will allow us to use the TACACS+ server as our primary means 
  of AAA; then if the server is not available, it will look to the local 
  database as a backup. Full configuration of the AAA model is beyond the 
  scope of this article. Please refer to your vendor's documentation 
  for specific commands. 
<p>

<b>Conclusion </b>
<p> Using this simple TACACS+ configuration, you can 
  start the process of centralizing user access and audit logs of your 
  TACACS+ clients. The example configuration leaves a lot to explore. This 
  setup can be used to create lower privilege-level users and allow them 
  access to only certain commands. You can also audit access to TACACS+ 
  enabled features like PPTP or PPP.  
<p> Using the pf firewall included with OpenBSD, you can 
  lock down access to the TACACS+ server for only the necessary ports and 
  protocols. With the combination of the security features offered by OpenBSD 
  "out of the box" and your TACACS+ daemon, you can have a pretty 
  nice setup. Best of all, you can do many basic features at a low cost for 
  hardware and the OpenBSD CD.  
<p>

<i>Eric has worked as a network administrator for six 
  years at Kenner Army Health Clinic, a Medical Treatment Facility in the US 
  Army. As a part of the DoD GiG environment, they have a high emphasis on 
  network security and accountability. Eric is a huge fan of the OpenBSD 
  operating system and encourages everyone to support the cause and purchase 
  the operating system on CD. He can be reached at: <b>er587@hotmail.com</b>. </i>
<p>

</table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
