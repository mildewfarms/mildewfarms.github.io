<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v15, i15: Security Best Practices for Console Servers: An Interface Approach </TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a2_s1.htm">Sidebar
            </a></span></td>
		<td><a href="../../../../source/SA/2006/oct2006.tar"><b class=codeListing>oct2006.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1>Security Best Practices for Console Servers: An Interface Approach </h1>
            <p> Ron McCarty
          <p> Console servers have become key components of managing 
            large centralized data centers as well as remote sites and shops that 
            require quick administrative access to systems during outages. 
          <p> Because of the critical nature of console servers and 
            the escalated privileges they can grant to the systems being managed, 
            systems administrators must have a strong understanding of the security 
            implications involved and take the necessary steps to mitigate any risk 
            associated with providing console access. The risks associated with console 
            servers are well worth the return benefits assuming good security practices 
            are used to minimize the effect of those risks. 
          <p> This article gives an overview of those risks as well 
            as some best practices that can mitigate them. The approach used for this 
            article is an interface approach -- each interface and the logical 
            interfaces "above" the interfaces will be covered from a 
            security standpoint. 
          <p>

            <b>Network: Ethernet </b>
          <p> The Ethernet interfaces used by the console server 
            provide the physical access to the IP network for the console server. 
            Within some console servers, a redundant network interface is provided. 
            Ideally, this interface should be provisioned as a redundant interface to 
            provide additional availability. However, if the redundant Ethernet 
            interface is not used, then the interface should be removed if possible or 
            configured into an administrator down state. The interface should not be 
            connected to any networks other than the network it is providing redundancy 
            on, since this can be used to effectively bridge or route between two 
            networks. 
          <p> Shops with strong intrusion detection postures will 
            want to track both the MAC and IP addresses of their console server 
            equipment. 
          <p>

            <b>Network: IP </b>
          <p> The Ethernet address will need an IP address to make 
            the console server reachable on the network; however, there may be a 
            tendency to simply turn up the console server, place it in a convenient 
            network, and start plugging in servers, especially in networks where 
            console servers have not been deployed. 
          <p> There are several steps the sys admin can take to ease 
            management and provide a more robust security posture for the console. In 
            environments that have the most stringent network security, the console 
            server should be placed in a DMZ dedicated to network and systems 
            management. This will allow traffic to be filtered and only allowed to 
            specific IT networks that are identified for sys admin workstations. This 
            security posture will also lends itself to mitigating risk of most employee 
            attempts to access the console servers. 
          <p> Even environments that do not require the toughest 
            security should also consider a DMZ placement, since a firewall can provide 
            protection to services that may not be able to be disabled on the terminal 
            server. 
          <p> If the environment does not support such a stringent 
            security policy, then the console server should be placed on an IP network 
            designed for network management. This will position the console server to 
            ease administration for future intrusion detection investigations, where 
            sensors need to be placed around devices to try to identify an intruder by 
            separating the console traffic away from normal production traffic. 
          <p>

            <b>Network: Telnet</b>
          <p> Don't. With secure shell (SSH) being proven over 
            the last several years, there is no reason to provide a method such as 
            telnet that sends passwords in clear text. Many less flexible sys admin 
            will try to rationalize the access because telnet (client) comes installed 
            on workstation and PC operating systems. What needs to be very clearly 
            understood, however, is that a sniffer placed on a port mirrored to the 
            console server can grab passwords quickly, especially if the sniffer is 
            placed there during a patch weekend where numerous boxes are accessed and 
            rebooted. 
          <p>

            <b>Network: Secure Shell</b>
          <p> Secure Shell has become the de facto standard for 
            direct login in Unix shops that prefer to keep their servers secure. Use it. 
          <p>

            <b>Network: SNMP</b>
          <p> The Simple Network Management Protocol (SNMP) is very 
            popular for network management and monitoring. Due to the wide variances in 
            versions, vendor interpretations and implementations, and the 
            vulnerabilities associated with a poor posture when using SNMP, the 
            following approach can be used to ensure the most secure posture of SNMP: 
          <p>

          <ul>
            <li> SNMP Access Control Lists: If the console 
              server supports SNMP access control lists (often referred to as the 
              management IP address in the configuration), then the console servers 
              should be configured with the particular IP addresses that are allowed to 
              access the console server via SNMP. 
              
            <li> No SNMP Monitoring and No SNMP Management:
              If the console server is not monitored using SNMP tools and its management 
              interface does not use SNMP, then the SNMP public (read-only) community and 
              private community should be administrative disabled. If the console server 
              does not support turning off SNMP access via this method, then the public 
              and private community strings need to change from the default public and 
              private strings to something more secure. If encrypted strings are 
              supported, then the encryption needs to be turned on. (It does not matter 
              if the rest of your SNMP does not support the encryption -- in this 
              scenario, you do not need the access for monitoring or management.) 
              
            <li> SNMP Monitoring but No SNMP Management: With this scenario, the private 
              community strings should be administratively shut down, but if this is not 
              possible, then the private string encryption should be activated. If this 
              is not possible, the only choice is to change the default private string. 
              For the public string, encryption should be turned on and encryption 
              activated. Whether or not encryption is available, the public string should 
              be changed. 
              
            <li> SNMP Monitoring and SNMP Management: In 
              this scenario, if encryption is supported, then it needs be activated and 
              the standard strings need to be changed. 
        </ul>
            <p>

            <b>Network: HTTP </b>
          <p> Don't. The Hypertext Transfer Protocol (HTTP), 
            like telnet, is an open protocol. Therefore, authentication credentials are 
            sent in clear text. Generally, there is no need to provide HTTP access 
            since SSL is provided for most modern console servers. If possible, HTTP 
            access should be administratively shut down. If HTTP is configurable on a 
            per-user basis, then HTTP should not be granted to any users. 
          <p>

            <b>Network: HTTP with SSL </b>
          <p> Because of the proliferation of e-commerce, secure 
            socket layer (SSL) has become a common Web interface for providing 
            encryption. By encrypting the traffic, passwords and sensitive data will be 
            not be passed in the clear where they could easily be intercepted. 
          <p>

            <b>Network: Authentication Protocols </b>
          <p> Authentication protocols are numerous; however, not all 
            authentication protocols are created equal. Luckily, due to the concern for 
            security created by recent legislation at both the federal and state 
            levels, there has been quite a bit of interest in supporting encryption. 
            Protocols without encryption should be avoided, and research and due 
            diligence are the key to selecting a secure method to authenticate without 
            assuming unnecessary risk. Also keep in mind that although many older and 
            proven technologies are not encrypted, they have been improved upon with 
            secure versions. For example, the lightweight directory access protocol 
            (LDAP), is available as secure LDAP. 
          <p>

            <b>Network: FTP/TFTP/scp </b>
          <p> File transfer may be needed on the console server to 
            perform system upgrades, system backups, and log rotation; however, the 
            file transfer protocol (FTP) and trivial file transfer protocol (TFTP) 
            should be avoided since passwords are passed in 
            clear text. Most vendors have provided secure methods, such as secure copy 
            (scp), to replace this functionality. 
          <p> If TFTP is necessary for booting the system, then the 
            TFTP server needs to ensure adequate security is provided by the TFTP 
            daemon and directory permissions. This is because TFTP does not provide any 
            authentication method, and all traffic is sent in clear text. (Booting from 
            local storage is preferred for this reason, but larger environments may 
            choose to take on the risk associated with TFTP to support large numbers of 
            console servers centrally.) 
          <p> FTP and TFTP should be shut off if the console server 
            supports the functionality and they are not required. 
          <p>

            <b>Network: NTP</b>
          <p> The network time protocol (NTP) is supported on most 
            console servers. NTP can support a broadcast and a query method of keeping 
            systems in sync. The query method is preferred since rogue NTP services can 
            be activated on the network. In addition to using the query method, there 
            should also be at least two NTP servers for redundancy within the network. 
            For the most secure method of using NTP, configure the console server to 
            query NTP and provide the IP address of the NTP servers.
          <p> If NTP is unavailable, ensure the time is set correctly 
            on the console server, because any intrusion or unauthorized use 
            investigations will depend on accurate time reporting.
          <p>

            <b>Network: ACLs</b>
          <p> Some console servers support access control lists 
            (ACLs) that allow only specific traffic to be passed on to the applications 
            layer. ACLs should be considered to limit access only from appropriate 
            workstation and remote networks. If feasible, only specified protocols 
            should be allowed. (The feasibility often depends on the ease of use of the 
            interface.)
          <p>

            <b>Wireless</b>
          <p> Wireless connectivity to console servers has become 
            popular due to the almost universal deployment of wireless into laptops. 
            Wireless provides easy access to the console server, but it must be 
            deployed securely. Under the right conditions, it can provide access to 
            intruders who would not normally have access to the network. Wireless 
            access should be considered carefully. 
          <p> If wireless access is needed (in most environments it 
            is a convenience, not a requirement), ensure it is deployed used the latest 
            most secure protocols based upon the WiFi Protected Access Protocol (WAP) 
            that is part of the 802.11 security specification. Additional security can 
            also be implemented using MAC filtering (but MAC addresses can be spoofed).
          <p>

            <b>Console Ports</b>
          <p> Console security is provided mostly through limiting 
            the physical access to the system; however, there is best practice to 
            further mitigate risk. Ports that are not used on the console server should 
            be administratively shut down to mitigate the likelihood of someone gaining 
            unauthorized access to a new system. 
          <p> On console servers that provide user assignments to 
            ports, users should be provided access only to the console ports for which 
            they are authorized. Even though the server connected to the port will 
            authenticate the user as well, this provides tiered security and ensures 
            someone does not tie up a port inadvertently. 
          <p> Port logging and buffering should be activated for all 
            ports. In addition to the additional security information this provides, it 
            also supplies valuable operational data during a system crash that may not 
            get written to disk before the crash. 
          <p>

            <b>Modems</b>
          <p> Modems can provide an additional method to gain access 
            to the console server and can be very useful in a site impacting outage. 
            However, modems also provide an additional method into the network that 
            requires careful consideration. 
          <p> If a modem is provided but not needed, it should be 
            removed or administratively disabled and no connections to the telephone 
            network should be made. 
          <p> If a modem is needed, then the vendor's 
            recommendation on securing it and assigning user rights followed closely. 
            Any logging should be turned on. Call detail records from the PBX or 
            telephone company should also be reviewed as part of a regular security 
            review. 
          <p>

            <b>Portable Computer Cards </b>
          <p> Some console servers use portable computer cards (PC 
            cards, also sometimes still called Personal Computer Memory Card 
            International Association [PCMCIA] cards) to provide additional 
            functionality such as Ethernet, wireless, and modems. The PC Card should be 
            treated like the functionality it is providing, such as following best 
            practice for modems. 
          <p>

            <b>Summary</b>
          <p> By taking an interface approach, many of the security 
            risks that come with console servers can be removed or mitigated. To assist 
            in the interface approach a checklist is provided in the sidebar. By 
            combining this interface approach with a good systems approach that covers 
            patching, user identification and password management, and sound 
            management, your console servers can stay secure. 
          <p>

            <i>Ronald McCarty is a systems/network professional, 
              freelance author, and founder of Your Net Guard, a company specializing in 
              systems, networking, and security services. Ron completed his undergraduate 
              in CIS with University of Maryland and is currently seeking his graduate 
              degree from Capella University. His free time is spent with his best friend 
              and wife, Claudia, and their two children. Ron can be reached at <b>mccarty@mcwrite.net</b>.</i>
          <p>

          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
