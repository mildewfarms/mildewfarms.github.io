<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v15, i05: Listing 2 Monitor script</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a5.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a5_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a5_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a5_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink">Listing 2</span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a5_l3.htm">Listing 3</a></span></td>
		<td><span class="navbarLink"><a href="a5_l4.htm">Listing 4</a></span></td>
		<td><span class="navbarLink"><a href="a5_l5.htm">Listing 5</a></span></td>
		<td><span class="navbarLink"><a href="a5_l6.htm">Listing 6</a></span></td>
		<td><span class="navbarLink"><a href="a5_s1.htm">Sidebar 1</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a5_s2.htm">Sidebar 2</a></span></td>
		<td><span class="navbarLink"><a href="a5_t1.htm">Table 1</a></span></td>
		<td><span class="navbarLink"><a href="a5_t2.htm">Table 2</a></span></td>
		<td><span class="navbarLink"><a href="a5_t3.htm">Table 3</a></span></td>
		<td><a href="../../../../source/SA/2006/may2006.tar"><b class=codeListing>may2006.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><B>Listing 2 </B><I>Monitor script </i></h2>
            <p> 
            <pre>
#!/usr/bin/perl -w

use strict;
use Proc::ProcessTable;
use DBI;
use Time::Format qw(%time);

my $debug = '0';

############## Database Configuration 
# $ENV{ORACLE_HOME} Path to oracle installation
# $dbuser oracle account used to connect to oracle 
# $dbpass oracle password for account 
# @db = qw( ow06adm ...) tnsname of database to check

$ENV{ORACLE_HOME} = '/opt/oracle/product/8.1.7';
my $dbuser = 'db_username';
my $dbpass = 'db_password';
my @db = qw( instance1 );

##################### Check the DB
# This should return true to the cluster
# even when a DB is down. The reason for this is 
# becasue the Application will exit if the DB is not
# Online. This is to trick the cluster

#logit('Start JAVA Monitor');

foreach my $db (@db)  {
    my $result = check_db($db);
    if($result) {
        foreach (@$result) {
            if ( @$_[0] =~ /^\bOPEN\b$/ ) {
                debug($db,'OK');
            } else {
                debug($db,'DOWN');
                logit("ORACLE $db down, but monitor should be true");
                exit 0;
            }
        }
    } else {
        logit("ORACLE $db down, but should be true");
        exit 0;
    } 
}

##################### Check the Processes
# Inorder for the monitor to be fast we take one snapshot 
# of the proc table and use for remaining checks. However 
# there is a risk that during the check a process could fail
# therefore this is not considered a accurate HA script.
# To ensure that each check rechecks the proc table comment the 
# Following Line and uncomment the same line in the check_proc
# sub routine.

my $t = new Proc::ProcessTable;

##################### Check the JAVA APP Processes
# If the JAVA_APP1 process is down then inform the 
# cluster that there is a fault. This is done
# with the exit code 100 (For complete failure).

unless (&amp;check_proc('java -server -Djava_app1','3000')) {
    logit('JAVA APP 1 Offline OLY monitor should return false');
    exit 100;
}

#logit('End JAVA Monitor');

sub check_proc {
    my ($proc,$uid) = @_;
    my $pid;
    #my $t = new Proc::ProcessTable;
    foreach my $p ( @{$t-&gt;table} ){
       unless($p-&gt;cmndline =~ /\b$proc\b/ &amp;&amp; $p-&gt;uid =~ /$uid/) {
            next;
        }
        $pid = $p-&gt;pid;
        debug($proc,'OK');
    }

    unless ($pid) {
        debug($proc,'DOWN');
        return 0;
    }
}

sub check_db {
    my ($db) = shift;
    my $dbh = DBI-&gt;connect("dbi:Oracle:$db", $dbuser, $dbpass, { 
            RaiseError =&gt; 0,
            AutoCommit =&gt; 1,
            PrintError =&gt; 0 });  

    unless ( $dbh ) {
        #warn "Could not connect to $db: $DBI::errstr\n" ;
        return 0;
    }

    my $sth = $dbh-&gt;prepare("select status from v\$instance");
    $sth-&gt;execute;
    my $row = $sth-&gt;fetchall_arrayref;
    $sth-&gt;finish;
    $dbh-&gt;disconnect;
    return $row;
}

sub debug {
    my ($foo,$bar) = @_;
    printf("%-22s %-22s %-5s\n",$time{'dd/mm/yy hh:mm:ss.mmm'},$foo,$bar) \
      if ($debug);
}

sub logit {
    my $message = shift;
    system("/usr/bin/logger -p daemon.notice -t Cluster.oly-java $message");
}</pre></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
