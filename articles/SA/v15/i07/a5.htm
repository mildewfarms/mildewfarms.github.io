<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v15, i07: Command Usage Analysis</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a5_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a5_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a5_f3.htm">Figure 3</a></span></td>
		<td><span class="navbarLink"><a href="a5_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a5_f5.htm">Figure 5</a></span></td>
		<td><span class="navbarLink"><a href="a5_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a5_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a5_t1.htm">Table 1</a></span></td>
		<td><span class="navbarLink"><a href="a5_t2.htm">Table 2</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a5_t3.htm">Table 3</a></span></td>
		<td><span class="navbarLink"><a href="a5_t4.htm">Table 4</a></span></td>
		<td><a href="../../../../source/SA/2006/jul2006.tar"><b class=codeListing>jul2006.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><strong> <img src="a5.gif" width="200" height="167" align="right">Command Usage Analysis </strong></h1>
            <p> Mihalis Tsoukalos 
          <p> In this article, I am going to show how to analyze 
            user commands taken from multiple .bash_history files. After processing and 
            categorizing the available commands, I will graphically show the results. 
            Please keep in mind that the whole procedure has one important limitation 
            --&shy; you cannot tell the time or the date that the command was 
            given because you cannot store such information in .bash_history files. 
          <p>

            <b>Why Analyze? </b>
          <p> It is very useful for a systems administrator to have 
            a general idea of the commands that users run frequently on a system so 
            that the administrator can tune the system or give higher priorities to 
            certain users or commands according to their specific needs. 
          <p>

            <b>Collecting Command Data </b>
          <p> I asked some good friends of mine to send me their 
            .bash_history files. The output and the statistics will not contain any 
            real machine names or IPs for both security and privacy reasons. In this 
            article, the interest is in the actual commands and less in their 
            parameters. The parameters are only important for calculating the total 
            command size in characters. 
          <p> Before a systems administrator collects such data, she 
            may first need to ask users for permission or (if she does not ask) delete 
            sensitive information for privacy reasons depending on the Unix systems 
            policy. 
          <p> I will use six bash history files in this article. 
            Table 1 shows information about each file as well as the sums of each 
            column (the TOTALS row). 
          <p> Figure 1 shows the characters per line for each 
            history file and in total. Here, the total value is actually the mean value 
            of characters per line for all the input history files. This picture was 
            made using Microsoft Excel 2004 for Mac. Microsoft Excel is pretty handy 
            for relatively simple statistics and other types of calculations as well as 
            for creating charts. Its main disadvantage is that it is not scriptable 
            from the Unix command line. Nevertheless, it is an excellent tool. 
          <p>

            <b>Analyzing Command Data </b>
          <p> You will now learn a few ways of analyzing your 
            history command data. 
          <p>

            <b>Categorizing by Command Type </b>
          <p> For the purposes of this article, the following 
            command categories are created: 
          <p>

         <ul>   <li> Usual shell commands -- This 
              category includes Unix commands such as <b>ls</b>, <b>mkdir</b>, <b>rm</b>, <b>cd</b>, and <b>ll</b>, which is a frequent 
              alias to the <b>ls -l</b> command. <br>

          <li> Remote access and networking commands -- This category includes commands such as <b>ssh</b>, <b>telnet</b>, <b>ftp</b>, <b>wget</b>, <b>ncftp</b>, etc. <br>

          <li> Compile commands -- In this category 
            commands that denote source code compilations are included. This includes <b>gcc</b>, <b>javac</b>, etc. <br>

          <li> Other commands, custom commands, or user 
            scripts -- These are commands that define software and scripts that 
            are created by the user or other Unix commands.</ul>
            <p> To do such categorization, we first need to process 
              the history files using tools or scripting languages, such as Perl, PHP, 
              sed or awk. For this article, only Perl was used. Listing 1 shows the Perl 
              script that reads the input history files and creates the above 
              categorization (this also shows the categories in the Perl script). This 
              script not only categorizes the commands according to given Perl hash 
              structures but also counts the number of times a command has been found. 
            <p> Table 2 shows the output of the Perl script as 
              "Category Name" and "Total Number" pairs in a 
              better format; whereas Table 3 analytically presents the top 50 commands by 
              counting the total occurrences of each command inside the history files. 
            <p>

              <b>Categorizing by Total Command Length </b>
            <p> Another way to categorize command usage is with 
              respect to the length of the command. For the purposes of this article, 
              commands are categorized by length according to the following rules: 
            <p> Category 1: Commands with up to two letters. 
            <p> Category 2: Commands with three to five letters. 
            <p> Category 3: Commands with six to ten letters. 
            <p> Category 4: Commands with eleven to fifteen letters. 
            <p> Category 5: Commands with sixteen or more letters. 
            <p> Again, a Perl script is used for creating the 
              categories. The source code for the script can be seen in Listing 2. Table 
              4 shows the output of the Perl script in a better format. It should be 
              clear by now that you can create your own categories according to your own 
              specific needs. 
            <p>

              <b>Visualizing Command Data</b>
            <p> There are many ways to analyze the results. Using the 
              R statistical package, you can easily create very useful information from 
              Table 3. The following is how to insert the table data inside R and how to 
              get a brief summary of the data: 
            <p>

            <pre>
 &gt; DATA &lt;-read.table("/Users/mtsouk/docs/article/
command.usage.analysis/table3.data.txt", header=TRUE)
 &gt; summary(DATA) 
           Command     Frequency       Frequency....Top.50. 
./client     : 1   Min.   :  36.00   Min.   : 0.2604 
./server     : 1   1st Qu.:  56.25   1st Qu.: 0.4069 
./shutdown.sh: 1   Median :  99.50   Median : 0.7198 
OFF.pl       : 1   Mean   : 276.46   Mean   : 2.0000
ON.pl        : 1   3rd Qu.: 262.50   3rd Qu.: 1.8990 
bibtex       : 1   Max.   :2110.00   Max.   :15.2644 
(Other)      :44 
Frequency....TOTAL. 
Min.   : 0.2357 
1st Qu.: 0.3683 
Median : 0.6514 
Mean   : 1.8100 
3rd Qu.: 1.7186
Max.   :13.8143

 &gt;
              </pre>
            Note that the "TOTAL (Top-50)" and 
            "TOTAL" rows were not included inside the table3.data.txt file. 
            By using the pairs(DATA) command in the R command line, you can get the 
            image shown in Figure 2. What you see in Figure 2 is the graphical 
            representation of all the subsets of the "DATA" data set in 
            pairs.
            <p> Figure 3 shows a bar chart of the first two columns of 
              Table 3 using Microsoft Excel 2004 for Mac. Again, the "TOTAL 
              (Top-50)" and "TOTAL" rows were not included. 
  <p> Figure 4 shows a box plot for the Frequency column of 
    Table 3 again made with R using the boxplot(Frequency) command. Before 
    running this command, you must give attach(DATA) in order to create 
    separate data sets using the columns of the "DATA" data set. 
    The big advantage of box plots is that they are compact in size. On the 
    right of the box plot is a brief description of its meaning. The following 
    two definitions are useful: 
  <p>

          <ul>  <li> Percentile: We can find out 99 values 
              that divide our data set into 100 equal subsets. Each one of those 99 
              values is called a percentile. <br>

              <li> Outlier: An outlier is a data value that 
                is very big or very small with respect to the other values of a data set. 
                In network intrusion detection, the purpose is to find outliers (unusual 
                events) among a large number of regular events.</ul>
                  <p> Figure 5 shows a 3-D pie chart of Table 4. It is 
                    interesting that most of the commands are in the boundary classes (classes 
                    1 and 5). People either use small commands or big commands. 
                <p>

                  <b>Conclusions</b> 
                <p> So, after having all these charts and plots and boxes, 
                  what useful conclusions and information can you get? Well, this depends on 
                  your needs. You can use the information in many ways, including the 
                  following: 
                <p>

            <ul>  <li> Depending on the number of history file 
                                entries that you can get, you can keep weekly or monthly graphs for 
                                comparison. Radical changes may be a sign of abnormality. <br>

                                <li> You can find unusual commands so that you 
                                  can mine security incidents. <br>

                                <li> If you find that most of the people are 
                                  using heavy applications, you can upgrade your system. <br>

                                <li> You can advise people to use aliases for 
                                  the big length commands. Please note that your users may not like your 
                                  reading their commands for reasons of privacy, so advise them in a proper 
                                  way.</ul>
                                    <p> Being able to visualize this information makes your 
                                      life as a systems administrator easier, and sometimes it makes your 
                                      cooperation with your boss easier as well. Bosses tend to understand 
                                      graphics and images better than plain-text commands. Most of all, graphs 
                                      and charts are a high-level tool for watching many different Unix systems 
                                      at the same time. 
                                  <p>

                                    <b>Summary </b>
                                  <p> In this article, I have shown how to categorize 
                                    command history data located in text files according to your own criteria. 
                                    Perl, the R statistical system, and Microsoft Excel 2004 for Mac were used 
                                    in this article for creating meaningful plots, graphs, and charts. No 
                                    matter what kind of Unix system you administer, the presented techniques 
                                    can make your life easier. 
                                  <p>

                                    <b>Acknowledgments</b> 
                                  <p> I thank Agisilaos, Dimitris, Georgia (she gave me two 
                                    files!), and Nikos for giving me their .bash_history files for the purposes 
                                    of this article. 
                                  <p>

                                    <b>References and Links </b>
                                  <p> 1. Tsoukalos, Mihalis. 2005. "Using the R System for Systems Administration", <i>Sys Admin</i>, 14(1), 40-46. 
                                  <p> 2. R Project home page -- <b>http://www.r-project.org/</b>
                                  <p> 3. Venables, W.N. and B.D. Ripley. 2002. <i>Modern Applied Statistics with S</i>,  4th Ed. Springer Verlag. 
                                  <p> 4. Christiansen, Tom and Nathan Torkington. 2003. <i>Perl Cookbook</i>, 2nd Ed. O'Reilly. 
                                  <p>

                                    <i>Mihalis Tsoukalos lives in Greece with his wife, 
                                      Eugenia, and works as a high school teacher. He holds a B.Sc. in 
                                      Mathematics and a M.Sc. in IT from University College London. Before 
                                      teaching, he worked as a Unix systems administrator and an Oracle DBA. He 
                                      is currently writing a book about Mac OS X Dashboard Widgets. Mihalis can 
                                      be reached at: <b>mctsouk@sch.gr</b>.</i>
                                  <p>

        </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
