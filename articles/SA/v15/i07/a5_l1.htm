<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v15, i07: Listing 1 The CommandTypes.pl perl script</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a5.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a5_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a5_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a5_f3.htm">Figure 3</a></span></td>
		<td><span class="navbarLink"><a href="a5_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a5_f5.htm">Figure 5</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a5_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a5_t1.htm">Table 1</a></span></td>
		<td><span class="navbarLink"><a href="a5_t2.htm">Table 2</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a5_t3.htm">Table 3</a></span></td>
		<td><span class="navbarLink"><a href="a5_t4.htm">Table 4</a></span></td>
		<td><a href="../../../../source/SA/2006/jul2006.tar"><b class=codeListing>jul2006.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2>Listing 1  <i>The CommandTypes.pl perl script</i></h2>
<pre>
#!/usr/bin/perl -w

# $Id: CommandTypes.pl,v 1.1 2006/03/18 08:30:53 mtsouk Exp mtsouk $
#
# Please note that this is alpha code
# Provided without any guarantees
#
# Programmer: Mihalis Tsoukalos
# Date: Saturday 18 March 2006
#
# Command line arguments
# program_name.pl &lt;directory with history files&gt;

use strict;

my $directory = "";
my $filename = "";

# Total Lines read
my $TL = 0;
# Usual shell commands.
my $CAT1 = 0;
my %CATHASH1 = ( "ls", 0,
                  "mkdir", 0,
                  "rmdir", 0,
                  "rm", 0,
                  "cd", 0,
                  "l", 0,
                  "ll", 0,
                  "mv", 0,
                  "pwd", 0,
                  "w", 0,
                  "history", 0,
                  "grep", 0,
                  "emacs", 0,
                  "sudo", 0,
                  "man", 0,
                  "vim", 0,
                  "gvim", 0,
                  "less", 0,
                  "chmod", 0,
                  "lsmod", 0,
                  "su", 0,
                  "lilo", 0,
                  "lsof", 0,
                  "cp", 0,
                  "tail", 0,
                  "kill", 0,
                  "ps", 0,
                  "echo", 0,
                  "cat", 0,
                  "wc", 0,
                  "alias", 0,
                  "rar", 0,
                  "unzip", 0,
                  "zip", 0,
                  "top", 0,
                  "df", 0,
                  "find", 0,
                  "mount", 0,
                  "last", 0,
                  "exit", 0,
                  "vi", 0);
# Remote access and networking commands.
my $CAT2 = 0;
my %CATHASH2 = ( "ssh", 0,
                  "telnet", 0,
                  "who", 0,
                  "ping", 0,
                  "traceroute", 0,
                  "netstat", 0,
                  "ftp", 0,
                  "wget", 0,
                  "ncftp", 0,
                  "scp", 0);
# Compile commands.
my $CAT3 = 0;
my %CATHASH3 = ( "gcc", 0,
                  "javac", 0,
                  "java", 0,
                  "make", 0,
                  "g++", 0,
                  "perl", 0,
                  "python", 0);
# Custom commands or user scripts.
my $CAT4 = 0;
my %CATHASH4 = ();

die &lt;&lt;Thanatos unless @ARGV;
usage:
    $0 directory
Thanatos

if ( @ARGV != 1 )
{
    die &lt;&lt;Thanatos
       usage info:
          Please use exactly 1 argument!
Thanatos
}

# Get the directory name
($directory) = @ARGV;

print "The following text files found in directoy: $directory\n";
opendir(BIN, $directory)
         || die "Error opening directory $directory: $!\n";

while (defined ($filename = readdir BIN) )
{
         # The following command does not process . and ..
         next if( $filename =~ /^\.\.?$/ );

         print $filename."\n";
         process_file($directory."/".$filename);
}

print "Total Lines Procesed: $TL\n";

print "Category1: $CAT1\n";
print "Category2: $CAT2\n";
print "Category3: $CAT3\n";
print "Category4: $CAT4\n";

# The call to the print_hash function is with a HASH reference.
print_hash(\%CATHASH1);
print_hash(\%CATHASH2);
print_hash(\%CATHASH3);
print_hash(\%CATHASH4);

exit 0;

sub process_file
{
         my $file = shift;
         my $line = "";
         
         open (HISTORYFILE, "&lt; $file")
                  || die "Cannot open $file: $!\n";
         
         while ( defined($line = &lt;HISTORYFILE&gt;) )
         {
                  chomp $line;
                  $TL++;
                  # Get the first string of the command.
                  my @split = split / /, $line;
                  my $command = $split[0];
                  # To catch empty history lines.
                  next if ( ! defined($command) );
                  check_category($command);
         }

}

sub check_category
{
         my $command = shift;
         chomp $command;
         
         if (exists ($CATHASH1{$command}) )
         {
                  # Counts the number of times
                  # a command has been found.
                  $CATHASH1{$command} = $CATHASH1{$command} + 1;
                  $CAT1++;
         }
         elsif (exists($CATHASH2{$command}) )
         {
                  $CATHASH2{$command} = $CATHASH2{$command} + 1;
                  $CAT2++
         }
         elsif (exists($CATHASH3{$command}) )
         {
                  $CATHASH3{$command} = $CATHASH3{$command} + 1;
                  $CAT3++;
         }
         else
         {
                  $CAT4++;
                  # Keep a list of unknown commands
                  if ( ! exists ($CATHASH4{$command}) )
                  {
                           $CATHASH4{$command} = 1;
                  }
                  else
                  {
                           $CATHASH4{$command} = \
                             $CATHASH4{$command} + 1;
                  }
         }
}

sub print_hash
{
         my $HASH = shift;
         my $key = "";
         my $value = "";
         
         while ( ($key, $value) = each(%$HASH))
         {
                  if ( ! ($key =~ /\s/) )
                  {
                           print "$value\t$key"."\n";
                  }
         }
}
</pre>

</table></table>

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
