<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v15, i02: Listing 6 Process_Queue.sh</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a7.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a7_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a7_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a7_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a7_l3.htm">Listing 3</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a7_l4.htm">Listing 4</a></span></td>
		<td><span class="navbarLink"><a href="a7_l5.htm">Listing 5</a></span></td>
		<td><span class="navbarLink">Listing 6</span></td>
		<td><span class="navbarLink"><a href="a7_l7.htm">Listing 7</a></span></td>
		<td><a href="../../../../source/SA/2006/feb2006.tar"><b class=codeListing>feb2006.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><B>Listing 6 </B><I>Process_Queue.sh</i></h2>
            <p> 
            <pre>
#!/bin/bash
#
# Process_Queue.sh
#
# At this point we have a 2 Queues: 
# Qpass  == QUEUE_PASS - Password Queue has passwords and ids
# Qcheck == QUEUE_CHECK- Command Check Queue - has passwords, ids and commands

KEY="571"
PATH=$PATH:/bin:/usr/bin
export PATH

echo ------------------------------
echo $0
echo ------------------------------

      QUEUE=$HOME/queue.txt
 QUEUE_PASS=$HOME/queue_pass.txt
QUEUE_CHECK=$HOME/queue_check.txt
DELIM1="+"

RECP="$(cat recp.conf)"
OUTPUT_FILE=$HOME/command_output.txt
###########################################################################

[[ -e $QUEUE_PASS   ]]  || { echo $0:$QUEUE_PASS   does not exist ; exit 1; }
[[ -e $QUEUE_CHECK  ]]  || { echo $0:$QUEUE_CHECK  does not exist ; exit 1; }


view_queue () {
echo There are $(cat $QUEUE_PASS  | wc -l ) items in the Qpass.  $QUEUE_PASS
echo There are $(cat $QUEUE_CHECK | wc -l ) items in the Qcheck. $QUEUE_CHECK
echo 

}

winner () {

echo 
echo "We have a winner"
echo Password in Qpass \($PASSWORD_IN_PASSWORD_QUEUE\) equals password \
  in Qcheck \($PASSWORD_IN_CHECK_QUEUE\)
echo ID  in      Qpass \($ID_IN_PASSWORD_QUEUE\) equals\ ID in \
  Qcheck \($ID_IN_CHECK_QUEUE\)
echo Command is  $COMMAND_IN_CHECK_QUEUE
echo 

}


remove_from_qcheck () {

sed -i  -e /"^$ID_IN_CHECK_QUEUE"/d $1

}


remove_from_qpass () {

sed -i -e /"^$ID_IN_PASSWORD_QUEUE"/d $1

}


view_queue
###########################################################################

#Read in $QUEUE_PASS file
while read PASS_LINE; 
do


    #Separate Passwords and IDs in the Password Queue
          ID_IN_PASSWORD_QUEUE=$(echo $PASS_LINE | cut -d "$DELIM1" -f1)
    PASSWORD_IN_PASSWORD_QUEUE=$(echo $PASS_LINE | cut -d "$DELIM1" -f2)


    #Check #1 - Is the value of the original sent passwd in the check Queue?
    if (grep ${PASSWORD_IN_PASSWORD_QUEUE:0:5} $QUEUE_CHECK &gt; /dev/null ); then 

          while read CHECK_LINE; 
          do 

              #Separate Passwords/Command/and IDs in the Check Queue
              PASSWORD_IN_CHECK_QUEUE=$(echo $CHECK_LINE | cut -d "$DELIM1" -f2)
               COMMAND_IN_CHECK_QUEUE=$(echo $CHECK_LINE | cut -d "$DELIM1" -f3)
                  HOST_IN_CHECK_QUEUE=$(echo $CHECK_LINE | cut -d "$DELIM1" -f4)
                    ID_IN_CHECK_QUEUE=$(echo $CHECK_LINE | cut -d "$DELIM1" -f1)


              #Check #2 
              #Add key to password in Qcheck to get Final passwd 
              FINAL_PASSWD="$PASSWORD_IN_CHECK_QUEUE$KEY"

              #Compare password sent to final expected passwd
              if (( "$PASSWORD_IN_PASSWORD_QUEUE" == "$FINAL_PASSWD" )); then

                        #Check #3
                        if (( "$ID_IN_CHECK_QUEUE" == \
                              "$ID_IN_PASSWORD_QUEUE" ));then

                          winner; 

                          if [[ -n "$HOST_IN_CHECK_QUEUE" ]];then

                           #process remotely
                           ./whitelist.pl "$COMMAND_IN_CHECK_QUEUE" &gt; \
                             $OUTPUT_FILE 2&gt;&amp;1   &amp;&amp; \
                               ssh "$HOST_IN_CHECK_QUEUE"  \
                                 "$COMMAND_IN_CHECK_QUEUE" &gt; $OUTPUT_FILE 2&gt;&amp;1

                          else

                           #process locally
                           ./whitelist.pl "$COMMAND_IN_CHECK_QUEUE" &gt; \
                             $OUTPUT_FILE 2&gt;&amp;1   &amp;&amp; \
                             eval "$COMMAND_IN_CHECK_QUEUE" &gt; $OUTPUT_FILE 2&gt;&amp;1

                          fi


                           echo Sending results to $RECP
                           cat $OUTPUT_FILE | mail -s \
                             "$COMMAND_IN_CHECK_QUEUE"-"$ID_IN_CHECK_QUEUE"-res \
                             "$RECP"

                          remove_from_qcheck $QUEUE_CHECK
                          remove_from_qpass  $QUEUE_PASS
                        fi
               else

                    echo No Match Password in Qpass \
                      $PASSWORD_IN_PASSWORD_QUEUE not same as password \
                      in Qcheck $PASSWORD_IN_CHECK_QUEUE

               fi

          done &lt; $QUEUE_CHECK

  else 

    echo  Password  in Qpass not even seen in Check Q

  fi
   


done &lt; $QUEUE_PASS

view_queue
</pre></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
