<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v15, i01: Questions and Answers</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><a href="../../../../source/SA/2006/jan2006.tar"><b class=codeListing>jan2006.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><img src="../../resource/1_questions.gif" width="245" height="130" align="right">Questions 
              and Answers</h1>
            <P> Amy Rich
            <P> <b><font size="+2">Q</font></b> I'm a long-time Linux power user 
              who's finally gotten frustrated enough to move to a Mac. There are 
              lots of things that I love, but the use of NetInfo annoys me to 
              no end because things are no longer stored in flat text files. In 
              this particular case, I want to automount an SMB share from one 
              of my machines to the Mac. I can't figure out how to do this under 
              OS X. Can you give me a concrete example to follow?
            <P> <b><font size="+2">A </font></b> I'm guessing you want this to 
              be automatic for everyone and not have to hit <B>apple-k</B> from 
              the Finder when you want to do the mount. There are two basic ways 
              you can set up automounting under NetInfo. You can use the NetInfo 
              Manager to modify the database directly, or you can dump out the 
              database to a flat file, modify it, then re-import the flat file. 
              The former method will probably give you some insight to the reasons 
              behind the modifications in the latter, so I'll cover that first.
            <P> In this example, the server, <B>server</B> is exporting an SMB 
              share <B>share</B> to the username <B>username</B> and the password 
              <B>password</B> to be mounted dynamically on the client under <B>/Network/Servers/server/share</B>.
            <P> To run the NetInfo manager:
            <P> 
            <pre>
open /Applications/Utilities/NetInfo Manager.app
</pre>
            1. Authenticate as a privileged user by clicking the lock in the lower 
            left-hand corner of the window and typing in your password.
            <P> 2. Click on the <B>/mounts</B> entry and then click the <B>New 
              Folder</B> icon in the upper left-hand corner of the window to create 
              a new entry. Change the <B>Value</B> of the <B>name Property</B> 
              to <B>server:/share</B>.
            <P> 3. Now create properties under the new mount point by choosing 
              <B>New Property</B> from the <B>Directory</B> menu. Change the <B>Property</B> 
              to <B>vfstype</B> and the <B>Value</B> to <B>url</B>.
            <P> 4. Create another property entry with the <B>Property</B> set 
              to <B>dir</B> and the <B>Value</B> set to <B>/Network/Servers</B>.
            <P> 5. Create another property entry with the <B>Property</B> as <B>opts</B> 
              and the <B>Value</B> as <B>net</B>.
            <P> 6. Click on the <B>opts</B> property and choose <B>Insert Value</B> 
              from the <B>Directory</B> menu. Change the <B>Value</B> to:
            <P> 
            <pre>
url==smb://user:password@server/share
</pre>
            7. Save your changes by selecting <B>Save Changes</B> from the <B>Domain</B> 
            menu and reboot the computer.
            <P> 
            <P> To make the same changes without going through the NetInfo Manager 
              GUI, you'd use the tools <B>nidump</B> and <B>niload</B>:
            <P> 
            <P> 1. If you have not been keeping the <B>/etc/fstab</B> file up 
              to date as you've added other mount points, run the following command 
              as root to append the current mount point entries to the end of 
              <B>/etc/fstab</B>:
            <P> 
            <pre>
nidump fstab . &gt;&gt; /etc/fstab
</pre>
            2. Add the following line to the end of the file:
            <P> 
            <pre>
server:/share /Network/Servers url \
  net,url==smb://user:password@server/share 0 0
</pre>
            This line is exactly the same as the one generated by using the NetInfo 
            Manager in the previous example.
            <P> 3. Load the information back into the NetInfo database by running:
            <P> 
            <pre>
niload fstab . &lt; /etc/fstab
</pre>
            Reboot the machine for these changes to take affect.
            <P> 
            <P> After employing either one of these methods, your SMB share should 
              automount when you cd into <B>/Network/Servers/server/share</B>.
            <P> If the share is not mounting, your local configuration might also 
              require you to specify the SMB Workgroup in the URL line:
            <P> 
            <pre>
url==smb://user:password@workgroup/server/share
</pre> <b><font size="+2">Q</font></b> I'm running FreeBSD 5.3-STABLE 
            on a machine with dual 1.2GHz AMD processors, and the machine crashes 
            often. I have another machine that's identical except for the fact 
            that there's only one CPU installed. Is there some issue with SMP 
            support under 5.3-STABLE?
            <P> <b><font size="+2">A </font></b> This is pretty sparse information 
              to go on since you don't describe your kernel configuration or what 
              software you have installed. You don't supply any error messages 
              or kernel trace information, either. I'd suggest looking through 
              the <B>freebsd-stable</B> list at:
            <P> 
            <pre>
http://lists.freebsd.org/mailman/listinfo/freebsd-stable
</pre>
            for symptoms and conditions that match your own. Also search the FreeBSD 
            problem reports database at:
            <P> 
            <pre>
http://www.freebsd.org/cgi/query-pr-summary.cgi?query
</pre>
            If you don't find anything similar, then gather the information I 
            mentioned and post it to the appropriate FreeBSD mailing list.
            <P> As a shot in the dark, though, the issue might be hardware-related 
              if the machines aren't component for component identical. To make 
              sure all your hardware is compatible, see:
            <P> 
            <pre>
http://www.freebsd.org/releases/5.3R/hardware-i386.html
</pre>
            Try disabling PnP, HTT, and any other smart BIOS features that might 
            be controlling your hardware outside of the OS.
            <P> Some people have pointed out issues with drivers for various types 
              of network cards. There're also people who've had issues with SMP 
              and ipfilter. One specific pr is located at:
            <P> 
            <pre>
http://www.freebsd.org/cgi/query-pr.cgi?pr=83220
</pre>
            If you're using ipfilter, you might want to switch to pf.
            <P> Your issue could also be software related. You may have stumbled 
              across a bad kernel option or a bug in the system code or a third-party 
              application that has access to the kernel.
            <P> <b><font size="+2">Q</font></b> I have an SB2500 running Solaris 
              10 that recently changed subnets. I modified <B>/etc/inet/hosts</B>, 
              <B>/etc/inet/netmasks</B>, and <B>/etc/defaultrouter</B> to reflect 
              the new information, but the machine is still bringing up the old 
              IP address. I must have missed changing it somewhere (I'm not very 
              familiar with Solaris 10 yet). Could you provide some advice?
            <P> <b><font size="+2">A </font></b> Most likely your issue is that 
              you didn't change <B>/etc/inet/ipnodes</B>, which lists IPv6 and 
              IPv4 addresses. If this doesn't fix your issue, the best thing to 
              do is run sys-unconfig and go through the machine identification 
              procedure again when you reboot.
            <P> <b><font size="+2">Q</font></b> We're running Apache on a bunch 
              of 280Rs, and we're seeing very heavy CPU usage on each of these 
              boxes. Apache is a pain to try and truss because of the way it forks, 
              so I'm looking for another diagnostic tool to figure out what the 
              heck the kernel is doing. I can use vmstat or top to view the top-level 
              idle/user/kernel/iowait statistics, but I'm looking for something 
              a bit finer grained. Do you have any suggestions?
            <P> <b><font size="+2">A </font></b> If you're running a new enough 
              version of the Solaris OS, you can use DTrace to drill down into 
              the kernel in various ways. There's quite a bit of information on 
              DTrace at:
            <P> 
            <pre>
http://www.sun.com/bigadmin/content/dtrace/
</pre>
            If you're using something older like Solaris 8, you can check out 
            the kernel locking statistics by using tools like mpstat (to get per-processor 
            statistics), <B>kstat</B> (you need Sun's Perl installed), and lockstat. 
            Some commands that might give you useful information include:
            <P> 
            <pre>
kstat -p cpu_stat
lockstat -kIW -D 20 sleep 60
mpstat 10 6
</pre> <b><font size="+2">Q</font></b> Any mail I receive from 
            non-U.S. sites is generally spam. I'd like to populate my spam block 
            list with IPs based on country codes. I'd prefer to do this on my 
            own instead of using an external site, but I don't know where to get 
            the code mapping or how to munge them all together. Is there a utility 
            out there that does this?
            <P> <b><font size="+2">A </font></b> I actually wrote a couple scripts 
              quite a while ago that do this for me using sendmail access lists. 
              The first script downloads the delegated IP lists from apnic and 
              lacnic and <B>scp</B>s them over to the mail server:
            <P> 
            <P> 
            <pre>
#!/usr/local/bin/perl

use Net::FTP;
use Net::SCP;
use File::Basename;
use Strict;
use Warnings;

my $destdir = '/etc/mail';
my $desthost = 'mx1.my.domain';
my $destuser = 'username';
my @ctrylist;
my $outfile = '/tmp/netblocks';
my @tmpfiles = $outfile;
my %fileloc = ('ftp.apnic.net' =&gt;
  '/apnic/stats/apnic/delegated-apnic-latest',
  'ftp.lacnic.net' =&gt; '/pub/stats/lacnic/delegated-lacnic-latest');

chdir ("/tmp");

foreach my $ftpsite (keys%fileloc) {
  my $filename = basename($fileloc{$ftpsite});
  push @tmpfiles, $filename;

  my $ftp = Net::FTP-&gt;new($ftpsite, Passive =&gt; 1)
    or die "Can't connect to $ftpsite: $@\n";
  $ftp-&gt;login or die "Can't get anon login to $ftpsite: $!";
  $ftp-&gt;get($fileloc{$ftpsite}) or die
    "Can't get $fileloc{$ftpsite}: $!";
  $ftp-&gt;quit;

  open(CFILE, "&lt;$filename") or die "Can't open $filename: $!";
  while (&lt;CFILE&gt;) {
    push(@ctrylist, $_);
  }
  close CFILE;
}

open(OFILE, "&gt;$outfile") or die "Can't open $outfile: $!";
print OFILE sort @ctrylist;
close OFILE;
$scp = Net::SCP-&gt;new("$desthost") or die
  "Can't open scp to $desthost: $!";
$scp-&gt;login("$destuser");
$scp-&gt;cwd("$destdir");
$scp-&gt;put("$outfile") or die $scp-&gt;{errstr};

unlink(@tmpfiles);
</pre>
            The second script runs on the server (which can't ftp out); it parses 
            this file and reads entries from the file <B>/etc/mail/access.stub</B>, 
            creating sendmail <B>access</B> entries for the countries I want to 
            block plus any other by-hand entries I've added to the stub file. 
            If you're not using sendmail, you'll probably need to write a different 
            script to convert the netblocks file into a format that your MTA understands:
            <P> 
            <pre>
#!/usr/local/bin/perl

# This script grabs the list of address assignments/allocations from
# the ap and lac NICs, parses out the blocks assigned or allocated to
# various countries and prints out a list of CIDR blocks for use with
# sendmail's cidrexpand and acess file.  It then takes that file and
# /etc/mail/acces.stub and creates the new /etc/mail/access file.

# The format of each line in the nic reports are:
# * First line:
#      version|registry|serial|count|start date|end date|checksum
# * Subsequent lines:
#      registry|cc|type|start|length|date|status

use Strict;
use Warnings;

# create a map for the netmasks and CIDR bits
my %netmasks = (
  4 =&gt; "30",           8 =&gt; "29",
  16 =&gt; "28",          32 =&gt; "27",
  64 =&gt; "26",          128 =&gt; "25",
  256 =&gt; "24",         512 =&gt; "23",
  1024 =&gt; "22",        2048 =&gt; "21",
  4096 =&gt; "20",        8192 =&gt; "19",
  16384 =&gt; "18",       32768 =&gt; "17",
  65536 =&gt; "16",       131072 =&gt; "15",
  262144 =&gt; "14",      524288 =&gt; "13",
  1048576 =&gt; "12",     2097152 =&gt; "11",
  4194304 =&gt; "10",     8388608 =&gt; "9",
  16777216 =&gt; "8"
);

my $netblocks = '/etc/mail/netblocks';
my $access_stub = '/etc/mail/access.stub';
my $access = '/etc/mail/access';

chdir('/etc/mail');

open IN, "&lt;$netblocks" or die "Can't open $netblocks for reading: $!\n";
open STUB, "&lt;$access_stub" or die
  "Can't open $access_stub for reading: $!\n";
open OUT, "&gt;$access" or die "Can't open $access for write: $!\n";

while (&lt;STUB&gt;) {
  print OUT $_;
}

close STUB;

while (&lt;IN&gt;) {
  next unless /(CN|HK|JP|KR|MX|PH|PK|SA|SG|TW)\|ipv4/;
  next if /\|(61|200)\./;
  my @alloc = split /\|/;
  print OUT "$alloc[3]/$netmasks{$alloc[4]}\tERROR:\"550 5.7.1 We 
             don't accept mail from spammers in $alloc[1]\"\n";
}

close IN;
close OUT;
</pre>
            Then you just use the cidrexpand script to create the database file:
            <P> 
            <pre>
cidrexpand &lt; /etc/mail/access | makemap hash /etc/mail/access
</pre> <i>Amy Rich has more than a decade of Unix systems 
            administration experience in various types of environments. Her current 
            roles include that of Senior Systems Administrator for the University 
            Systems Group at Tufts University, Unix systems administration consultant, 
            and author. She can be reached at: <B>qna@oceanwave.com</B>.</I></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
