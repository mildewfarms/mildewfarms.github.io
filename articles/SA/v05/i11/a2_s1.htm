<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v05, i11:  Sidebar: Server Side Includes</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a2.htm">Article</a></span></td>
		<td><span class=navbarLink>Sidebar 1</span></td>
		<td><a href="../../../../source/SA/1996/nov96.tar"><b class=codeListing>nov96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Sidebar: Server Side Includes</H1><p>
<P>
What are Server Side Includes (SSIs)? SSIs are embedded
in your HTML
document and can execute or manipulate environment variables
and file
statistics. A typical SSI is in the form of &lt;!--
include_command --&gt;. If
an HTML document contains SSIs, it will usually end
in .shtml.<P>

Here's an example of a file called test.shtml:<P>
<PRE>
&lt;HTML&gt;&lt;body&gt;
&lt;h1&gt; My page was last modified on &lt;/h1&gt;
&lt;!--#echo var=&quot;LAST MODIFIED&quot; --&gt;
&lt;/body&gt;&lt;/html&gt;</pre><p>
<p>
In addition to echo, the commands are config, include,
fsize, flastmod,
and exec. The exec option makes SSIs very dangerous.
exec executes a
given command as the UID of the Web server. Imagine,
for example, a
typical guestbook that allows people to enter HTML commands
in their
message.  What if someone entered:<P>
<PRE>
&lt;!--#exec cmd=&quot;/bin/rm -rf /&quot; --&gt;</pre><p>
<p>
Ack! You would have a big headache the next time someone
browsed through
the messages!<P>

Or how about this:<P>
<PRE>
&lt;!--#exec cmd=&quot;find / -name foo -print&quot; --&gt;</pre><p>
<p>
That would perform a systemwide search for the files
named foo. If
someone pasted this a few hundred times in their html
document, the
server would come to a screeching halt.<P>

A good rule of thumb is to disable Server Side Includes
on your Web
server - you can almost always find ways to work around
them regardless
of their convenience.<P>

To see whether SSIs are disabled on NCSA and Apache
servers, look in the
file access.conf for the following bit of code and make
sure that
&quot;Includes&quot; is not in the option list. Here
is an example with the Web
server document root, but you should also check all
defined directories:<P>
<PRE>
# /home/www/docs being the document root
&lt;Directory /home/www/docs&gt;

# This may also be &quot;None&quot;, &quot;All&quot;, or any combination of
# &quot;Indexes&quot;,
# &quot;Includes&quot;, &quot;FollowSymLinks&quot;, &quot;ExecCGI&quot;, or &quot;MultiViews&quot;.

Options Indexes FollowSymLinks
&lt;/Directory&gt;</pre><p>
<p>
Also, check the srm.conf file for either of the following
lines:<P>
<PRE>
Addtype text/server-parsed-html .shtml
Addtype text/server-parsed-html .html</pre><p>
<p>
Comment out the lines to prevent further use of SSIs.<P>

If you simply must have SSIs on your Web server, put
&quot;IncludesNOEXEC&quot; in
the Options list to disable the exec command. This will
eliminate many
of the dangers, but there will still be the threat of
severe system lag.
For example, consider a prankster who pastes the following
line a
hundred times in a guestbook:<P>
<PRE>
&lt;!-- #echo var = &quot;LAST MODIFIED&quot; --&gt;</pre><p>
<p>
The server lag induced by hundreds of people viewing
the page might just
be enough to convince you to turn off SSIs completely.<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
