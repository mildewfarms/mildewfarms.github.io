<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v05, i11: Listing 3: chkaddr.c</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a4.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a4_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a4_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a4_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a4_l2.htm">Listing 2</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink>Listing 3</span></td>
		<td><span class=navbarLink><a href="a4_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1996/nov96.tar"><b class=codeListing>nov96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 3: chkaddr.c</H1><p>
<PRE>
/*
* Divert daemon 1.00
*
* Author : A. Donkers
*	    Le Reseau netwerksystemen B.V.
*
*
* Chkaddr modules
*/

/*
* System includes
*/
#ifdef DEBUG
#include <stdio.h>
#endif
#include <sys/types.h>
#include <sys/stat.h>
#ifndef Linux
#include <sys/uio.h>
#endif
#include <netinet/in.h>
#include <arpa/inet.h>
#include <fcntl.h>
#include <unistd.h>
#include <syslog.h>
#include <ctype.h>
#ifdef DEBUG
#include <errno.h>
#endif
#include <string.h>

/*
* Application includes
*/
#include "divert.h"
#include "cdc.h"

/*
* Locals (--Yuck)
*/
static	cnf_t	cnfitem;

/*
* Prototypes
*/
void	tokenize(
char *,
int *,
unsigned long *,
char *,
unsigned long *,
unsigned long *,
char *
);

/*
* check both local (me) and remote(them) addresses.
* both should be present in the configfile (or the ALL_ADDR tag).
* remote address maybe masked with addres mask
* If a match is found, the related command is returned.
*/
int	chkaddr(
char *conffile,
unsigned long me,
char *service,
unsigned long them,
char *command
)
{
int	config;
int	goodmatch = 0;
int	bytesread = 0;
char	radrip[16], rmskip[16], ladrip[16];

/*
* Open the config file, if you can
*/
if( (config = open( conffile, O_RDONLY )) < 0 ) {
syslog( LOG_ERR, "Cannot open configfile %s, error %m",
CONFIGFILE );
exit( -1 );
}

/*
* Loop over the conf file
*/
while( !goodmatch && (bytesread = read( config, &cnfitem, sizeof(cnfitem))) > 0 ) {

/* First match local address */
/* ALL_ADDR always matches */
if( cnfitem.me != 0xffffffff ) {
if( cnfitem.me != me ) {
continue;
}
}

/* If the first address matched, match the service */
if( strncmp( cnfitem.service, ALL_ADDR, strlen( ALL_ADDR ) ) != 0 ) {
if( strncmp( cnfitem.service, service, strlen( service ) ) != 0 ) {
continue;
}
}

/* If we've got a local match, try to match the remote side */
if( cnfitem.them != 0xffffffff ) {
/* Match using mask */
if( (cnfitem.them & cnfitem.mask) != (them & cnfitem.mask) ) {
continue;
}
}

/* When we reach this point, all fields have matched */
/* Whether that's good depends on the denied flag */
if( ntohl( cnfitem.flags ) & M_DENIED ) {
return 0;
}

/* We've got a match */
strcpy( command, cnfitem.command );
goodmatch = 1;

break;
}

/*
* Close configfile
*/

close( config );

strcpy( ladrip, inet_ntoa( *((struct in_addr *)&(cnfitem.me)) ) );
strcpy( radrip, inet_ntoa( *((struct in_addr *)&(cnfitem.them)) ) );
strcpy( rmskip, inet_ntoa( *((struct in_addr *)&(cnfitem.mask)) ) );

syslog( LOG_INFO, "Matched local address %s and remote address %s, netmask %s for service %s",
ladrip, radrip, rmskip, cnfitem.service );

return goodmatch;
}

/* end of chkaddr.c */
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
