<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v05, i09: Listing 1: rma.c</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a5.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a5_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a5_f4.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a5_f2.htm">Figure 2a</a></span></td>
		<td><span class=navbarLink><a href="a5_f3.htm">Figure 2b</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><a href="../../../../source/SA/1996/sep96.tar"><b class=codeListing>sep96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1: rma.c</H1><p>
<PRE>
/* rma.c -- Restricted Machine Access */
/* Greg A. Wade			      */

/* Configuration section              */
#define SHELL_DIR	&quot;/usr/bin/shells/&quot;
#define ACCESS_LIST	&quot;/etc/accesslist&quot;
#define MAIL_TO		&quot;wade&quot;
#define LOGIN_SCRIPT	&quot;/etc/enter.sh&quot;
#define LOGOUT_SCRIPT	&quot;/etc/exit.sh&quot;

#include &lt;stdio.h&gt;
#include &lt;strings.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;unistd.h&gt;
#include &lt;grp.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;sys/param.h&gt;
#include &lt;signal.h&gt;

#ifdef __SVR4
#include &lt;netdb.h&gt;
#include &lt;fcntl.h&gt;
#else
#include &lt;sys/file.h&gt;
#endif

/* Returns 1 if the user is allowed to login, */
/* otherwise 0 is returned                    */
int CanLogin( gid_t gid, char * host)
{
FILE * access_file;
struct group * gr = NULL;
char **p = NULL;
int result = 1;

if ((access_file=(FILE *)fopen(ACCESS_LIST,&quot;r&quot;))!=NULL) {

/* Lookup the group in ACCESS_LIST */
while((gr = (struct group*) fgetgrent(access_file))!=NULL)
if (gr-&gt;gr_gid == gid)
break ;
fclose(access_file);

if (gr==NULL)

/* Our gid is not in ACCESS_LIST..deny access */
result=0;
else {

/* search for the current machine name */
result = (*(gr-&gt;gr_passwd)=='+' ? 0 : 1);
p = gr-&gt;gr_mem;
while (*p != NULL) {
if(!strcmp(*p,host)) {
result = (! result);
break;
}
p++;
}
}
}

return(result);
}

/* Execute the script specified by LOGIN_SCRIPT */
void LoginScript(void)
{
int status;

if(fork() == 0) {
execl(LOGIN_SCRIPT,rindex(LOGIN_SCRIPT,'/'),NULL);
exit(1);
} else
wait(&amp;status);
}

/* Execute the script specified by LOGOUT_SCRIPT */
void LogoutScript(void)
{
execl(LOGOUT_SCRIPT,rindex(LOGOUT_SCRIPT,'/'),NULL);
exit(1);
}

/* Launch the user's shell */
void Login(char ** args)
{
int status;
char *p, *cmd;

char shell_prog[MAXPATHLEN];

/* Determine the shell to run */
strcpy(shell_prog,SHELL_DIR);
if ((p = rindex(*args,'/')) != NULL)
cmd = p;
else
if(*(*args) != '-')
cmd = *args;
else
cmd = (*args)+1;

/* This fixes the SunOS su &quot;bug&quot; and */
/* maybe some others as well         */
if(!strcmp(cmd,&quot;su&quot;)) {
cmd = getenv(&quot;SHELL&quot;);
if ((p = rindex(cmd,'/')) != NULL)
cmd = p;
}

strcat(shell_prog,cmd);

if(*(*args) != '-') {

/* Start a subshell */
execv(shell_prog,args);
perror(&quot;Cannot start shell&quot;);

} else

/* Start a login shell and wait        */
/* for it to exit so the LOGOUT_SCRIPT */
/* can be run                          */
if (fork() == 0) {
LoginScript();
execv(shell_prog,args);
perror(&quot;Cannot start shell&quot;);
exit(1);
} else {
wait(&amp;status);
LogoutScript();

}
}

/* Print access violation message and send email  */
/* with /usr/ucb/Mail if configured to do so.     */
void KickOut(void)
{
int in;

printf(&quot;Access to this machine RESTRICTED!!\n&quot;);

#ifdef MAIL_TO
if((in = open(&quot;/dev/null&quot;,O_RDONLY,777)) != 0) {
dup2(in,0);
execl(&quot;/usr/ucb/Mail&quot;,&quot;Mail&quot;,&quot;-i&quot;,&quot;-s&quot;,
&quot;ACCESS VIOLATION&quot;,MAIL_TO,NULL);
exit(1);
}
#endif

}

/* M A I N    P R O G R A M */
main (int argc, char ** argv)

{
char host[MAXHOSTNAMELEN];
uid_t gid;

/* Block some signals */
signal(SIGINT,SIG_IGN);
signal(SIGTERM,SIG_IGN);

/* Determine our hostname */
if (gethostname(host,MAXHOSTNAMELEN))
perror(&quot;Who am I...Get me HELP!!&quot;);

/* Get the user's primary gid */
gid = getgid();

/* Start the user's shell if */
/* access is allowed         */
if(CanLogin(gid,host))
Login(argv);
else
KickOut();
}
/* End of File */
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>