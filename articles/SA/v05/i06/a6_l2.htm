<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v05, i06: Listing 2: The server passwdd program</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a6.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a6_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a6_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink>Listing 2</span></td>
		<td><span class=navbarLink><a href="a6_l3.htm">Listing 3</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a6_l4.htm">Listing 4</a></span></td>
		<td><span class=navbarLink><a href="a6_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1996/jun96.tar"><b class=codeListing>jun96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 2: The server passwdd program</H1><p>
<PRE>
/*
* passwdd -- the daemon that looks after changing passwords from afar.
*      Run as a login shell, passed the userid via the TERM env-
*      ironment variable.
*/
#include
#include

char *ProgName;
#define ERR (-1)
#define YES     0
#define NO      1
#define MAXLINE 255

/*ARGSUSED*/
main(argc, argv) int argc; char* argv[];  {
char    *remoteName, *getenv();
struct passwd *p, *getpwnam();
unsigned short  getuid(), geteuid();
int     rc;

ProgName = argv[0];
(void) fprintf(stderr,&quot;Connected to passwd server...\n&quot;);
/* Become root if you aren't already. */
if (setuid((int) geteuid()) == ERR) {
(void) fprintf(stderr,&quot;%s: unable to change to root, halting\n&quot;,
ProgName);
(void) exit(1);
}

if ((remoteName= getenv(&quot;TERM&quot;)) == NULL) {
(void) fprintf(stderr,&quot;%s: no TERM variable supplied, halting\n&quot;,
ProgName);
(void) exit(1);
}
if ((p= getpwnam(remoteName)) == NULL) {
(void) fprintf(stderr,&quot;%s: no userid %s known, halting\n&quot;,
ProgName,remoteName);
(void) exit(1);
}
rc = changePass(p,remoteName);
(void) exit(rc);
/*NOTREACHED*/
}

int
changePass(p,name) struct passwd *p; char *name; {
char    *oldPasswd, *getpass(),
*thing, *crypt(),
salt[2], buffer[MAXLINE];

(void) fprintf(stderr,&quot;Changing password for %s.\n&quot;,name);
oldPasswd = getpass(&quot;Old password: &quot;);
salt[0] = p-&gt;pw_passwd[0];
salt[1] = p-&gt;pw_passwd[1];
thing = crypt(oldPasswd,salt);
#ifdef DEBUG
(void) fprintf(stderr,&quot;entered=%s,old=%s,new=%s\n&quot;,
oldPasswd,p-&gt;pw_passwd,thing);
#endif
if (strncmp(thing,p-&gt;pw_passwd,13) != 0) {
(void) fprintf(stderr,&quot;Sorry\n&quot;);
return NO;
}

(void) sprintf(buffer,&quot;/bin/passwd %s&quot;,name);
if (system(buffer) == 0) {
(void) fprintf(stderr,&quot;Your password will be distributed within the hour.\r\n&quot;);
return YES;
}
else {
return NO;
}
}

# End of File
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
