<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v05, i04:  New Messages</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink>Article</span></td>
		<td><a href="../../../../source/SA/1996/apr96.tar"><b class=codeListing>apr96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>New Messages</H1><p>
<P>
<I>Please send letters via email to saletter@rdpub.com.</I><P>



Subject: Uptime Reporting (Gray, Sys Admin, 5.1)<br>
To the editor:<br>

I am writing again with a criticism of an article that
appears in your
journal; this time, it is Bill Gray's submission of
&quot;SM2UR:
Simple-Minded System Monitoring &amp; Uptime Reporting&quot;
(Sys Admin, Volume
5, Number 1, January, 1996). My concerns this time center
around bad
software design, and even worse user design.<P>

First, in several of his shell scripts (sysmon, cdl,
cml, and rmu), Gray
presents a poor design for obtaining the pieces of the
date (month, day,
etc.): He calls date, saves the result in a file, and
then calls cut not
once but *six* times.<P>

A better way (the best way?) to do this is as follows:<P>
<PRE>
# Save $1 from the command line
cmd = $1

# Break the date into pieces
set `date '+%Y %m %d %H %M %S'`

YY=$1
MM=$2
DD=$3
HH=$4
MN=$5
SS=$6</pre><p>
<p>
Notice that this also avoids a call to expr, which Gray
could have also
done by specifying %Y instead of %y in his call to date.<P>

My second concern is that this extended manipulation
of the date begs
the question of why is it being done at all? In the
program rst.c, Gray
goes to considerable length to convert the dates back
to seconds, when
this is already the base form of time on UNIX systems!
Wouldn't it have
been easier to write a (very) small C program that emits
the results of
time() (or gettimeofday(), as appropriate)?<P>

Last is my concern about &quot;user design&quot;: Gray
has chosen to present his
uptime statistics in seconds! Quick -- how many seconds
in a day? In a
week? How many days (weeks) is 2591097 seconds? The
only useful number
in the monthly report is that of uptime expressed as
a percentage.
Surely he could have done the extra arithmetic and produced
reports in
some or all of weeks, days, and hours. You would have
a hard time
convincing me that Mr. Gray's &quot;customers&quot;
*asked for* the reports in
units of seconds.<P>

This is just another example of the low standards your
publication sets
for itself; I would have been embarrassed to have produced
a system such
as Gray's, let alone submitted it for publication.<P>

I will be quite surprised if you print this letter:
You didn't print my
previous one, nor does your publication strike me as
one that is willing
to print letters of dissent, but I had to write anyway.<P>

Adam Moskowitz<br>
adamm@menlo.com<br>

Subject: Re: Uptime Reporting (Gray, Sys Admin, 5.1)<P>

The overall philosophy of the package, as stated, was
to get something
going in two weeks (with all the other activities that
sysadmins have to
deal with as well). The initial recommendation was to
buy a package.
When that was turned down, I went ahead with incremental
development --
make a piece; check it out; plow ahead. I did not go
back and revisit
chunks already built to make it more efficient -- it
was constructed ad
hoc as I went along. Literally, I built it a few lines
at a time by
running sh -x and watching. There was no grand implemention
design.<P>

That was part of the point: you can do a quick job with
sh. The other
point was the utter simplicity of keeping the record.
The source is free
for those who want to improve it; Mr. Moskowitz is welcome
to it, as are
the 15 or so others who have downloaded it.<P>

If an installation needs more than the elementary statistic
offered by
this code, my recommendation would be the same as the
one I started with
-- buy a package.<P>

Thanks.<br>

Bill Gray<br>
Disclaimer: Std - RFC666<br>
Idaho National Engineering Lab<br>
whg@inel.gov<P>

<I>Mr. Moskowitz --<P>

Not only am I printing your letter, I'm going to thank
you for writing.
You are right about the coding: I'm embarrassed I didn't
catch it. Just
as some musicians sight read well and some don't, I
would far prefer to
write code than read someone else's. Thus, I often read
the text more
carefully than the code. In prior months, since I was
also functioning
as CEO of a 40-person company, there were times when
we printed stories
that I didn't read at all. I think the central idea
of this story -- a
simple uptime reporting mechanism -- is useful, even
clever. I have to
admit, though, that I agree with your evaluation of
the implementation
details.<P>

Even so, printing the code isn't without merit. I'll
bet there are a lot
of sys admins who, as a result of reading this exchange,
will have a
much clearer idea of how to proceed next time they need
to manipulate a
time.<P>

Thanks for writing. I depend upon my readers to keep
me on my toes. -- rlw</I><P>




<P><br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
