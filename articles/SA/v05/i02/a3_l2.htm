<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v05, i02: Listing 2: holify.c</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a3.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink>Listing 2</span></td>
		<td><span class=navbarLink><a href="a3_t1.htm">Table 1</a></span></td>
		<td><span class=navbarLink><a href="a3_t2.htm">Table 2</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a3_t3.htm">Table 3</a></span></td>
		<td><span class=navbarLink><a href="a3_t4.htm">Table 4</a></span></td>
		<td><span class=navbarLink><a href="a3_t5.htm">Table 5</a></span></td>
		<td><span class=navbarLink><a href="a3_t6.htm">Table 6</a></span></td>
		<td><span class=navbarLink><a href="a3_t7.htm">Table 7</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a3_t8.htm">Table 8</a></span></td>
		<td><a href="../../../../source/SA/1996/feb96.tar"><b class=codeListing>feb96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 2: holify.c</H1><p>
<PRE>
/*
* Copyright (C) 1995
* Marty Leisner	leisner@sdsp.mc.xerox.com.
*
* This program is free software; you can redistribute it and/or modify it
*  under the terms of the GNU General Public License as published by the
*  Free Software Foundation; either version 2, or (at your option) any
*  later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with this program; if not, write to the Free Software
*  Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
*/

#include &lt;unistd.h&gt;
#include &lt;errno.h&gt;
#include &lt;stdio.h&gt;
#include &lt;assert.h&gt;

static const char *id = \
&quot;$Id: holify.c,v 1.1 1995/01/24 02:47:20 leisner Exp $&quot;;
static char *progname;

static void usage(void)
{
exit(1);
}

/* write the last byte if its not written...
* this makes some systems work better
*/
static void copy_file(const int input, const int output)
{
int total_written = 0;
int total_read = 0;
int virtual_written;
int holes = 0;
/* indicates the last buffer was written */
int did_write = 0;

while(1) {
int bytes_read;
int bytes_written;
char buffer[4096 + 1];
char *cp;

bytes_read = read(input, &amp;buffer, sizeof(buffer) - 1);
if(bytes_read == 0)
break;
if(bytes_read == -1) {
if(errno == EINTR)
continue;
fprintf(stderr, &quot;Fatal error, %s\n&quot;, strerror(errno));
exit(1);
}


total_read += bytes_read;
buffer[bytes_read] = 1;	/* sentinnel */

for(cp = buffer; !*cp; cp++)
;

if(cp == &amp;buffer[bytes_read]) {
/* have hole */
int result;

result = lseek(output, bytes_read, SEEK_CUR);
did_write = 0;
assert(result != -1);
holes++;
} else {
bytes_written = write(output, buffer, bytes_read);
assert(bytes_written == bytes_read);
did_write = 1;
total_written += bytes_written;
}
virtual_written += bytes_read;

}

fprintf(stderr, &quot;Wrote %d real bytes,  %d virtual bytes\n&quot;, total_written,
virtual_written);
#ifndef NO_LAST_WRITE
if(!did_write) {
const char zero = 0;

lseek(output, -1, SEEK_CUR);	/* back up */
write(output, &amp;zero, 1);	/* write a zero byte */
}
#endif
}

main(int argc, char **argv)
{
int i;

progname = argv[0];

if(argc == 1) {
/* input may be a pipe, stdout must be a file */
if(isatty(1)) {
fprintf(stderr, &quot;Need to write to a file&quot;);
usage();
}
}

if(argc == 1)
copy_file(0, 1);
else {
fprintf(stderr, &quot;can't do this yet\n&quot;);
usage();
for(i = 1; i &lt; argc; i++) {
}
}
}

</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
