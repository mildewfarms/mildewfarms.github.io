<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v05, i02: Listing 1: isascii.c</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a2.htm">Article</a></span></td>
		<td><span class=navbarLink>Listing 1</span></td>
		<td><a href="../../../../source/SA/1996/feb96.tar"><b class=codeListing>feb96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 1: isascii.c</H1><p>
<PRE>
/* isascii.c -- Copyright 1995 by Steven G. Isaacson */

#include &lt;stdio.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;ctype.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt;

#define BUFSIZE 2048
#define MAX_FN 256

#ifndef TRUE
#define TRUE 1
#define FALSE 0
#endif

char *help[] = {
&quot;-e echo filename even if only one file&quot;,
&quot;-F [filename] file containing list of filenames&quot;,
&quot;-v reverse isascii() check&quot;,
&quot;-  read filenames from stdin&quot;,
&quot;&quot;,
&quot;isascii checks for ascii characters in the specified file(s).&quot;,
&quot;If non-ascii characters are found false(1) is returned,&quot;,
&quot;otherwise true(0) is returned.  When only one file is specified&quot;,
&quot;there is no output unless the echo flag is used.&quot;,
&quot;&quot;,
&quot;If stdin, a list of files, or if more than one file is specified&quot;,
&quot;on the command-line, then the ascii files are echoed and non-ascii&quot;,
&quot;files are not. Exit status is always true.&quot;,
'\0' };

char *usage_str=&quot;Usage:  isascii [-args] [filename(s)|-]&quot;;

int reverse=0; /* global for -v flag */

main(argc, argv)
int argc;
char *argv[];
{
int i;
extern int optind;
extern char *optarg;
char *options=&quot;v?heF:&quot;;
int c, errflg=0, echo=0;
char stdinfn[MAX_FN];
FILE *stdinfp;

stdinfn[0] = '\0';

if (argc == 1) {
fprintf(stderr, &quot;%s\n&quot;, usage_str);
exit(1);
}

while ((c=getopt(argc, argv, options)) != EOF) {

switch (c) {

case 'F':
strcpy(stdinfn, optarg);
break;

case 'v':
reverse=1;
break;

case 'e':
echo=1;
break;

case '?':
case 'h':
default:
errflg++;
break;
}

if (errflg) {
show_help();
exit(0);
}
}

if (stdinfn[0]) {
/* input is coming from a file */

if ((stdinfp = fopen(stdinfn, &quot;r&quot;)) == NULL) {
fprintf ( stderr,
&quot;*** Error: could not open: %s\n&quot;, stdinfn);
exit(2);
}

file_or_stdin(stdinfp);
}
else {
/* input from command-line or stdin */

for (i=optind; i &lt; argc; i++) {

if ( argv[i][0] == '-' ) {
file_or_stdin(stdin);
continue;
}

if (i != argc - 1)
is_ascii(argv[i], TRUE);
else
exit(is_ascii(argv[i], echo));
}
}
exit(0);
}

/* ================================================= */
/* show help page                                    */

show_help()
{
int i;

fprintf(stderr, &quot;%s\n&quot;, usage_str);
for (i=0; help[i]; i++)
fprintf(stderr, &quot;  %s\n&quot;, help[i]);

fprintf(stderr, &quot;\n&quot;);
fflush(stderr);
}

/* ================================================= */
/* get the list of files from a file or stdin.       */

file_or_stdin(fp)
FILE *fp;
{
char buf[MAX_FN], *retval;

/* for each name in the list, call is_ascii() */
while (
(retval=fgets(buf, MAX_FN, fp)) != (char *)EOF &amp;&amp;
retval != NULL ) {
buf[strlen(buf) - 1] = '\0';
is_ascii(buf, TRUE);
}
}

/* ================================================= */
/* read the file looking for non-ascii characters    */

int is_ascii(pfn, echo)
char *pfn;
int echo;
{
int fd, i, n;
char buf[BUFSIZE];

if ( (fd=open(pfn, O_RDONLY|O_NDELAY)) == -1 ) {
fprintf(stderr,
&quot;Error: could not open: %s\n&quot;, pfn);
fflush(stderr);
return(1);
}

switch (reverse) {
case 0:
/*
* normal case is not reverse.  if non-ascii
* char found then test has failed
*/
while ((n=read(fd, buf, sizeof(buf))) &gt; 0 ) {
for (i=0; i &lt; n; i++) {
if (!isascii((int)buf[i]) &amp;&amp; buf[i] != EOF) {
close(fd);
return(1); /* failure */
}
}
}
if (echo) printf(&quot;%s\n&quot;, pfn);

case 1:
/*
* -v flag was used.  Now if we find a non-ascii
* char the test is a success.
*/
while ((n=read(fd, buf, sizeof(buf))) &gt; 0 ) {
for (i=0; i &lt; n; i++) {
if (!isascii((int)buf[i]) &amp;&amp;
buf[i] != EOF) {
if (echo) printf(&quot;%s\n&quot;, pfn);
close(fd);
return(0); /* success */
}
}
}
}

close(fd); /* we're at EOF */
/*
* return success, unless -v was used, in which case
* we failed to find non-ascii values
*/
return(reverse);
}

/* End of File */
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
