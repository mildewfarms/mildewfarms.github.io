<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v05, i02:  Sidebar: Security</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a4.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a4_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a4_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a4_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a4_l2.htm">Listing 2</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a4_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a4_l4.htm">Listing 4</a></span></td>
		<td><span class=navbarLink><a href="a4_l5.htm">Listing 5</a></span></td>
		<td><span class=navbarLink><a href="a4_l6.htm">Listing 6</a></span></td>
		<td><span class=navbarLink><a href="a4_s1.htm">Sidebar 1</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a4_s2.htm">Sidebar 2</a></span></td>
		<td><span class=navbarLink>Sidebar 3</span></td>
		<td><a href="../../../../source/SA/1996/feb96.tar"><b class=codeListing>feb96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>




<H1>Sidebar: Security</H1><p>
<P>
WWW server/browser technology allows custom GUI-based
sys admin tools
with a minimum of coding. A sys admin could contact
the UNIX host using
a WWW browser that supports authentication, running
on practically any
computer/OS! Of course this flexibility introduces a
security concern.
You don't want just anyone with a WWW browser to access
your HTML system
administration scripts. Limits also must be placed on
accepting incoming
data; otherwise a clever hacker could simply duplicate
the front end GUI
and post his or her own data.<P>

The NCSA httpd supports user, group, and IP address/domain
authentication. These mechanisms provide a  security
level comparable to
root login over a standard TCP/IP telnet connection.
Let me clarify
that. There are three major types of security breaches
when using a WWW
server/client. First, an intruder might &quot;listen&quot;
to the connection and
glean the access password. Or, an intruder might copy/substitute
the
HTML source as it is delivered to the client/server.
If intruders can do
this, they can just as easily grab your root password
as it is delivered
across the wire to a remote UNIX box. Commercial servers,
such as
Netscape, utilize an encryption system that keeps casual
IP packet
snoopers from viewing sensitive information. Finally,
an intruder can
utilize holes in  the server security to access these
administration
scripts, or the system itself.<P>

Think about how often you telnet to a machine to do
administrative
tasks. Are you on a trusted network? If so, the basic
authentication
mechanisms supported by the free WWW servers will suffice.
If you are
security conscious and never use telnet, consider investing
in a server
that does data encryption across the network.<P>

For this article, I will use user authentication. Here
are step-by-step
instructions for setting up access authentication to
the La Tool CGI
binary.<P>

1. Create a protected directory for admin tools. I did
this in my home
directory and called it Dadmintool. Make certain that
you log in under a
userid that has read and execute privileges for this
directory. My httpd
runs with the id set to &quot;nobody.&quot;<P>

2. Inform the httpd server that this directory contains
CGI scripts. For
NCSA httpd v1.3, you would go to the configuration file
subdirectory for
your server, edit the srm.conf file, and make an alias
reference to your
just-created CGI subdirectory. Here is my  entry: <P>
<PRE>
&quot;ScriptAlias /admin/ /home/ccb8m/Dadmintool&quot;.</pre><p>
<p>
3. Create a .htaccess file in the CGI subdirectory.
The .htaccess file
describes the authorization requirements for La Tool
or any other admin
script in this subdirectory. This is La Tool's .htaccess
file:<P>
<PRE>
AuthUserFile /home/ccb8m/Dadmintool/.htpasswd
AuthGroupFile /dev/null
AuthName UNIX AdminTool
AuthType Basic

&lt;Limit GET POST&gt;
require user sys
&lt;/Limit&gt;</pre><p>
<p>
4. Create a .htpasswd file in the CGI subdirectory.
This file looks very
similar to /etc/passwd but contains only a login name
and the encrypted 
password. You can limit or grant access to HTML documents
independent of
users with valid login accounts. To create this file
you need to use the
htpasswd command. This is supplied in the &quot;support&quot;
subdirectory of the
httpd 1.3 source  release. To create a htpasswd file
called .htpasswd
containing the user &quot;sys,&quot; type the following:
<P>
<PRE>
htpasswd -c .htpasswd sys</pre><p>
<p>
You will be prompted for a new password along with password
verification. You should run the htpasswd command in
your recently
created administration binary directory; otherwise you
need to move
.htaccess and .htpasswd to that directory.<P>




<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
