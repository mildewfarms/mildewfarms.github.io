<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v05, i02:  Sidebar:  Corrections </TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a7.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a7_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink>Sidebar 1</span></td>
		<td><a href="../../../../source/SA/1996/feb96.tar"><b class=codeListing>feb96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>



<H1>Sidebar:  Corrections</H1><p>

Please note the following corrections to the article "Converting Unix 
Filenames to MS-DOS" (Sys Admin 5(2): 81-85) by Ed Schaefer 
and Fred Brunet. The editors regret these errors and apologize 
for any inconvenience.<P>

The authors have made the following changes. Sharp-eyed reader, 
Edward Hooper, had a problem with commas being changed within 
double quotes. Here is an example:<P>
<PRE>
"0001","Another, String"</pre><p>
<p>
The program should change it to:<P>
<PRE>
0001|Another, String|</pre><p>
<p>
not<P>
<PRE>
0001|Another| String"</pre><p>
<p>
In order to fix this problem, here are the changes:<P>

1) In the process_data_file make this change:<P>
<PRE>
if(conv_ch == 1)
token = xstrtok(buf, PIPE_SYMBOL, "");
else
token = xstrtok(buf, COMMA, "\"");
.
.
if(conv_ch == 1)
token = xstrtok(NULL, PIPE_SYMBOL, "");
else
token = xstrtok(NULL, COMMA, "\"");</pre><p>
<p>
2) A replacement is needed for the strcspn() function in the xstrtok 
function. In the xstrtok() function, replace:<P>
<PRE>
n = strcspn(saveline, delims);</pre><p>
<p>
with:<P>
<PRE>
n = strccspn(saveline, delims, except);</pre><p>
<p>
And here is the function:<P>

/* replacement function for strcspn(). except is generally a double 
quote and it becomes the new delimiter. When another except is found, 
change back to the original delimiter */<P>
<PRE>
int strccspn(s1, s2, except)
char *s1, *s2, *except;
{ /*s2 is the delimiter */
char *sc1, *sc2, *olds2;
int found = 0;

for (sc1 = s1; *sc1 != '\0'; ++sc1)
{
if(strchr (except, *sc1) != NULL)
/* this is a possible double quote */
if(!found)
{
found++;
olds2=s2;   /* save old delimiter */
s2=except;  /* change to the except delimiter */
sc1++;
}
for(sc2 = s2; *sc2 !='\0'; ++sc2)
if (strchr (sc2, *sc1) != NULL)
{
if(found)
{
s2=olds2;
/* change back to the original delimiter */
found = !found;
}
else
return (sc1 - s1);
}
}
return (sc1 - s1);
}</pre><p>
<p>
Next, I've had some problems with unexplained core dumps when adding a 
third argument to the xstrtok() function. I finally tracked it down to 
the string copies in the del_char() function corrupting the stack. I 
replaced it with this:<P>
<PRE>
/*
* This function deletes char 'c' from 'string'
*/
void del_char(string, c)
char *string;
char *c;
{
inti,j;

for(i=j=0; string[i]; i++)
if (string[i] != *c)
string[j++] = string[i];

string[j] = 0x00;
}</pre><p>
<p>



<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>