<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v05, i01: Listing 3: sml.sh--consolidates monthly logs</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a9.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a9_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a9_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink>Listing 3</span></td>
		<td><span class=navbarLink><a href="a9_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a9_l5.htm">Listing 5</a></span></td>
		<td><span class=navbarLink><a href="a9_l6.htm">Listing 6</a></span></td>
		<td><a href="../../../../source/SA/1996/jan96.tar"><b class=codeListing>jan96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 3: sml.sh--consolidates monthly logs</H1><p>
<PRE>
#!/bin/sh
#
# cml - consolidate monthly logs.
#
# SYNOPSIS
#    /usr/local/etc/cml [-r] [M [Y]]
#
# DESCRIPTION
#    Concatenates compressed daily logs (LOGDIR/D.yyyy.mm.*.Y) onto
#    the appropriate monthly log (LOGDIR/M.yyyy.mm).  If there are
#    no files to consolidate,  cml exits 0 silently (a moderately
#    expensive no-op).
#
#    Designed to be run on the first of every month to consolidate
#    the daily logs from the previous month;  however, the &quot;M&quot; op-
#    tion will force processing of a particular month.
#
# OPTIONS
#    -r		Remove daily logs that have been included in a con-
#		solidated monthly log.
#
#    M, Y	Force processing of daily logs for the indicated
#		month.  The default is the previous month (and year
#		when appropriate). E.g., if nothing is specified, the
#		default is the previous month.  If the previous month
#		is 12 (Dec),  then Y is the previous year.
#		M = (1-12);  Y = (1970- ).
#
# FILES
#    M.yyyy.mm	The monthly log,  where yyyy and mm are the year and
#		the month respectively for which the log was written,
#		as per the M and Y options above.  If this file exists
#		when cml is invoked,  nothing is done and exit status
#		1 is returned.
#
#		This file is created by cat(1)-ing the input files;
#		if the operation fails, exit status 2 is returned and
#		the &quot;-r&quot; option is suppressed.
#
#    D.yyyy.mm.*.Y	Removed if the &quot;-r&quot; option is specified.
#
#    /tmp/cml.$$.date	Temporary for date(1) output; removed after
#		used.
#
# LIMITATIONS
#    cml is naive about the M option;  it assumes you entered a valid
#    number for a month (and a year).
#
# Installation constants
#
set -x
SHLDIR=/usr/local/etc
EXEDIR=$SHLDIR
LOGDIR=/var/log
REMOVE=F
SFX=

#
# Direct paths to programs used
CAT=/bin/cat
CUT=/bin/cut
DATE=/bin/date
ECHO=/bin/echo
LS=/bin/ls
RM=/bin/rm
TR=/bin/tr

#
# Begin.
#
#
# Get current date.
$DATE '+%y %m %d %H %M %S' &gt; /tmp/cml.$$.date
YY=`$CUT -d' ' -f1 /tmp/cml.$$.date`
MM=`$CUT -d' ' -f2 /tmp/cml.$$.date`
DD=`$CUT -d' ' -f3 /tmp/cml.$$.date`
HH=`$CUT -d' ' -f4 /tmp/cml.$$.date`
MN=`$CUT -d' ' -f5 /tmp/cml.$$.date`
SS=`$CUT -d' ' -f6 /tmp/cml.$$.date`
$RM -f /tmp/cml.$$.date
YY=`expr $YY + 1900`
#
# Deal with command line argument(s).
WHERE=`$ECHO &quot;$0&quot; | cut -d. -f3`
if  [ X&quot;$WHERE&quot; = X&quot;sh&quot; ]
then
EXEDIR=.
#   LOGDIR=.
SFX=.sh
fi

if  [ X&quot;$1&quot; = X&quot;-r&quot; ]
then
REMOVE=T
shift
fi

SFY=0

if  [ X&quot;$1&quot; != X&quot;&quot; ]
then
OP_MO=$1
shift
else
if  [ $MM -eq 1 ]
then
OP_MO=12
SFY=1
else
OP_MO=`expr $MM - 1`
fi
fi
if  [ $OP_MO -lt 10 ]
then
OP_MO=0${OP_MO}
fi

if  [ X&quot;$1&quot; != X&quot;&quot; ]
then
OP_YR=$1
else
OP_YR=`expr $YY - $SFY`
fi

#
# Output file name
OFN=M.${OP_YR}.${OP_MO}
if  [ -f $OFN ]
then
exit 1
fi

#
# Produce list of files to consolidate;  note that this depends on
# your local ls to get the order right.
LF=`$LS -1 $LOGDIR/D.${OP_YR}.${OP_MO}.[0-3][0-9].Y | $TR '\12' ' '`
if  [ X&quot;$LF&quot; = X&quot;&quot; ]
then
exit 0
fi

#
# cat(1) all the files to the output file;  if anything goes wrong,
# quit (exit status 2)  here so original data isn't damaged.
$CAT $LF &gt; $LOGDIR/$OFN
if  [ $? -ne 0 ]
then
exit 2
fi

#
# Remove the input files if asked.
if  [ X&quot;$REMOVE&quot; = X&quot;T&quot; ]
then
$RM -f $LF
fi
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
