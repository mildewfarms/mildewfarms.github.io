<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v05, i03: Listing 2: The complete GUI program</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a1.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a1_f1.htm">Figure 1</a></span></td>
		<td><span class=navbarLink><a href="a1_f2.htm">Figure 2</a></span></td>
		<td><span class=navbarLink><a href="a1_f3.htm">Figure 3</a></span></td>
		<td><span class=navbarLink><a href="a1_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a1_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink>Listing 2</span></td>
		<td><span class=navbarLink><a href="a1_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink><a href="a1_l4.htm">Listing 4</a></span></td>
		<td><span class=navbarLink><a href="a1_l5.htm">Listing 5</a></span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a1_l6.htm">Listing 6</a></span></td>
		<td><span class=navbarLink><a href="a1_l7.htm">Listing 7</a></span></td>
		<td><span class=navbarLink><a href="a1_l8.htm">Listing 8</a></span></td>
		<td><span class=navbarLink><a href="a1_s1.htm">Sidebar 1</a></span></td>
		<td><a href="../../../../source/SA/1996/mar96.tar"><b class=codeListing>mar96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 2: The complete GUI program</H1><p>
<PRE>
#!/usr/local/bin/perl

# Generate a GUI via your Web Browser
#
# Author : Arthur Donkers
#          Le Reseau netwerksystemen BV
#          Burg. F. van Ankenweg 5
#          NL-9991 AM Middelstum
#          The Netherlands
#          arthur@reseau.nl

use Socket;

%chartab = (
'20' =&gt; ' ',
'21' =&gt; '!',
'22' =&gt; '\&quot;',
'23' =&gt; '#',
'24' =&gt; '\$',
'25' =&gt; '%',
'26' =&gt; '\&amp;',
'2B' =&gt; '+',
'2F' =&gt; '/'
);

sub	create_socket {

local( $sockaddr, $port, $proto, $me, $junk );

$sockaddr = 'S n a4 x8';

($junk, $junk, $port)  = getservbyname( &quot;ontime&quot;, &quot;tcp&quot; );
($junk, $junk, $proto) = getprotobyname( $protoname );

$me = pack($sockaddr, &amp;AF_INET, 1308, &quot;\0\0\0\0&quot;);

socket( SOCK, &amp;AF_INET, &amp;SOCK_STREAM, $proto ) || die &quot;socket : $!&quot;;
bind(SOCK, $me) || die &quot;bind : $!&quot;;
}

sub	wait_connect {

listen( SOCK, 1 ) || die &quot;listen : $!&quot;;

($addr = accept(CLIENT, SOCK)) || die &quot;accept : $!&quot;;
}

sub	do_req {

local($request, $command, $url, $script, $arglist, $contents, $junk);
local( %extras, @postargs, $decoded, $i );

$request = &lt;CLIENT&gt;;
chop $request;

print LOGFILE &quot;$request\n&quot;;

($command, $url) = split( /\s+/, $request );
($junk, $script, $arglist) = split( /\//, $url, 3 );


while( &lt;CLIENT&gt; ) {
last if ( /^\s+$/ );

chop;

print LOGFILE &quot;$_\n&quot;;

if( /^Authorization:/ ) {
($junk, $extras{'authscheme'}, $extras{'authkey'}) =
split( /\s+/, $_, 3 );
}

if( /^Content-length:/ ) {
($junk, $extras{'contentlength'}) =
split( /\s+/, $_, 2 );
}

}

if( $command eq &quot;GET&quot; ) {
if( $script ne &quot;&quot; ) {
&amp;do_script( $script, %extras );
}
else {
&amp;do_script( &quot;isps.pl&quot;, %extras );
}
}
elsif( $command eq &quot;POST&quot; ) {
$contents = &lt;CLIENT&gt;;
chop $contents;
print LOGFILE &quot;$contents\n&quot;;
@postargs = split /\&amp;/, $contents;
$i = 0;
foreach $arg (@postargs) {
$arg =~ tr/\+/ /;
$arg =~ s/\%(..)/$chartab{$1}/eg;
}
}

}

sub	do_script {

local( $script, %extras ) = @_;

if( need_authorisation( $script ) ) {
if( exists $extras{'authkey'} ) {
$good = check_authorisation( $script, $extras{'authkey'} );

if( $good ) {
select(CLIENT);
do $script;
select(STDOUT);
}
else {
&amp;show_error( &quot;Authorisation for $script failed\n&quot; );
}
}
else {
&amp;get_authorisation( &quot;$script&quot; );
}
}
else {
select(CLIENT);
do $script;
select(STDOUT);
}

}

sub	get_authorisation {

local( $script ) = @_;
local( $curdate );

open CURDATE, &quot;date|&quot;;
$curdate = &lt;CURDATE&gt;;
close CURDATE;

print CLIENT &lt;&lt;EOHTML
HTTP/1.0 401 Unauthorized to access the document
Date: $curdate
Content-Type: text/html
Last-Modified: $curdate
WWW-Authenticate: Basic realm=$script

EOHTML
;

}

sub	check_authorisation {

local( $script, $key ) = @_;
local( $decoded, $user, $passwd, $crypted, $a, $b, $salt );

&amp;decode( $key, \$decoded );
($user, $passwd) = split( /\:/, $decoded, 2 );

open AUTHLIST, &quot;&lt;authdb&quot;;

while( &lt;AUTHLIST&gt; ) {

chomp;
($a, $b) = split( /\:/, $_, 2 );

if( $a eq $script ) {
if( $b =~ /\,/ ) {
$found = grep( $_ eq $user, split( /\,/, $b ) );
}
else {
$found = $b;
}

return 0 if( $found ne $user );
last;
}
}
close AUTHLIST;

open PASSWD, &quot;&lt;passwd&quot;;
while( &lt;PASSWD&gt; ) {
chomp;
($a, $b) = split( /\:/, $_, 2 );
last if( $a eq $user );
}
close PASSWD;

chomp $passwd;
$crypted = crypt $passwd, $b;

return 1 if( $crypted eq $b );

return 0;

}

sub	need_authorisation {

local( $script ) = @_;
local( $authscript );

if( open AUTHLIST, &quot;&lt;authdb&quot; ) {
while( &lt;AUTHLIST&gt; ) {
last if( /^\s*$/ );
chop;
chop;
($authscript, $users) = split( /\:/, $_, 2 );
if( $authscript eq $script ) {
return 1;
}
}
close AUTHLIST;
}
else {
&amp;show_error( &quot;cannot open need_auth, error $!\n&quot; );
}

return 0;
}

sub	show_error {

local( $errmsg );

print STDOUT $errmsg;
}

sub	decode {

local( $input, $output ) = @_;

open DECODE, &quot;decode $input|&quot;;
$$output = &lt;DECODE&gt;;
close DECODE;
}

# Start here
&amp;create_socket( );

while( 1 ) {
&amp;wait_connect( );
select(CLIENT);$|=1;
open LOGFILE, &quot;&gt;&gt;reseaud.log&quot;;
&amp;do_req( );
close LOGFILE;
close CLIENT;
}

# End of file
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
