<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE><title>v05, i10: Listing 4: build</title></TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#990000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center><table width=600 cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">

<tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class=navbarLink><a href="a7.htm">Article</a></span></td>
		<td><span class=navbarLink><a href="a7_l1.htm">Listing 1</a></span></td>
		<td><span class=navbarLink><a href="a7_l2.htm">Listing 2</a></span></td>
		<td><span class=navbarLink><a href="a7_l3.htm">Listing 3</a></span></td>
		<td><span class=navbarLink>Listing 4</span></td>
	</tr>
	<tr>
		<td><span class=navbarLink><a href="a7_l5.htm">Listing 5</a></span></td>
		<td><a href="../../../../source/SA/1996/oct96.tar"><b class=codeListing>oct96.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
<td valign=top width=440 bgcolor="#ffffff">
<table width=100% cellpadding=15 cellspacing=0 border=0>
<tr><td valign=top>
<H1>Listing 4: build</H1><p>
<PRE>
#! /bin/bash -
#  FILENAME: build
#  This script builds an html file putting standard headers and footers around
#  a raw html-formatted file. Two languages are supported (English and
#  national) for html file publication.
#  For variable definition see setvar file.
#
# Luca Salvadori <lsalvadori@batman.laben.it> 1996
#
# Setting global environment variables
. setvar
DEFFILE='*.htm'
#
# Parsing input arguments
#
# Help routine
case $1 in
-h|-H|--help)
echo "Usage: build [file [lang]]"
echo "Where file is the file(s) to build, lang is the
language to use."
exit;;
"")
echo -n "Enter file to build (default=*.htm): "
read FILE
FILE=${FILE:-${DEFFILE}}
;;
*)
FILE=$1
;;
esac
# Selecting languages
case $2 in
"")
echo -n "Enter language (default=$BASE_LANG): "
read LANG
LANG=${LANG:-$BASE_LANG}
;;
*)
LANG=$2
;;
esac
# Parsing languages
case $LANG in
$BASE_LANG|$OTHER_LANG)
;;
*)
echo "ERROR - Language \"$LANG\" is not supported"
exit 1
;;
esac
# here begins the real stuff
for file in ${FILE}
do
if [ ! -f ${file} ]
then
echo "ERROR - $file does not exist."
exit 1
fi
# Saving original file, just in case...
mv $file $file.$$
echo -n "Building $file... "
# Building final file by appending header, raw file and footer.
cat \
$BASEDIR/models/top_$LANG.htm \
$file.$$ \
$BASEDIR/models/bot_$LANG.htm \
>> $file
# Cleanup before exiting
rm $file.$$
echo "Done."
done
exit
</pre><p>
<p>


<P>
<br>&nbsp;<br>
</table></center></td>
<! -- End Content ------ >

</table><!/center>
<! -- End MASTER TABLE -- >

</body></html>
