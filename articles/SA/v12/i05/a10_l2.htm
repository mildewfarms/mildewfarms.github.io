<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i05: Listing 2 Create the CACHEFILE parameter for a date range</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a10.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a10_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a10_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink">Listing 2</span></td>
		<td><span class="navbarLink"><a href="a10_s1.htm">Sidebar 1</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a10_s2.htm">Sidebar 2</a></span></td>
		<td><a href="../../../../source/SA/2003/may2003.tar"><b class=codeListing>may2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Listing 2 </b><i>Create the CACHEFILE parameter for a date 
              range</i></h1>
            <p> 
            <pre>
# Creates a list of CACHEFILE parameters that can be substituted into
# the Analog Config File. A CACHEFILE parameter is created naming the specific
# cache file for the virtual host and date
sub createCacheFileStr {
    my ($path, $vhost, $from, $to) = @_[0..3];
    my $cachefilestr;
    
    my @date_list  = getDateRangeArray($from, $to);
    
#   Creates the parameter for every date in the array
    for my $date (@date_list) {
            my ($year, $month, $day) = split /-/, $date;
            if ( length($cachefilestr) != 0) { $cachefilestr .= "CACHEFILE "; }
            $cachefilestr .= "$path/$vhost/$year/$month/${date}.cache\n";
    }
    return $cachefilestr;
}

# Creates an array of all dates between From ($_[0]) and To ($_[1])
sub getDateRangeArray {
    my ($from_yr, $from_mt, $from_day)      = zeroPadDate(split /-/, $_[0]);
    my ($to_yr,   $to_mt,   $to_day)        = zeroPadDate(split /-/, $_[1]);
    my @local_date_list;

    ($to_yr, $to_mt, $to_day) = zeroPadDate(
Add_Delta_YMD($to_yr, $to_mt, $to_day,0,0,1)
);

    while ( !($from_yr == $to_yr  &amp;&amp; $from_mt == $to_mt &amp;&amp; $from_day == $to_day )) {
        push @local_date_list, "$from_yr-$from_mt-$from_day";
        ($from_yr, $from_mt, $from_day) = zeroPadDate(
Add_Delta_YMD ($from_yr, $from_mt, $from_day, 0, 0, 1));
    }
    return @local_date_list;
}

# All month and day strings must be two characters.
sub zeroPadDate {
    my ($year, $month, $day) = @_[0..2];
    if ( length($month) == 1 )   { $month  = '0' . $month; }
    if ( length($day)   == 1 )   { $day    = '0' . $day;   }
    return ($year, $month, $day);
}</pre>
            <p>&nbsp; 
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
