<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i05: Building a Reporting System</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a10.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a10_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a10_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a10_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a10_s1.htm">Sidebar 1</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink">Sidebar 2</span></td>
		<td><a href="../../../../source/SA/2003/may2003.tar"><b class=codeListing>may2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Building a Reporting System</b></h1>
            <p> If you are going to use logs for reporting, meet with the site's 
              developers and business managers to ensure that logs contain a consistent 
              record of the data needed. Building reporting systems is often an 
              iterative process where adding features, functionality, and management 
              procedures are done in cycles. The approach I employed had the following 
              general steps:
            <p> 
            <p> 1. Meet with business users and prioritize what traffic metrics 
              and reports are needed.
            <p> 2. Make decisions on what technical metrics should be recorded 
              and analyzed.
            <p> 3. Have Web developers and programmers document the site's 
              navigation, API's, and the underlying default values in processing 
              a page request.
            <p> 4. Develop a server audit plan. Make sure that servers are logging 
              in a consistent format and that logs are archived in a central area. 
              Follow that up with monitors and alerts that ensure that all logging 
              and log-management processes are operating correctly.
            <p> 5. Develop a project plan that addresses issues and releases features 
              in reasonable development cycles.
            <p> 6. Address server and logging issues first so that you have an 
              accurate set of logs as quickly as possible.
            <p> 7. Understand your storage needs for archiving logs and develop 
              the procedures for rotating, centralizing, and archiving.
            <p> 8. Choose tools for parsing the logs and building reports. Understand 
              the tradeoffs in time and cost in supporting commercial tools versus 
              other solutions.
            <p> 9. Keep the initial configuration simple and deliver simple reports.
            <p> 10. Audit the metrics delivered by your reporting solution. This 
              can be done by creating a small set of logs, running them through 
              your procedures, and comparing metrics delivered by your solution 
              with raw counts of the entries.
            <p>&nbsp; 
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
