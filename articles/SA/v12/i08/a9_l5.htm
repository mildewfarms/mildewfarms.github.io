<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i08: Listing 5 PIX authentication log parsing script </TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a9.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a9_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a9_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a9_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a9_l2.htm">Listing 2</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a9_l3.htm">Listing 3</a></span></td>
		<td><span class="navbarLink"><a href="a9_l4.htm">Listing 4</a></span></td>
		<td><span class="navbarLink">Listing 5</span></td>
		<td><span class="navbarLink"><a href="a9_l6.htm">Listing 6</a></span></td>
		<td><span class="navbarLink"><a href="a9_l7.htm">Listing 7</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a9_l8.htm">Listing 8</a></span></td>
		<td><span class="navbarLink"><a href="a9_l9.htm">Listing 9</a></span></td>
		<td><span class="navbarLink"><a href="a9_l10.htm">Listing 10</a></span></td>
		<td><a href="../../../../source/SA/2003/aug2003.tar"><b class=codeListing>aug2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Listing 5 </b><i>PIX authentication log parsing script</i> 
            </h1>
            <pre>
#!/usr/bin/perl

use Socket;
use DBI;
use POSIX;
use IO::Select;
use Getopt::Std;
use Sys::Syslog;

#------- Configurable constants ------------------
$database='fwlog';
$dbusername='username';
$host='dbserver';
$pw='password';
$logpipe="/usr/local/fwlog/fwlog.fifo";
#-------------------------------------------------

# get commandline options
my %option= ();
getopts("dv?h:", \%option);

printusage() if $option{h} or $option{'?'};

if ($option{d}) {
        # go into daemon mode
        # fork once, let the parent exit
        my $pid = fork;
        exit if $pid;
        die "Couldn't fork: $!" unless defined($pid);

        # disassociated from our controlling terminal
        POSIX::setsid() or die "Can't start a new session: $!";
}


# open database
$dbh=DBI-&gt;connect("DBI:Pg:dbname=$database;host=$host",$dbusername,$pw);
fatalerror("Unable to connect: $DBI::errstr\n") unless (defined $dbh);

my $sth = $dbh-&gt;prepare("INSERT INTO auth (datetime,username,sourceip) VALUES (?,?,?)");

# open named pipe in non-blocking mode.   If we're unable to keep up, we
# don't want to block syslog-ng
sysopen(LOGFILE, $logpipe, O_RDONLY | O_NONBLOCK) or fatalerror("Unable to open \
  named pipe $logpipe:$!\n");


#Read each record
while (1) {
    # sleep until there is something to read
    my $select = IO::Select-&gt;new(\*LOGFILE);
    $select-&gt;can_read;

    # read next line
    $_ = &lt;LOGFILE&gt;;

    # reads syslog messages of the format "Feb 10 00:17:08 pixfw1 Feb 10 2003 
    # 00:17:08: %PIX-6-109007: Authorization permitted for user 'testuser' from 
    # 10.1.1.102/1159 to 10.2.1.1/80 on interface inside"
    # inserts datetime, username, and sourceip into database
    if ($_ =~ /.*Authorization\spermitted.*/) {
        my ($month, $day, $year, $time, $username, $sourceip) = (split)[4,5,6,7,13,15];
        chop $time;
        $username =~ s/'//g;
        $username = lc($username);
        $sourceip =~ s#^(.*?)/.*#$1#;

        $datetime = "$year-$month-$day $time";


        $results = $sth-&gt;execute($datetime, $username, $sourceip);
        fatalerror("Unable to perform INSERT:$DBI::errstr\n") unless (defined $results);

    }
}
close (logfile);


sub printusage {
        print &lt;&lt;"END";

$0: Reads pix authentication log messages from a fifo and inserts them into a database
Usage: $0 [OPTION]... [DEVICENAME]

Options:
        -d              Became a daemon (run in the background) 
        -h or -?        Command line help (this screen)


END
}

sub fatalerror {
        my $message = shift;
        openlog($0, "nowait", "daemon");
        syslog("warning", "%s\n",$message);
        closelog();
        die;
}</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
