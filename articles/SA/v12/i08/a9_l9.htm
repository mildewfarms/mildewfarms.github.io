<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i08: Listing 9 Query translator section of reporting script</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a9.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a9_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a9_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a9_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a9_l2.htm">Listing 2</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a9_l3.htm">Listing 3</a></span></td>
		<td><span class="navbarLink"><a href="a9_l4.htm">Listing 4</a></span></td>
		<td><span class="navbarLink"><a href="a9_l5.htm">Listing 5</a></span></td>
		<td><span class="navbarLink"><a href="a9_l6.htm">Listing 6</a></span></td>
		<td><span class="navbarLink"><a href="a9_l7.htm">Listing 7</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a9_l8.htm">Listing 8</a></span></td>
		<td><span class="navbarLink">Listing 9</span></td>
		<td><span class="navbarLink"><a href="a9_l10.htm">Listing 10</a></span></td>
		<td><a href="../../../../source/SA/2003/aug2003.tar"><b class=codeListing>aug2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Listing 9 </b><i>Query translator section of reporting script</i></h1>
            <p> 
            <pre>
# Initialize some variables
my @users = $q-&gt;param('users');    # Grab CGI usernames as an array
my $users = scalar @users;        # Count the number of users in the array
my %query = $q-&gt;Vars;        # Suck in CGI query parameters 

# Connect to the database
$dbh=DBI-&gt;connect( "DBI:Pg: dbname=$dbName; host=$dbHost", $dbUser,
$dbPassword)
    || die "Unable to connect: $DBI::errstr\n";

# Build start and end timestamps in SQL-friendly format
$startstamp = $query{'beg_month'}.' '.$query{'beg_day'}.' '.
    $query{'beg_hour'}.':'.$query{'beg_minute'}.':'.'00 '.
    $query{'beg_year'};
    # Don't forget to add timezone later -- .' '.$beg_tz;
$endstamp = $query{'end_month'}.' '.$query{'end_day'}.' '.
    $query{'end_hour'}.':'.$query{'end_minute'}.':'.'00 '.
    $query{'end_year'};
    # Don't forget to add timezone later -- .' '.$end_tz;

# Build date chunk of query
$date_chunk = "datetime BETWEEN \'$startstamp\' AND \'$endstamp\' ";

# Build username chunk of query
if ( grep /---Everyone---/,@users ) {
    # Make no mention of username in SELECT query
    $user_chunk = ''
    }
else {
    # Make username query chunk in the form of:
    # "AND ( username = $user[0] OR username = $user[1] ... )"
    $user_chunk = 'AND ( ';
    foreach $user ( @users ) {
        $user_chunk .= "username = \'$user\' OR "
        };
    $user_chunk =~ s/OR $//;    # Whack off the last "OR "
    $user_chunk .= ') '
    };

# Build URL filter chunk of query
$domain_filter=$query{'domain_filter'};
$url_filter=$query{'url_filter'};
if ( $domain_filter ) { $like_chunk .= "AND domain LIKE \'%$domain_filter%\' " };
if ( $domain_filter ) { $like_chunk .= "AND url LIKE \'%$url_filter%\' " };

# Figure out which columns the user wants to see
push @headers, 'Count';
if ($query{'show_date'}) { 
    $columns.='datetime,';
    push @headers, 'Date'
};
if ($query{'show_firewall'}) {
    $columns.='firewall,';
    push @headers, 'Firewall'
};
if ($query{'show_user'}) {
    $columns.='username,';
    push @headers, 'User'
};
if ($query{'show_source'}) {
    $columns.='sourceip,';
    push @headers, 'Source IP'
};
if ($query{'show_dest'}) {
    $columns.='domain,';
    push @headers, 'Domain'
};
if ($query{'show_url'}) {
    $columns.='url,';
    push @headers, 'URL Path'
};

# Did the user want ANY columns?  If not, error.  Otherwise, chop off that
# extra comma in the column string.
if (! $columns) { error_report ; return 1 }
else { chop($columns) };

# Build the SELECT and GROUP BY query chunks
$select_chunk='SELECT COUNT(*),'.$columns.' FROM traffic WHERE ';
$groupby_chunk='GROUP BY '.$columns.' ';

# Build the ORDER BY chunk
$valid_columns=$columns."count";    # If it ain't reported, don't sort it.
if ($query{'sort1'} &amp;&amp; $valid_columns=~/$query{'sort1'}/) {
    $orderby_chunk.=$query{'sort1'}.' '.$query{'order1'}.','};
if ($query{'sort2'} &amp;&amp; $valid_columns=~/$query{'sort2'}/) {
    $orderby_chunk.=$query{'sort2'}.' '.$query{'order2'}.','};
if ($query{'sort3'} &amp;&amp; $valid_columns=~/$query{'sort3'}/) {
    $orderby_chunk.=$query{'sort3'}.' '.$query{'order3'}.','};
if ($orderby_chunk) {
    chop($orderby_chunk);    # Whack off that last comma...
    $orderby_chunk='ORDER BY '.$orderby_chunk.' '
};

# Which lines to display?  Build that query chunk
$limit_chunk='LIMIT '.$query{'num_lines'}.' OFFSET '.$query{'offset'}.' ';

# Build a query to count the number of results available
$querycount='SELECT COUNT(*) FROM ( SELECT DISTINCT '.
    $columns.' FROM traffic WHERE '.$date_chunk.$user_chunk.
    $like_chunk.') AS counter';

# Build the actual query...
$querything=$select_chunk.$date_chunk.$user_chunk.$like_chunk.
    $groupby_chunk.$orderby_chunk.$limit_chunk</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
