<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i10: Listing 1 audit, the end-user script</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a6.htm">Article</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a6_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a6_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/2003/oct2003.tar"><b class=codeListing>oct2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Listing 1 </b><i>audit, the end-user script</i></h1>
            <p> 
            <pre>
#! /usr/bin/perl

use strict;
use lib "$ENV{HOME}/lib";
use Symbol;
use Fcntl qw( :flock );
use File::Spec;
use Getopt::Std;
use Mail::Archive::Account;
use Mail::Archive::Manager;
use Mail::Audit;
use Mail::Box::Manager 2.00;

$|++;

my $LOCK = "$ENV{HOME}/.popread.lock";
open my $fh, '&gt;' . $LOCK
    or die "Can't open lockfile '$LOCK': $!";

unless (flock $fh, LOCK_EX | LOCK_NB) {
    close $fh;
    print "Can't get lock... there may be another archive process running.\n";
    exit;
}  


my %opts;
getopts('XdM:a:e:h:i:j:l:m:p:s:u:', \%opts);

die "Usage: -d only applies to mbox files" if 
    ($opts{d} &amp;&amp; ($#ARGV &lt; 0));

die "Usage: Argument to -m must be a directory" if 
    ($opts{m} &amp;&amp; -f $opts{m});

do {
    die "Usage: Argument to -$_ cannot be a directory" 
        if ($opts{$_} &amp;&amp; -d $opts{$_});
} for qw(i l s);

if ($opts{p} || $opts{h} || $opts{u} || $opts{e}) {
    die "Usage: " 
        unless ($opts{p} &amp;&amp; $opts{h} &amp;&amp; $opts{u} &amp;&amp; $opts{e});
}


my $MAILDIR       = $opts{m} || "$ENV{HOME}/mail";
my $LOG           = $opts{l} || "$MAILDIR/log"; # a record of mail activity
my $ARCHIVE       = $opts{a} || "archive";      # a directory to store audited email
my $INBOX         = $opts{i} || "Inbox";        # incoming email mailbox
my $JUNK          = $opts{j} || "Junk";         # a catch-all mailbox
my $MODE          = $opts{M} || 0770;           # permissions for new directories and files
my $SAFE    = $opts{X} || 0;        # delete incoming mail from POP server?
my $SPAM           = $opts{s};      # the name of the spam mailbox


my @accounts = 
    (
    # define accounts here
    );

push @accounts, 
    {
    host       =&gt; $opts{h},
    password  =&gt; $opts{p},
    user      =&gt; $opts{u},
    address   =&gt; $opts{e},
        maildir   =&gt; $MAILDIR,
    archive   =&gt; $ARCHIVE,
    inbox      =&gt; $INBOX,
    junk      =&gt; $JUNK,
    spam      =&gt; $SPAM,
    log      =&gt; $LOG,
    mode      =&gt; $MODE,
    safe      =&gt; $SAFE,
    } 
if ($opts{h}); 


die "Usage: No email accounts defined" unless ($#accounts &gt;= 0);


my $manager = Mail::Archive::Manager-&gt;new(
    accounts     =&gt; \@accounts,
    archive     =&gt; $ARCHIVE,
    inbox    =&gt; $INBOX,
    junk    =&gt; $JUNK,
    log        =&gt; $LOG,
    maildir    =&gt; $MAILDIR,
    mode    =&gt; $MODE,
    spam    =&gt; $SPAM,
    safe    =&gt; $SAFE,
);


#
# if no arguments, get email from the pop servers...
#
if ($#ARGV &lt; 0) {
    $manager-&gt;fetch();
    exit;
}


#
# otherwise, refile email from existing mailboxes
#
my $mgr = Mail::Box::Manager-&gt;new();

my $junkbox = ($JUNK =~ /^\//) ? 
    $JUNK : File::Spec-&gt;catfile($MAILDIR, $JUNK);

for my $mailbox (@ARGV) {
    print "Processing mailbox $mailbox... ";

    my $box = $mgr-&gt;open($mailbox, access =&gt; 'rw', extract =&gt; 'ALWAYS');
    unless (defined($box)) {
    print "Error: cannot open mailbox file $mailbox\n"; 
    next;
    }

    #
    # imap mailboxes have an initial message that stores
    # information about the mailbox; it does not need to be processed 
    #
    my $start = ($box-&gt;message(0)-&gt;subject =~ /FOLDER INTERNAL DATA/) ? 1 : 0;

    next if ($box-&gt;messages &lt; $start);

    print "found ".$box-&gt;messages." messages... \n";
    foreach my $message ($box-&gt;messages($start, $box-&gt;messages - 1)) {
        my $nojunk = 0;
    my $item = Mail::Audit-&gt;new(
        data      =&gt; [split(/^/m, $message-&gt;head . $message-&gt;body)], 
        emergency =&gt; $JUNK,
        log       =&gt; $LOG,
        loglevel  =&gt; 2,
        noexit    =&gt; 1,   
        nomime    =&gt; 1,   
    ); 

    next unless $item;

        print "From: ", $item-&gt;from, "\nTo: ", $item-&gt;to, "\n";

        for (@{$manager-&gt;get_accounts()}) {
            $nojunk++ if $_-&gt;{filter}($_, $item);
    }

    $item-&gt;accept($junkbox) unless ($nojunk);

    $message-&gt;delete if $opts{d};
    }

    print "... Done. \n\n";

    $mgr-&gt;close($box);
}

exit;</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
