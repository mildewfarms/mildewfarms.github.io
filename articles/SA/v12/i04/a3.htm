<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i04: Backup Scripts from UnixReview.com: Part II</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a3_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a3_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/2003/apr2003.tar"><b class=codeListing>apr2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b><img src="a3.gif" width="200" height="167" align="right">Backup 
              Scripts from UnixReview.com: Part II</b></h1>
            <p><b> </b><i>Edited by Ed Schaefer</i>
            <p> I still host the Shell Corner column, and each month a lucky reader 
              wins $100.00 when UnixReview.com publishes their submission (see 
              <b>http://www.samag.com/documents/s=7033/sam0204d/</b> for Part 
              I). This month, I present three unpublished backup submissions:
            <p> 
            <p> backup_algo: Juan Vera (<b>juan@coredump.com.ar</b>) presents 
              a Bourne shell script that creates a compressed tar backup file 
              without overwriting the previous backup. The backup file name is 
              based on date and a sequential number.
            <p> qd2nfs.ss: Mark Foster (<b>mdf@foster.cc</b>) submits a Bourne 
              shell script that backs up essential directories to an NFS-mounted 
              /share directory. The script is meant to be executed before doing 
              upgrades. As the script executes, the admin interactively decides 
              whether to back up the directory.
            <p> tgzdir: Alan Eldridge (<b>alane@geeksrus.net</b>) submits a Korn/Bash 
              script that backs up individual directory objects to compressed 
              tar files. Alan's script includes options to control the number 
              of history files to keep, rename hidden object names, change the 
              backup target directory location, etc.
            <p> 
            <b>backup_algo<br>
             by Juan Vera</b>
            <p> I administer Tomcat-based Web applications, web-apps. Tomcat encloses 
              web-apps in individual directories where config and resource files 
              reside. I require frozen versions of Tomcat-configured programs, 
              source trees, and Web pages. My Bourne shell script, backup_algo, 
              backs up directory objects without removing the previous backup 
              file. See Listing 1.
            <p> The structure of the backup file name is the <b>basename</b>(1) 
              of the directory to back up, year-month-day, the string "rel", and 
              an incremental number starting at zero. The script uses the backup 
              command <b>tar</b>, and compresses using <b>compress</b>(1). You 
              can use <b>gzip</b>(1) by changing the compress variable.
            <p> The execution syntax is:
            <p> 
            <pre>
backup_algo &lt;object to backup&gt; [directory location for backup]
</pre>
            1. Executing the script with no optional second argument:
            <p> 
            <pre>
backup_algo app
</pre>
            places the backup file in the same locaton as the "app" object:
            <p> 
            <pre>
app.2002-10-02-rel0.tar.Z
</pre>
            2. Executing with a second <b>backup_algo app /tmp</b> creates a backup 
            of the app directory, and creates a backup file in /tmp. The optional 
            directory must exist or an error will occur.
            <p> Successive calls with the same arguments will increment "release 
              number":
            <p> 
            <pre>
/tmp/app.2002-10-02-rel0.tar.Z
/tmp/app.2002-10-02-rel1.tar.Z
</pre>
            3. If the first argument is an absolute path, backup files are placed 
            in the same directory as the object being backed up:
            <p> 
            <pre>
backup_algo /etc/protocols

/etc/protocols.2002-10-02-rel0.tar.Z
</pre>
            4. Supply the optional second argument to place the backed up file 
            in a different location:
            <p> 
            <pre>
backup_algo /etc/protocols /tmp

/tmp/protocols.2002-10-02-rel0.tar.Z
</pre>
            5. To place the backup file in the present working directory:
            <p> 
            <pre>
backup_algo /etc 'pwd'
</pre>
            If the present working directory is /home/jvera, backup_algo creates 
            <b>/home/jvera/etc.2002-10-02-rel0.tar.Z</b>. Do <i>not</i> use the 
            "." operator as the second operator.
            <p> 
            <pre>
backup_algo /etc .
</pre>
            creates the backup file in the root directory (provided you have write 
            permissions):
            <p> 
            <pre>
./etc.2002-10-02-rel0.tar.Z
</pre>
            6. backup_algo supports spaces and other funky characters, but I don't 
            recommend using those:
            <p> 
            <pre>
mkdir "funky name"
cp /etc/services funky\ name/
</pre>
            Executing:
            <p> 
            <pre>
backup_algo funky\ name/
</pre>
            creates:
            <p> 
            <pre>
funky name.2002-10-02-rel0.tar.Z
</pre>
            <b>qd2nfs.ss<br>
            by Mark Foster</b>
            <p> I often run my Bourne shell quick-and-dirty, qd2nfs.ss, script 
              from our NFS-mounted /share directory before doing upgrades. See 
              Listing 2. As the script executes, the admin interactively decides 
              whether to back up each of the important directories. Here's what 
              the script does:
            <p> 
            <p> 1. If the effective user isn't root, terminate the script.<br>
              2. Set the archive directory variable, typically an NFS share.<br>
              3. If the archive directory doesn't exist, create it.<br>
              4. Change to the root directory.<br>
              5. If no directories exist on the command line, default to "etc 
              /usr/local".
            <p> 
            <p> For each of the important directories from root, such as (etc, 
              usr/local:
            <p> 
            <p> 1. Continue to loop if the directory does not exist.<br>
              2. Determine the size of the directory with the <b>du</b> command.<br>
              3. Display the directory name and size, and prompt the user whether 
              to back up the directory.<br>
              4. If the user answers yes, using tar, back up the directory to 
              the archive directory, or skip it.
            <p> <b>tgzdir<br>
              by Alan Eldridge</b>
            <p> I've been doing C/Unix/sh programming for 20 years, and I like 
              to fix hard-to-find distributed systems bugs. Over time, I've developed 
              this ksh/bash script, tgzdir, to back up my individual directory 
              objects (e.g., I check my system's /etc dir every hour and back 
              it up if it changed). See Listing 3.
            <p> In its most simple execution:
            <p> 
            <pre>
tgzdir /home/alane/sourcedir
</pre>
            the script, by default, creates a gzip-compressed tar file at the 
            parent directory of the directory being backed up:
            <p> 
            <pre>
/home/alane/sourcedir.20021207.0755.tar.gz 
</pre>
            where a tarball of sourcedir is created December 7, 2002 at 0755 AM.
            <p> tgzdir supports the following options:
            <p> 
            <p> <b>-k|--keep)</b> -- Keep &lt;n&gt; backups. default is 10.
            <p> <b>-d|--dest)</b> -- Change the destination directory (e.g., tgzdir 
              -d /tmp /home/alane/sourcedir).
            <p> <b>-r|--rename)</b> -- Rename hidden tarball file name. Backing 
              up .sourcdir creates .sourcedir.20021207.0755.tar.gz by default. 
              Change the leading "." to "_".
            <p> <b>-X|--delete)</b> -- Delete directory after backing it up, only 
              if the backup was successful.
            <p> <b>-x|--debug)</b> -- Set the shell's debugging mode (shell <b>set 
              -x</b> command).
            <p> <b>-D|--date-only)</b> -- Remove the time from the tarball file 
              name (i.e., sourcedir.20021207.tar.gz).
            <p> <i>Ed Schaefer is a frequent contributor to Sys Admin. He is a 
              software developer and DBA for Intel's Factory Integrated Information 
              Systems, FIIS, in Aloha, Oregon. Ed also hosts the UnixReview.com 
              monthly Shell Corner column. He can be reached at: <b>olded@ix.netcom.com</b>.</i>
            <p> <i>Juan Vera has been a UNIX sys admin for six years. He has experience 
              on ISPs, consulting firms, financial firms, and banks. He prefers 
              to work with OpenBSD.</i>
            <p> <i>Mark Foster works for VeriSign(eNIC) and lives in Seattle, 
              WA, tending to and tinkering with FreeBSD and Linux servers. Find 
              out more about Mark at: <b>http://mark.foster.cc/</b>.</i>
            <p> <i>Alan Eldridge is a UNIX software designer and developer, heavily 
              involved in the FreeBSD project. He will soon be leaving Wall St. 
              for Denver, in search of peace, tranquility, and a paycheck. He 
              can be reached at: <b>alane@freebsd.org</b>.</i>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
