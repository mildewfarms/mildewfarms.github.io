<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i04: Listing 2 gd2nfs.ss</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a3.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a3_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink">Listing 2</span></td>
		<td><span class="navbarLink"><a href="a3_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/2003/apr2003.tar"><b class=codeListing>apr2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Listing 2 </b><i>gd2nfs.ss</i></h1>
            <p> 
            <pre>
#!/bin/sh
# qd2nfs.ss: quick-n-dirty backup script for any old host.
# Use prior to upgrades 
# Author: Mark Foster

if ( test `id|sed 's/^uid=[0-9]*(\(.*\)) gid.*/\1/'` != 'root' ); then
   echo "Please execute this command as root!";
   exit;
fi
DATE=`date +%Y-%m-%d`
HOSTNAME=`hostname`
DESTBASE="/share/backup/$HOSTNAME/$DATE"
# If the archive folder is not there, create it
[ -d $DESTBASE ] || mkdir -p $DESTBASE

echo "Backup of $HOSTNAME commencing on $DATE"
cd /
# backup the "important" stuff

# Use arguments as our directory names
DIRS=$@
# Or these defaults if no args were supplied
if [ -z $DIRS ] ; then
   DIRS="etc usr/local"
fi

for d in $DIRS; do
   # Make sure directory even exists, or skip it
   if [ ! -d $d ] ; then
      echo "Sorry, directory $d does not exist!"
      continue
   fi
   # G is given path
   # F is fixed (path) to replace slashes w/ dashes
   G=$d
   F=`echo $G| sed -e 's/\//-/'` # flip any dashes to slashes
   SIZE=`du -sh $G | awk '{print $1}'`
   echo "Size of $G is $SIZE, do you want to archive? [y/n] "
   read answer
   : ${answer:=y}
   case $answer in
      [Yy]) echo "tar --totals -czf $DESTBASE/$F.tgz $G"
            tar --totals -czf $DESTBASE/$F.tgz $G
            ;;
         *) echo "It wasn't meant to be."
            ;;
   esac
done;
# EOF
</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
