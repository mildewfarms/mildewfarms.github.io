<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i04: Listing 1 backup_algo</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a3.htm">Article</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a3_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a3_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/2003/apr2003.tar"><b class=codeListing>apr2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Listing 1 </b><i>backup_algo</i></h1>
            <p> 
            <pre>
#!/sbin/sh
# backup_algo: full backup a directory, with progresive file names
#              using tar and compress.
# Author: Juan Vera

# set a sane default mask 
umask 022

# compressor: compress(1), gzip(1), bzip2(1)
COMPRESS=compress

# using GNU/BSD tar (support -z), if not will pipe to compress(1)
#NEWER_TAR="z"

# prevent tar to cross filesystems when creating backups
#DONOTCROSSFILESYSTEMSOPTION="l"

# tar will show files while packing
#VERBOSEOPTION="v"

# prevent GNU ls to print colour control characters - mostly on linux
#GNULS="--color=tty"

# end of config
program_name=`basename $0`

# print help if no parameters 
if [ $# = 0 ]
then
   echo "syntax: $program_name &lt;object to backup&gt; [directory location for backup]"
   exit 1
fi

# basic check
for directory in "$@"
do
   test \! -e "$directory" &amp;&amp;
      echo "error: create $directory first" &amp;&amp; exit 1
done

# setup vars used to construct the backup file name
DIRECTORY=`dirname "$1"`
WORKDIR=`ls -1Fd ${GNULS} "$2" 2&gt; /dev/null`

PREFIX=`basename "$1"`
REL=0                        
TODAY=`date +%Y-%m-%d`                
BACKUP_FILE_PREFIX="${PREFIX}.${TODAY}-rel"

EXTENSION=tar.Z
test \! -z "${NEWER_TAR}" &amp;&amp; EXTENSION=tgz

# create base backup file name
BACKUP_FILE="${WORKDIR}${BACKUP_FILE_PREFIX}${REL}.${EXTENSION}"

# here the real work starts
cd ${DIRECTORY}

# increment release name if there are backup files already
while [ -s "${BACKUP_FILE}" ]
do
   REL=`expr ${REL} + 1`
   BACKUP_FILE="${WORKDIR}${BACKUP_FILE_PREFIX}${REL}.${EXTENSION}"
done
# echo ${BACKUP_FILE}

# contruct tar options
TAR_OPTIONS=${NEWER_TAR}${DONOTCROSSFILESYSTEMSOPTION}${VERBOSEOPTION}

# finally, create the backup file
if [ ! -z "${NEWER_TAR}" ]
then
   tar ${TAR_OPTIONS}cf ${BACKUP_FILE} ${PREFIX} 
else
   tar ${TAR_OPTIONS}cf - ${PREFIX} | $COMPRESS -c &gt; ${BACKUP_FILE}
fi

# set tar/compress exit value 
exit $?
# EOF
</pre>
        </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
