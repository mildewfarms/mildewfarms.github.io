<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v12, i01: Visual Cron 2.1</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a10_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a10_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a10_f3.htm">Figure 3</a></span></td>
		<td><span class="navbarLink"><a href="a10_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a10_f5.htm">Figure 5</a></span></td>
		<td><a href="../../../../source/SA/2003/jan2003.tar"><b class=codeListing>jan2003.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Visual Cron 2.1</b></h1>
            <p> <i>Chip Castle</i>
            <p> Systems administrators often need to schedule tasks for some later 
              date or have some of those tasks recur at regular intervals. The 
              best tools to accomplish these tasks are "cron", for scheduling 
              recurring jobs, and "at" for scheduling one-time tasks. 
              Both of these tools are extremely handy and have been around for 
              quite some time, but when I use cron I often find myself trying 
              to recall the correct time format to use. Recently, however, I came 
              across the niftiest little utility I've found in quite awhile, 
              and it is great for handling job scheduling. It's called "Visual 
              Cron" and is an open source utility (licensed under the GPL). 
              Visual Cron was written by Daniel Roche and is an excellent GUI-based 
              tool for managing cron or "at" jobs. System requirements 
              for Visual Cron include Tcl/Tk 8.0 and the cron and "at" 
              utilities.
            <p> <b>Installation</b>
            <p> To begin, just go to:
            <p> 
            <pre>
http://www.linux-kheops.com/pub/vcron/vcronGB.html
http://daniel.roche.free.fr/vcron/vcronGB.html
</pre>
            and download the file format that suits you (rpm, tgz, and tcl versions 
            are available). For my Red Hat machine, I downloaded the rpm file 
            and entered the following commands as root to install and run Visual 
            Cron:
            <p> 
            <pre>
# rpm -ivh vcron-2.1-1.noarch.rpm
# vcron &amp;
</pre>
            <b>Application Features</b>
            <p> Once Visual Cron is running on your system, you should see something 
              similar to the screen shot shown in Figure 1. Just click on the 
              "Add" item from the "Operations" menu and you 
              should see something like Figure 2, which asks whether you want 
              to enter a cron or an "at" job. For this example, I chose 
              to enter an "at" job, which popped up a window as shown 
              in Figure 3.
            <p> After I entered the job command, desired time, and clicked on 
              the "Ok" button, I decided to modify what I just entered. 
              I clicked on the recently added "at" job and selected 
              "Modify/View" from the "Operations" menu. This 
              displayed a window similar to the screen shot shown in Figure 4. 
              There are numerous environment variables available for editing, 
              if necessary. At the bottom of this screen is the "find" 
              command that I entered. Besides options to add, view, and modify 
              your jobs, there is also an option to "Delete", which 
              can also be found on the "Operations" menu.
            <p> As shown in Figure 5, the example cron job removes all of the 
              .pdf files from /tmp at 2:23 p.m. of each day. The ability to select 
              the job time using the checkboxes shown in these figures is one 
              of my favorite features of this application. The layout is intuitive 
              and therefore extremely easy to use. Selecting multiple entries 
              from any of the time groups in this window (e.g., Minutes, Hours, 
              Days, Months, Weekdays) is a breeze. At this point, there's 
              no head scratching required, as I can choose the necessary job time 
              without much thought and can thus focus on the real task at hand.
            <p> Another interesting feature is the "Rescan" facility. 
              Let's say that multiple users have root access to a server 
              where you're performing some maintenance duties. If you edit 
              root's crontab using Visual Cron, it would be prudent to select 
              "Rescan" from the "Operations" menu before saving 
              your recently entered jobs. This way you can be sure that any new 
              cron or "at" jobs that were created by another root user 
              are included in your job list and not overwritten.
            <p> Other features of Visual Cron include "Set cron environment" 
              and "Set language" from the "Configuration" 
              menu. The former has a sample provided to jumpstart your configuration 
              efforts. As shown in Figure 4, there are quite a number of settings 
              to configure, including but not limited to the commonly used USER, 
              MAIL, and PATH environment variables. The latter menu item allows 
              you to set the language for the manual text and GUI interface. At 
              this point, there are seven supported languages, including English, 
              Spanish, French, German, Danish, Hungarian, and Swedish.
            <p> <b>Conclusion</b>
            <p> Even though many systems administrators are comfortable using 
              cron and "at" from the text-based command-line interface, 
              I recommend downloading this excellent open source tool just to 
              give it a whirl. You might be pleasantly surprised.
            <p> <i>Chip Castle specializes in Web development, database design, 
              and systems administration using open source tools and received 
              an M.S. in Software Engineering and B.S. in Computer Information 
              Systems from the University of West Florida. He can be contacted 
              at: <b>chip@chipcastle.com</b>.</i>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
