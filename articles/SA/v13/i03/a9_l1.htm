<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v13, i03: Listing 1 Logbot</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a9.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a9_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><a href="../../../../source/SA/2004/mar2004.tar"><b class=codeListing>mar2004.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><b>Listing 1 </b><i>Logbot</i></h2>
            <p> 
            <pre>
#!/usr/bin/perl

# logbot.pl a simple perl script designed to take input from a
# log monitoring program, and send it to a multi-user
# conference room on a jabber server.

# Bert Hayes    01 November 2003 (last edits)

use Net::Jabber qw(Client);
use Sys::Hostname;
use Net::Jabber::Message;
use Net::Jabber::Protocol;
use strict;
use English;

# If syslog-ng is running as root, this script will run as root
# Drop root priveleges, since we don't need them
my $UNPRIV = "99"; # This is the nobody uid and gid on my system;  YMMV
my $EGID="$UNPRIV $UNPRIV";    
my $EUID=$UNPRIV;
my $GID=$UNPRIV;
my $UID=$UNPRIV; 

# Edit these lines to suit your environment
my $server = "jabberd.mydomain.org";
my $port = 5223; # 5222 by default for non-ssl connections
my $resource = hostname();
my $username = "logbot";
my $password = "secret_password";
my @words = @ARGV;
#my $recipient = "bert"; # use for sending to a single user
my $mucserver = "conference.localhost";
my $room = "geeks";
my $nick = "logbot";

$SIG{HUP} = \&amp;Stop;
$SIG{KILL} = \&amp;Stop;
$SIG{TERM} = \&amp;Stop;
$SIG{INT} = \&amp;Stop;

my $Connection = new Net::Jabber::Client();

# Establish network connection to the server
my $status = $Connection-&gt;Connect(hostname=&gt;$server,
                                  port=&gt;$port,
                  ssl=&gt;1);


if (!(defined($status))) 
{
    print "ERROR:  Jabber server is down or connection was not allowed.\n";
    print "        ($!)\n";
    exit(0);
}

# Authenticate to the server
my @result = $Connection-&gt;AuthSend(username=&gt;$username,
                                   password=&gt;$password,
                                   resource=&gt;$resource);


if ($result[0] ne "ok") 
{
    print "ERROR: Authorization failed: $result[0] - $result[1]\n";
    exit(0);
}

print "Logged in to $server:$port using resource $resource...\n";

# Check into conference room
$Connection-&gt;MUCJoin(room=&gt;"$room",
               server=&gt;"$mucserver",
               nick=&gt;"$nick");

while(defined($Connection-&gt;Process())) { 

###########################################################################
## Uncomment this section for use with syslog-ng
###########################################################################
    while(&lt;STDIN&gt;) { 

    $Connection-&gt;MessageSend(to=&gt;"$room\@$mucserver", 
                 body=&gt;"$_\n", 
                 type=&gt;"chat" ); 
    }    
###########################################################################


###########################################################################
##  Uncomment this section if using logbot with swatch and traditional syslog
###########################################################################
#
#       $Connection-&gt;MessageSend(to=&gt;"$room\@$mucserver", 
#                                body=&gt;"@words\n", 
#                                type=&gt;"chat" ); 
#       &amp;Stop(); 
###########################################################################

} # End of while(defined($Connection-&gt;Process())) loop


print "ERROR: The connection was killed...\n";

exit(0);

sub Stop
{
    print "Exiting...\n";
    $Connection-&gt;Disconnect();
    exit(0);
}
</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
