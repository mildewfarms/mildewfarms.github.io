<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v13, i03: Listing 1 NNTP-client</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a4.htm">Article</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a4_l2.htm">Listing 2</a></span></td>
		<td><a href="../../../../source/SA/2004/mar2004.tar"><b class=codeListing>mar2004.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><b>Listing 1 </b><i>NNTP-client</i></h2>
            <p> 
            <pre>
#!/usr/bin/perl 
#
#
# Newsserver-client-test
#
# Ralf van Dooren &lt;r.vdooren@snow.nl&gt;
#

use Socket;
use RRDs;
use Net::NNTP;
use Time::HiRes ("gettimeofday");


require "/usr/local/newstest/newslib.pl";

## Invariables

$max_articles = 2;
$check_local_time = 10*60; # seconds 
$check_remote_time = 30*60; # seconds
$reference_server = "reference-server.isp2.tld";
$testgroup = "alt.test";
$TEXT= "/usr/local/newstest/garbage-file";

sub post_articles
{
    $posted_ok=0;
    for (my $i = 0 ; $i &lt; $max_articles ; $i++ ) 
    {
        push(@messageid,"&lt;insomnia-". gettimeofday . "-test-" . $i . \
             "\@" . $server."&gt;");
    }
    $devnull=shift(@messageid);
    foreach my $msgid (@messageid)
    {
        #print $msgid;
        &amp;newslib::open_connection("$server");
        @header=("Newsgroups: ".$testgroup."\n", \
                 "From: valid\@emailaddres.tld\n", \
                 "Subject: Heartbeat test: ignore \n", \
                 "Message-ID: ".$msgid."\n");
        
        #body has to be of variable length, so prevent Cleanfeed to interfere
        srand( time() ^ ($$ + ($$ &lt;&lt; 69)) );
        @body="";
        my $t1=0;
        my $t2=int(rand(300));
        open TEXT or die "Can't find textfile: $! \n";
        while (&lt;TEXT&gt;) {
            if ($t1 eq $t2) { next };
            if (rand() &gt; 0.99)
            {
                @body=(@body,$_);
                $t1++;
            }
        }
        close TEXT;
        $newslib::c-&gt;post(@header,"\n",@body);
        my $nntpcode=$newslib::c-&gt;code;
        #print $nntpcode; print "\n";
        if ($nntpcode eq "240") { $posted_ok++ };
        &amp;newslib::close_connection("$server");    
    }
    
}

sub check_articles_local
# code 430: article doesn't exist on server
# code 220: article exists on server

{
    $local_exist=0;
    foreach my $msgid (@messageid) 
    {
        my $devnull=$newslib::c-&gt;article("$msgid");
        my $nntpcode=$newslib::c-&gt;code;
        if ($nntpcode eq "220") { $local_exist++ };
        #print $nntpcode; print "\n";
    }
}

sub check_articles_remote
{
    $remote_exist=0;
    foreach my $msgid (@messageid)
        {    
        my $devnull=$newslib::c-&gt;article("$msgid");
        my $nntpcode=$newslib::c-&gt;code;
        if ($nntpcode eq "220") { $remote_exist++ };
        #print $nntpcode; print "\n";
    }

}

sub cancel_messages
{
    my $t=0;
        &amp;newslib::open_connection("$server");
    foreach my $msgid (@messageid)
    {    
        $cmsgid="&lt;insomnia-". gettimeofday . "-cancel-" . $t . "\@" . \
                  $server."&gt;";
        @header=("Newsgroups: ".$testgroup."\n", \
                 "From: valid\@emailaddress.tld\n", \
                 "Subject: cmsg cancel ". $msgid."\n","Control: cancel \
                 ".$msgid."\n","Message-ID: ".$cmsgid."\n","Summary: own \
                 cancel by original author\n");
        @body=("This cancels the testmessage ".$msgid."\n","\n","If you \
               have anything to say, please reply to the email address in \
               the From-field\n");
        $newslib::c-&gt;post(@header,"\n",@body);
        my $nntpcode=$newslib::c-&gt;code;
        #print $nntpcode; print "\n";
        $t++;
    }
    &amp;newslib::close_connection("$server");
}
sub write_results
{
        $per_posted_ok=(($posted_ok/$max_articles)*100);
    $per_local_exist=(($local_exist/$max_articles)*100);
        $per_remote_exist=(($remote_exist/$max_articles)*100); 
        RRDs::update ("/usr/local/newstest/client.$host.rrd" , \
          "$timestamp:$per_posted_ok:$per_local_exist:$per_remote_exist");
        my $ERR=RRDs::error;
        die "ERROR while updating client.$host.rrd: $ERR\n" if $ERR;
    
}


## Main

foreach $host (sort keys %newslib::hosts)
{
    @messageid="";
    #print $host; print "\n";
    $timestamp=time;    
    foreach $server (@{$newslib::hosts{$host}{'servers'}})
    {
        &amp;post_articles;
            
        sleep $check_local_time;
        
        &amp;newslib::open_connection("$server");
        &amp;check_articles_local;
        &amp;newslib::close_connection("$server");

        sleep $check_remote_time-$check_local_time; # (localtime is already 
                                                    #  'sleep'-ed)
        &amp;newslib::open_connection("$reference_server");
        &amp;check_articles_remote;
        &amp;write_results;
        &amp;newslib::close_connection("$reference_server");

        &amp;cancel_messages;
    }
}
</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
