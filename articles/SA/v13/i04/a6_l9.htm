<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v13, i04: Listing 9 send_summary</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a6.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a6_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a6_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a6_l3.htm">Listing 3</a></span></td>
		<td><span class="navbarLink"><a href="a6_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a6_l5.htm">Listing 5</a></span></td>
		<td><span class="navbarLink"><a href="a6_l6.htm">Listing 6</a></span></td>
		<td><span class="navbarLink"><a href="a6_l7.htm">Listing 7</a></span></td>
		<td><span class="navbarLink"><a href="a6_l8.htm">Listing 8</a></span></td>
		<td><span class="navbarLink">Listing 9</span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a6_l10.htm">Listing 10</a></span></td>
		<td><a href="../../../../source/SA/2004/apr2004.tar"><b class=codeListing>apr2004.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><b>Listing 9 </b><i>send_summary</i></h2>
            <p> 
            <pre>
#!/bin/ksh
# Listing 9
# Program: send_summary
#
# Description:
#
# This script, typically called from cron, summarizes recently sent alerts, 
# and sends an email message with a date, an alerts header, a table of 
# contents, and the Details.  

. $(dirname $0)/send_globals

#==============================
# Get the command line options.
#==============================

get_options
strip_config_file
addresses=""

while read line
do
    reset_config_variables
    read_config_block

    &gt; $TEMP_HEADER
    &gt; $TEMP_HEADER_2
    &gt; $TEMP_STRINGS_FILE
    alert_num=0

    get_config &lt; $TEMP_CONFIG_FILE

    if (( $(echo $message_types | grep -cw summary) == 0 )) || ! should_send
    then
        addresses=""
        continue
    fi

    echo "\nDetails:" &gt; $TEMP_BODY

    #====================================
    # find all the alert files $days_old.
    #====================================

    alert_files=$(find $SENT_ALERTS_DIR -type f -mtime -$days_old | sort -r)

    #=========================
    # Process each alert file.
    #=========================

    for alert_file in $alert_files
    do
        #------------------------------------------
        # Get meta-data from standard header block.
        #------------------------------------------

        alert_host=$(get_alert_attribute $alert_file host)
        alert_priority=$(get_alert_attribute $alert_file priority)
        alert_class=$(get_alert_attribute $alert_file class)

        attribute_string=$alert_host.$alert_priority.$alert_class

        if (( $(fgrep $attribute_string $TEMP_STRINGS_FILE | wc -l) &gt; 0 ))
        then
            echo $attribute_string &gt;&gt; $TEMP_STRINGS_FILE
            continue
        else
            echo $attribute_string &gt;&gt; $TEMP_STRINGS_FILE
        fi

        #----------------------------------------------------------------
        # Compare the priority and class options specified on the command
        # line with the priority and class of the alert file. Go to the
        # next alert file if we don't want to process this one.
        #----------------------------------------------------------------

        check_priority $alert_priority
        check_class $alert_class

        if should_include
        then
            alert_num=$(( $alert_num + 1 ))
            print "$alert_num. $(basename $alert_file)" &gt;&gt; $TEMP_HEADER
            cat &gt;&gt; $TEMP_BODY &lt;&lt; EOF

======================================================================
Alert #$alert_num: $(basename $alert_file)

$(cat $alert_file)
EOF
        fi
    done

    while read number alert_file
    do

        #------------------------------------------
        # Get meta-data from standard header block.
        #------------------------------------------

        alert_host=$(get_alert_attribute $SENT_ALERTS_DIR/$alert_file host)
        alert_priority=$(get_alert_attribute $SENT_ALERTS_DIR/$alert_file \
          priority)
        alert_class=$(get_alert_attribute $SENT_ALERTS_DIR/$alert_file \
          class)

        attribute_string=$alert_host.$alert_priority.$alert_class
        times_repeated=$(echo $(fgrep $attribute_string \
          $TEMP_STRINGS_FILE | wc -l))
        echo "$number $alert_file ($times_repeated)" &gt;&gt; $TEMP_HEADER_2
    done &lt; $TEMP_HEADER

    date &gt; $TEMP_HEADER

    if (( $days_old == 1 ))
    then
        echo "\nAlerts on $THIS_HOST from the past day\n" &gt;&gt; $TEMP_HEADER
    else
        echo "\nAlerts on $THIS_HOST from the past $days_old days:\n" \
          &gt;&gt; $TEMP_HEADER
    fi

    cat $TEMP_HEADER_2 &gt;&gt; $TEMP_HEADER

    if (( $alert_num == 0 ))
    then
        echo "There are no alerts to summarize." &gt; $TEMP_HEADER
        &gt; $TEMP_BODY
    fi

    #----------------
    # Mail the file.
    #----------------

    addresses=$(remove_duplicates $addresses)
    if [[ -n $addresses ]]
    then
        cat $TEMP_HEADER $TEMP_BODY | mailx -s "SUMMARY: alerts from $(uname -n)" $addresses
        message_count=$(( $message_count + 1 ))
    fi

done &lt; $STRIPPED_CONFIG_FILE

echo "messages sent: $message_count"

clean_up</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
