<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v13, i06: Listing 3 secs2dhms</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a6.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a6_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a6_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink">Listing 3</span></td>
		<td><span class="navbarLink"><a href="a6_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a6_s1.htm">Sidebar</a></span></td>
		<td><a href="../../../../source/SA/2004/jun2004.tar"><b class=codeListing>jun2004.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h2><B>Listing 3 </B><I>secs2dhms</i></h2>
            <p> 
            <pre>
#!/bin/ksh
# Listing 3: secs2dhms
# This script accepts a number of seconds argument and returns a string 
# in hours, minutes and seconds with corresponding labels.  For example,
# executing:
#
# secs2dhms 94550
#
# returns:
#
# 1 day 2 hours 15 minutes 50 seconds

TRUE=0
FALSE=1

integer SECONDS_IN_DAY=86400
integer SECONDS_IN_HOUR=3600
integer SECONDS_IN_MINUTE=60

readonly SECONDS_IN_DAY SECONDS_IN_HOUR SECONDS_IN_MINUTE

integer days=0
integer hours=0
integer minutes=0
integer seconds=0

need_space=$FALSE

# This function returns true if $1 is an integer. otherwise, returns false
is_integer()
{
# echo the argument to eliminate white space.
    case $(echo $1) in
        +([-+0-9])) return 0 ;;
        *) return 1 ;;
    esac
}

echo_s()
{
    if (( $1 != 1 ))
    then
        echo "s\c"
    fi
}

if [[ -z $1 ]]
then
    read operand
else
    operand=$1
fi

if is_integer $operand
then
    seconds=$operand
else
    echo "$operand is not an integer!"
    return 1
fi

if (( $seconds &lt; 0 ))
then
    seconds=$(($seconds * -1))
    sign="-"
else
    sign=""
fi
    
if (( "$seconds" &gt;= $SECONDS_IN_DAY ))
then
    days=$(( $seconds / $SECONDS_IN_DAY ))
    seconds=$(( $seconds % $SECONDS_IN_DAY ))
fi

if (( "$seconds" &gt;= $SECONDS_IN_HOUR ))
then
    hours=$(( $seconds / $SECONDS_IN_HOUR ))
    seconds=$(( $seconds % $SECONDS_IN_HOUR ))
fi

if (( "$seconds" &gt;= $SECONDS_IN_MINUTE ))
then
    minutes=$(( $seconds / $SECONDS_IN_MINUTE ))
    seconds=$(( $seconds % $SECONDS_IN_MINUTE ))
fi

[[ -n "$sign" ]] &amp;&amp; echo "$sign\c"

if (($days &gt; 0)) || (($hours &gt; 0)) || (($minutes &gt; 0)) || (($seconds &gt; 0))
then
    if (($days &gt; 0))
    then
        echo "$days day\c"
        echo_s $days
        need_space=$TRUE
    fi
    if (($hours &gt; 0))
    then
        [[ $need_space -eq $TRUE ]] &amp;&amp; echo " \c"
        echo "$hours hour\c"
        echo_s $hours
        need_space=$TRUE
    fi
    if (($minutes &gt; 0))
    then
        [[ $need_space -eq $TRUE ]] &amp;&amp; echo " \c"
        echo "$minutes minute\c"
        echo_s $minutes
        need_space=$TRUE
    fi
    if (($seconds &gt; 0))
    then
        [[ $need_space -eq $TRUE ]] &amp;&amp; echo " \c"
        echo "$seconds second\c"
        echo_s $seconds
    fi
else
    echo "0 seconds\c"
fi</pre></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
