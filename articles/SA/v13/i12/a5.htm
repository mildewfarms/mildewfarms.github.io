<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v13, i12: Using FCheck</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a5_f1.htm">Figure 1</a></span></td>
		<td><a href="../../../../source/SA/2004/dec2004.tar"><b class=codeListing>dec2004.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><B><img src="a5.gif" width="200" height="167" align="right">Using 
              FCheck</B></h1>
            <P> <I>Jason Perlman</i>
            <p> One of the main tasks for systems administrators is monitoring 
              their systems for file tampering. This can be accomplished by using 
              commercial products such as Tripwire or, in this case, FCheck. I 
              have come up with a blueprint and scripts that improve the usability 
              and security of FCheck.
            <P> In this article, I will discuss my methods and procedures for 
              using FCheck in a more effective manner. FCheck was written by and 
              maintained by Michael A. Gumienny. The installation and configuration 
              of FCheck is clearly documented in the README file.
            <P> Figure 1 gives a high-level illustration of the network architecture.
            <P> <B>Hardware Requirements</B>
            <P> An inexpensive PC serves as the NFS server and FCheck database 
              repository. A CD-ROM burner is required for the server along with 
              a second network interface card (NIC). A second NIC is also required 
              for all clients. A decent switch and the appropriate network cables 
              complete your private network hardware requirements.
            <P> <B>Configuring Server and Clients</B>
            <P> Setting up the server and clients is relatively straightforward. 
              After installing the second NIC on the NFS server, configure the 
              interface to use the private network. Remember to place an entry 
              in /etc/hostname.interface in order for your configurations to survive 
              a reboot.
            <P> In my case, I used a private Class A network. Place entries in 
              /etc/hosts. Here is an example from my NFS/FCheck master server 
              /etc/hosts table:
            <P> 
            <pre>
# Private network
10.1.1.1 nfserver-p
10.1.1.2 hooey-p
10.1.1.3 dooey-p
10.1.1.4 louie-p
</pre>
            On the NFS server, place entries in /etc/exports to share out your 
            CD-ROM drive, there are different flags and options depending on your 
            Unix flavor. Here are the options that I use in my /etc/exports file:
            <P> 
            <pre>
/cdrom -maproot=root -network 10.0 -mask 255.0.0.0
</pre>
            Start up NFS on the server. The process of setting up the FCheck clients 
            is similar to the FCheck server minus the NFS setup and startup tasks. 
            Install and configure FCheck according to the instructions provided 
            in the README file.
            <P> You will need to create a mount point for the FCheck server's 
              CD-ROM:
            <P> 
            <pre>
# mkdir /mnt/fcheckdb
</pre>
            In the fcheck.cfg file you will need to tell FCheck to use the NFS/FCheck 
            server's CD-ROM:
            <P> 
            <pre>
# The baseline database files are to be kept under the "DataBase" 
# directory that is defined next.
#
DataBase        = /mnt/fcheckdb/fcheckclient_hostname.dbf

# If you are using a read-only location. You can write the database
# files to one location, and read from an alternate read-only 
# (CD-ROM?) location.
ReadDB          = /mnt/fcheckdb/fcheckclient_hostname.dbf
#WriteDB        = /usr/sadm/fcheck/fcheckclient_hostname.dbf
</pre>
            I have created a script called fcheck.sh that automates the mounting 
            and unmounting of the FCheck server's CD-ROM and calls the <B>fcheck</B> 
            executable. Here is the script that I use on Solaris clients:
            <P> 
            <pre>
#!/usr/bin/sh
# This script mounts the remote database  and calls fcheck
# Jason Perlman 01/29/2004
# fcheck.sh
/usr/sbin/mount -F nfs nfsserver-p:/cdrom /mnt/fcheckdb

/usr/sadm/fcheck/fcheck -aidr | mailx -s "'hostname' fcheck \
  report" you@mailserver

sleep 5;
/usr/sbin/umount  /mnt/fcheckdb
# end of script
</pre>
            As valid changes are made to your system, the FCheck baseline needs 
            to be updated. The first step is to uncomment the WriteDB line in 
            the fcheck.cfg file. Then run:
            <P> 
            <pre>
#  ./fcheck -acd
</pre>
            This creates a new .dbf file and can now be secure-copied over to 
            your NFS/FCheck server. I have written a short script called trans_dbf.sh 
            to accomplish this procedure:
            <P> 
            <pre>
trans_dbf.sh
#!/usr/bin/bash
# this script should be run after the fcheck database is updated
# Jason Perlman 03/24/2004

/usr/local/bin/scp 'uname -n'.dbf root@nfsserver-p:/var/fcheck/.
echo "completed transfer of database"
# end of script
</pre> <b>Recommendations</B>
            <P> The NFS/FCheck server should be an ultra-hardened machine (e.g., 
              OpenBSD). External and internal access should be severely restricted. 
              Your best option is to allow connections only to the private interface. 
              The FCheck database files should be burned to a new CD-R once a 
              week. All clients should have IP forwarding disabled. To do this 
              on Solaris, type the following:
            <P> 
            <pre>
# ndd -set /dev/ip ip_forwarding 0
</pre>
            On Linux, IP forwarding is turned off by default. To verify:
            <P> 
            <pre>
# cat  /proc/sys/net/ipv4/ip_forward
</pre>
            The value in the file should be zero. On FreeBSD, it is turned off 
            by defaut. To verify, make sure you do not have the following value 
            in your /etc/sysctl.conf file:
            <P> 
            <pre>
net.inet.ip.forwarding=1
</pre> <b>Conclusion</B>
            <P> Following these procedures and architecture gives you a secure, 
              easy-to-manage solution for monitoring systems.
            <P> <I>Jason Perlman is a graduate of the University of Maryland. 
              He is a Systems Administrator for Global Science and Technology. 
              He can be reached at: <B>Jason.Perlman@gst.com</B>.</I></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
