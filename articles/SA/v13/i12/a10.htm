<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v13, i12: Entrap: A File Integrity Checker</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>
<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a10_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink"><a href="a10_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a10_l3.htm">Listing 3</a></span></td>
		<td><span class="navbarLink"><a href="a10_l4.htm">Listing 4</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a10_l5.htm">Listing 5</a></span></td>
		<td><span class="navbarLink"><a href="a10_l6.htm">Listing 6</a></span></td>
		<td><span class="navbarLink"><a href="a10_l7.htm">Listing 7</a></span></td>
		<td><span class="navbarLink"><a href="a10_l8.htm">Listing 8</a></span></td>
		<td><span class="navbarLink"><a href="a10_l9.htm">Listing 9</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a10_l10.htm">Listing 10</a></span></td>
		<td><span class="navbarLink"><a href="a10_l11.htm">Listing 11</a></span></td>
		<td><span class="navbarLink"><a href="a10_l12.htm">Listing 12</a></span></td>
		<td><a href="../../../../source/SA/2004/dec2004.tar"><b class=codeListing>dec2004.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><B><img src="../../resource/1_shell.gif" width="245" height="130" align="right">Entrap: 
              A File Integrity Checker</B></h1>
            <P> <I>Ed Schaefer and John Spurgeon</i>
            <p> Verifying the integrity of files is an important systems administration 
              task. Well-known systems administration authority &AElig;leen Frisch 
              says that "minimally, you should periodically check the ownership 
              and permissions of important system files and directories." One 
              method for verifying files is to take a snapshot of the system in 
              a pristine state and compare it against subsequent snapshots.
            <P> You can use a product such as Tripwire (<B>http://www.tripwire.com</B>), 
              or create your own such as our Entrap utility. Entrap is a suite 
              of Korn shell scripts that compares two snapshots of a system and 
              reports the differences. When two snapshots are compared, Entrap 
              reports information about files that have been added, deleted, and 
              modified.
            <P> An Entrap snapshot includes the file characteristics displayed 
              by the command <B>ls -ild</B>, as well as optional file signatures, 
              such as md5. Filtering rules may be set up to instruct Entrap to 
              ignore specific files and/or attributes when comparing two snapshots.
            <P> In this column, we'll explain Entrap's configuration file. We'll 
              discuss the commands used to take a snapshot, filter snapshots, 
              and compare two snapshots. We'll review the directory structure, 
              present an Entrap example, and include a high-level description 
              of the Entrap scripts. We conclude with what's in the tarball and 
              possible Entrap enhancements.
            <P> <B>Configuration File</B>
            <P> Entrap uses a configuration file to describe the directory trees 
              to be processed. Each line of the configuration file contains an 
              ordered pair. The first element of the pair is a pathname, and the 
              second is a pathname alias. For example, the default configuration 
              file, /opt/entrap/etc/conf/entrap, looks like this:
            <P> 
            <pre>
/  root
/usr  usr
/var  var
/opt  opt
/export/home  home
</pre>
            You can override the default, and specify an alternate configuration 
            file with the <B>-c</B> option:
            <P> 
            <pre>
-c    config_file
</pre> <b>Snapshot Command</B>
            <P> The <B>snapshot</B> command creates a snapshot:
            <P> 
            <pre>
entrap snapshot [-o] snapshot_name
</pre>
            A <B>snapshot</B> is composed of a directory containing one or more 
            files. The files in a snapshot directory are named the same as the 
            directory aliases listed in the configuration file that was used to 
            create the snapshot. Existing snapshot files are not overwritten without 
            using the <B>-o</B> option.
            <P> <B>Filter Command</b>
            <P> 
            <Pre>
entrap filter [ -f filter_name] snapshot
</pre>
            The <B>filter</B> command applies filtering rules to the specified 
            snapshot. A given snapshot only needs to be filtered once for a given 
            filter. After filtering, the snapshot may be compared against other 
            snapshots multiple times without being filtered again. However, if 
            the filtering rules change, the snapshot must be re-filtered.
            <P> A filter is implemented as a directory containing one or more 
              filter files. The files in a filter directory must be named the 
              same as the directory aliases listed in a corresponding configuration 
              file. If a filter file does not already exist, Entrap creates an 
              empty file with the appropriate name when the filter command executes. 
              When using multiple filters, make sure the filter being applied 
              to a particular snapshot is compatible with the configuration file 
              used to create the snapshot.
            <P> Each line in a filter file is formatted as follows:
            <P> 
            <pre>
PATHNAME MATCHTYPE ATTRIBUTES
</pre>
            PATHNAME is either the complete pathname of a file or directory, or 
            a pathname prefix.
            <P> Valid values for MATCHTYPE are "exact" and "prefix". If MATCHTYPE 
              equals "exact", the filtering rule applies only to the file or directory 
              whose pathname matches PATHNAME exactly. If MATCHTYPE equals "prefix", 
              the filtering rule applies to all files and directories whose pathnames 
              begin with the prefix PATHNAME.
            <P> ATTRIBUTES is a string of one or more characters. Certain alphanumeric 
              characters instruct Entrap to ignore specific attributes of a given 
              file or directory object when comparing two snapshots. The <B>*</B> 
              and <B>!</B> characters are wild cards with special meaning.
            <P> Entrap supports the following characters:
            <P> 
            <P> <B>i</B> = Inode
            <P> <B>p</B> = Protection mode
            <P> <B>l</B> = Number of links
            <P> <B>o</B> = Owner
            <P> <B>g</B> = Group
            <P> <B>s</B> = Size (in bytes)
            <P> <B>m</B> = Modification time
            <P> <B>1</B> = First file signature (md5 by default)
            <P> <B>2</B> = Second file signature (e.g. cksum)
            <P> <B>n</B> = Nth file signature
            <P> <B>*</B> = Ignore all attribute changes, but detect file creations 
              and deletions
            <P> <B>!</B> = Ignore all attribute changes as well as file creations 
              and deletions
            <P> <B>Compare Command</b>
            <P> 
            <Pre>
entrap compare [-fv] snapshot1 snapshot2
</pre>
            The compare command compares two snapshots summarizing the differences. 
            When using the <B>-f</B> option, Entrap compares filtered snapshots 
            and may not report all differences. Without the <B>-f</B> option, 
            unfiltered snapshots are compared and all differences are reported. 
            The <B>filter</B> command must be run before comparing filtered snapshots.
            <P> When using the <B>-v</B> option, Entrap produces a verbose report, 
              which includes a list of all files that have been added, modified, 
              or deleted. Without the <B>-v</B> option, Entrap produces a summary 
              report, which only lists the number of files.
            <P> <B>Entrap Directory Structure</B>
            <P> By default, Entrap is installed in the /opt/entrap directory. 
              If Entrap is installed in another directory, modify the global constant 
              ENTRAP_DIR in ~/bin/entrap (Listing 1). In the following description, 
              assume <B>~</B> is the default:
            <P> 
            <P> <B>~/bin</B> -- The bin directory contains the Entrap shell scripts 
              including the top-level entrap script. The entrap script is the 
              only program directly called.
            <P> <B>~/etc</B> -- The etc directory contains two subdirectories: 
              conf and filters.
            <P> <B>~/etc/conf</B> -- The conf directory contains one or more Entrap 
              configuration files. The default configuration file entrap resides 
              here.
            <P> <B>~/etc/filters</B> -- The filters directory contains one subdirectory 
              for each defined filter. The default filter entrap resides here.
            <P> <B>~/var</B> -- The var directory contains two subdirectories: 
              snapshots and tmp. You may want to link ~/var to another directory 
              such as /var/opt/entrap/var.
            <P> <B>~/var/snapshots</B> -- The snapshots directory contains one 
              subdirectory for each snapshot.
            <P> <B>~/var/tmp</B> -- The tmp directory is where Entrap stores various 
              temporary files that are removed when the program terminates normally. 
              Files may remain in this directory if Entrap is interrupted unexpectedly. 
              Since these files can be relatively large, Entrap attempts to clean 
              up old temporary files the next time the program executes.
            <P> <B>~/man</B> -- The man directory contains the source for the 
              man page and a README file explaining how to install the man page.
            <P> <B>Entrap Example</B>
            <P> To demonstrate Entrap, we'll set up a test directory tree and 
              track changes using Entrap snapshots. We'll follow these steps:
            <P> 
            <ul>
              <li> Set the configuration file. 
              <li> Create the first snapshot. 
              <li> Create the filter file. 
              <li> Filter the first snapshot. 
              <li> Create changes to the directory tree. 
              <li> Create the second snapshot. 
              <li> Filter the second snapshot. 
              <li> Compare the first snapshot with the second and view the changes.
            </ul>
            <B>Setting the Configuration File</B>
            <P> The following describes the contents of our test directory tree 
              /home/eds/entrapdir:
            <P> 
            <pre>
drwxrwxrwx   2 eds      people    512 Aug  5 14:41 dir1
drwxrwxrwx   2 eds      people    512 Aug 23 13:32 dir2
drwxrwxrwx   2 eds      people      0 Aug 23 13:32 dir2/johns.file
-rw-rw-rw-   1 root     other       0 Aug 24 16:15 delfile
-rw-rw-rw-   1 eds      people      3 Aug  6 10:40 file1
-rw-rw-rw-   1 eds      people      0 Aug  5 14:40 file2
-rw-rw-rw-   1 eds      people      0 Aug  5 14:40 file3
</pre>
            Our custom configuration file ~/etc/conf/testconfig contains one line 
            composed of a directory pathname and alias:
            <P> 
            <pre>
/home/eds/entrapdir  hee
Create the First Snapshot
</pre>
            Executing: 
            <pre>
./entrap -c testconfig snapshot testsnap1
</pre>
            creates the first snapshot file ~/var/snapshots/testsnap1/hee. The 
            snapshot file is named after the alias (hee, in this case), and resides 
            in a directory created for the snapshot name (testsnap1).
            <P> <B>Create the Filter File</B>
            <P> Suppose we don't want to report changes associated with editing 
              a file. When a file's contents are modified, the file's modification 
              time, size, and message digest typically change.
            <P> To ignore the modification time, file size, and md5 value for 
              /home/eds/entrapdir/dir2/johns.file, set up custom filter file ~/etc/filters/testconfig/hee 
              as such:
            <P> 
            <pre>
/home/eds/entrapdir/dir2/johns.file exact ms1
</pre>
            Remember that the filter file exists in a directory with the same 
            name as the configuration file (testconfig, in this case) and is named 
            after the alias (hee, in this case).
            <P> <B>Filter the First Snapshot</B>
            <P> Next, filter the first snapshot:
            <P> 
            <pre>
./entrap -c testconfig filter testsnap1
</pre>
            This command creates filter file hee.f (alias with an "f" extension) 
            at the same directory level as the snapshot file.
            <P> <B>Create Changes to the Directory Tree</B>
            <P> Execute the following commands:
            <P> 
            <ul>
              <li> <B>rm /home/eds/entrapdir/delfile</B> 
              <li> <B>touch /home/eds/entrapdir/file4</B> 
              <li> <B>vi /home/eds/entrapdir/dir2/johns.file</B> (make some changes)
            </ul>
            <B>Create the Second Snapshot</B>
            <P> Analogous to creating the first snapshot, executing:
            <P> 
            <pre>
./entrap -c testconfig snapshot testsnap2
</pre>
            creates the second snapshot file ~/var/snapshots/testsnap2/hee.
            <P> <B>Filter the Second Snapshot</B>
            <P> Similar to filtering the first snapshot, filter the second:
            <P> 
            <pre>
./entrap -c testconfig filter testsnap2
Compare the Unfiltered Snapshots
Compare the two unfiltered snapshots by executing this command:

./entrap -c testconfig compare -v testsnap1 testsnap2
</pre>
            Note that with the verbose option turned on, the three changes to 
            the test directory are each listed:
            <P> 
            <pre>
Date: Thu Aug 26 14:49:56 PDT 2004
Comparing testsnap1 vs. testsnap2

Filtering is turned OFF

Checking: /home/eds/entrapdir

1 file has been added

/home/eds/entrapdir/file4

1 file has been deleted

/home/eds/entrapdir/delfile

2 files have been modified

/home/eds/entrapdir
      snapshot: testsnap1                         testsnap2
      last modified: Aug-26-14:47                 Aug-26-14:49
      /usr/bin/md5: 393e1248f538cb7f30ec043fa4    93b7b067d94b \
                                                  574e579cb2a35f

/home/eds/entrapdir/dir2/johns.file
      snapshot: testsnap1                         testsnap2
      size in bytes: 0                            14
      last modified: Aug-26-14:47                 Aug-26-14:49
      /usr/bin/md5: d98f00b204e9800998ecf8427e    85c97ff7b0af3 \
                                                  ab020575f3e77
</pre> <b>Compare the Filtered Snapshots</b>
            <p> To ignore attributes that changed as a result of editing johns.file, 
              execute the following compare with the filtered (<B>-f</B>) option:
            <P> 
            <pre>
./entrap -c testconfig compare -fv testsnap1 testsnap2
</pre> <b>Program Description</B>
            <P> The following is a high-level description of the 12 scripts in 
              the ~/entrap/bin directory:
            <P> 
            <P> entrap, Listing 1 -- This script is the driver that calls the 
              other Entrap scripts. Several environment variables are set, the 
              existence of important files and directories is verified, and the 
              user is prompted to create certain directories if they do not exist. 
              If an invalid operand or no operand is supplied, a usage message 
              prints and the program terminates.
            <P> snapshot, Listing 2 -- This script creates a snapshot file. If 
              the snapshot already exists, it is overwritten if the <B>-o</B> 
              flag is used, otherwise the program terminates.
            <P> compare, Listing 3 -- This script compares two separate snapshots 
              and generates a report.
            <P> filter, Listing 4 -- This script creates a filtered snapshot file. 
              This filtered file is used during a filtered compare.
            <P> filter.sh, Listing 5 -- This script applies filtering rules to 
              data read from standard input. In this case, the standard input 
              is the snapshot file to be filtered.
            <P> attributes.sh, Listing 6 -- This script uses the <B>ls -ild</B> 
              command to record a file's attributes: inode number, number of links, 
              owner, group, file size, and modification date.
            <P> 
            <P> The script also creates a file's message digest signature. Entrap 
              is designed to handle an arbitrary number of file signatures. Four 
              signatures are illustrated, but three are commented out:
            <P> 
            <pre>
#       Signature 1: /usr/local/bin/md5
        /usr/local/bin/md5 $1 ...

#       Signature 2: /usr/bin/sum
#       /usr/bin/sum $1 ...

#       Signature 3: /usr/ucb/sum
#       /usr/ucb/sum $1 ...

#       Signature 4: /usr/bin/cksum
#       /usr/bin/cksum $1 ...
</pre>
            By default, Entrap uses only the md5 message digest command. Creating 
            file signatures is time consuming and resource intensive. A clever 
            hacker might spoof one of the message digest commands so a neurotic 
            systems administrator might consider using more than one. Simply uncomment 
            your signatures of choice in the attributes.sh script. Also, if you 
            want to change or add more signature commands, review the instructions 
            in the script.
            <P> 
            <P> list_added.sh, Listing 7 -- This script takes a file generated 
              by the compare command and lists the files that were added.
            <P> list_changed.sh, Listing 8 -- This script takes a file generated 
              by the compare command and lists the files that were modified.
            <P> list_deleted.sh, Listing 9 -- This script takes a file generated 
              by the compare command and lists the files that were deleted.
            <P> count_added.sh, Listing 10 -- This script takes a file generated 
              by the compare command, and counts the number of files that were 
              added.
            <P> count_changed.sh, Listing 11 -- This script takes a file generated 
              by the compare command, and counts the number of files that were 
              changed.
            <P> count_deleted.sh, Listing 12 -- This script takes a file generated 
              by the compare command, and counts the number of files that were 
              deleted.
            <P> <B>What's in the tarball</B>
            <P> The tarball (<B>http://www.samag.com/code/</B>) contains all source 
              code, documentation, and configuration files found in the /opt/entrap 
              directory. The tarball was created relative to the entrap subdirectory 
              to ease movement. To move Entrap to a different location, simply 
              change the ENTRAP_DIR variable in the file ~/bin/entrap.
            <P> <B>Conclusion</B>
            <P> Is Entrap the epitome of a file-integrity checking process? Certainly 
              not; consider these possible enhancements:
            <P> 
            <ul>
              <li> Add support for spaces in file and directory names. 
              <li> Provide a method for updating an existing snapshot. 
              <li> Eliminate the "ls -ild" dependency. Rewriting ~/bin/attributes.sh 
                in "C" could improve Entrap's portability.
            </ul>
            <P> While Entrap works on our Solaris 7 system, it might not on some 
              other Unix variant. If you have specific questions concerning portability 
              or if something in the code requires clarification, email us at: 
              <B>sascripts@yahoo.com</B>.
            <P> <B>References</B>
            <P> Frisch, &AElig;leen. <I>Essential System Administration</I>. Sebastopol, 
              CA: O'Reilly &amp; Associates, 1995.
            <P> <B>Resources</B>
            <P> Tripwire -- <B>http://www.tripwire.com</B>
            <P> AIDE (Advanced Intrusion Detection Environment) --<B>http://sourceforge.net/projects/aide</B>
            <P> ICU (Integrity Checking Utility) -- <B>http://www.algonet.se/~nitzer/ICU/</B>
            <P> Osirus (a file integrity verification system) -- <B>http://www.shmoo.com/osiris/</B>
            <P> Samhain (a file integrity and intrusion detection tool) --<B>http://samhain.sourceforge.net/</B>
            <P> md5 (file signature utility) -- <B>http://www.fourmilab.ch/md5/</B>
            <P> The Solaris Fingerprint Database --<B>http://www.sun.com/blueprints/0501/Fingerprint.pdf</B>
            <P> CERT: List of Security Tools -- <B>http://www.cert.org/tech_tips/security_tools.html</B>
            <P> CIAC System Monitoring Tools -- <B>http://ciac.llnl.gov/ciac/ToolsUnixSysMon.html</B>
            <P> <I>John Spurgeon is a software developer and systems administrator 
              for Intel's Factory Information Control Systems, IFICS, in Aloha, 
              Oregon. Outside of work, he enjoys turfgrass management, triathlons, 
              and spending time with his family.</i>
            <P> <i>Ed Schaefer is a frequent contributor to </I>Sys Admin<I>. 
              He is a software developer and DBA for Intel's Factory Information 
              Control Systems, IFICS, in Aloha, Oregon. Ed also edits the monthly 
              Shell Corner column on UnixReview.com. He can be reached at: <B>shellcorner@comcast.net</B>.</I></table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
