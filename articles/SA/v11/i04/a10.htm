<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v11, i04: Name Services: Another View</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink">Article</span></td>
		<td><span class="navbarLink"><a href="a10_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a10_f2.htm">Figure 2</a></span></td>
		<td><span class="navbarLink"><a href="a10_f3.htm">Figure 3</a></span></td>
		<td><span class="navbarLink"><a href="a10_f4.htm">Figure 4</a></span></td>
	</tr>
	<tr>
		<td><span class="navbarLink"><a href="a10_f5.htm">Figure 5</a></span></td>
		<td><span class="navbarLink"><a href="a10_s1.htm">Sidebar</a></span></td>
		<td><a href="../../../../source/SA/2002/apr2002.tar"><b class=codeListing>apr2002.tar</b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <H1><img src="../../resource/netadmin.gif" width="150" height="150" align="right">Name 
              Services: Another View</h1>
            <p> <i>Ron McCarty</i>
            <p> In the November 1999 issue of <i>Sys Admin</i>, I covered "Domain 
              Name System Design Considerations" (<b>http://www.sysadminmag.com/documents/s=1172/sam9911f/sam9911f.htm</b>). 
              This month, I will cover several name server topologies as well 
              as the BIND 9.2.0 new view feature that will add another tool to 
              your name server tool chest.
            <p> Prior to BIND version 8, name servers were identified by their 
              roles as either "primary" or "secondary". The 
              primary server contained the actual zone databases, and the secondary 
              servers pulled the zones from the primary. With version 8 of BIND, 
              the terminology changed to "master" and "slave". 
              Regardless of the terminology, it is important to realize that the 
              client is not aware of a name server's role within a particular 
              domain.
            <p> In addition to the basic topology shown in Figure 1, systems administrators 
              can take advantage of the fact that clients (and name servers acting 
              as clients in recursive mode) are not aware of the server technology 
              to solve networking issues or requirements. For example, an organization 
              may want to take advantage of its ISP's name services setting 
              on a very high-speed network connection, but may also want to maintain 
              a control zone without answering requests from external clients. 
            <p> Figure 2 shows a topology that supports this business requirement. 
              With the hidden master, the ISP's slave servers are registered 
              with the registrar as authoritative, but the corporate name server 
              is not registered with the registrar as an authoritative name server. 
              The ISP name servers are configured to pull the zones from the hidden 
              primary. This topology takes advantage of the ISP's high-speed 
              connection, keeps client requests off the WAN connection to the 
              ISP, and allows the organization to limit incoming DNS to only the 
              slave servers, thus providing additional security to the organization.
            <p> DNS efficiency can be improved in a similar fashion. Systems administrators 
              needing to provide remote domain name services often need to consider 
              the impact of name services on WAN connections prior to simply pointing 
              all clients to a centralized name server across the WAN link. Through 
              the use of an internal non-registered slave, as shown in Figure 
              3, remote clients can resolve names locally without the request 
              crossing the WAN link. Since the remote non-registered slave is 
              not entered as a name server in the zone, there is no chance other 
              clients outside the remote site will query the name server. This 
              topology works because the remote clients are configured to point 
              to the un-registered slave. This un-registered happens to be configured 
              as a slave so that it considers itself authoritative and will return 
              responses to the client's queries.
            <p> While the above two examples take advantage of the client's 
              lack of knowledge of the server topology, a common requirement for 
              DNS is to provide external users of the domain with a limited external 
              view of the domain that typically includes only WWW, FTP, and mail 
              servers. This is done to keep hackers from mapping out the internal 
              zone and is often accomplished by separating the external and internal 
              zone onto two name services, as shown in Figure 4. This method is 
              very effective from a security perspective. However, with the creation 
              of extranets, many organizations want to share name services with 
              partners that not only include public services, but also services 
              within the extranet, as shown in Figure 5. BIND version 9.2 allows 
              a single server to provide split DNS through views as shown in the 
              figure. A BIND view allows a query to be answered based upon the 
              source address of the client. Before looking at the specifics, I'll 
              discuss installing BIND 9.2.0.
            <p> <b>BIND Installation</b>
            <p> BIND is available at the Internet Software Consortium at:
            <p> 
            <pre>
http://www.isc.org/products/BIND/bind9.html
</pre>
            The installation instructions covered are for Solaris 2.6. Open source 
            development tools were used, including GNU <b>gcc</b> compiler version 
            3.0.3 with the <b>binutils</b> version 2.11.2 and GNU <b>make</b> 
            version 3.79.1.
            <p> After downloading the BIND source tarball, unzip and untar the 
              distribution to the appropriate source directory. I used <b>/usr/local/src/bind-9.2.0/</b>. 
              Move into the directory with:
            <p> 
            <pre>
cd /usr/local/src/bind-9.2.0
</pre>
            and execute the following commands:
            <p> 
            <pre>
./configure
make
make install
mkdir /var/run
mkdir /var/named
</pre>
            The name server will need to know how to reach the root name servers, 
            so download the <b>named.root</b> file from <b>ftp://ftp.rs.internic.net/domain/named.root</b> 
            and place it in the <b>/var/named</b> directory and <b>named.root</b>.
            <p> In regard the views mentioned previously, I will cover the <b>/etc/named.conf</b> 
              configuration as opposed to emphasizing the contents of the zone 
              files. Test zone files are required for the following examples. 
              (The sidebar "Important DNS Files" covers the other files.) 
              The following configuration of <b>/etc/named.conf</b> is needed 
              to create an internal view for all clients that will act as a cache-only 
              name server:
            <p> 
            <pre>
view "internal" {
        match-clients { any; };

                zone "." {
                type hint;
                file "named.root";
                };

                zone "0.0.127.in-addr.arpa" {
                type master;
                file "localhost.rev";
                };
        };
</pre>
            which can be tested by firing up <b>named</b> with:
            <p> 
            <pre>
/usr/local/bin/named &amp;
</pre>
            Check <b>/var/adm/messages</b> if <b>named</b> does not start up. 
            (You can ignore the messages about the <b>0.0.127.in-addr.arpa</b> 
            in the <b>/var/adm/messages</b> for now.) To be sure the name server 
            is resolving correctly, the <b>nslookup</b> command can be used by 
            pointing the <b>nslookup</b> command to the new server:
            <p> 
            <pre>
nslookup
Default Server:  any.mcwrite.net
Address:  192.168.1.5
&gt; server 192.168.1.252
Default Server:  sunny.mcwrite.net
Address:  192.168.1.252

&gt;www.samag.com.
Server:  sunny.mcwrite.net
Address:  192.168.1.252

Non-authoritative answer:
Name:    www.samag.com
Address:  66.35.216.85
</pre>
            The "Non-authoritative answer" reports that the name server 
            requested and received an answer. The "Non-authoritative" 
            means the server is not configured to serve the domain directly.
            <p> The <b>dig</b> command can also be used:
            <p> 
            <pre>
dig @192.168.1.252 www.samag.com.

; &lt;&lt;&gt;&gt; DiG 9.2.0 &lt;&lt;&gt;&gt; @192.168.1.252 www.samag.com.
;; global options:  printcmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 47099
;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 2, ADDITIONAL: 0

;; QUESTION SECTION:
;www.samag.com.                 IN      A

;; ANSWER SECTION:
www.samag.com.          259086  IN      A       66.35.216.85

;; AUTHORITY SECTION:
samag.com.              259086  IN      NS      gw.ddj.com.
samag.com.              259086  IN      NS      ads.ddj.com.

;; Query time: 2 msec
;; SERVER: 192.168.1.252#53(192.168.1.252)
;; WHEN: Sun Jan 20 21:55:26 2002
;; MSG SIZE  rcvd: 86
</pre>
            Now that I've shown that the server operates, let's configure 
            it as the split DNS server as shown in Figure 5. Remove everything 
            in the <b>/etc/resolv.conf</b> and put only this view in:
            <p> 
            <pre>
view "external" {
        match-clients { any; };

                zone "mcwrite.net" {
                type master;
                file "mcwrite.net.ext";
                };
        };
</pre>
            After restarting <b>named</b> (using <b>-HUP</b>), the split DNS server 
            should be serving up the extranet views as well. To create an extranet 
            view of the DNS, add the following to the top of the file:
            <p> 
            <pre>
view "extranet" {
        match-clients { 192.168.2.0/24; };
        recursion no;

        zone "mcwrite.net" {
                type master;
                file "mcwrite.net.extranet";
                };
                   };
</pre>
            and restart <b>named</b>.
            <p> In this particular case, we're allowing the clients from 
              the partners extranet to query the name server. Queries from the 
              192.168.2.0/24 would probably be a name server that will make the 
              requests for internal clients, or special application servers that 
              are aware of the specific name server.
            <p> Views could also prove very useful on managing internal networks 
              to keep users from arbitrarily picking DNS servers outside of their 
              LANs. Now that an internal view has been created, a view for the 
              extranet must be created. Figure 5 shows the external view that 
              can be added to the last <b>/etc/resolv.conf</b>.
            <p> <b>Summary</b>
            <p> DNS has proven itself as the name server protocol of choice both 
              on the Internet and within corporate networks. Although the protocols 
              are aged and proven, there continue to be improvements, such as 
              BIND's new view feature, that can help administrators solve 
              common networking problems.
            <p> <b>Resources</b>
            <p> 
            <p>BIND 9.2.0 Administrator Manual: <b>http://www.nominum.com/resources/documentation/Bv9ARM.pdf</b> 
            <p>BIND FAQ: <b>http://www.nominum.com/resources/faqs/bind-faqs.html</b> 
              DNS Resources Directory: <b>http://www.dns.net/dnsrd/</b>
            <p> <i>Ronald McCarty received his bachelor's degree in Computer 
              and Information Systems at the University of Maryland's international 
              campus at Schwaebisch Gmuend, Germany. He works for Sonus Networks 
              as a senior systems engineer on a customer team responsible for 
              a major telecommunications carrier. Ron is the co-author of New 
              Rider's Linux Routing (<b>http://www.linuxroutingbook.com/</b>). 
              He spends his free time with his two best friends in the world: 
              his daughter, Janice, and his wife, Claudia. Ron can be reached 
              at: <b>ronald.mccarty@gte.net</b>.</i>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
