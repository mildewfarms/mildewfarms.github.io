<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v11, i10: Listing 1 Reading the device tree from kernel memory

</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a10.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a10_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink">Listing 1</span></td>
		<td><span class="navbarLink"><a href="a10_l2.htm">Listing 2</a></span></td>
		<td><span class="navbarLink"><a href="a10_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/2002/oct2002.tar"><b class=codeListing></b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Listing 1 </b><i>Reading the device tree from kernel memory</i></h1>
            <p> 
            <pre>
 1 /* Compile with gcc -g -o kvm kvm.c -lkvm -lelf */
 2 #include &lt;fcntl.h&gt;
 3 #include &lt;sys/dditypes.h&gt;
 4 #include &lt;sys/ddidmareq.h&gt;
 5 #include &lt;sys/ddi_impldefs.h&gt;
 6 #include &lt;kvm.h&gt;
 7
 8 int main(int argc, char *argv[]) {
 9    kvm_t *kmem;
10    struct dev_info *pdevnode, devnode;
11    struct nlist sym[] = { { "top_devinfo" }, { 0 } };
12
13    /* Open kernel memory */
14    kmem = kvm_open(NULL, NULL, NULL, O_RDONLY, argv[0]);
15
16    /* Find the top_devinfo symbol, a pointer to the root node */
17    kvm_nlist(kmem, sym);
18
19    /* Read in the pointer */
20    kvm_kread(kmem, sym[0].n_value, (char *) &amp;pdevnode, sizeof(pdevnode));
21
22    /* Now read in the node itself */
23    kvm_kread(kmem, (unsigned long) pdevnode, (char *) &amp;devnode, sizeof(devnode));
24
25    printf("Parent: 0x%08x Child: 0x%08x Sibling: 0x%08x\n",
26           devnode.devi_parent, devnode.devi_child, devnode.devi_sibling);
27
28    /* Close kernel memory */
29    kvm_close(kmem);
30 }
</pre>
          </table><p>&nbsp;</p></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
