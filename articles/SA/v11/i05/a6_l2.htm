<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 4.0//EN">


<HTML>
<HEAD>
<TITLE>v11, i05: Listing 2</TITLE>
<LINK REL=StyleSheet HREF="../../resource/css/sacdrom.css" TYPE="text/css" TITLE="CSS1">
</HEAD>

<body bgcolor="#ffffff" text="#000000" link="#000000" alink="#669999" vlink="#333366" topmargin=0 leftmargin=0>

<! -- Begin MASTER TABLE -- >
<!center>
<table width=98% cellpadding=0 cellspacing=0 border=0 bgcolor="#ffffff">
  <tr>

<table cellpadding=5 cellspacing=0 border=0>
	<tr>

		<td><span class="navbarLink"><a href="a6.htm">Article</a></span></td>
		<td><span class="navbarLink"><a href="a6_f1.htm">Figure 1</a></span></td>
		<td><span class="navbarLink"><a href="a6_l1.htm">Listing 1</a></span></td>
		<td><span class="navbarLink">Listing 2</span></td>
		<td><span class="navbarLink"><a href="a6_l3.htm">Listing 3</a></span></td>
		<td><a href="../../../../source/SA/2002/may2002.tar"><b class=codeListing></b></a></td>

	</tr>
</table>


</tr>
<tr>
<! -- Begin Content ------ >
    <td valign=top width=527 bgcolor="#ffffff"> 
      <table width=100% cellpadding=15 cellspacing=0 border=0>
<tr>
          <td valign=top> 
            <! -- Insert Content ------ >
            <h1><b>Listing 2 </b></h1>
            <p> 
            <pre>
#!/usr/bin/perl

# /usr/local/bin/makelist.pl
# Create the data file for GetHost.cgi and send to STDOUT
#
# by John D. Shearer

# Version 0.9a

# *** SECTION 1 ***
use Text::ParseWords;
use Text::DHCPparse;

# *** SECTION 2 ***
# Fixed Length Field Definitions:
# Position       Field
# --------  --------------------
#   1-17    IP Address
#  18-38    Last Lease Timestamp
#  39-52    Hardware Address
#  53-69    Client Hostname
#  70-95    Inventory Assignment
#  96-      WINS and { e-mail }

# *** SECTION 3 ***
$statfile = "home/jsmith/logs/stat.comp";
$winsfile = "home/jsmith/wins.txt";  
$logfile = "home/jsmith/dhcpd.leases.comp"; 
$invfile = "home/jsmith/HW.TXT"; 

# *** SECTION 4 ***
# Process combined DHCP lease files and create %$lease
# (we use the leaseparsenc() function instead of the
# leaseparse() function to remove the colons from 
# the MAC addresses) 
$list = leaseparsenc($logfile);

# Process WINS database and create %wins
&amp;winssub;

# Process email Stats file and create %email
&amp;emailsub;

# Process Inventory File and create %inv
# If this is not working, check the field numbers
&amp;invsub;

# Step through %$lease and append %inv entry as necessary
# -also make sure %inv entries are minimum length
&amp;invproc;

# Step through %email and append to %$lease as necessary
&amp;emailproc;

# Step through %wins and append to %$lease as necessary
&amp;winsproc;

# Print the newly created database to STDOUT
foreach (sort(keys %$lease)) {
   print "$list-&gt;{$_}\n";
}

# *** SECTION 5 ***
# *** 
# *** SUBROUTINES FOR FILE PROCESSING
# ***
sub emailsub {
   open STAT, "$statfile";
   while (&lt;STAT&gt;) {
      chomp;
      next if ( /MDM|HTTP/ );
      @current = split /,/;
      if ( shift(@current) eq "Login" ) {
         @addr = split(/:/, $current[10]);
         $email{$addr[0]} .= "$current[0] " 
                        if ($email{$addr[0]} !~ /$current[0]/i);
      }
   }
   close STAT; 
}

sub winssub {
   open WINS, $winsfile or die;
   while (&lt;WINS&gt;) {
      @new = quotewords(",", 0, $_);
      next if ($new[11] !~ /\d+\.\d+\.\d+\.\d+/);
      chop $new[1] if (length $new[1] &gt;= 16);
      chomp @new;
      $new[1] =~ s/\s*$//;
      $wins{$new[11]} .= "$new[1] " if ($wins{$new[11]} !~ /\Q$new[1]/i);
   }
   close WINS;
}

sub invsub {
   # $pos is the field position in HW.TXT of the MAC Address
   $pos = '1';
   open INV, $invfile
      or die "Could not open INV file\n";
   while (&lt;INV&gt;) {
# Kind of weird - the chomp and chop are both needed because of the database
# export - maybe there is a '\n' and a &lt;cr&gt;? (or however that works...)
      chomp;
      chop;
      @var = split /\t/;
      next unless ($var[$pos]);
      next if ($var[$pos] =~ /none/i);
      $var[$pos] =~ s/ |-|://g;
      $var[$pos] =~ s/o|O/0/g;
      $var[$pos] = sprintf("%12.12s", lc($var[$pos]));
      $var[$pos] =~ s/ /0/g;
      $inv{$var[$pos]} = $var[2];
   }
   close INV;
}

# *** SECTION 6 ***
# ***
# *** Subroutines for HASH Processing
# ***
sub invproc {
   for $ip (keys %$lease) {
      $mac = substr $list-&gt;{$ip}, 38, 12;
#      $mac =~ s/://g;
      if (exists $inv{$mac}) {
         $list-&gt;{$ip} .= sprintf("%-26s", $inv{$mac});
      }
      else {
         $list-&gt;{$ip} .= (" "x26);
      }
   }
}

sub emailproc {
   for $ip (keys %email) {
      if (exists $list-&gt;{$ip}) {
         $list-&gt;{$ip} .= sprintf("%-17s", " ")
                            if (length($list-&gt;{$ip}) &lt;= 36);
         $list-&gt;{$ip} .= "{ ". $email{$ip} ."} ";
      }
      else {
         $list-&gt;{$ip} = sprintf("%-17s%-78s{ %s} \t", $ip, "NO DHCP", 
                                $email{$ip});
      }   
   } 
}

sub winsproc {
   for $ip (keys %wins) {
      if (exists $list-&gt;{$ip}) {
         ($list-&gt;{$ip} .= sprintf("%-17s", " ")) 
                           if (length($list-&gt;{$ip}) &lt;= 85);
         $list-&gt;{$ip} .= "[ " . $wins{$ip} ."] ";
      }
      else {
         $list-&gt;{$ip} = sprintf("%-17s%-78s[ %s]", $ip, "NO DHCP", 
                                 $wins{$ip});
      }
   }
}</pre>
          </table></table>&nbsp;

<! -- End Content ------ >

<!/center>
<! -- End MASTER TABLE -- >

</body>



<! -- Begin Content ------ >
</html>
