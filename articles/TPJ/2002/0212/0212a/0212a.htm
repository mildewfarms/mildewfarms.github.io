<html><head><title>Dec02: Creating RSS Files with XML::RSS</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; Dr. Dobb's Journal--><h1>Creating RSS Files with XML::RSS</h1><p><i>The Perl Journal</i> December 2002</p><h3>By Derek Vadala</h3><I>Derek lives in New York City and works for azurance.com, an open source and security consulting firm that he cofounded. He is the author of the upcoming book, </i>Managing RAID on Linux<i> (O'Reilly and Associates, 2003), and can be contacted at derek@azurance.com.</I><hr><p>In my article, "Parsing RSS Files with XML::RSS," (<i>TPJ</i>, Fall 2002), I covered using XML::RSS to locate, parse, and reuse dynamic content found on the World Wide Web. But what if you want to provide original material for others? XML::RSS can also be used to generate a properly formatted RSS file. You can create feeds on the fly using a database back end, or generate a static RSS file that gets updated at regular intervals.</p><h3>The &lt;channel&gt; Element</h3><p>RSS files are composed of various elements that describe a channel (or feed) and its dynamic content. Each item contained within a channel should contain a &lt;title&gt; and &lt;link&gt; element and may also contain the optional &lt;description&gt; element. Likewise, the &lt;channel&gt; element, which stores metadata about the channel, has its own &lt;title&gt;, &lt;link&gt;, and &lt;description&gt; subelements. In addition, the &lt;channel&gt; structure also contains an &lt;items&gt; subelement that provides a table of contents for the RSS document. So a bare-bones RSS &lt;channel&gt; element might look something like <A NAME="re1"><A HREF="0212ae1.htm">Example 1</A>.</p><DDJADVERTISEMENT INLINE><p>In the aforementioned example, our RSS feed contains three items (typical feeds contain about 10 items) and they are indexed by their URL, or in RSS-speak, they are indexed by each item's &lt;link&gt; element. Begin creating your RSS file by initializing a new RSS object and using the <i>channel()</i> method to populate the required items within the &lt;channel&gt; element, as in <A NAME="re2"><A HREF="0212ae2.htm">Example 2</A>.</p><p>Only a title, link, and description are required, but other elements are also available. For example, &lt;image&gt; and &lt;textinput&gt; may be used to provide links to a site logo or newsletter subscription form. In addition to these attributes, several modules that extend the base RSS schema are available. These extensions provide elements that can include metadata about a site's topic, authors, and update frequency, and are categorized as modules that are part of the RSS specification. The Dublin Core module (http://web.resource.org/rss/1.0/modules/dc/), for example, includes provisions for  information about copyright, publisher, publication date, and language. The Syndication module (http://web .resource.org/rss/1.0/modules/syndication/) provides elements that describe how often a feed is updated. I'll cover a few elements from each module. The specification for each module contains a comprehensive list of options. A complete list of modules is available from http://web.resource.org/rss/1.0/.</p><p>Use second-level hashes to compartmentalize RSS module metadata. In <A NAME="rl1"><A HREF="#l1">Listing 1</A>, I have added a few elements from the Dublin Core and Syndication modules to my channel element.</p><p>The Dublin Core elements that I have added are straightforward, but the Syndication elements require a short explanation. The &lt;syn:updatePeriod&gt; specifies a time interval in which to measure the number of updates. In this case, like many RSS feeds, I have chosen one hour. Possible choices are hourly, daily, weekly, monthly, and yearly. The &lt;syn:updateFrequency&gt; specifies how many times the feed is updated during each period. So in this example, the feed is updated four times per hour, or every 15 minutes. The &lt;syn:updateBase&gt;, though it looks a bit confusing, simply represents the first time the feed was published. In this case, November 5, 1999 at 9:00am Eastern Standard Time. This information, combined with the update frequency and update period, allows users and applications to determine a publishing schedule. </p><p>Some module extensions may be applied to individual items in addition to the &lt;channel&gt; element. For example, specifying a &lt;dc:creator&gt; for each item is useful for sites that have articles written by more than one author. Add a second-level hash to each item for the modules and subelements that you want to include. Just follow the same examples I used for the &lt;channel&gt; element.</p><h3>Adding Items</h3><p>Next, I'll add some &lt;item&gt; elements using the <i>add_item()</i> method (see <A NAME="rl2"><A HREF="#l2">Listing 2</A>).</p><p>In compliance with the RSS specification, the <i>add_item()</i> method requires a title and link, but may also include an optional description. Notice how each item corresponds to an entry in the &lt;rdf:Seq&gt; metadata from my previous examples. That information is automatically generated by XML::RSS as items are added to the RSS object.</p><h3>Combining DBI and XML::RSS</h3><p>At this point, it's probably obvious that generating an RSS file using Perl is not much easier than creating one by hand using a text editor. Therefore, creating a reusable program that can automatically generate and update your RSS feed is desirable. While you could use nearly anything on your system as the data source (like text files, DB files, an LDAP server, or a combination of sources), using a back-end SQL database is a popular choice. My <i>rss_items</i> function queries a SQL back end (MySQL in my case) and calls XML::RSS's <i>add_item()</i> method to populate the RSS object (see <A NAME="rl3"><A HREF="#l3">Listing 3</A>).</p><p><i>rss_items</i> takes a positive integer as input. This number is used to determine how many entries are added to the RSS object. Since I want to extract rows from the end of the table, I count the number of rows in the table and use this number to generate an offset (lines 20-23) for the first row that I want to return. The LIMIT portion of my second query (line 24) uses that offset and returns rows between that number (<i>$offset</i>) and the end of the table (-1). Depending on which back-end RDBMS you are using and what your schema looks like, you might need to perform some different steps to achieve this effect.</p><p>Finally, the <i>while</i> loop (line 27) iterates through each row of data returned, and calls the XML::RSS <i>add_item()</i> method using the title and link that was returned from my database.</p><h3>Generating the File</h3><p>Now I can call the <i>as_string()</i> or <i>save()</i> functions to output the data to standard out or to a file. For example:</p><PRE> 1 print $rss-&gt;as_string; 2 save("/var/www/azurance.rss");</PRE><p>Calling either <i>as_string()</i> or <i>save()</i> results in the output shown in <A NAME="rl4"><A HREF="#l4">Listing 4</A>.</p><h3>Checking Your Work</h3><p>After you're done creating a feed, you might want to check whether  it complies with current RSS standards. Mark Pilgrim and Sam Ruby have made available an RSS validator (http://feeds .archive.org/validator/check). Quite an invaluable tool, the validator allows you to enter the URL of an RSS file to be checked for errors.</p><p><b>TPJ</b></p><H4><A NAME="l1">Listing 1</H4><pre>&lt;channel rdf:about="http://www.azurance.com"&gt; &lt;title&gt;azurance.com&lt;/title&gt; &lt;link&gt;http://www.azurance.com&lt;/link&gt; &lt;description&gt;Open Source and Security Consulting&lt;/description&gt; &lt;dc:language&gt;en-us&lt;/dc:language&gt; &lt;dc:rights&gt;Copyright &amp;amp;copy; 1999-2002, Azurance.com&lt;/dc:rights&gt; &lt;dc:publisher&gt;Azurance&lt;/dc:publisher&gt; &lt;dc:creator&gt;derek@azurance.com&lt;/dc:creator&gt; &lt;dc:subject&gt;Open Source, Security&lt;/dc:subject&gt; &lt;syn:updatePeriod&gt;hourly&lt;/syn:updatePeriod&gt; &lt;syn:updateFrequency&gt;4&lt;/syn:updateFrequency&gt; &lt;syn:updateBase&gt;1999-11-05T09:00:00-05:00&lt;/syn:updateBase&gt; &lt;items&gt;  &lt;rdf:Seq&gt;   &lt;rdf:li rdf:resource="http://www.theregister.co.uk/content/ 	55/27734.html" /&gt;   &lt;rdf:li rdf:resource="http://www.vnunet.com/News/1136204"/&gt;   &lt;rdf:li rdf:resource="http://www.internetnews.com/infra/article.php/1486121"/&gt;  &lt;/rdf:Seq&gt; &lt;/items&gt;&lt;/channel&gt;</pre><P><A HREF="#rl1">Back to Article</A></P><H4><A NAME="l2">Listing 2</H4><pre>1  $rss-&gt;add_item(23     title    =&gt; "Baltimore launches Trusted Business apps",4     link     =&gt; "http://www.theregister.co.uk/content/55/27734.html"5  );67  $rss-&gt;add_item(89     title    =&gt; "FBI investigates major web slowdown",10    link     =&gt; "http://www.vnunet.com/News/1136204"11 );1213  $rss-&gt;add_item(1415    title	=&gt; "Cisco Boosts Security, Caters To Small Business",16    link	=&gt; "http://www.internetnews.com/infra/article.php/1486121"17 );</pre><P><A HREF="#rl2">Back to Article</A></P><H4><A NAME="l3">Listing 3</H4><pre>1    sub rss_items {23    use DBI;45    my $itemCount = shift @_;6    my ($dsn, $dbh, $sth, $rv, @row);78    my $driver 	= "mysql";9    my $database 	= "rss_news";10   my $hostname	= "localhost";11   my $port		= "3306";12   my $user		= "username";13   my $pw		= "password";14   my $table		= "news";1516   $dsn = "DBI:$driver:database=$database;host=$hostname;port=$port";17   $dbh = DBI-&gt;connect($dsn, $user, $pw);18   $dbh-&gt;{PrintError} = 1; # turn off errors, we'll deal with it 		      # ourselves1920   $sth = $dbh-&gt;prepare("SELECT COUNT(*) FROM news");21   $rv = $sth-&gt;execute;22   @count = $sth-&gt;fetchrow_array;23   $offset = $count[0] - $itemCount;24   $sth = $dbh-&gt;prepare("SELECT title, link FROM news 	LIMIT $offset, - 1");25   $rv = $sth-&gt;execute;2627   while (@row = $sth-&gt;fetchrow_array) {2829       my ($title, $link) = @row;31       $rss-&gt;add_item(3233           title   =&gt; "$title",34           link    =&gt; "$link"35       );36   }37 }</pre><P><A HREF="#rl3">Back to Article</A></P><H4><A NAME="l4">Listing 4</H4><pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://purl.org/rss/1.0/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/" xmlns:syn="http://purl.org/rss/1.0/modules/syndication/"&gt; &lt;channel rdf:about="http://www.azurance.com"&gt;  &lt;title&gt;azurance.com&lt;/title&gt;  &lt;link&gt;http://www.azurance.com&lt;/link&gt;  &lt;description&gt;Open Source and Security Consulting&lt;/description&gt;  &lt;dc:language&gt;en-us&lt;/dc:language&gt;  &lt;dc:rights&gt;Copyright &amp;amp;copy; 1999-2002, Azurance.com&lt;/dc:rights&gt;  &lt;dc:publisher&gt;Azurance&lt;/dc:publisher&gt;  &lt;dc:creator&gt;derek@azurance.com&lt;/dc:creator&gt;  &lt;dc:subject&gt;Open Source, Security&lt;/dc:subject&gt;  &lt;syn:updatePeriod&gt;hourly&lt;/syn:updatePeriod&gt;  &lt;syn:updateFrequency&gt;4&lt;/syn:updateFrequency&gt;  &lt;syn:updateBase&gt;1999-11-05T09:00:00-05:00&lt;/syn:updateBase&gt;  &lt;items&gt;   &lt;rdf:Seq&gt;    &lt;rdf:li rdf:resource="http://www.infoworld.com/articles/hn/xml/02/10/24/ 	021024hnnpcwest.xml?s=IDGNS" /&gt;    &lt;rdf:li rdf:resource="http://www.idg.net/ic_959380_1794_9-10000.html" /&gt;    &lt;rdf:li rdf:resource="http://www.infoworld.com/articles/hn/ 	xml/02/10/25/021025hnsecurelinux.xml?s=IDGNS" /&gt;    &lt;rdf:li rdf:resource="http://www.cnn.com/2002/TECH/internet/ 	10/23/net.attack/index.html" /&gt;    &lt;rdf:li rdf:resource="http://www.infoworld.com/articles/hn/ 	xml/02/10/23/021023hnopteron.xml?s=IDGNS" /&gt;    &lt;rdf:li rdf:resource="http://www.businessweek.com/technology/ 	cnet/stories/963054.htm" /&gt;    &lt;rdf:li rdf:resource="http://www.itweb.co.za/sections/ 	internet/2002/0210240947.asp?A=HOME&amp;O=FPIN" /&gt;    &lt;rdf:li rdf:resource="http://www.internetwk.com/ 	security02/INW20021023S0001" /&gt;    &lt;rdf:li rdf:resource="http://www.pcw.co.uk/News/1136211" /&gt;    &lt;rdf:li rdf:resource="http://zdnet.com.com/2100-1105-963087.html" /&gt;   &lt;/rdf:Seq&gt;  &lt;/items&gt; &lt;/channel&gt; &lt;item rdf:about="http://www.infoworld.com/articles/hn/xml/ 	02/10/24/021024hnnpcwest.xml?s=IDGNS"&gt;  &lt;title&gt;Network chip makers focus on security&lt;/title&gt;  &lt;link&gt;http://www.infoworld.com/articles/hn/xml/02/10/ 	24/021024hnnpcwest.xml?s=IDGNS&lt;/link&gt; &lt;/item&gt; &lt;item rdf:about="http://www.idg.net/ic_959380_1794_9-10000.html"&gt;  &lt;title&gt;'The Golden Age of Hacking rolls on'&lt;/title&gt;  &lt;link&gt;http://www.idg.net/ic_959380_1794_9-10000.html&lt;/link&gt; &lt;/item&gt; &lt;item rdf:about="http://www.infoworld.com/articles/hn/xml/ 	02/10/25/021025hnsecurelinux.xml?s=IDGNS"&gt;  &lt;title&gt;Secure Linux maker teams with IBM in U.S.&lt;/title&gt;  &lt;link&gt;http://www.infoworld.com/articles/hn/xml/02/10/25/ 	021025hnsecurelinux.xml?s=IDGNS&lt;/link&gt; &lt;/item&gt;  &lt;item rdf:about="http://www.cnn.com/2002/TECH/internet/10/23/ 	net.attack/index.html"&gt;  &lt;title&gt;FBI seeks to trace massive Net attack&lt;/title&gt;  &lt;link&gt;http://www.cnn.com/2002/TECH/internet/10/23/ 	net.attack/index.html&lt;/link&gt; &lt;/item&gt;  &lt;item rdf:about="http://www.infoworld.com/articles/hn/xml/ 	02/10/23/021023hnopteron.xml?s=IDGNS"&gt;  &lt;title&gt;RSA, AMD team up on security for Opteron chips&lt;/title&gt;  &lt;link&gt;http://www.infoworld.com/articles/hn/xml/ 	02/10/23/021023hnopteron.xml?s=IDGNS&lt;/link&gt; &lt;/item&gt;  &lt;item rdf:about="http://www.businessweek.com/technology/ 	cnet/stories/963054.htm"&gt;  &lt;title&gt;Encryption method getting the picture&lt;/title&gt;  &lt;link&gt;http://www.businessweek.com/technology/cnet/ 	stories/963054.htm&lt;/link&gt; &lt;/item&gt;  &lt;item rdf:about="http://www.itweb.co.za/sections/ 	internet/2002/0210240947.asp?A=HOME&amp;O=FPIN"&gt;  &lt;title&gt;Internet banking security revolutionised 	with SMS-based cross-checking&lt;/title&gt;  &lt;link&gt;http://www.itweb.co.za/sections/internet/2002/ 	0210240947.asp?A=HOME&amp;O=FPIN&lt;/link&gt; &lt;/item&gt;  &lt;item rdf:about="http://www.internetwk.com/security02/INW20021023S0001"&gt;  &lt;title&gt;Vendor Warns Of New IE Holes; Microsoft Calls Reports 	Irresponsible&lt;/title&gt;  &lt;link&gt;http://www.internetwk.com/security02/INW20021023S0001&lt;/link&gt; &lt;/item&gt;  &lt;item rdf:about="http://www.pcw.co.uk/News/1136211"&gt;  &lt;title&gt;PGP poised for major comeback&lt;/title&gt;  &lt;link&gt;http://www.pcw.co.uk/News/1136211&lt;/link&gt; &lt;/item&gt;  &lt;item rdf:about="http://zdnet.com.com/2100-1105-963087.html"&gt;  &lt;title&gt;P2P hacking bill may be rewritten&lt;/title&gt;  &lt;link&gt;http://zdnet.com.com/2100-1105-963087.html&lt;/link&gt; &lt;/item&gt; &lt;/rdf:RDF&gt;</pre><P><A HREF="#rl4">Back to Article</A></P></body></html>