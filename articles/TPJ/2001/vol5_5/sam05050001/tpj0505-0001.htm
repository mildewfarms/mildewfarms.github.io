<html>
<head>
<title>Perl News</title>


</head><body bgcolor="ffffff">
<b>
<p>
</b><h1>Perl News<p>
</h1>
<p><b>Chris Nandor </b><br>
  <span class="date">October 2001</span> </p>
<p>Since January, <b>Damian Conway</b> has been working full-time on Perl through 
  the funding of <b>Yet Another Society</b> and its Perl Development Grant. The 
  general consensus seems to be that it has been a big success. Conway is constantly 
  releasing modules (new releases, as well as updates, and a half-dozen or so 
  to be included in Perl 5.8.0) and traveling around the world to speak to user 
  groups and at conferences and classes. Read more about what he is up to in the 
  Conway Channel at: <a href="http://www.yetanother.org/damian/" target="_blank">http://www.yetanother.org/damian/</a> 
</p>
<p>Late last year, Yet Another Society earned 501(3)(c) status, and it 
  recently joined forces with <b>Perl Mongers</b> and <b>Perl Monks</b>. The details 
  are not quite clear, but YAS will take over many of the functions of Perl Mongers, 
  including control of the perl.org domain, and general advocacy tasks, while 
  allowing tax-deductible donations. YAS has also joined the <b>Unicode Consortium</b>, 
  with a donation from <b>NetThink</b> (<a href="http://www.netthink.co.uk/" target="_blank">http://www.netthink.co.uk/</a>).
<p>
The <b>O'Reilly Perl Conference</b> was held in July. The conference's biggest attraction was the same Damian Conway, who nearly had his own track in the conference. One of Conway's big efforts this year has been in helping to form and explain what Perl 6 will be. At last year's conference, the Perl porters decided to begin work on the next major evolutionary step for Perl, a complete rewrite of the core, the language, and the community.
<p> So far, <b>Larry Wall</b> has put up a handful of <b>Apocalypses</b>, each 
  one mirroring a chapter of his book <b>Programming Perl</b> (now in its third 
  edition), showing how the language will change or stay the same according to 
  each topic. Conway has been producing an <b>Exegesis</b> for each Apocalypse, 
  explaining how the language features will be used. <b>Dan Sugalski</b>, the 
  pumpking for Perl 6 internals, has been hard at work implementing the core language. 
  See <a href="http://dev.perl.org/" target="_blank">http://dev.perl.org/</a> 
  for more information.
<p>
But all is not Perl 6. <b>Jarkko Hietaniemi</b>, the current Perl pumpking, is anticipating a release of Perl 5.8.0 in October or November. <b>Hugo van der Sanden</b> will be the new development pumpking when Perl 5.8.0 is finished up. And earlier this year, <b>Gurusamy Sarathy</b> released Perl 5.6.1.
<p> <b>Chris Nandor</b> has taken over the MacPerl mantle from Matthias Neeracher, 
  the author of MacPerl and GUSI (the POSIX library for Mac OS). A release of 
  MacPerl 5.6.1 is expected before year's end, with a release of 5.8.0 following 
  within a few months. See <a href="http://dev.macperl.org/" target="_blank">http://dev.macperl.org/</a> 
  for more information.
<p> Perl 5.6.1 builds on <b>NetWare</b> as well, and includes a UCS (Universal 
  Component System) interface for accessing NetWare resources, including NDS (Novell 
  Directory Services). The sources are included in Perl 5.7/5.8, and binaries 
  and more information are available at: <a href="http://developer.novell.com/ndk/perl5.htm" target="_blank">http://developer.novell.com/ndk/perl5.htm</a>
<p><b> Ask Bj&Oslash;rn Hansen</b> has been busy setting up a ton of Perl mailing 
  lists in the perl.org domain, all of which are listed on <a href="http://lists.perl.org/" target="_blank">http://lists.perl.org/</a>. 
  He's also set up a news server on nntp.perl.org, that includes all of the 
  mailing lists, with plans to move the Perl Mongers lists (pm.org) there as well.
<p>
For his work, Hansen won one of the <b>White Camel</b> awards this year, granted to people who have done Perl work aside from coding. Also winning White Camels were David Adler for his work with the Perl Mongers, and the organizing committee of Yet Another Perl Conference in Europe.<p>
<b>MODULES</b><p>As part of his year-long indentured servitude, Conway has written a bunch of modules. <b>Attribute::Handlers</b> and <b>Attribute::Types</b> were written to help make attributes, a relatively new and uncommonly used feature of Perl, easier to deal with. Along similar lines, <b>Filter::Simple</b> makes it much easier to write source filters.<p>
<b>NEXT</b> is a Conway creation to do other kinds of method redispatch that SUPER doesn't do. <b>Regexp::Common</b> attempts to provide a set of commonly used regular expressions that users can load in and use, without having to write themselves (similar in concept to <b>HTML::Tagset</b> by <b>Sean M. Burke</b>).<p>
Conway has had a lot of fun this year. His <b>Acme::Bleach</b> converts the script into binary whitespace (with spaces as 0s, and tabs as 1s), so the script is all whitespace, and still runs. He also wrote a module for writing Perl in Klingon, which is just scary on several levels.<p>
Conway's modules Attribute::Handlers, Filter::Simple, and NEXT, as well as <b>Text::Balanced</b> and <b>Switch</b>, are all included in Perl 5.8.0. Also added to Perl 5.8.0 are <b>Class::ISA</b> by Sean M. Burke, <b>Memoize</b> by <b>Mark-Jason Dominus</b>, <b>Digest::MD5</b> by <b>Gisle Aas</b>.<p>
<b>Brian Ingerson</b> took the Best New Module award at TPC this year for his <b>Inline</b> module. Along with <b>Neil Watkiss</b>, Ingerson has provided a tool whereby users can embed other languages into a script, and have perl do what is necessary to execute that code. Currently available Inline modules (at varying stages of development) include Inline::C, Inline::ASM, Inline::Python, Inline::CPP, Inline::Guile, Inline::Java, and Inline::Tcl.<p>
To confuse the issue -- perhaps intentionally -- Conway has written the useful <b>Inline::Files</b>, which allows you to embed file data -- to be retreieved via other filehandles -- in a program.<p>
Ingerson has also added <b>Data::Denter</b> (an alternative to <b>Data::Dumper</b> and <b>Storable</b> for saving serialized data).<p>
<b>Philip Gwyn</b> wrote <b>POE::Component::IKC</b> which lets POE kernels talk to each other, so they can eventually become intelligent and enslave us all.<p>
<b>Robin Houston</b>'s <b>Want</b> tells a subroutine what kind of context it was called in, including differentiating between list and array contexts, and telling how many return values are expected.<p>
The <b>B</b> module provides access to Perl's compiler; <b>B::Generate</b> by <b>Simon Cozens</b> (who has been working hard on Perl 5 and Perl 6 internals) allows you to do modification of a Perl program's op tree, even creating new ops. Scary. If you don't understand what that means, just trust us that it is, indeed, scary. Using B::Generate, Cozens also wrote <b>optimizer</b>, which allows replacing or adding to Perl's own optimizer. Who needs Perl 6 anyway?
<p> <i>Chris Nandor (</i><a href="mailto:pudge@pobox.com">pudge@pobox.com</a><i>) 
  works on Slash for OSDN, and thinks the Red Sox will win the World Series this 
  year if they stay healthy through September and October, especially in their 
  pitching staff. The relievers are really getting worked this year, and the starters 
  need to put in more innings to give them a rest.</i>
</body>
</html>
