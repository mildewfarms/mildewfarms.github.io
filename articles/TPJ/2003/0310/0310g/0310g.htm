<html><head><title>Oct03: Certification</title></head><body BGCOLOR="#ffffff" LINK="#0000ff" VLINK="#330066" ALINK="#ff0000" TEXT="#000000"><!--Copyright &#169; The Perl Journal--><h1>Certification</h1><p><i>The Perl Journal</i> October 2003</p><p>This month, <i>TPJ</i> brings you a call for Perl certification by Perl teacher and consultant Tim Maher. It's been a subject of some debate in the Perl world over the years. This month, we've given space to Tim to make his case. It's not the first time Tim has made this argument: You may be familiar with his position if you attended OSCON this year. </p><p>Why would we want a certification program? The general argument goes like this: Perl programmers are hard to hire because corporate HR folks don't know how to screen them for qualifications. HR departments rely (for better or worse) on devices like certification to cull the r&eacute;sum&eacute; pile. This is symptomatic of a larger lack of understanding of Perl in the corporate world. Project leaders who don't know Perl, aren't inclined to encourage Perl use in projects because Perl seems a bit untamed: perhaps a bit unknowable. Hence, Perl is underutilized, and Perl programmers are underemployed. Certification would give Perl gravitas and measurability, making it&#151;and, therefore, Perl programmers&#151;more attractive.</p><p>But the argument against Perl certification generally claims that such a certification couldn't possibly have any meaning. There are simply too many ways in Perl to solve any particular problem to be able to codify a clear "best practice." How would you test for one best way (or even several best ways) to do a task in Perl? And who decides what those "best ways" are? Perl was designed to deliberately make the answers to these questions ambiguous. Frequently, the proponents of this argument then point out that certifications of other languages are also bogus and serve no purpose but to line someone's pockets. Generally, the argument is that certification, in any form, is a boondoggle.</p><p>Why worry about it now? Lots of Perlies are unemployed. And they seem to be losing out to folks with Java and C++ credentials. And I agree with Tim when he says that's not because there's more Java and C++ development to be done than Perl development. In fact, I suspect there's a lot of semiclandestine Perl work going on in the big projects that are officially supposed to be using just the corporate-sanctioned Java and C++. Perl is just too handy for prototyping and testing for it to be truly banished from these environments.</p><p>But maybe it's a cultural difference that goes deeper than that. Maybe the managers who shy away from Perl just aren't comfortable with its ambiguities, certified or otherwise. For them, maybe TMTOWTDI is actually TATMWTDI (There Are Too Many Ways To Do It).</p><p>We know there's a divide in the Perl community over this issue. What do you think? Would a real certification program hurt Perl or help it? In the interest of a fair debate, we're eager to know what <i>TPJ</i> readers think about this issue. You can e-mail us at  editors@tpj.com with your opinions. If <i>TPJ</i> readers speak their minds, we'll print some of those opinions in a "Letters" section in a future issue. What's more, if you have a different take on the question of Perl certification, and want to write an article as a counterpoint to Tim's, drop us a line.</p><P>Kevin Carlson<br>Executive Editor<br><I>The Perl Journal</I></P></body></html>