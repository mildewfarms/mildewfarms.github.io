
<html>
<head>
<title>Perl News</title>

</head>
<body bgcolor="ffffff">
<h1>Perl News</h1>
<p><b><i>Chris Nandor</i></b> </p>
<p>The Perl 6 process has been moving along. The Requests For Comments, which 
  represent all the expressed ideas that participants want in Perl 6, are the 
  result of the initial design phase. With 361 RFCs and dozens of mailing lists, 
  a lot of opinions were offered on what Perl 6 should look like (see <a href="http://dev.perl.org/" target="_blank">http://dev.perl.org/</a> 
  for RFCs and lists). At the beginning of October, Nathan Torkington, Perl 6 
  project manager, stopped accepting RFCs, and Larry Wall, the Perl 6 language 
  designer, started going through them, looking at what was good and what wasn't. 
<p> 
<p> The process, which mostly went according to the plan forged at The Perl Conference 
  last summer, was not without its critics. <b>Mark-Jason Dominus</b>, Managing 
  Editor of <b><a href="http://www.perl.com" target="_blank">www.perl.com</a></b>, 
  wrote a piece (one that gets extra points for use of the word "butt-pimple") 
  for www.perl.com about the problems with the process itself and with many of 
  the RFCs, noting that it was hampered by a lack of organization and a lack of 
  understanding of Perl and language design by many of the participants. <b>Jarkko 
  Hietaniemi</b>, the Perl 5.7 pumpking, countered in <br>
  a published response that while the state of many of the RFCs may be lacking, 
  the more important part is that there was discussion, that ideas were expressed, 
  and that it provides a way for the community to give feedback into what they 
  want.
<p> 
<p> In October, Wall gave a keynote at the <b>Atlanta Linux Showcase</b> and discussed 
  his thought process for deciding what is going to happen with Perl 6, and offered 
  some insight into what Perl 6 will look like. He said that Perl's parser 
  and lexer should be written in Perl, more non-critical functions will be moved 
  out of the core into modules, all variables will be objects (not just scalars), 
  global variables will be replaced by lexically scoped equivalents, XS will be 
  replaced by something easier to use, and typeglobs will go away. Check out the 
  slides, transcription, and audio, all on http://dev.perl.org/.
<p> 
<p> As of this writing, Wall is working on the language specification, while <b>Dan 
  Sugalski</b>, the head of the internals group, is heading up the internal API 
  specification on the various <b>perl6-internals</b> mailing lists.
<p> 
<p> Meanwhile, Perl 5 is still moving forward. <b>Sarathy Gurusamy</b>, the Perl 
  5.6 pumpking, is wading through scores of patches and preparing for a 5.6.1 
  release. Hietaniemi released 5.7.0 (5.7 is the development branch for the eventual 
  5.8 release) in September.
<p> 
<p> Even though this is the offseason for <b>Yet Another Society</b>'s (<a href="http://www.yetanother.org/" target="_blank">http://www.yetanother.org/</a>) 
  Yet Another Perl Conferences (YAPC::America::North and YAPC::Europe), YAS has 
  been quite busy with a new project: patronage. In October, YAS introduced a 
  plan to award a <b>Perl Development Grant</b> to <b>Damian Conway</b>, which 
  would pay for him to work entirely on Perl for a full year, buying out his contract 
  at <b>Monash University</b> in Australia. They needed US $55,000 in about two 
  weeks to accomplish the goal, and with the help of a single donation of half 
  the total cost by the online video retailer <b>BlackStar</b> (http://www.blackstar.co.uk/), 
  and over 130 other contributors taking up the other half, the goal was accomplished 
  in time. Other corporate contributions came from <b>VA Linux</b>, <b>Manning 
  Publications</b>, <b>Stonehenge</b>, and <b>O'Reilly &amp; Associates</b>. 
  Conway, a celebrated Perl author, speaker, and coder, will begin his Year of 
  Perl in January, and will code and write papers and make appearances around 
  the world. See http://yetanother.org/damian/ for more information, including 
  Conway's diary and calendar. 
<p> 
<p> The <b>German Perl Workshop 3.0</b> (<a href="http://www.perlworkshop.de/2001" target="_blank">www.perlworkshop.de/2001/</a>), 
  run in cooperation with YAS, is scheduled for 28 February to 2 March, 2001, 
  to be held at Poly-technic/University of Applied Sciences Bonn-Rhein-Sieg, Sankt 
  Augustin Campus (near Bonn), Germany. The workshop presentations are mostly 
  in German, but English presentations are welcome. 
<p> 
<p> Some cool new online resources have appeared in the last few months. <b>Carlos 
  Ramirez</b> aims to provide for many of our documentation needs at <b><a href="http://perldoc.com" target="_blank">http://perldoc.com</a></b>, 
  which currently contains all the standard Perl documentation, with plans to 
  include CPAN module docs. It has some unique features, including providing short 
  URLs to basic documentation. To access a perlfunc entry, use <a href="http://perldoc.com/f?map" target="_blank">http://perldoc.com/f?map</a>, 
  and to access a manpage, use <a href="http://perldoc.com/m?perlfaq1" target="_blank">http://perldoc.com/m?perlfaq1</a>. 
<p> 
<p> <b>Michael Stevens</b> has put up Perls versions 1 through 4.036 at <a href="http://www.etla.org/retroperl/" target="_blank">http://www.etla.org/retroperl/</a>, 
  and <b>Ask Bj&Oslash;rn Hansen</b> has put up a bunch of different sources from 
  Perls past at <a href="http://mirrors.valueclick.com/perl/really-ancient-perls/" target="_blank">http://mirrors.valueclick.com/perl/really-ancient-perls/</a>. 
<p> 
<p> <b>Martin C. Brown</b> has two new books out. <b>Perl! I Didn't Know 
  You Could Do That ...</b> from <b>Sybex</b> and <b>Debugging Perl: Troubleshooting 
  for Programmers</b> from <b>McGraw-Hill</b>. The former contains all sorts of 
  different tasks to accomplish with Perl, while the latter discusses how to debug 
  code, and use the Perl debugger, effectively. Other books from <b>Wrox</b>, 
  <b>Manning</b>, <b>Addison-Wesley</b>, and other publishers are due within the 
  next few months.
<p> 
<p><b> Tom Christiansen</b>, co-author of <b>Programming Perl</b>, has written 
  <b>perlman</b>, a suite of tools for accessing Perl documentation, which were 
  mentioned in the third edition of Programming Perl. The base program, <i>perlman</i>, 
  allows you to access the rest of the documentation (e.g., to access the perlop 
  manpage, call <i>perlman perlop</i>, or simply <i>perlop</i>). There will also 
  be a <i>perlhelp</i> program to search all the available documentation at once, 
  and <i>perldoc</i> for backward compatability. It may be included in the Perl 
  5.6.1 distribution.
<p> 
<p> <b>ActiveState</b> has been busy, as usual. They've introduced <b>PerlDevKit</b> 
  2.0, a distribution including <b>Perl Debugger</b>, now with remote debugging; 
  <b>PerlApp</b> to create self-running, and now smaller, executables; <b>PerlSvc</b> 
  to turn scripts into Windows NT services; <b>PerlCtrl</b> to create ActiveX 
  controls, and more. A license is $125.
<p> 
<p> <b>PerlMx</b> is ActiveState's mail filter enginer for <b>sendmail</b>, 
  and runs under various Unix flavors. <b>Komodo</b> is ActiveState's cross-platform 
  development framework built on top of <b>Mozilla</b>, available in beta for 
  Windows NT/2000. The company has also branched into the Python world with its 
  first beta of <b>ActivePython</b>. 
<p> <b>NuSphere</b> (<a href="http://www.nusphere.com/" target="_blank">http://www.nusphere.com/</a>) 
  has partnered with MySQL to produce <b>NuSphere MySQL</b>, a single distribution 
  that installs and configures Apache, Perl, PHP, and MySQL on Windows and various 
  Unix platforms. <b>Help Consulting</b> (<a href="http://helpconsulting.net/" target="_blank">http://helpconsulting.net/</a>) 
  has released <b>visiPerl+</b> 2.0, a Perl IDE with built-in FTP client and mini 
  web server. 
<p> 
<p> <b>Cnation</b> (<a href="http://opensource.cnation.com/" target="_blank">http://opensource.cnation.com/</a>) 
  has released a bucketful of their projects as open source. <b>BingoX</b> is 
  a web app building framework (including <b>BingoX::Carbon</b>, a database abstraction 
  class), <b>Apache::XPP</b> is a lightweight embedded-Perl-in-HTML parser, and 
  <b>HTTP::Monkeywrench</b> is a web site testing tool. 
<p> 
<p> <b>Apache::PageKit</b>, by T.J. Mather, is an application framework using 
  mod_perl and HTML::Template. Matt Sergeant's <b>Apache::Reload</b> reloads 
  changed modules.
<p> 
<p> Bal&aacute;zs Szab&oacute;'s <b>dTemplate</b> is yet another template 
  system, handling basic logic, character encoding, and printf-style formatting. 
  Szab&oacute;'s <b>Parallel::ForkManager</b> is a simple parallel processing 
  fork manager.
<p> 
<p> Sean M. Burke wrote a module called <b>HTML::Tagset</b> which contains various 
  data structures listing HTML tags in certain categories. For example, exists 
  $HTML::Tagset::emptyElement{'hr'} is true, because the hr HTML tag cannot contain 
  any content. His <b>Lingua::EN::Numbers::Ordinate</b> module converts cardinal 
  numbers ("3") to ordinal numbers ("3rd"), and his <b>Mac::RecentDocuments</b> 
  module can add documents to the Mac OS "Recent Documents" folder.
<p> 
<p> Tatsuhiko Miyagawa's <b>Mac::Macbinary</b> can decode Macintosh binary 
  files on any platform. (Paul Schinder's <b>Mac::Conversions</b> can create 
  and decode Mac binary files, but works only under MacPerl.)
<p> 
<p> Hugh Kennedy's <b>Number::Phone::US</b> validates U.S. phone numbers; 
  that is, it checks to see if the number is properly formatted. According to 
  the docs, the module "does _not_ check and see if $number is a functioning 
  number, although maybe it should."
<p> 
<p> Kennedy's <b>HTML::Widgets::DateEntry</b> outputs HTML to render forms 
  for entering dates. Francesc Guasch wrote <b>HTML::Widgets::Search</b> for building 
  searches with DBI (currently only MySQL is supported) and returning HTML.
<p> 
<p> Edwin Pratomo wrote <b>DBD::InterBase</b> and Dean Arnold wrote <b>DBD::Teradata</b>, 
  for accessing those databases from <b>DBI</b>. Richard Sutherland's <b>DDL::Oracle</b> 
  generates DDLs for Oracle databases.
<p> 
<p> <b>DBIx::SearchBuilder</b> by Jesse Vincent provides easy generation of SQL 
  SELECT statements. <b>DBIx::XMLMessage</b>, by Andrei Nossov, maintains simple 
  XML templates that describe database structure, generates SQL statements based 
  on those templates, executes them against DBI data sources, and returns the 
  results in XML, allowing object exchange between different databases.
<p> 
<p> <b>Mail::CheckUser</b> is a module from Ilya Martynov for checking the validity 
  of email addresses, using syntax checks, MX host lookups, and querying of the 
  mail server directly. <b>MIME::Lite::HTML</b>, by Alain Barbet, creates MIME 
  email from HTML.
<p> 
<p> <b>Log::Agent::Rotate</b> and <b>Log::Agent::Logger</b> are modules from Raphael 
  Manfredi, extending his <b>Log::Agent</b> module. Log::Agent::Logger provides 
  a nice API to Log::Agent, and Log::Agent::Rotate rotates logs created by Log::Agent.
<p> 
<p> Ed Avis wrote <b>Log::TraceMessages</b> to ease the management of diagnostic 
  messages during the debugging of code.
<p> 
<p> <b>Inline</b> by Brian Ingersol and featured in TPJ #19, allows the inclusion 
  of C code (and potentially, other languages) within Perl programs.
<p> 
<p> Dav&iacute; Helgason wrote <b>Sub::Curry</b> to provide Lisp-like curry functions 
  to Perl.
<p> 
<p> Jettero Heller's <b>AI::jNeural</b> is a Perl interface to Jet's 
  Neural Architecture (<a href="http://www.voltar.org/jneural/" target="_blank">http://www.voltar.org/jneural/</a>). 
  Heller's <b>Math::Business::EMA</b> calculates the exponential moving average 
  of stock prices. 
<p> 
<p> Ashish Gulhati has added yet another Gnu Privacy Guard module to CPAN, <b>Crypt::GPG</b>. 
  <b>Crypt::Rijndael</b>, by Rafael R. Sevilla, is a <b>Crypt::CBC</b>-compliant 
  Rijndael encryption module.
<p> 
<p> <b>Math::Round</b>, by Geoffrey Rommel, rounds numbers in various ways, such 
  as to the nearest integer (with numbers halfway going to the greater integer, 
  or the nearest odd or even integer), or to the nearest multiple of a given target.
<p> 
<p> Chris Phillips wrote <b>Tk::Pgplot</b>, a front end to PGPLOT for Perl/Tk.
<p> 
<p> <b>GD::Barcode</b> is Kawai Takanori's module to create barcode images 
  (Code39, EAN13, EAN8, NW7, UPC-A, and UPC-E) with <b>GD</b>. I used it to create 
  UPC symbols for various items around my house, just in case. Takanori also wrote 
  <b>OLE::Storage_Lite</b>, a simple class providing an OLE document interface, 
  and <b>Spreadsheet::ParseExcel</b> to get information out of a Microsoft Excel 
  file.
<p> 
<p> Aldo Calpini's <b>Win32::API</b> allows calling arbitrary functions from 
  the Win32 API (though input and output parameters are limited to simple cases). 
  Chad Johnston's <b>Win32::SystemInfo</b> returns memory and processor information 
  on Win32 systems.
<p> 
<p> Benjamin Trott wrote <b>Config::FreeForm</b> to allow the keeping of external 
  configuration data in Perl data structures.
<p> 
<p> The <b>ex::</b> module prefix is being used for experimental pragmata. <b>ex::override</b>, 
  from Casey Tweten, is a pragma to override Perl builtins, by passing to the 
  pragma the function name and function reference. Piers Cawley wrote <b>ex::implements</b> 
  and <b>ex::interface</b> for interface polymorphism (as in Perl 6 RFC 265).
<p> 
<p> <b>Filesys::Ext2</b> by Jerrad Pierce is an interface to the <i>e2fs</i> filesystem 
  attribute functions chattr(1) and lsattr(1).
<p> 
<p> <b>sol-inst</b> is a collection of modules from Chris Josephes for accessing 
  basic installation information in Solaris.
<p> 
<p> Jonas Liljegren's <b>RDF::Service</b> is a core library for the Web Resource 
  Application Framework (<a href="http://www.uxn.nu/wraf" target="_blank">www.uxn.nu/wraf/</a>), 
  the purpose of which is to construct applications that fully use the RDF data 
  model the better to realize Tim Berners-Lee's Semantic Web. 
<p> 
<p> Michael Stevens has written a pair of new components for <b>POE</b>. <b>POE::Component::RSS</b> 
  does event-based parsing of RDF Site Summary (RSS) files, and <b>POE::Component::SubWrapper</b> 
  is an event-based wrapper for subroutines.
<p> 
<p> <b>Parse::Tokens</b>, by Steve McKay, provides a base class for parsing delimited 
  strings from text blocks.
<p> 
<p> Frederic Soriano wrote <b>Tree::Nary</b>, implementing N-ary search trees.
<p> 
<p> <b>Tie::Scalar::Timeout</b> from Marcel Grunauer does what it says: it times 
  out a scalar variable. You can specify a specific time, or a number of uses, 
  and on expiration, provide a new value to assign, or a code reference to execute.
<p> 
<p> <b>Unicode::MapUTF8</b>, by Benjamin Franz, does conversions to and from arbitrary 
  character sets and UTF8.
<p> 
<p> <b>MP3::Tag</b>, by Thomas Geffert, is yet another MP3 ID3v1/ID3v2 Tag module, 
  but this one can write ID3v2 tags.
<p> 
<p> Ed Avis' <b>Term::ProgressBar</b> module provides a nifty progress bar 
  for command line programs.
<p> 
<p> "Practical Algorithm to Retrieve Information Coded as Alphanumeric", 
  or <b>Patricia</b>, is for routing table lookups in BSD, and Dave Plonka's 
  <b>Net::Patricia</b> uses the algorithm to do fast IP address lookups.
<p> 
<p> Ryan Eatmon's <b>Net::Jabber</b> is a Perl interface to the Jabber instant 
  messaging system.
<p> 
<p> Ivan Kohler wrote a pair of modules, <b>Net::SSH</b> and <b>Net::SCP</b>, 
  for secure shell and secure copy.
<p> 
<p> <b>Data::Random</b>, by Adekunle Olonoh, generates random data, including 
  random words from a file, random dates, random characters, random time, and 
  so on.
<p> 
<p> Dave Olszewski's <b>Silly::Werder</b> generates meaningless gibberish, 
  which might be useful for creating random passwords, or for sending to a text-to-speech 
  program or an IRC channel.
<p> 
<p> <i>_ _END_ _</i>
<p> 
<p> <i>Chris Nandor </i>(<a href="http://pudge@pobox.com" target="_blank">pudge@pobox.com</a>)<i> 
  is a programmer for OSDN. Squiozoa oaphu blai frefai osum?</i> 
</body>
</html>
